{"version":3,"sources":["webpack:///webpack/bootstrap 6e9dfe4062a81840d997","webpack:///./lib/workers/cam-raster.js","webpack:///./lib/lw.raster2gcode/raster-to-gcode.js","webpack:///./lib/lw.raster2gcode/canvas-grid.js","webpack:///./lib/lw.raster2gcode/canvas-filters.js","webpack:///../~/floyd-steinberg/floyd-steinberg.js"],"names":["self","onmessage","event","data","cmd","start","rasterToGcode","settings","Object","assign","properties","on","postMessage","run","RasterToGcode","constructor","ppi","x","y","toolDiameter","rapidRate","feedRate","rateUnit","beamRange","min","max","beamPower","milling","zSafe","zSurface","zDepth","passDepth","offsets","X","Y","trimLine","joinPixel","burnWhite","verboseG","diagonal","overscan","precision","S","nonBlocking","filters","smoothing","brightness","contrast","gamma","grayscale","shadesOfGray","invertColor","onProgress","onProgressContext","onDone","onDoneContext","onAbort","onAbortContext","Error","passes","Math","abs","floor","ppm","parseFloat","toFixed","scaleRatio","running","gcode","gcodes","currentLine","lastCommands","outputSize","width","height","G1","G0","beamOffset","realBeamRange","_registerUserCallbacks","callbacks","_processImage","size","abort","undefined","_addHeader","_scanDiagonally","_scanHorizontally","push","options","i","length","splice","join","_mapPixelPower","value","range","_command","name","commands","Array","prototype","slice","call","arguments","command","line","il","apply","_getPixelPower","defaultValue","pixel","getPixel","gray","error","_getPoint","index","point","G","s","first","lastWhite","last","lastColored","_trimCurrentLine","p","shift","pop","_reduceCurrentLine","points","power","_overscanCurrentLine","reversed","pixels","firstPoint","lastPoint","rightPoint","leftPoint","unshift","_processCurrentLine","_processMillingLine","_processLaserLine","reverse","addCommand","plung","Z","zMax","pass","passNum","w","h","computeCurrentLine","percent","lastPercent","processCurrentLine","round","_onProgress","processNextLine","_onAbort","setTimeout","forEach","_onDone","totalLines","lineNum","callback","context","method","toUpperCase","getHeightMap","heightMap","CanvasGrid","cellSize","cols","rows","file","image","url","canvas","load","input","File","loadFromFile","Image","loadFromImage","URL","loadFromURL","trim","Promise","reject","_loadImage","src","resolve","onload","then","catch","onerror","createObjectURL","ceil","sx","sy","sw","sh","document","createElement","getContext","fillStyle","fillRect","drawImage","getImageData","parseInt","isNaN","col","row","pixelData","color","r","g","b","a","grid","coords","grayscaleAlgorithms","exp","log","algorithm","shades","indexOf","canvasFilters","dithering","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","imageData","contrastFactor","brightnessOffset","gammaCorrection","shadesOfGrayFactor","putImageData"],"mappings":";AAAA;AACA;AACA;AACA,mCAA2B;AAC3B;AACA,YAAI;AACJ;AACA,WAAG;AACH;AACA;;AAEA;AACA,sDAA8C;AAC9C;AACA,qCAA6B;;AAE7B,+CAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAS;AACT;AACA;AACA;AACA;AACA,eAAO;AACP,cAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAK;AACL,YAAI;AACJ;AACA;AACA;AACA;;AAEA,8CAAsC;AACtC;AACA;AACA,qCAA6B;AAC7B,qCAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAoB,gBAAgB;AACpC;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAAoB,gBAAgB;AACpC;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAiB,8BAA8B;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAkB,qBAAqB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA,4DAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,0BAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;AACA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","file":"6e9dfe4062a81840d997.worker.js","sourcesContent":[" \t// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js\r\n \tvar canDefineProperty = false;\r\n \ttry {\r\n \t\tObject.defineProperty({}, \"x\", {\r\n \t\t\tget: function() {}\r\n \t\t});\r\n \t\tcanDefineProperty = true;\r\n \t} catch(x) {\r\n \t\t// IE will fail on defineProperty\r\n \t}\r\n \t\r\n \tvar hotApplyOnUpdate = true;\r\n \tvar hotCurrentHash = \"6e9dfe4062a81840d997\"; // eslint-disable-line no-unused-vars\r\n \tvar hotCurrentModuleData = {};\r\n \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\r\n \t\r\n \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar me = installedModules[moduleId];\r\n \t\tif(!me) return __webpack_require__;\r\n \t\tvar fn = function(request) {\r\n \t\t\tif(me.hot.active) {\r\n \t\t\t\tif(installedModules[request]) {\r\n \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\r\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\r\n \t\t\t\t\tif(me.children.indexOf(request) < 0)\r\n \t\t\t\t\t\tme.children.push(request);\r\n \t\t\t\t} else hotCurrentParents = [moduleId];\r\n \t\t\t} else {\r\n \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\r\n \t\t\t\thotCurrentParents = [];\r\n \t\t\t}\r\n \t\t\treturn __webpack_require__(request);\r\n \t\t};\r\n \t\tfor(var name in __webpack_require__) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {\r\n \t\t\t\tif(canDefineProperty) {\r\n \t\t\t\t\tObject.defineProperty(fn, name, (function(name) {\r\n \t\t\t\t\t\treturn {\r\n \t\t\t\t\t\t\tconfigurable: true,\r\n \t\t\t\t\t\t\tenumerable: true,\r\n \t\t\t\t\t\t\tget: function() {\r\n \t\t\t\t\t\t\t\treturn __webpack_require__[name];\r\n \t\t\t\t\t\t\t},\r\n \t\t\t\t\t\t\tset: function(value) {\r\n \t\t\t\t\t\t\t\t__webpack_require__[name] = value;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t};\r\n \t\t\t\t\t}(name)));\r\n \t\t\t\t} else {\r\n \t\t\t\t\tfn[name] = __webpack_require__[name];\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\tfunction ensure(chunkId, callback) {\r\n \t\t\tif(hotStatus === \"ready\")\r\n \t\t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotChunksLoading++;\r\n \t\t\t__webpack_require__.e(chunkId, function() {\r\n \t\t\t\ttry {\r\n \t\t\t\t\tcallback.call(null, fn);\r\n \t\t\t\t} finally {\r\n \t\t\t\t\tfinishChunkLoading();\r\n \t\t\t\t}\r\n \t\r\n \t\t\t\tfunction finishChunkLoading() {\r\n \t\t\t\t\thotChunksLoading--;\r\n \t\t\t\t\tif(hotStatus === \"prepare\") {\r\n \t\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\r\n \t\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\t\t\t\thotUpdateDownloaded();\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t});\r\n \t\t}\r\n \t\tif(canDefineProperty) {\r\n \t\t\tObject.defineProperty(fn, \"e\", {\r\n \t\t\t\tenumerable: true,\r\n \t\t\t\tvalue: ensure\r\n \t\t\t});\r\n \t\t} else {\r\n \t\t\tfn.e = ensure;\r\n \t\t}\r\n \t\treturn fn;\r\n \t}\r\n \t\r\n \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar hot = {\r\n \t\t\t// private stuff\r\n \t\t\t_acceptedDependencies: {},\r\n \t\t\t_declinedDependencies: {},\r\n \t\t\t_selfAccepted: false,\r\n \t\t\t_selfDeclined: false,\r\n \t\t\t_disposeHandlers: [],\r\n \t\r\n \t\t\t// Module API\r\n \t\t\tactive: true,\r\n \t\t\taccept: function(dep, callback) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfAccepted = true;\r\n \t\t\t\telse if(typeof dep === \"function\")\r\n \t\t\t\t\thot._selfAccepted = dep;\r\n \t\t\t\telse if(typeof dep === \"object\")\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback;\r\n \t\t\t\telse\r\n \t\t\t\t\thot._acceptedDependencies[dep] = callback;\r\n \t\t\t},\r\n \t\t\tdecline: function(dep) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfDeclined = true;\r\n \t\t\t\telse if(typeof dep === \"number\")\r\n \t\t\t\t\thot._declinedDependencies[dep] = true;\r\n \t\t\t\telse\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\r\n \t\t\t},\r\n \t\t\tdispose: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\taddDisposeHandler: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\tremoveDisposeHandler: function(callback) {\r\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\r\n \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t// Management API\r\n \t\t\tcheck: hotCheck,\r\n \t\t\tapply: hotApply,\r\n \t\t\tstatus: function(l) {\r\n \t\t\t\tif(!l) return hotStatus;\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\taddStatusHandler: function(l) {\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\tremoveStatusHandler: function(l) {\r\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\r\n \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t//inherit from previous dispose call\r\n \t\t\tdata: hotCurrentModuleData[moduleId]\r\n \t\t};\r\n \t\treturn hot;\r\n \t}\r\n \t\r\n \tvar hotStatusHandlers = [];\r\n \tvar hotStatus = \"idle\";\r\n \t\r\n \tfunction hotSetStatus(newStatus) {\r\n \t\thotStatus = newStatus;\r\n \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\r\n \t\t\thotStatusHandlers[i].call(null, newStatus);\r\n \t}\r\n \t\r\n \t// while downloading\r\n \tvar hotWaitingFiles = 0;\r\n \tvar hotChunksLoading = 0;\r\n \tvar hotWaitingFilesMap = {};\r\n \tvar hotRequestedFilesMap = {};\r\n \tvar hotAvailibleFilesMap = {};\r\n \tvar hotCallback;\r\n \t\r\n \t// The update info\r\n \tvar hotUpdate, hotUpdateNewHash;\r\n \t\r\n \tfunction toModuleId(id) {\r\n \t\tvar isNumber = (+id) + \"\" === id;\r\n \t\treturn isNumber ? +id : id;\r\n \t}\r\n \t\r\n \tfunction hotCheck(apply, callback) {\r\n \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\r\n \t\tif(typeof apply === \"function\") {\r\n \t\t\thotApplyOnUpdate = false;\r\n \t\t\tcallback = apply;\r\n \t\t} else {\r\n \t\t\thotApplyOnUpdate = apply;\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\thotSetStatus(\"check\");\r\n \t\thotDownloadManifest(function(err, update) {\r\n \t\t\tif(err) return callback(err);\r\n \t\t\tif(!update) {\r\n \t\t\t\thotSetStatus(\"idle\");\r\n \t\t\t\tcallback(null, null);\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n \t\r\n \t\t\thotRequestedFilesMap = {};\r\n \t\t\thotAvailibleFilesMap = {};\r\n \t\t\thotWaitingFilesMap = {};\r\n \t\t\tfor(var i = 0; i < update.c.length; i++)\r\n \t\t\t\thotAvailibleFilesMap[update.c[i]] = true;\r\n \t\t\thotUpdateNewHash = update.h;\r\n \t\r\n \t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotCallback = callback;\r\n \t\t\thotUpdate = {};\r\n \t\t\tvar chunkId = 0;\r\n \t\t\t{ // eslint-disable-line no-lone-blocks\r\n \t\t\t\t/*globals chunkId */\r\n \t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t}\r\n \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\thotUpdateDownloaded();\r\n \t\t\t}\r\n \t\t});\r\n \t}\r\n \t\r\n \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n \t\tif(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\r\n \t\t\treturn;\r\n \t\thotRequestedFilesMap[chunkId] = false;\r\n \t\tfor(var moduleId in moreModules) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\r\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\r\n \t\t\thotUpdateDownloaded();\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotEnsureUpdateChunk(chunkId) {\r\n \t\tif(!hotAvailibleFilesMap[chunkId]) {\r\n \t\t\thotWaitingFilesMap[chunkId] = true;\r\n \t\t} else {\r\n \t\t\thotRequestedFilesMap[chunkId] = true;\r\n \t\t\thotWaitingFiles++;\r\n \t\t\thotDownloadUpdateChunk(chunkId);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotUpdateDownloaded() {\r\n \t\thotSetStatus(\"ready\");\r\n \t\tvar callback = hotCallback;\r\n \t\thotCallback = null;\r\n \t\tif(!callback) return;\r\n \t\tif(hotApplyOnUpdate) {\r\n \t\t\thotApply(hotApplyOnUpdate, callback);\r\n \t\t} else {\r\n \t\t\tvar outdatedModules = [];\r\n \t\t\tfor(var id in hotUpdate) {\r\n \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tcallback(null, outdatedModules);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotApply(options, callback) {\r\n \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\r\n \t\tif(typeof options === \"function\") {\r\n \t\t\tcallback = options;\r\n \t\t\toptions = {};\r\n \t\t} else if(options && typeof options === \"object\") {\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t} else {\r\n \t\t\toptions = {};\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\r\n \t\tfunction getAffectedStuff(module) {\r\n \t\t\tvar outdatedModules = [module];\r\n \t\t\tvar outdatedDependencies = {};\r\n \t\r\n \t\t\tvar queue = outdatedModules.slice();\r\n \t\t\twhile(queue.length > 0) {\r\n \t\t\t\tvar moduleId = queue.pop();\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tif(!module || module.hot._selfAccepted)\r\n \t\t\t\t\tcontinue;\r\n \t\t\t\tif(module.hot._selfDeclined) {\r\n \t\t\t\t\treturn new Error(\"Aborted because of self decline: \" + moduleId);\r\n \t\t\t\t}\r\n \t\t\t\tif(moduleId === 0) {\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\r\n \t\t\t\t\tvar parentId = module.parents[i];\r\n \t\t\t\t\tvar parent = installedModules[parentId];\r\n \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\r\n \t\t\t\t\t\treturn new Error(\"Aborted because of declined dependency: \" + moduleId + \" in \" + parentId);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\r\n \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[parentId])\r\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tdelete outdatedDependencies[parentId];\r\n \t\t\t\t\toutdatedModules.push(parentId);\r\n \t\t\t\t\tqueue.push(parentId);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\r\n \t\t\treturn [outdatedModules, outdatedDependencies];\r\n \t\t}\r\n \t\r\n \t\tfunction addAllToSet(a, b) {\r\n \t\t\tfor(var i = 0; i < b.length; i++) {\r\n \t\t\t\tvar item = b[i];\r\n \t\t\t\tif(a.indexOf(item) < 0)\r\n \t\t\t\t\ta.push(item);\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// at begin all updates modules are outdated\r\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\r\n \t\tvar outdatedDependencies = {};\r\n \t\tvar outdatedModules = [];\r\n \t\tvar appliedUpdate = {};\r\n \t\tfor(var id in hotUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\tvar moduleId = toModuleId(id);\r\n \t\t\t\tvar result = getAffectedStuff(moduleId);\r\n \t\t\t\tif(!result) {\r\n \t\t\t\t\tif(options.ignoreUnaccepted)\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(new Error(\"Aborted because \" + moduleId + \" is not accepted\"));\r\n \t\t\t\t}\r\n \t\t\t\tif(result instanceof Error) {\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(result);\r\n \t\t\t\t}\r\n \t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\r\n \t\t\t\taddAllToSet(outdatedModules, result[0]);\r\n \t\t\t\tfor(var moduleId in result[1]) {\r\n \t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[moduleId])\r\n \t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Store self accepted outdated modules to require them later by the module system\r\n \t\tvar outdatedSelfAcceptedModules = [];\r\n \t\tfor(var i = 0; i < outdatedModules.length; i++) {\r\n \t\t\tvar moduleId = outdatedModules[i];\r\n \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\r\n \t\t\t\toutdatedSelfAcceptedModules.push({\r\n \t\t\t\t\tmodule: moduleId,\r\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\r\n \t\t\t\t});\r\n \t\t}\r\n \t\r\n \t\t// Now in \"dispose\" phase\r\n \t\thotSetStatus(\"dispose\");\r\n \t\tvar queue = outdatedModules.slice();\r\n \t\twhile(queue.length > 0) {\r\n \t\t\tvar moduleId = queue.pop();\r\n \t\t\tvar module = installedModules[moduleId];\r\n \t\t\tif(!module) continue;\r\n \t\r\n \t\t\tvar data = {};\r\n \t\r\n \t\t\t// Call dispose handlers\r\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\r\n \t\t\tfor(var j = 0; j < disposeHandlers.length; j++) {\r\n \t\t\t\tvar cb = disposeHandlers[j];\r\n \t\t\t\tcb(data);\r\n \t\t\t}\r\n \t\t\thotCurrentModuleData[moduleId] = data;\r\n \t\r\n \t\t\t// disable module (this disables requires from this module)\r\n \t\t\tmodule.hot.active = false;\r\n \t\r\n \t\t\t// remove module from cache\r\n \t\t\tdelete installedModules[moduleId];\r\n \t\r\n \t\t\t// remove \"parents\" references from all children\r\n \t\t\tfor(var j = 0; j < module.children.length; j++) {\r\n \t\t\t\tvar child = installedModules[module.children[j]];\r\n \t\t\t\tif(!child) continue;\r\n \t\t\t\tvar idx = child.parents.indexOf(moduleId);\r\n \t\t\t\tif(idx >= 0) {\r\n \t\t\t\t\tchild.parents.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// remove outdated dependency from module children\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tfor(var j = 0; j < moduleOutdatedDependencies.length; j++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\r\n \t\t\t\t\tvar idx = module.children.indexOf(dependency);\r\n \t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Not in \"apply\" phase\r\n \t\thotSetStatus(\"apply\");\r\n \t\r\n \t\thotCurrentHash = hotUpdateNewHash;\r\n \t\r\n \t\t// insert new code\r\n \t\tfor(var moduleId in appliedUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\r\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// call accept handlers\r\n \t\tvar error = null;\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tvar callbacks = [];\r\n \t\t\t\tfor(var i = 0; i < moduleOutdatedDependencies.length; i++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[i];\r\n \t\t\t\t\tvar cb = module.hot._acceptedDependencies[dependency];\r\n \t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\r\n \t\t\t\t\tcallbacks.push(cb);\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < callbacks.length; i++) {\r\n \t\t\t\t\tvar cb = callbacks[i];\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\tcb(outdatedDependencies);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Load self accepted modules\r\n \t\tfor(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {\r\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\r\n \t\t\tvar moduleId = item.module;\r\n \t\t\thotCurrentParents = [moduleId];\r\n \t\t\ttry {\r\n \t\t\t\t__webpack_require__(moduleId);\r\n \t\t\t} catch(err) {\r\n \t\t\t\tif(typeof item.errorHandler === \"function\") {\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\titem.errorHandler(err);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t} else if(!error)\r\n \t\t\t\t\terror = err;\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// handle errors in accept handlers and self accepted module load\r\n \t\tif(error) {\r\n \t\t\thotSetStatus(\"fail\");\r\n \t\t\treturn callback(error);\r\n \t\t}\r\n \t\r\n \t\thotSetStatus(\"idle\");\r\n \t\tcallback(null, outdatedModules);\r\n \t}\r\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false,\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: hotCurrentParents,\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6e9dfe4062a81840d997","import { RasterToGcode } from '../lw.raster2gcode/raster-to-gcode.js'\r\n\r\n// On messsage received\r\nself.onmessage = function (event) {\r\n    if (event.data.cmd === 'start') {\r\n        start(event.data);\r\n    }\r\n}\r\n\r\n\r\n\r\n// Start job\r\nfunction start(data) {\r\n\r\n    // Create RasterToGcode object\r\n    var rasterToGcode = new RasterToGcode(data.settings);\r\n        Object.assign( rasterToGcode, data.properties );\r\n    // Register events callbacks\r\n        rasterToGcode.on('progress', function (event) {\r\n            self.postMessage({ event: 'onProgress', ...event });\r\n        }).on('done', function (event) {\r\n            self.postMessage({ event: 'onDone', ...event });\r\n        }).on('abort', function () {\r\n            self.postMessage({ event: 'onAbort' });\r\n        });\r\n\r\n    \r\n    self.postMessage({ event: 'start' });\r\n    rasterToGcode.run();\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/workers/cam-raster.js","import CanvasGrid from './canvas-grid'\r\n\r\n// RasterToGcode class\r\nclass RasterToGcode extends CanvasGrid {\r\n    // Class constructor...\r\n    constructor(settings) {\r\n        // Defaults settings\r\n        settings = Object.assign({\r\n            ppi: { x: 254, y: 254 }, // Pixel Per Inch (25.4 ppi == 1 ppm)\r\n\r\n            toolDiameter: 0.1,      // Tool diameter in millimeters\r\n            rapidRate   : 1500,     // Rapid rate in mm/min (G0 F value) nullish value to disable\r\n            feedRate    : 500,      // Feed rate in mm/min (G1 F value)\r\n            rateUnit    : 'mm/min', // Rapid/Feed rate unit [mm/min, mm/sec]\r\n\r\n            beamRange: { min: 0, max: 1 },   // Beam power range (Firmware value)\r\n            beamPower: { min: 0, max: 100 }, // Beam power (S value) as percentage of beamRange\r\n\r\n            milling  : false, // EXPERIMENTAL\r\n            zSafe    : 5,     // Safe Z for fast move\r\n            zSurface : 0,     // Usinable surface (white pixels)\r\n            zDepth   : -10,   // Z depth (black pixels)\r\n            passDepth: 1,     // Pass depth in millimeters\r\n\r\n            offsets  : { X: 0, Y: 0 }, // Global coordinates offsets\r\n            trimLine : true,           // Trim trailing white pixels\r\n            joinPixel: true,           // Join consecutive pixels with same intensity\r\n            burnWhite: true,           // [true = G1 S0 | false = G0] on inner white pixels\r\n            verboseG : false,          // Output verbose GCode (print each commands)\r\n            diagonal : false,          // Go diagonally (increase the distance between points)\r\n            overscan : 0,              // Add some extra white space (in millimeters) before and after each line\r\n\r\n            precision: { X: 2, Y: 2, S: 4 }, // Number of decimals for each commands\r\n\r\n            nonBlocking: true, // Use setTimeout to avoid blocking the UI\r\n\r\n            filters: {\r\n                smoothing   : 0,      // Smoothing the input image ?\r\n                brightness  : 0,      // Image brightness [-255 to +255]\r\n                contrast    : 0,      // Image contrast [-255 to +255]\r\n                gamma       : 0,      // Image gamma correction [0.01 to 7.99]\r\n                grayscale   : 'none', // Graysale algorithm [average, luma, luma-601, luma-709, luma-240, desaturation, decomposition-[min|max], [red|green|blue]-chanel]\r\n                shadesOfGray: 256,    // Number of shades of gray [2-256]\r\n                invertColor : false   // Invert color...\r\n            },\r\n\r\n            onProgress       : null, // On progress callbacks\r\n            onProgressContext: null, // On progress callback context\r\n\r\n            onDone       : null, // On done callback\r\n            onDoneContext: null, // On done callback context\r\n\r\n            onAbort       : null, // On abort callback\r\n            onAbortContext: null  // On abort callback context\r\n        }, settings || {})\r\n\r\n        // Init properties\r\n        super(settings)\r\n\r\n        // Milling settings\r\n        if (this.milling) {\r\n            if (this.zSafe < this.zSurface) {\r\n                throw new Error('\"zSafe\" must be greater to \"zSurface\"')\r\n            }\r\n\r\n            this.passes = Math.abs(Math.floor(this.zDepth / this.passDepth))\r\n        }\r\n\r\n        // Negative beam size ?\r\n        if (this.toolDiameter <= 0) {\r\n            throw new Error('\"toolDiameter\" must be positive')\r\n        }\r\n\r\n        // Uniforme ppi\r\n        if (! this.ppi.x) {\r\n            this.ppi = { x: this.ppi, y: this.ppi }\r\n        }\r\n\r\n        // Calculate PPM = Pixel Per Millimeters\r\n        this.ppm = {\r\n            x: parseFloat((2540 / (this.ppi.x * 100)).toFixed(10)),\r\n            y: parseFloat((2540 / (this.ppi.y * 100)).toFixed(10))\r\n        }\r\n\r\n        // Calculate scale ratio\r\n        this.scaleRatio = {\r\n            x: this.ppm.x / this.toolDiameter,\r\n            y: this.ppm.y / this.toolDiameter\r\n        }\r\n\r\n        // State...\r\n        this.running      = false\r\n        this.gcode        = null\r\n        this.gcodes       = null\r\n        this.currentLine  = null\r\n        this.lastCommands = null\r\n\r\n        // Output size in millimeters\r\n        this.outputSize = { width : 0, height: 0 }\r\n\r\n        // G0 command\r\n        this.G1 = ['G', 1]\r\n        this.G0 = ['G', this.burnWhite ? 1 : 0]\r\n\r\n        // Calculate beam offset\r\n        this.beamOffset = this.toolDiameter * 1000 / 2000\r\n\r\n        // Calculate real beam range\r\n        this.realBeamRange = {\r\n            min: this.beamRange.max / 100 * this.beamPower.min,\r\n            max: this.beamRange.max / 100 * this.beamPower.max\r\n        }\r\n\r\n        // Adjuste feed rate to mm/min\r\n        if (this.rateUnit === 'mm/sec') {\r\n            this.feedRate  *= 60\r\n\r\n            if (this.rapidRate) {\r\n                this.rapidRate *= 60\r\n            }\r\n        }\r\n\r\n        // Register user callbacks\r\n        this._registerUserCallbacks(this)\r\n    }\r\n\r\n    // Register user callbacks\r\n    _registerUserCallbacks(callbacks) {\r\n        // Register user callbacks\r\n        callbacks.onProgress && this.on('progress', callbacks.onProgress, callbacks.onProgressContext)\r\n        callbacks.onAbort && this.on('abort', callbacks.onAbort, callbacks.onAbortContext)\r\n        callbacks.onDone && this.on('done', callbacks.onDone, callbacks.onDoneContext)\r\n    }\r\n\r\n    // Process image\r\n    _processImage() {\r\n        // Call parent method\r\n        super._processImage()\r\n\r\n        // Calculate output size\r\n        this.outputSize = {\r\n            width : this.size.width  * (this.toolDiameter * 1000) / 1000,\r\n            height: this.size.height * (this.toolDiameter * 1000) / 1000\r\n        }\r\n    }\r\n\r\n    // Abort job\r\n    abort() {\r\n        this.running = false\r\n    }\r\n\r\n    // Process image and return gcode string\r\n    run(settings) {\r\n        if (this.running) {\r\n            return\r\n        }\r\n\r\n        // Reset state\r\n        this.running      = true\r\n        this.gcode        = []\r\n        this.gcodes       = []\r\n        this.lastCommands = {}\r\n        this.currentLine  = null\r\n\r\n        // Defaults settings\r\n        settings = settings || {}\r\n\r\n        // Register user callbacks\r\n        this._registerUserCallbacks(settings)\r\n\r\n        // Non blocking mode ?\r\n        let nonBlocking = this.nonBlocking\r\n\r\n        if (settings.nonBlocking !== undefined) {\r\n            nonBlocking = settings.nonBlocking\r\n        }\r\n\r\n        // Add gcode header\r\n        this._addHeader()\r\n\r\n        // Scan type ?\r\n        if (this.diagonal) {\r\n            this._scanDiagonally(nonBlocking)\r\n        }\r\n        else {\r\n            this._scanHorizontally(nonBlocking)\r\n        }\r\n\r\n        if (! nonBlocking) {\r\n            return this.gcode\r\n        }\r\n    }\r\n\r\n    _addHeader() {\r\n        // Base headers\r\n        this.gcode.push(\r\n            '; Generated by LaserWeb (lw.raster-to-gcode.js)',\r\n            '; Size       : ' + this.outputSize.width + ' x ' + this.outputSize.height + ' mm',\r\n            '; PPI        : x: ' + this.ppi.x + ' - y: ' + this.ppi.y,\r\n            '; PPM        : x: ' + this.ppm.x + ' - y: ' + this.ppm.y,\r\n            '; Tool diam. : ' + this.toolDiameter + ' mm',\r\n            '; Feed rate  : ' + this.feedRate + ' ' + this.rateUnit\r\n        )\r\n\r\n        if (this.rapidRate) {\r\n           this.gcode.push('; Rapid rate  : ' + this.rapidRate + ' ' + this.rateUnit)\r\n        }\r\n\r\n        if (this.milling) {\r\n            this.gcode.push(\r\n                '; Z safe     : ' + this.zSafe,\r\n                '; Z surface  : ' + this.zSurface,\r\n                '; Z depth    : ' + this.zDepth\r\n            )\r\n        }\r\n        else {\r\n            this.gcode.push(\r\n                '; Beam range : ' + this.beamRange.min + ' to ' + this.beamRange.max,\r\n                '; Beam power : ' + this.beamPower.min + ' to ' + this.beamPower.max + ' %'\r\n            )\r\n        }\r\n\r\n        // Print activated options\r\n        let options = ['smoothing', 'trimLine', 'joinPixel', 'burnWhite', 'verboseG', 'diagonal']\r\n\r\n        for (var i = options.length - 1; i >= 0; i--) {\r\n            if (! this[options[i]]) {\r\n                options.splice(i, 1)\r\n            }\r\n        }\r\n\r\n        if (options.length) {\r\n            this.gcode.push('; Options    : ' + options.join(', '))\r\n        }\r\n\r\n        // Set feed rates\r\n        this.gcode.push('')\r\n\r\n        if (this.rapidRate) {\r\n           this.gcode.push('G0 F' + this.rapidRate)\r\n        }\r\n\r\n        this.gcode.push('G1 F' + this.feedRate)\r\n        this.gcode.push('')\r\n    }\r\n\r\n    // Map S value to pixel power\r\n    _mapPixelPower(value) {\r\n        let range = this.milling ? { min: 0, max: this.zDepth } : this.realBeamRange\r\n        return value * (range.max - range.min) / 255 + range.min\r\n    }\r\n\r\n    // Compute and return a command, return null if not changed\r\n    _command(name, value) {\r\n        // If the value argument is an object\r\n        if (typeof value === 'object') {\r\n            // Computed commands line\r\n            let commands = Array.prototype.slice.call(arguments)\r\n            let command, line = []\r\n\r\n            // for each command\r\n            for (var i = 0, il = commands.length; i < il; i++) {\r\n                command = this._command.apply(this, commands[i])\r\n                command && line.push(command)\r\n            }\r\n\r\n            // Return the line if not empty\r\n            return line.length ? line.join(' ') : null\r\n        }\r\n\r\n        // Format the value\r\n        value = value.toFixed(this.precision[name] || 0)\r\n\r\n        // If the value was changed or if verbose mode on\r\n        if (this.verboseG || value !== this.lastCommands[name]) {\r\n            this.lastCommands[name] = value\r\n            return name + value\r\n        }\r\n\r\n        // No change\r\n        return null\r\n    }\r\n\r\n    // Get a pixel power value from the canvas data grid\r\n    _getPixelPower(x, y, defaultValue) {\r\n        try {\r\n            // Reverse Y value since canvas as top/left origin\r\n            y = this.size.height - y - 1\r\n\r\n            // Get pixel info\r\n            let pixel = this.getPixel(x, y)\r\n\r\n            // Reversed gray value [ 0 = white | 255 = black ]\r\n            return 255 - pixel.gray\r\n        }\r\n        catch (error) {\r\n            if (arguments.length === 3) {\r\n                return defaultValue\r\n            }\r\n            throw error\r\n        }\r\n    }\r\n\r\n    // Get a point from the current line with real world coordinates\r\n    _getPoint(index) {\r\n        // Get the point object from the current line\r\n        let point = this.currentLine[index]\r\n\r\n        // No point\r\n        if (! point) {\r\n            return null\r\n        }\r\n\r\n        // Commands\r\n        point.G = point.s ? ['G', 1] : this.G0\r\n        point.X = (point.x * this.toolDiameter) + this.offsets.X\r\n        point.Y = (point.y * this.toolDiameter) + this.offsets.Y\r\n        point.S = this._mapPixelPower(point.s)\r\n\r\n        // Offsets\r\n        if (this.diagonal) {\r\n            // Vertical offset\r\n            point.Y += this.toolDiameter\r\n\r\n            // Horizontal offset\r\n            if (point.first || point.lastWhite) {\r\n                point.X += this.beamOffset\r\n                point.Y -= this.beamOffset\r\n            }\r\n            else if (point.last || point.lastColored) {\r\n                point.X -= this.beamOffset\r\n                point.Y += this.beamOffset\r\n            }\r\n        }\r\n        else {\r\n            // Vertical offset\r\n            point.Y += this.beamOffset\r\n\r\n            // Horizontal offset\r\n            if (point.first || point.lastWhite) {\r\n                point.X += this.beamOffset\r\n            }\r\n            else if (point.last || point.lastColored) {\r\n                point.X -= this.beamOffset\r\n            }\r\n        }\r\n\r\n        // Return the point\r\n        return point\r\n    }\r\n\r\n    // Remove all trailing white spaces from the current line\r\n    _trimCurrentLine() {\r\n        // Remove white spaces from the left\r\n        let point = this.currentLine[0]\r\n\r\n        while (point && ! point.p) {\r\n            this.currentLine.shift()\r\n            point = this.currentLine[0]\r\n        }\r\n\r\n        // Remove white spaces from the right\r\n        point = this.currentLine[this.currentLine.length - 2]\r\n\r\n        while (point && ! point.p) {\r\n            this.currentLine.pop()\r\n            point = this.currentLine[this.currentLine.length - 2]\r\n        }\r\n\r\n        // Return the new line length\r\n        return this.currentLine.length\r\n    }\r\n\r\n    // Join pixel with same power\r\n    _reduceCurrentLine() {\r\n        // Line too short to be reduced\r\n        if (this.currentLine.length < 3) {\r\n            return this.currentLine.length\r\n        }\r\n\r\n        // Extract all points exept the first one\r\n        let points = this.currentLine.splice(1)\r\n\r\n        // Get current power\r\n        let power = this.currentLine[0].p\r\n\r\n        // For each extracted point\r\n        for (var point, i = 0, il = points.length - 1; i < il; i++) {\r\n            // Current point\r\n            point = points[i]\r\n\r\n            // On power change\r\n            if (power !== point.p) {\r\n                this.currentLine.push(point)\r\n            }\r\n\r\n            // Update power\r\n            power = point.p\r\n        }\r\n\r\n        // Add last point\r\n        this.currentLine.push(points[i])\r\n    }\r\n\r\n    // Add extra white pixels at the ends\r\n    _overscanCurrentLine(reversed) {\r\n        // Number of pixels to add on each side\r\n        let pixels = this.overscan / this.ppm.x\r\n\r\n        // Get first/last point\r\n        let firstPoint = this.currentLine[0]\r\n        let lastPoint  = this.currentLine[this.currentLine.length - 1]\r\n\r\n        // Is last white/colored point ?\r\n        firstPoint.s && (firstPoint.lastWhite  = true)\r\n        lastPoint.s  && (lastPoint.lastColored = true)\r\n\r\n        // Reversed line ?\r\n        reversed ? (lastPoint.s = 0) : (firstPoint.s = 0)\r\n\r\n        // Create left/right points\r\n        let rightPoint = { x: lastPoint.x + pixels , y: lastPoint.y , s: 0, p: 0 }\r\n        let leftPoint  = { x: firstPoint.x - pixels, y: firstPoint.y, s: 0, p: 0 }\r\n\r\n        if (this.diagonal) {\r\n            leftPoint.y  += pixels\r\n            rightPoint.y -= pixels\r\n        }\r\n\r\n        // Add left/right points to current line\r\n        this.currentLine.unshift(leftPoint)\r\n        this.currentLine.push(rightPoint)\r\n    }\r\n\r\n    // Process current line and return an array of GCode text lines\r\n    _processCurrentLine(reversed) {\r\n        if (this.milling) {\r\n            return this._processMillingLine(reversed)\r\n        }\r\n\r\n        return this._processLaserLine(reversed)\r\n    }\r\n\r\n    // Process current line and return an array of GCode text lines\r\n    _processMillingLine(reversed) {\r\n        // Skip empty line\r\n        if (! this._trimCurrentLine()) {\r\n            return null\r\n        }\r\n\r\n        // Join pixel with same power\r\n        if (this.joinPixel) {\r\n            this._reduceCurrentLine()\r\n        }\r\n\r\n        // Mark first and last point on the current line\r\n        this.currentLine[0].first = true\r\n        this.currentLine[this.currentLine.length - 1].last = true\r\n\r\n        // Reversed line ?\r\n        if (reversed) {\r\n            this.currentLine = this.currentLine.reverse()\r\n        }\r\n\r\n        // Point index\r\n        let point, index = 0\r\n\r\n        // Init loop vars...\r\n        let command, gcode = []\r\n\r\n        let addCommand = (...args) => {\r\n            command = this._command(...args)\r\n            command && gcode.push(command)\r\n        }\r\n\r\n        // Get first point\r\n        point = this._getPoint(index)\r\n\r\n        let plung = false\r\n        let Z, zMax\r\n\r\n        let pass = (passNum) => {\r\n            // Move to start of the line\r\n            addCommand(['G', 0], ['Z', this.zSafe])\r\n            addCommand(['G', 0], ['X', point.X], ['Y', point.Y])\r\n            addCommand(['G', 0], ['Z', this.zSurface])\r\n\r\n            // For each point on the line\r\n            while (point) {\r\n                if (point.S) {\r\n                    if (plung) {\r\n                        addCommand(['G', 0], ['Z', this.zSurface])\r\n                        plung = false\r\n                    }\r\n\r\n                    Z    = point.S\r\n                    zMax = this.passDepth * passNum\r\n\r\n                    // Last pass\r\n                    if (passNum < this.passes) {\r\n                        Z = Math.max(Z, -zMax)\r\n                    }\r\n\r\n                    addCommand(['G', 1], ['Z', this.zSurface + Z])\r\n                    addCommand(['G', 1], ['X', point.X], ['Y', point.Y])\r\n                }\r\n                else {\r\n                    if (plung) {\r\n                        addCommand(['G', 1], ['Z', this.zSurface])\r\n                        plung = false\r\n                    }\r\n\r\n                    addCommand(['G', 0], ['Z', this.zSafe])\r\n                    addCommand(['G', 0], ['X', point.X], ['Y', point.Y])\r\n                }\r\n\r\n                if (point.lastWhite || point.lastColored) {\r\n                    plung = true\r\n                }\r\n\r\n                // Get next point\r\n                point = this._getPoint(++index)\r\n            }\r\n\r\n            // Move to Z safe\r\n            addCommand(['G', 1], ['Z', this.zSurface])\r\n            addCommand(['G', 0], ['Z', this.zSafe])\r\n        }\r\n\r\n        for (var i = 1; i <= this.passes; i++) {\r\n            pass(i)\r\n\r\n            if (! gcode.length) {\r\n                break\r\n            }\r\n\r\n            if (this.gcodes.length < i) {\r\n                this.gcodes.push([])\r\n            }\r\n            else {\r\n                this.gcodes[i - 1].push.apply(this.gcodes[i - 1], gcode)\r\n            }\r\n\r\n            index = 0\r\n            gcode = []\r\n            point = this._getPoint(index)\r\n\r\n            this.lastCommands = {}\r\n        }\r\n\r\n        // Not sure what to return...\r\n        return null\r\n    }\r\n\r\n    // Process current line and return an array of GCode text lines\r\n    _processLaserLine(reversed) {\r\n        // Trim trailing white spaces ?\r\n        if (this.trimLine && ! this._trimCurrentLine()) {\r\n            // Skip empty line\r\n            return null\r\n        }\r\n\r\n        // Join pixel with same power\r\n        if (this.joinPixel) {\r\n            this._reduceCurrentLine()\r\n        }\r\n\r\n        // Overscan ?\r\n        if (this.overscan) {\r\n            this._overscanCurrentLine(reversed)\r\n        }\r\n\r\n        // Mark first and last point on the current line\r\n        this.currentLine[0].first = true\r\n        this.currentLine[this.currentLine.length - 1].last = true\r\n\r\n        // Reversed line ?\r\n        if (reversed) {\r\n            this.currentLine = this.currentLine.reverse()\r\n        }\r\n\r\n        // Point index\r\n        let point, index = 0\r\n\r\n        // Init loop vars...\r\n        let command, gcode = []\r\n\r\n        let addCommand = (...args) => {\r\n            command = this._command(...args)\r\n            command && gcode.push(command)\r\n        }\r\n\r\n        // Get first point\r\n        point = this._getPoint(index)\r\n\r\n        // Move to start of the line\r\n        addCommand(this.G0, ['X', point.X], ['Y', point.Y], ['S', 0])\r\n\r\n        // Get next point\r\n        point = this._getPoint(++index)\r\n\r\n        // For each point on the line\r\n        while (point) {\r\n            // Burn to next point\r\n            addCommand(point.G, ['X', point.X], ['Y', point.Y], ['S', point.S])\r\n\r\n            // Get next point\r\n            point = this._getPoint(++index)\r\n        }\r\n\r\n        // Return gcode commands array\r\n        if (gcode.length) {\r\n            return gcode\r\n        }\r\n\r\n        // Empty line\r\n        return null\r\n    }\r\n\r\n    // Parse horizontally\r\n    _scanHorizontally(nonBlocking) {\r\n        // Init loop vars\r\n        let x = 0, y = 0\r\n        let s, p, point, gcode\r\n        let w = this.size.width\r\n        let h = this.size.height\r\n\r\n        let reversed    = false\r\n        let lastWhite   = false\r\n        let lastColored = false\r\n\r\n        let computeCurrentLine = () => {\r\n            // Reset current line\r\n            this.currentLine = []\r\n\r\n            // Reset point object\r\n            point = null\r\n\r\n            // For each pixel on the line\r\n            for (x = 0; x <= w; x++) {\r\n                // Get pixel power\r\n                s = p = this._getPixelPower(x, y, p)\r\n\r\n                // Is last white/colored pixel\r\n                lastWhite   = point && ! point.p && p\r\n                lastColored = point && point.p && ! p\r\n\r\n                // Pixel color from last one on normal line\r\n                if (! reversed && point) {\r\n                    s = point.p\r\n                }\r\n\r\n                // Create point object\r\n                point = { x: x, y: y, s: s, p: p }\r\n\r\n                // Set last white/colored pixel\r\n                lastWhite   && (point.lastWhite   = true)\r\n                lastColored && (point.lastColored = true)\r\n\r\n                // Add point to current line\r\n                this.currentLine.push(point)\r\n            }\r\n        }\r\n\r\n        let percent     = 0\r\n        let lastPercent = 0\r\n\r\n        let processCurrentLine = () => {\r\n            // Process pixels line\r\n            gcode = this._processCurrentLine(reversed)\r\n\r\n            // Call progress callback\r\n            percent = Math.round((y / h) * 100)\r\n\r\n            if (percent > lastPercent) {\r\n                this._onProgress({ gcode, percent })\r\n            }\r\n\r\n            lastPercent = percent\r\n\r\n            // Skip empty gcode line\r\n            if (! gcode) {\r\n                return\r\n            }\r\n\r\n            // Toggle line state\r\n            reversed = ! reversed\r\n\r\n            // Concat line\r\n            this.gcode.push.apply(this.gcode, gcode)\r\n        }\r\n\r\n        let processNextLine = () => {\r\n            // Aborted ?\r\n            if (! this.running) {\r\n                return this._onAbort()\r\n            }\r\n\r\n            // Process line...\r\n            computeCurrentLine()\r\n            processCurrentLine()\r\n\r\n            y++\r\n\r\n            if (y < h) {\r\n                if (nonBlocking) {\r\n                    setTimeout(processNextLine, 0)\r\n                }\r\n                else {\r\n                    processNextLine()\r\n                }\r\n            }\r\n            else {\r\n                if (this.milling) {\r\n                    this.gcodes.forEach(gcode => {\r\n                        this.gcode.push.apply(this.gcode, gcode)\r\n                    })\r\n                }\r\n\r\n                this._onDone({ gcode: this.gcode })\r\n                this.running = false\r\n            }\r\n        }\r\n\r\n        processNextLine()\r\n    }\r\n\r\n    // Parse diagonally\r\n    _scanDiagonally(nonBlocking) {\r\n        // Init loop vars\r\n        let x = 0, y = 0\r\n        let s, p, point, gcode\r\n        let w = this.size.width\r\n        let h = this.size.height\r\n\r\n        let totalLines  = w + h - 1\r\n        let lineNum     = 0\r\n        let reversed    = false\r\n        let lastWhite   = false\r\n        let lastColored = false\r\n\r\n        let computeCurrentLine = (x, y) => {\r\n            // Reset current line\r\n            this.currentLine = []\r\n\r\n            // Reset point object\r\n            point = null\r\n\r\n            // Increment line num\r\n            lineNum++\r\n\r\n            while(true) {\r\n                // Y limit reached !\r\n                if (y < -1 || y == h) {\r\n                    break\r\n                }\r\n\r\n                // X limit reached !\r\n                if (x < 0 || x > w) {\r\n                    break\r\n                }\r\n\r\n                // Get pixel power\r\n                s = p = this._getPixelPower(x, y, p)\r\n\r\n                // Is last white/colored pixel\r\n                lastWhite   = point && (! point.p && p)\r\n                lastColored = point && (point.p && ! p)\r\n\r\n                // Pixel color from last one on normal line\r\n                if (! reversed && point) {\r\n                    s = point.p\r\n                }\r\n\r\n                // Create point object\r\n                point = { x: x, y: y, s: s, p: p }\r\n\r\n                // Set last white/colored pixel\r\n                lastWhite   && (point.lastWhite   = true)\r\n                lastColored && (point.lastColored = true)\r\n\r\n                // Add the new point\r\n                this.currentLine.push(point)\r\n\r\n                // Next coords\r\n                x++\r\n                y--\r\n            }\r\n        }\r\n\r\n        let percent     = 0\r\n        let lastPercent = 0\r\n\r\n        let processCurrentLine = () => {\r\n            // Process pixels line\r\n            gcode = this._processCurrentLine(reversed)\r\n\r\n            // Call progress callback\r\n            percent = Math.round((lineNum / totalLines) * 100)\r\n\r\n            if (percent > lastPercent) {\r\n                this._onProgress({ gcode, percent })\r\n            }\r\n\r\n            lastPercent = percent\r\n\r\n            // Skip empty gcode line\r\n            if (! gcode) {\r\n                return\r\n            }\r\n\r\n            // Toggle line state\r\n            reversed = ! reversed\r\n\r\n            // Concat line\r\n            this.gcode.push.apply(this.gcode, gcode)\r\n        }\r\n\r\n        let processNextLine = () => {\r\n            // Aborted ?\r\n            if (! this.running) {\r\n                return this._onAbort()\r\n            }\r\n\r\n            // Process line...\r\n            computeCurrentLine(x, y)\r\n            processCurrentLine()\r\n\r\n            if (! x) y++\r\n            else x++\r\n\r\n            if (y === h) {\r\n                x++\r\n                y--\r\n            }\r\n\r\n            if (y < h && x < w) {\r\n                if (nonBlocking) {\r\n                    setTimeout(processNextLine, 0)\r\n                }\r\n                else {\r\n                    processNextLine()\r\n                }\r\n            }\r\n            else {\r\n                this._onDone({ gcode: this.gcode })\r\n                this.running = false\r\n            }\r\n        }\r\n\r\n        processNextLine()\r\n    }\r\n\r\n    _onProgress(event) {\r\n        //console.log('progress:', event.percent)\r\n    }\r\n\r\n    _onDone(event) {\r\n        //console.log('done:', event.gcode.length)\r\n    }\r\n\r\n    _onAbort() {\r\n        //console.log('abort')\r\n    }\r\n\r\n    on(event, callback, context) {\r\n        let method = '_on' + event[0].toUpperCase() + event.slice(1)\r\n\r\n        if (! this[method] || typeof this[method] !== 'function') {\r\n            throw new Error('Undefined event: ' + event)\r\n        }\r\n\r\n        this[method] = event => callback.call(context || this, event)\r\n\r\n        return this\r\n    }\r\n\r\n    // Return the bitmap height-map\r\n    getHeightMap(settings) {\r\n        if (this.running) {\r\n            return\r\n        }\r\n\r\n        // Init loop vars\r\n        this.running  = true\r\n        let heightMap = []\r\n\r\n        let x = 0\r\n        let y = 0\r\n        let w = this.size.width\r\n        let h = this.size.height\r\n\r\n        let percent     = 0\r\n        let lastPercent = 0\r\n\r\n        // Defaults settings\r\n        settings = settings || {}\r\n\r\n        // Register user callbacks\r\n        this._registerUserCallbacks(settings)\r\n\r\n        // Non blocking mode ?\r\n        let nonBlocking = this.nonBlocking\r\n\r\n        if (settings.nonBlocking !== undefined) {\r\n            nonBlocking = settings.nonBlocking\r\n        }\r\n\r\n        let computeCurrentLine = () => {\r\n            // Reset current line\r\n            let pixels = []\r\n\r\n            // For each pixel on the line\r\n            for (x = 0; x < w; x++) {\r\n                pixels.push(this._mapPixelPower(this._getPixelPower(x, y)))\r\n            }\r\n\r\n            // Call progress callback\r\n            percent = Math.round((y / h) * 100)\r\n\r\n            if (percent > lastPercent) {\r\n                //onProgress.call(settings.progressContext || this, { pixels, percent })\r\n                this._onProgress({ pixels, percent })\r\n            }\r\n\r\n            lastPercent = percent\r\n\r\n            // Add pixels line\r\n            heightMap.push(pixels)\r\n        }\r\n\r\n        let processNextLine = () => {\r\n            // Aborted ?\r\n            if (! this.running) {\r\n                return this._onAbort()\r\n            }\r\n\r\n            // Process line...\r\n            computeCurrentLine()\r\n\r\n            y++\r\n\r\n            if (y < h) {\r\n                if (nonBlocking) {\r\n                    setTimeout(processNextLine, 0)\r\n                }\r\n                else {\r\n                    processNextLine()\r\n                }\r\n            }\r\n            else {\r\n                //onDone.call(settings.doneContext || this, { heightMap })\r\n                this._onDone({ heightMap })\r\n                this.running = false\r\n            }\r\n        }\r\n\r\n        processNextLine()\r\n\r\n        if (! nonBlocking) {\r\n            return heightMap\r\n        }\r\n    }\r\n}\r\n\r\n// Exports\r\nexport { RasterToGcode }\r\nexport default RasterToGcode\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lw.raster2gcode/raster-to-gcode.js","import canvasFilters from './canvas-filters'\r\n\r\n// CanvasGrid class\r\nclass CanvasGrid {\r\n    // Class constructor...\r\n    constructor(settings) {\r\n        // Init properties\r\n        this.cellSize   = 1024\r\n        this.scaleRatio = { x: 1, y: 1 }\r\n        this.filters    = {}\r\n\r\n        Object.assign(this, settings || {})\r\n\r\n        if (! this.scaleRatio.x) {\r\n            this.scaleRatio = { x: this.scaleRatio, y: this.scaleRatio }\r\n        }\r\n\r\n        this.size   = { width: 0, height: 0, cols: 0, rows: 0 }\r\n        this.file   = null\r\n        this.image  = null\r\n        this.url    = null\r\n        this.canvas = []\r\n        this.pixels = []\r\n    }\r\n\r\n    // <input> can be Image, File, URL object or URL string (http://* or data:image/*)\r\n    load(input) {\r\n        // Load File object\r\n        if (input instanceof File) {\r\n            return this.loadFromFile(input)\r\n        }\r\n\r\n        // Load Image object\r\n        if (input instanceof Image) {\r\n            return this.loadFromImage(input)\r\n        }\r\n\r\n        // Load URL object\r\n        if (typeof input === 'string' || input instanceof URL) {\r\n            return this.loadFromURL(input.trim())\r\n        }\r\n\r\n        // Return rejected promise with an Error object\r\n        return Promise.reject(new Error('Unsupported input format.'))\r\n    }\r\n\r\n    // Load image\r\n    _loadImage(src, reject, resolve) {\r\n        // Create Image object\r\n        let image = new Image()\r\n\r\n        // Register for load and error events\r\n        image.onload = event => {\r\n            this.loadFromImage(image).then(resolve).catch(reject)\r\n        }\r\n\r\n        image.onerror = event => {\r\n            reject(new Error('An error occurred while loading the image : ' + src))\r\n        }\r\n\r\n        // Load the image from File url\r\n        image.src = src\r\n    }\r\n\r\n    // Load from File object\r\n    loadFromFile(input) {\r\n        return new Promise((resolve, reject) => {\r\n            // Bad input type\r\n            if (! (input instanceof File)) {\r\n                reject(new Error('Input param must be a File object.'))\r\n            }\r\n\r\n            // Set input file\r\n            this.file = input\r\n\r\n            // Load image\r\n            this._loadImage(URL.createObjectURL(input), reject, resolve)\r\n        })\r\n    }\r\n\r\n    // Load from URL object or string\r\n    loadFromURL(input) {\r\n        return new Promise((resolve, reject) => {\r\n            // Bad input type\r\n            if (! (input instanceof URL) && typeof input !== 'string') {\r\n                reject(new Error('Input param must be a URL string or object.'))\r\n            }\r\n\r\n            // Create url object\r\n            let url = input instanceof URL ? input : new URL(input)\r\n\r\n            // Set url\r\n            this.url = url\r\n\r\n            // Load image\r\n            this._loadImage(url, reject, resolve)\r\n        })\r\n    }\r\n\r\n    // Load from Image object\r\n    loadFromImage(input) {\r\n        return new Promise((resolve, reject) => {\r\n            // Bad input type\r\n            if (! (input instanceof Image)) {\r\n                reject(new Error('Input param must be a Image object.'))\r\n            }\r\n\r\n            // Set input image\r\n            this.image = input\r\n\r\n            // Process image\r\n            this._processImage()\r\n\r\n            // Resolve the promise\r\n            resolve(this)\r\n        })\r\n    }\r\n\r\n    _processImage() {\r\n        // Reset canvas grid\r\n        this.canvas = []\r\n        this.pixels = []\r\n\r\n        // Calculate grid size\r\n        let width  = Math.round(this.image.width * this.scaleRatio.x)\r\n        let height = Math.round(this.image.height * this.scaleRatio.y)\r\n        let cols   = Math.ceil(width / this.cellSize)\r\n        let rows   = Math.ceil(height / this.cellSize)\r\n\r\n        this.size = { width, height, cols, rows }\r\n\r\n        // Create canvas grid\r\n        let line    = null\r\n        let canvas  = null\r\n        let pixels  = null\r\n        let context = null\r\n\r\n        let x  = null // cols\r\n        let y  = null // rows\r\n        let sx = null // scaled cols\r\n        let sy = null // scaled rows\r\n        let sw = null // scaled width\r\n        let sh = null // scaled height\r\n\r\n        // For each line\r\n        for (y = 0; y < this.size.rows; y++) {\r\n            // Reset current line\r\n            line   = []\r\n            pixels = []\r\n\r\n            // For each column\r\n            for (x = 0; x < this.size.cols; x++) {\r\n                // Create canvas element\r\n                canvas = document.createElement('canvas')\r\n\r\n                // Set canvas size\r\n                if (x === 0 || x < (this.size.cols - 1)) {\r\n                    canvas.width = this.size.width < this.cellSize\r\n                                 ? this.size.width : this.cellSize\r\n                }\r\n                else {\r\n                    // Get the rest for the last item (except the first one)\r\n                    canvas.width = this.size.width % this.cellSize\r\n                }\r\n\r\n                if (y === 0 || y < (this.size.rows - 1)) {\r\n                    canvas.height = this.size.height < this.cellSize\r\n                                  ? this.size.height : this.cellSize\r\n                }\r\n                else {\r\n                    // Get the rest for the last item (except the first one)\r\n                    canvas.height = this.size.height % this.cellSize\r\n                }\r\n\r\n                // Get canvas 2d context\r\n                context = canvas.getContext('2d')\r\n\r\n                // Fill withe background (avoid alpha chanel calculation)\r\n                context.fillStyle = 'white'\r\n                context.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n                // Draw the part of image in the canvas (scale)\r\n                sw = canvas.width / this.scaleRatio.x\r\n                sh = canvas.height / this.scaleRatio.y\r\n                sx = x * this.cellSize / this.scaleRatio.x\r\n                sy = y * this.cellSize / this.scaleRatio.y\r\n\r\n                context.drawImage(\r\n                    this.image, sx, sy, sw, sh,\r\n                    0, 0, canvas.width, canvas.height\r\n                )\r\n\r\n                // Apply image filters\r\n                canvasFilters(canvas, this.filters)\r\n\r\n                // Add the canvas to current line\r\n                line.push(canvas)\r\n\r\n                // Add the canvas image data to current line\r\n                pixels.push(context.getImageData(0, 0, canvas.width, canvas.height).data)\r\n            }\r\n\r\n            // Add the line to canvas grid\r\n            this.pixels.push(pixels)\r\n            this.canvas.push(line)\r\n        }\r\n    }\r\n\r\n    getPixel(x, y) {\r\n        // Test coords validity\r\n        x = parseInt(x)\r\n        y = parseInt(y)\r\n\r\n        if (isNaN(x) || isNaN(y)) {\r\n            throw new Error('[x, y] params must be Integer.')\r\n        }\r\n\r\n        // Test coords range\r\n        if (x < 0 || x >= this.size.width) {\r\n            throw new Error('Out of range: x = ' + x + ', max: ' + this.size.width)\r\n        }\r\n\r\n        if (y < 0 || y >= this.size.height) {\r\n            throw new Error('Out of range: y = ' + y + ', max: ' + this.size.height)\r\n        }\r\n\r\n        // Calculate target canvas coords\r\n        let col = parseInt(x / this.cellSize)\r\n        let row = parseInt(y / this.cellSize)\r\n\r\n        // Adjuste x/y values relative to canvas origin\r\n        col && (x -= this.cellSize * col)\r\n        row && (y -= this.cellSize * row)\r\n\r\n        // Get pixel data\r\n        let cellSize  = this.cellSize;\r\n\r\n        if (this.size.width < cellSize) {\r\n            cellSize = this.size.width\r\n        }\r\n        else if (this.size.width < cellSize * (col + 1)) {\r\n            cellSize = this.size.width % cellSize\r\n        }\r\n\r\n        let i         = (y * (cellSize * 4)) + (x * 4)\r\n        let pixels    = this.pixels[row][col]\r\n        let pixelData = pixels.slice(i, i + 4)\r\n\r\n        return {\r\n            color : { r: pixelData[0], g: pixelData[1], b: pixelData[2], a: pixelData[3] },\r\n            gray  : (pixelData[0] + pixelData[1] + pixelData[2]) / 3,\r\n            grid  : { col, row },\r\n            coords: { x, y }\r\n        }\r\n    }\r\n}\r\n\r\n// Exports\r\nexport { CanvasGrid }\r\nexport default CanvasGrid\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lw.raster2gcode/canvas-grid.js","import FloydSteinberg from 'floyd-steinberg'\r\n\r\n// Grayscale algorithms\r\nconst grayscaleAlgorithms = [\r\n    'none',\r\n    'average',\r\n    'desaturation',\r\n    'decomposition-min', 'decomposition-max',\r\n    'luma', 'luma-601', 'luma-709', 'luma-240',\r\n    'red-chanel', 'green-chanel', 'blue-chanel'\r\n]\r\n\r\n// Trucate color value in the 0-255 range\r\nfunction color(color) {\r\n    return color < 0 ? 0 : (color > 255 ? 255 : color);\r\n}\r\n\r\n// Filters ...\r\nfunction invertColor(data, i, value) {\r\n    if (value) {\r\n        data[i]     = color(255 - data[i])\r\n        data[i + 1] = color(255 - data[i + 1])\r\n        data[i + 2] = color(255 - data[i + 2])\r\n    }\r\n}\r\n\r\nfunction brightness(data, i, value) {\r\n    if (value !== undefined) {\r\n        data[i]     = color(data[i]     + value)\r\n        data[i + 1] = color(data[i + 1] + value)\r\n        data[i + 2] = color(data[i + 2] + value)\r\n    }\r\n}\r\n\r\nfunction contrast(data, i, value) {\r\n    if (value !== undefined) {\r\n        data[i]     = color(value * (data[i]     - 128) + 128)\r\n        data[i + 1] = color(value * (data[i + 1] - 128) + 128)\r\n        data[i + 2] = color(value * (data[i + 2] - 128) + 128)\r\n    }\r\n}\r\n\r\nfunction gamma(data, i, value) {\r\n    if (value !== undefined) {\r\n        data[i]     = color(Math.exp(Math.log(255 * (data[i]     / 255)) * value))\r\n        data[i + 1] = color(Math.exp(Math.log(255 * (data[i + 1] / 255)) * value))\r\n        data[i + 2] = color(Math.exp(Math.log(255 * (data[i + 2] / 255)) * value))\r\n    }\r\n}\r\n\r\nfunction grayscale(data, i, algorithm, shades) {\r\n    // Graysale\r\n    // http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/\r\n\r\n    // Unsupported algorithm\r\n    if (grayscaleAlgorithms.indexOf(algorithm) === -1) {\r\n        throw new Error('Unsupported grayscale algorithm: ' + algorithm)\r\n    }\r\n\r\n    // None\r\n    if (algorithm === 'none') {\r\n        return null\r\n    }\r\n\r\n    // Get Red/Green/Blue values\r\n    let gray\r\n    let r = data[i];\r\n    let g = data[i + 1];\r\n    let b = data[i + 2];\r\n\r\n    switch (algorithm) {\r\n        case 'average':\r\n            gray = (r + g + b) / 3\r\n            break\r\n\r\n        case 'luma': // Default\r\n            gray = (r * 0.3) + (g * 0.59) + (b * 0.11)\r\n            break\r\n\r\n        case 'luma-601': // CCIR-601\r\n            gray = (r * 0.299) + (g * 0.587) + (b * 0.114)\r\n            break\r\n\r\n        case 'luma-709': // ITU-R-709\r\n            gray = (r * 0.2126) + (g * 0.7152) + (b * 0.0722)\r\n            break\r\n\r\n        case 'luma-240': // SMPTE-240M\r\n            gray = (r * 0.212) + (g * 0.701) + (b * 0.087)\r\n            break\r\n\r\n        case 'desaturation':\r\n            gray = (Math.max(r, g, b) + Math.min(r, g, b)) / 2\r\n            break\r\n\r\n        case 'decomposition-min':\r\n            gray = Math.min(r, g, b)\r\n            break\r\n\r\n        case 'decomposition-max':\r\n            gray = Math.max(r, g, b)\r\n            break\r\n\r\n        case 'red-chanel':\r\n            gray = r\r\n            break\r\n\r\n        case 'green-chanel':\r\n            gray = g\r\n            break\r\n\r\n        case 'blue-chanel':\r\n            gray = b\r\n            break\r\n    }\r\n\r\n    // Shades of gray\r\n    if (shades !== undefined) {\r\n        gray = parseInt(gray / shades) * shades\r\n    }\r\n\r\n    // Force integer\r\n    gray = parseInt(gray)\r\n\r\n    // Set new r/g/b values\r\n    data[i]     = color(gray)\r\n    data[i + 1] = color(gray)\r\n    data[i + 2] = color(gray)\r\n}\r\n\r\n// Apply filters on provided canvas\r\nfunction canvasFilters(canvas, settings) {\r\n    settings = Object.assign({}, {\r\n        smoothing   : false,  // Smoothing [true|fale]\r\n        brightness  : 0,      // Image brightness [-255 to +255]\r\n        contrast    : 0,      // Image contrast [-255 to +255]\r\n        gamma       : 0,      // Image gamma correction [0.01 to 7.99]\r\n        grayscale   : 'none', // Graysale algorithm [average, luma, luma-601, luma-709, luma-240, desaturation, decomposition-[min|max], [red|green|blue]-chanel]\r\n        shadesOfGray: 256,    // Number of shades of gray [2-256]\r\n        invertColor : false,   // Invert color...\r\n        dithering   : false\r\n    }, settings || {})\r\n\r\n    // Get canvas 2d context\r\n    let context = canvas.getContext('2d')\r\n\r\n    // Smoothing\r\n    if (context.imageSmoothingEnabled !== undefined) {\r\n        context.imageSmoothingEnabled = settings.smoothing\r\n    }\r\n    else {\r\n        context.mozImageSmoothingEnabled    = settings.smoothing\r\n        context.webkitImageSmoothingEnabled = settings.smoothing\r\n        context.msImageSmoothingEnabled     = settings.smoothing\r\n        context.oImageSmoothingEnabled      = settings.smoothing\r\n    }\r\n\r\n    // Get image data\r\n    let imageData = context.getImageData(0, 0, canvas.width, canvas.height)\r\n    let data      = imageData.data\r\n\r\n    let contrastFactor, brightnessOffset, gammaCorrection, shadesOfGrayFactor\r\n\r\n    if (settings.contrast !== 0) {\r\n        contrastFactor = (259 * (settings.contrast + 255)) / (255 * (259 - settings.contrast))\r\n    }\r\n\r\n    if (settings.brightness !== 0) {\r\n        brightnessOffset = settings.brightness\r\n    }\r\n\r\n    if (settings.gamma !== 0) {\r\n        gammaCorrection = 1 / settings.gamma\r\n    }\r\n\r\n    // Shades of gray\r\n    if (settings.shadesOfGray > 1 && settings.shadesOfGray < 256) {\r\n        shadesOfGrayFactor = 255 / (settings.shadesOfGray - 1)\r\n    }\r\n\r\n    // For each pixel\r\n    for (let i = 0, il = data.length; i < il; i += 4) {\r\n        // Apply filters\r\n        invertColor(data, i, settings.invertColor)\r\n        brightness(data, i, brightnessOffset)\r\n        contrast(data, i, contrastFactor)\r\n        gamma(data, i, gammaCorrection)\r\n        grayscale(data, i, settings.grayscale, shadesOfGrayFactor)\r\n    }\r\n\r\n    if (settings.dithering) {\r\n        imageData = FloydSteinberg(imageData)\r\n    }\r\n\r\n    // Write new image data on the context\r\n    context.putImageData(imageData, 0, 0)\r\n}\r\n\r\n// Exports\r\nexport { canvasFilters }\r\nexport default canvasFilters\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lw.raster2gcode/canvas-filters.js","/*\n * floyd-steinberg\n *\n * Using 2D error diffusion formula published by Robert Floyd and Louis Steinberg in 1976\n *\n * Javascript implementation of Floyd-Steinberg algorithm thanks to Forrest Oliphant @forresto and @meemoo \n * via iFramework https://github.com/meemoo/iframework/blob/master/src/nodes/image-monochrome-worker.js\n *\n * Accepts an object that complies with the HTML5 canvas imageData spec https://developer.mozilla.org/en-US/docs/Web/API/ImageData\n * In particular, it makes use of the width, height, and data properties\n *\n * License: MIT\n*/\n\nmodule.exports = floyd_steinberg;\n\nfunction floyd_steinberg(image) {\n  var imageData = image.data;\n  var imageDataLength = imageData.length;\n  var w = image.width;\n  var lumR = [],\n      lumG = [],\n      lumB = [];\n\n  var newPixel, err;\n\n  for (var i = 0; i < 256; i++) {\n    lumR[i] = i * 0.299;\n    lumG[i] = i * 0.587;\n    lumB[i] = i * 0.110;\n  }\n\n  // Greyscale luminance (sets r pixels to luminance of rgb)\n  for (var i = 0; i <= imageDataLength; i += 4) {\n    imageData[i] = Math.floor(lumR[imageData[i]] + lumG[imageData[i+1]] + lumB[imageData[i+2]]);\n  }\n\n  for (var currentPixel = 0; currentPixel <= imageDataLength; currentPixel += 4) {\n    // threshold for determining current pixel's conversion to a black or white pixel\n    newPixel = imageData[currentPixel] < 150 ? 0 : 255;\n    err = Math.floor((imageData[currentPixel] - newPixel) / 23);\n    imageData[currentPixel] = newPixel;\n    imageData[currentPixel + 4         ] += err * 7;\n    imageData[currentPixel + 4 * w - 4 ] += err * 3;\n    imageData[currentPixel + 4 * w     ] += err * 5;\n    imageData[currentPixel + 4 * w + 4 ] += err * 1;\n    // Set g and b pixels equal to r (effectively greyscales the image fully)\n    imageData[currentPixel + 1] = imageData[currentPixel + 2] = imageData[currentPixel];\n  }\n\n  return image;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/floyd-steinberg/floyd-steinberg.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}