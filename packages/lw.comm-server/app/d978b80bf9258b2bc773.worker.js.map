{"version":3,"sources":["webpack:///webpack/bootstrap d978b80bf9258b2bc773","webpack:///./lib/workers/cam-mill.js","webpack:///./lib/cam-gcode-mill.js","webpack:///./lib/cam.js","webpack:///../~/clipper-lib/clipper.js","webpack:///../~/gl-matrix/src/gl-matrix.js","webpack:///../~/gl-matrix/src/gl-matrix/common.js","webpack:///../~/gl-matrix/src/gl-matrix/mat2.js","webpack:///../~/gl-matrix/src/gl-matrix/mat2d.js","webpack:///../~/gl-matrix/src/gl-matrix/mat3.js","webpack:///../~/gl-matrix/src/gl-matrix/mat4.js","webpack:///../~/gl-matrix/src/gl-matrix/quat.js","webpack:///../~/gl-matrix/src/gl-matrix/vec3.js","webpack:///../~/gl-matrix/src/gl-matrix/vec4.js","webpack:///../~/gl-matrix/src/gl-matrix/vec2.js","webpack:///./lib/mesh.js","webpack:///../~/poly2tri/src/sweepcontext.js","webpack:///../~/poly2tri/src/pointerror.js","webpack:///../~/poly2tri/src/xy.js","webpack:///../~/poly2tri/src/point.js","webpack:///../~/poly2tri/src/triangle.js","webpack:///../~/poly2tri/src/sweep.js","webpack:///../~/poly2tri/src/assert.js","webpack:///../~/poly2tri/src/advancingfront.js","webpack:///../~/poly2tri/src/utils.js","webpack:///../~/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///../~/eve/eve.js","webpack:///../~/web-cam-cpp/web-cam-cpp.js","webpack:///../~/script-loader/addScript.js","webpack:///../~/web-cam-cpp/web-cam-cpp.js?9751"],"names":["onmessage","event","data","settings","opIndex","op","geometry","openGeometry","tabGeometry","errors","showAlert","message","level","push","progress","postMessage","JSON","stringify","gcode","done","length","apply","getMillGcode","getMillGcodeFromOp","props","paths","ramp","scale","useZ","offsetX","offsetY","decimal","topZ","botZ","safeZ","passDepth","plungeFeed","cutFeed","tabZ","toolSpeed","plungeFeedGcode","cutFeedGcode","undefined","retractGcode","toFixed","retractForTabGcode","getX","p","X","getY","Y","convertPoint","result","Z","pathIndex","path","origPath","separatedPaths","currentZ","finishedZ","nextZ","Math","max","safeToClose","selectedPaths","selectedIndex","selectedPath","selectedZ","executedRamp","minPlungeTime","idealDist","end","totalDist","rampPath","slice","concat","reverse","distTravelled","i","newZ","min","ok","type","toolAngle","cutDepth","toolDiameter","stepOver","plungeRate","cutRate","camPaths","margin","direction","cutWidth","camPath","point","round","segmentLength","feedScale","toolFeedUnits","clearance","hookOperationStart","tabDepth","hookOperationEnd","dist","pocket","insideOutside","cut","fillPath","vCarve","reduceCamPaths","getClipperPathsFromCamPaths","separateTabs","require","x1","y1","x2","y2","sqrt","crosses","bounds","p1","p2","clipper","Clipper","AddPath","PolyType","ptSubject","AddPaths","ptClip","PolyTree","Execute","ClipType","ctIntersection","PolyFillType","pftEvenOdd","ChildCount","child","Childs","points","Contour","pathIsClosed","clipperPath","closeClipperPaths","mergePaths","currentPath","currentPoint","mergedPaths","numLeft","closestPathIndex","closestPointIndex","closestPointDist","closestReverse","check","pointIndex","needNew","cutterDia","stepover","climb","current","allPaths","isInside","width","allowRecutInBounds","currentWidth","eachWidth","eachOffset","needReverse","nextWidth","lineDistance","angle","cx","minX","maxX","cy","minY","maxY","r","m","fromTranslation","rotate","PI","translate","makePoint","x","y","transformMat3","scan","separated","cutterAngle","memoryBlocks","cGeometry","resultPathsRef","Module","_malloc","resultNumPathsRef","resultPathSizesRef","debugArg0","debugArg1","ccall","_free","minDist","minDistSqr","distSqr","newPath","sq","displayedCppTabError1","displayedCppTabError2","cutterPath","cCutterPath","cTabGeometry","errorRef","HEAPU32","elementToRawPaths","pathStrToRawPaths","flipY","hasClosedRawPaths","filterClosedRawPaths","rawPathsToClipperPaths","triangulateRawPaths","clipperPathsToCPaths","cPathsToClipperPaths","cPathsToCamPaths","clipperBounds","clip","union","diff","xor","offset","inchToClipperScale","mmToClipperScale","clipperToCppScale","cleanPolyDist","arcTolerance","linearizeCubicBezier","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","minNumSegments","minSegmentLength","bez","p0","p3","t","numSegments","nextX","nextY","linearizeSnapPath","alertFn","subpath","elementToLinearSnapPaths","element","Snap","snapElement","attr","Number","w","h","map","transform","globalMatrix","parsePathString","snapPathToRawPaths","snapPath","pxPerInch","factor","j","str","toCubic","allRawPaths","deltaY","rawPaths","rawPath","CleanPolygons","SimplifyPolygons","clipperPathsToPolyTree","c","polyTree","ctUnion","triangulatePolyTree","pointToVertex","contourToVertexes","nodesToVertexes","nodes","node","processNode","vertexes","holes","context","addHoles","triangulate","triangles","getTriangles","getPoints","hole","next","clipperPaths","doubleSize","cPaths","cPathsBase","cPathSizes","cPathSizesBase","cPath","pathArray","Float64Array","buffer","byteOffset","cPathsRef","cNumPathsRef","cPathSizesRef","cNumPaths","pathSize","convertedPaths","convertedPath","MAX_VALUE","pt","paths1","paths2","clipType","ctDifference","ctXor","amount","joinType","endType","JoinType","jtRound","EndType","etClosedPolygon","jtSquare","jtMiter","co","ClipperOffset","offsetted"],"mappings":";AAAA;AACA;AACA;AACA,mCAA2B;AAC3B;AACA,YAAI;AACJ;AACA,WAAG;AACH;AACA;;AAEA;AACA,sDAA8C;AAC9C;AACA,qCAA6B;;AAE7B,+CAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAS;AACT;AACA;AACA;AACA;AACA,eAAO;AACP,cAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAK;AACL,YAAI;AACJ;AACA;AACA;AACA;;AAEA,8CAAsC;AACtC;AACA;AACA,qCAA6B;AAC7B,qCAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAoB,gBAAgB;AACpC;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAAoB,gBAAgB;AACpC;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAiB,8BAA8B;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAkB,qBAAqB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA,4DAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,0BAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;AACA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,SAAS;AACvB;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,SAAS;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,QAAQ;AAChC,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,yCAAwC;AACxC,2CAA0C;AAC1C,4DAA2D;AAC3D;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtoBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmaAAY;AACZ;AACA;AACA;AACA,2BAA0B,OAAO;AACjC,+BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA,sCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACniCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmwCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACdmDAAkwDAAuD;AACvD;AACA;AACA;AACA,yDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C,uDAAsD;AACtgDAA+C,UAAU;AACzD;AACA,qDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AACliCAAgC;AAChqDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,UAAU;AACliBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjoBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,UAAU;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrwCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB;AAClnB,8CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAiF,WAAW;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,cAAc;AACtiCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,aAAa;AAClC;AACA;AACA,gEAA+D,UAAU;AACzE;AACA;AACA;AACA;AACA,sBAAqB,aAAa;AAClC;AACA;AACA,gEAA+D,UAAU;AACzE;AACA;AACA;AACA;AACA,oBAAmB,yBAAyB;AAC5C,sBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,WAAW;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,UAAU;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA,8BAA6B,OAAO;AACpC;AACA;AACA;AACA,8BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,OAAO;AACpC;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,4BAA4B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA,kBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,kBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,kBAAiB;AACjB,oBAAmB,cAAc;AACjC;AACA,uBAAsB;AACtB,2BAA0B;AAC1B,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,oBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB;AACA;AACA;AACA;AACA,kEAAiE,UAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,UAAU;AACnD;AACA;AACA,qDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAiE,UAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACrwND;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;ACpCA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAU,OAAO;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;ACrEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB;;AAEA,mC;AACA,sB;AACA,iB;AACA,iB;AACA,+B;AACA,sB;AACA,G;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnbA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,OAAO;AACpB;AACA,4B;AACA;AACA,G;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpdA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gB;AACA,qB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,MAAM;AACjB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAU,KAAK;AACf,WAAU,KAAK;AACf;AACA,aAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAU,KAAK;AACf,WAAU,KAAK;AACf;AACA,aAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gB;AACA,qB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACzuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ,WAAU;AACV;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,WAAW,WAAW;AACpC;AACA;AACA;AACA;;AAEA,eAAc,WAAW,YAAY;AACrC;AACA;AACA;AACA;;AAEA,gBAAe,YAAY,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,oBAAmB,YAAY,YAAY;AAC3C,oBAAmB,YAAY,YAAY;AAC3C,oBAAmB,YAAY,aAAa;;AAE5C,sBAAqB,cAAc,cAAc;AACjD,sBAAqB,cAAc,cAAc;AACjD,sBAAqB,cAAc,eAAe;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAsB,eAAe,eAAe;AACpD,uBAAsB,eAAe,eAAe;AACpD,uBAAsB,eAAe,iBAAiB;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA2C,aAAa;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAe,YAAY,YAAY;AACvC,gBAAe,YAAY,YAAY;AACvC,gBAAe,YAAY,aAAa;;AAExC;AACA,yBAAwB,yBAAyB;AACjD,6BAA4B,qBAAqB;AACjD,6BAA4B,yBAAyB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA,4CAA2C,aAAa;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,KAAK;AACjB,aAAY,KAAK;AACjB,aAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,aAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA,mB;AACA;AACA;AACA;AACA,oC;AACA,oC;AACA,IAAG,iD;AACH;AACA;AACA;AACA,oC;AACA,oC;AACA,IAAG,6B;AACH;AACA;AACA,oC;AACA;AACA,oC;AACA,IAAG,O;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;ACvlEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,KAAK;AACjB,aAAY,KAAK;AACjB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA,gB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA,gB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA,gB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,O;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAwC;AACxC;AACA,2BAA0B;AAC1B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;;AAEA;;;;;;;ACvlBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA,wBAAuB,OAAO;AAC9B,2BAA0B,iBAAiB;AAC3C;AACA,2BAA0B,iBAAiB;AAC3C;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA,M;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxwBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA,wBAAuB,OAAO;AAC9B,2BAA0B,iBAAiB,iBAAiB;AAC5D;AACA,2BAA0B,iBAAiB,iBAAiB;AAC5D;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChmBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,MAAM;AACjB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA,wBAAuB,OAAO;AAC9B,2BAA0B;AAC1B;AACA,2BAA0B;AAC1B;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,KAAK;AAC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ACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB;AACA,gBAAe,KAAK;AACpB;AACA,gBAAe,KAAK;AACpB;AACA,gBAAe,OAAO;AACtB;AACA,gBAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB;AACA,gBAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,kBAAkB;AAC9E;AACA,6BAA4B,aAAa,GAAG,aAAa,GAAG,aAAa,GAAG,aAAa;AACzF,6DAA4D,kBAAkB;AAC9E;AACA;AACA;AACA,YAAW,WAAW,6DAA6D,gBAAgB;AACnG,0DAAyD,KAAK;AAC9D,YAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,aAAa,GAAG,aAAa,GAAG,aAAa;AACrE;AACA,YAAW,WAAW,gDAAgD;AACtE;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,qBAAoB,+BAA+B;AACnD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,aAAa,GAAG,aAAa,GAAG,aAAa;AAC3D,eAAc,aAAa,GAAG,aAAa,GAAG,aAAa;AAC3D;AACA;AACA;AACA,YAAW,mBAAmB,sDAAsD;AACpF;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA,iBAAgB;AAChB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,aAAa;AACrC;AACA,YAAW,GAAG,uCAAuC;AACrD;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,qBAAoB,gCAAgC;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,aAAa,GAAG,aAAa,GAAG,aAAa;AACvE;AACA,YAAW,WAAW,6CAA6C;AACnE;AACA;AACA;AACA;AACA,iBAAgB;AAChB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAc,qBAAqB;AACnC;AACA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB,oCAAoC;AACxD;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC5hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gFAA+E,IAAI;AACnF,uBAAsB,SAAS;AAC/B,mBAAkB,+CAA+C;AACjE;AACA;AACA;;AAEA;AACA,8DAA6D,gBAAgB;AAC7E,wCAAuC,KAAK;AAC5C;AACA,mBAAkB,+CAA+C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,aAAa,GAAG,aAAa,GAAG,aAAa,GAAG,aAAa;AACrF;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA,0BAAyB,UAAU;AACnC,kBAAiB;AACjB;AACA,YAAW,IAAI,wBAAwB;AACvC,cAAa,OAAO,WAAW;AAC/B;AACA;AACA,2BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,UAAU;AAC/B,kBAAiB;AACjB;AACA,sBAAqB,8BAA8B,2BAA2B;AAC9E;AACA,YAAW,IAAI,wBAAwB;AACvC,cAAa,OAAO,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC,aAAY,OAAO,WAAW,yBAAyB;AACvD,sBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB;AACnB,cAAa,OAAO,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA,mDAAkD;AAClD,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,IAAI,mCAAmC;AAClD,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,YAAW,IAAI,mCAAmC;AAClD,aAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,IAAI,mCAAmC;AAClD,YAAW,IAAI,mCAAmC;AAClD,aAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,IAAI,mCAAmC;AAClD,YAAW,IAAI,mCAAmC;AAClD,aAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,IAAI,mCAAmC;AAClD,aAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,UAAU;AACtB,aAAY,UAAU;AACtB,aAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,UAAS,IAAI;AACb;;AAEA;AACA;AACA,wBAAuB;AACvB;;AAEA;AACA;AACA;AACA,YAAW,IAAI,mCAAmC;AAClD,YAAW,IAAI,mCAAmC;AAClD,aAAY,OAAO;AACnB;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;AClRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,uCAAsC,OAAO,OAAO;AACpD;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB;AACvF;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB,4BAA4B;AAChD;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,GAAG,4BAA4B;AAC1C,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,GAAG,yBAAyB;AACvC,YAAW,GAAG,yBAAyB;AACvC,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,GAAG,yBAAyB;AACvC,YAAW,GAAG,yBAAyB;AACvC,YAAW,SAAS;AACpB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,GAAG,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,GAAG,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,GAAG,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,GAAG,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,GAAG,wBAAwB;AACtC,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,GAAG,wBAAwB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,GAAG,6BAA6B;AAC3C,YAAW,GAAG,6BAA6B;AAC3C,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,GAAG,wBAAwB;AACtC,cAAa,OAAO;AACpB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,YAAW,GAAG,yBAAyB;AACvC,YAAW,GAAG,yBAAyB;AACvC,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG,wBAAwB;AACtC,YAAW,GAAG,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;;AAGA;;AAEA;;;;;;;AChjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,mDAAkD,2CAA2C;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,cAAc;AACzB;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;;AAEA;AACA,YAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,IAAI;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,cAAc;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,cAAc;AACzB,aAAY;AACZ;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,QAAQ;AACpcAAc;AACzB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB;AACA;AACA,YAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;ACj0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,IAAI;AACf,YAAW,UAAU;AACrB;AACA;AACA,gBAAe,GAAG;AAClB;;AAEA,gBAAe,cAAc;AAC7B;;AAEA,gBAAe,UAAU;AACzB;AACA,gBAAe,UAAU;AACzB;;AAEA,gBAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB;AACA;AACA,gBAAe,KAAK;AACpB;AACA,gBAAe,KAAK;AACpB;AACA,gBAAe,KAAK;AACpB;AACA;;AAEA,cAAa,KAAK;AAClB;AACA;AACA;;AAEA,aAAY,KAAK;AACjB;AACA;AACA;;AAEA,cAAa,KAAK;AAClB;AACA;AACA;;AAEA,aAAY,KAAK;AACjB;AACA;AACA;;AAEA,cAAa,KAAK;AAClB;AACA;AACA;;AAEA,aAAY,KAAK;AACjB;AACA;AACA;;AAEA,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,IAAI;AACf,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;;;;;;ACjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC,YAAW,IAAI,wBAAwB;AACvC,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3GA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,iDAAgD,QAAQ;AACxD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjcAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,EAAE,YAAY,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA,aAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,sBAAsB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,yBAAwB,KAAK,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAgD,0BAA0B;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA0F,UAAU;AACpG;AACA,mFAAkF,WAAW;AAC7F;AACA,6FAA4F,WAAW;AACvG;AACA;AACA;AACA,6FAA4F,WAAW;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA,aAAY;AACZ,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,oBAAmB;AACnaAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,6EAA6E;AACpG;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA,2DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,iBAAgB,4EAA4E;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,WAAW;AAC3B;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,YAAY;AAC5B;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA,gBAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,qCAAqC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA;AACA,cAAa;AACbqBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,eAAecAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,cAAa;AACb,8CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,+BAA8B,+BAA+B;AAC7D,cAAa;AACb,+BAA8B,8BAA8B;AAC5D,cAAa;AACb,+BAA8B,uBAAuB;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACbwBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,yCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,UAAU;AACtC;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,qCAAoC,QAAQ;AAC5C;AACA;AACA,gDAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,asBAAqB;AACrB;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ,SAAQ;AACR;AACA,sBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,QAAQ;AACrD;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6IAA4I,MAAM,WAAW,OAAO,YAAY,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,GAAG,SAAS;AACnN;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,OAAO;AAC9B,4BAA2B,OAAO;AAClC;AACA,gCAA+B,OAAO;AACtcAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,SAAS;AAC/B,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,oBAAmB,SAAS;AAC5B,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,qCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,uBAAuB;AACpD,kBAAiB;AACjB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,kBAAkB;AACzD;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,8CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjcAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACboDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gqBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,uBAAuB;AAC1D,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,2BAA2B;AAC3C;AACA;AACA,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA,wBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,uCAAsC,WAAW;AACjmDAAkD;AAClD;AACA,8CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,aAAa;AAC7B,iBAAgB,aAAa;AAC7B,qBAAoB,aAAa;AACjC,mBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA,wBAAuB,YAAY;AACnC;AACA,yBAAwB,0BAA0B;AAClD;AACA,oBAAmB,YAAY;AAC/B;AACA,yBAAwB,0BAA0B;AAClD;AACA,oBAAmB,QAAQ;AAC3B,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,mDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,8DAA6D,QAAQ;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACbmDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,QAAQ;AAC/D;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,gDAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,QAAQ;AAC3D;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb,gDAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,6CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,iBAAgB,yDAAyD;AACzE,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,yDAAyD;AAC9E,uBAAsB,yDAAyD;AAC/E;AACA;AACA;AACA;AACA;AACA,+BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD,iDAAgD;AAChD,iDAAgD;AAChD;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD,mDAAkD;AAClD,mDAAkD;AAClD;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,uBAAsB;AACtB,mEAAkE,QAAQ;AAC1E,wCAAuC;;AAEvC;AACA;AACA,oCAAmC;AACnC,8CAA6C;AAC7C;AACA,mDAAkD;;AAElD,oEAAmE;AACnE;AACA;;AAEA,0BAAyB;;AAEzB,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C,mBAAmB;AAC7D;AACA,0BAAyB,+BAA+B;AACxD,0BAAyB,+BAA+B;AACxD,0BAAyB,+BAA+B;AACxD,0BAAyB;AACzB;AACA;AACA;AACA,6BAA4B;AAC5B,kBAAiB;AACjB,6BAA4B;AAC5B,kBAAiB;AACjB,6BAA4B;AAC5B,6BAA4B;AAC5B;AACA,cAAa;AACb;AACA;AACA,kBAAiB;AACjB,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAutD;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,MAAM;AAC1B;AACA;AACA,sBAAqB,MAAM,uBAAuB,MAAM;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,gDAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA;AACA,eAAc,yBAAyB;AACvC;AACA;AACA;AACA,oBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,kCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,QAAQ;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA,6CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,QAAQ;AACjD,iDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oFAAmF,QAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB,6DAA4D,QAAQ;AACpE;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,+EAA+E;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,iCAAiC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,gCAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,IAAI;AAChE;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,KAAK,kBAAkB,GAAG,OAAO,GAAG,8CAA8C,MAAM,oGAAoG,QAAQ;AAChR;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE,OAAO;AAC3E;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE,MAAM;AAC3E;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAqF,OAAO,EAAE,QAAQ,uCAAuC,OAAO,EAAE,QAAQ,uCAAuC,OAAO,EAAE,QAAQ;AACtN;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAgF,OAAO,kCAAkC,OAAO,kCAAkC,OAAO;AACzK;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAgF,OAAO,cAAc,QAAQ,kCAAkC,OAAO,cAAc,QAAQ,kCAAkC,OAAO,cAAc,QAAQ;AAC3O;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;ACnjPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA,UAAS;AACT;AACA;AACA,mBAAkB,MAAM;AACxB;AACA,8CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,QAAQ;AAC9C;AACA,wCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA,mDAAkD,QAAQ;AAC1D;AACA,sFAAqF,MAAM;AAC3F;AACA;AACA,6CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA,+CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,QAAQ;AAC9C,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA,qDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,QAAQ;AAC9D;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4KAA6J,YAA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","file":"d978b80bf9258b2bc773.worker.js","sourcesContent":[" \t// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js\r\n \tvar canDefineProperty = false;\r\n \ttry {\r\n \t\tObject.defineProperty({}, \"x\", {\r\n \t\t\tget: function() {}\r\n \t\t});\r\n \t\tcanDefineProperty = true;\r\n \t} catch(x) {\r\n \t\t// IE will fail on defineProperty\r\n \t}\r\n \t\r\n \tvar hotApplyOnUpdate = true;\r\n \tvar hotCurrentHash = \"d978b80bf9258b2bc773\"; // eslint-disable-line no-unused-vars\r\n \tvar hotCurrentModuleData = {};\r\n \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\r\n \t\r\n \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar me = installedModules[moduleId];\r\n \t\tif(!me) return __webpack_require__;\r\n \t\tvar fn = function(request) {\r\n \t\t\tif(me.hot.active) {\r\n \t\t\t\tif(installedModules[request]) {\r\n \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\r\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\r\n \t\t\t\t\tif(me.children.indexOf(request) < 0)\r\n \t\t\t\t\t\tme.children.push(request);\r\n \t\t\t\t} else hotCurrentParents = [moduleId];\r\n \t\t\t} else {\r\n \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\r\n \t\t\t\thotCurrentParents = [];\r\n \t\t\t}\r\n \t\t\treturn __webpack_require__(request);\r\n \t\t};\r\n \t\tfor(var name in __webpack_require__) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {\r\n \t\t\t\tif(canDefineProperty) {\r\n \t\t\t\t\tObject.defineProperty(fn, name, (function(name) {\r\n \t\t\t\t\t\treturn {\r\n \t\t\t\t\t\t\tconfigurable: true,\r\n \t\t\t\t\t\t\tenumerable: true,\r\n \t\t\t\t\t\t\tget: function() {\r\n \t\t\t\t\t\t\t\treturn __webpack_require__[name];\r\n \t\t\t\t\t\t\t},\r\n \t\t\t\t\t\t\tset: function(value) {\r\n \t\t\t\t\t\t\t\t__webpack_require__[name] = value;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t};\r\n \t\t\t\t\t}(name)));\r\n \t\t\t\t} else {\r\n \t\t\t\t\tfn[name] = __webpack_require__[name];\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\tfunction ensure(chunkId, callback) {\r\n \t\t\tif(hotStatus === \"ready\")\r\n \t\t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotChunksLoading++;\r\n \t\t\t__webpack_require__.e(chunkId, function() {\r\n \t\t\t\ttry {\r\n \t\t\t\t\tcallback.call(null, fn);\r\n \t\t\t\t} finally {\r\n \t\t\t\t\tfinishChunkLoading();\r\n \t\t\t\t}\r\n \t\r\n \t\t\t\tfunction finishChunkLoading() {\r\n \t\t\t\t\thotChunksLoading--;\r\n \t\t\t\t\tif(hotStatus === \"prepare\") {\r\n \t\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\r\n \t\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\t\t\t\thotUpdateDownloaded();\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t});\r\n \t\t}\r\n \t\tif(canDefineProperty) {\r\n \t\t\tObject.defineProperty(fn, \"e\", {\r\n \t\t\t\tenumerable: true,\r\n \t\t\t\tvalue: ensure\r\n \t\t\t});\r\n \t\t} else {\r\n \t\t\tfn.e = ensure;\r\n \t\t}\r\n \t\treturn fn;\r\n \t}\r\n \t\r\n \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar hot = {\r\n \t\t\t// private stuff\r\n \t\t\t_acceptedDependencies: {},\r\n \t\t\t_declinedDependencies: {},\r\n \t\t\t_selfAccepted: false,\r\n \t\t\t_selfDeclined: false,\r\n \t\t\t_disposeHandlers: [],\r\n \t\r\n \t\t\t// Module API\r\n \t\t\tactive: true,\r\n \t\t\taccept: function(dep, callback) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfAccepted = true;\r\n \t\t\t\telse if(typeof dep === \"function\")\r\n \t\t\t\t\thot._selfAccepted = dep;\r\n \t\t\t\telse if(typeof dep === \"object\")\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback;\r\n \t\t\t\telse\r\n \t\t\t\t\thot._acceptedDependencies[dep] = callback;\r\n \t\t\t},\r\n \t\t\tdecline: function(dep) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfDeclined = true;\r\n \t\t\t\telse if(typeof dep === \"number\")\r\n \t\t\t\t\thot._declinedDependencies[dep] = true;\r\n \t\t\t\telse\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\r\n \t\t\t},\r\n \t\t\tdispose: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\taddDisposeHandler: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\tremoveDisposeHandler: function(callback) {\r\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\r\n \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t// Management API\r\n \t\t\tcheck: hotCheck,\r\n \t\t\tapply: hotApply,\r\n \t\t\tstatus: function(l) {\r\n \t\t\t\tif(!l) return hotStatus;\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\taddStatusHandler: function(l) {\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\tremoveStatusHandler: function(l) {\r\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\r\n \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t//inherit from previous dispose call\r\n \t\t\tdata: hotCurrentModuleData[moduleId]\r\n \t\t};\r\n \t\treturn hot;\r\n \t}\r\n \t\r\n \tvar hotStatusHandlers = [];\r\n \tvar hotStatus = \"idle\";\r\n \t\r\n \tfunction hotSetStatus(newStatus) {\r\n \t\thotStatus = newStatus;\r\n \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\r\n \t\t\thotStatusHandlers[i].call(null, newStatus);\r\n \t}\r\n \t\r\n \t// while downloading\r\n \tvar hotWaitingFiles = 0;\r\n \tvar hotChunksLoading = 0;\r\n \tvar hotWaitingFilesMap = {};\r\n \tvar hotRequestedFilesMap = {};\r\n \tvar hotAvailibleFilesMap = {};\r\n \tvar hotCallback;\r\n \t\r\n \t// The update info\r\n \tvar hotUpdate, hotUpdateNewHash;\r\n \t\r\n \tfunction toModuleId(id) {\r\n \t\tvar isNumber = (+id) + \"\" === id;\r\n \t\treturn isNumber ? +id : id;\r\n \t}\r\n \t\r\n \tfunction hotCheck(apply, callback) {\r\n \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\r\n \t\tif(typeof apply === \"function\") {\r\n \t\t\thotApplyOnUpdate = false;\r\n \t\t\tcallback = apply;\r\n \t\t} else {\r\n \t\t\thotApplyOnUpdate = apply;\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\thotSetStatus(\"check\");\r\n \t\thotDownloadManifest(function(err, update) {\r\n \t\t\tif(err) return callback(err);\r\n \t\t\tif(!update) {\r\n \t\t\t\thotSetStatus(\"idle\");\r\n \t\t\t\tcallback(null, null);\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n \t\r\n \t\t\thotRequestedFilesMap = {};\r\n \t\t\thotAvailibleFilesMap = {};\r\n \t\t\thotWaitingFilesMap = {};\r\n \t\t\tfor(var i = 0; i < update.c.length; i++)\r\n \t\t\t\thotAvailibleFilesMap[update.c[i]] = true;\r\n \t\t\thotUpdateNewHash = update.h;\r\n \t\r\n \t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotCallback = callback;\r\n \t\t\thotUpdate = {};\r\n \t\t\tvar chunkId = 0;\r\n \t\t\t{ // eslint-disable-line no-lone-blocks\r\n \t\t\t\t/*globals chunkId */\r\n \t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t}\r\n \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\thotUpdateDownloaded();\r\n \t\t\t}\r\n \t\t});\r\n \t}\r\n \t\r\n \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n \t\tif(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\r\n \t\t\treturn;\r\n \t\thotRequestedFilesMap[chunkId] = false;\r\n \t\tfor(var moduleId in moreModules) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\r\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\r\n \t\t\thotUpdateDownloaded();\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotEnsureUpdateChunk(chunkId) {\r\n \t\tif(!hotAvailibleFilesMap[chunkId]) {\r\n \t\t\thotWaitingFilesMap[chunkId] = true;\r\n \t\t} else {\r\n \t\t\thotRequestedFilesMap[chunkId] = true;\r\n \t\t\thotWaitingFiles++;\r\n \t\t\thotDownloadUpdateChunk(chunkId);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotUpdateDownloaded() {\r\n \t\thotSetStatus(\"ready\");\r\n \t\tvar callback = hotCallback;\r\n \t\thotCallback = null;\r\n \t\tif(!callback) return;\r\n \t\tif(hotApplyOnUpdate) {\r\n \t\t\thotApply(hotApplyOnUpdate, callback);\r\n \t\t} else {\r\n \t\t\tvar outdatedModules = [];\r\n \t\t\tfor(var id in hotUpdate) {\r\n \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tcallback(null, outdatedModules);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotApply(options, callback) {\r\n \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\r\n \t\tif(typeof options === \"function\") {\r\n \t\t\tcallback = options;\r\n \t\t\toptions = {};\r\n \t\t} else if(options && typeof options === \"object\") {\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t} else {\r\n \t\t\toptions = {};\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\r\n \t\tfunction getAffectedStuff(module) {\r\n \t\t\tvar outdatedModules = [module];\r\n \t\t\tvar outdatedDependencies = {};\r\n \t\r\n \t\t\tvar queue = outdatedModules.slice();\r\n \t\t\twhile(queue.length > 0) {\r\n \t\t\t\tvar moduleId = queue.pop();\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tif(!module || module.hot._selfAccepted)\r\n \t\t\t\t\tcontinue;\r\n \t\t\t\tif(module.hot._selfDeclined) {\r\n \t\t\t\t\treturn new Error(\"Aborted because of self decline: \" + moduleId);\r\n \t\t\t\t}\r\n \t\t\t\tif(moduleId === 0) {\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\r\n \t\t\t\t\tvar parentId = module.parents[i];\r\n \t\t\t\t\tvar parent = installedModules[parentId];\r\n \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\r\n \t\t\t\t\t\treturn new Error(\"Aborted because of declined dependency: \" + moduleId + \" in \" + parentId);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\r\n \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[parentId])\r\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tdelete outdatedDependencies[parentId];\r\n \t\t\t\t\toutdatedModules.push(parentId);\r\n \t\t\t\t\tqueue.push(parentId);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\r\n \t\t\treturn [outdatedModules, outdatedDependencies];\r\n \t\t}\r\n \t\r\n \t\tfunction addAllToSet(a, b) {\r\n \t\t\tfor(var i = 0; i < b.length; i++) {\r\n \t\t\t\tvar item = b[i];\r\n \t\t\t\tif(a.indexOf(item) < 0)\r\n \t\t\t\t\ta.push(item);\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// at begin all updates modules are outdated\r\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\r\n \t\tvar outdatedDependencies = {};\r\n \t\tvar outdatedModules = [];\r\n \t\tvar appliedUpdate = {};\r\n \t\tfor(var id in hotUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\tvar moduleId = toModuleId(id);\r\n \t\t\t\tvar result = getAffectedStuff(moduleId);\r\n \t\t\t\tif(!result) {\r\n \t\t\t\t\tif(options.ignoreUnaccepted)\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(new Error(\"Aborted because \" + moduleId + \" is not accepted\"));\r\n \t\t\t\t}\r\n \t\t\t\tif(result instanceof Error) {\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(result);\r\n \t\t\t\t}\r\n \t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\r\n \t\t\t\taddAllToSet(outdatedModules, result[0]);\r\n \t\t\t\tfor(var moduleId in result[1]) {\r\n \t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[moduleId])\r\n \t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Store self accepted outdated modules to require them later by the module system\r\n \t\tvar outdatedSelfAcceptedModules = [];\r\n \t\tfor(var i = 0; i < outdatedModules.length; i++) {\r\n \t\t\tvar moduleId = outdatedModules[i];\r\n \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\r\n \t\t\t\toutdatedSelfAcceptedModules.push({\r\n \t\t\t\t\tmodule: moduleId,\r\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\r\n \t\t\t\t});\r\n \t\t}\r\n \t\r\n \t\t// Now in \"dispose\" phase\r\n \t\thotSetStatus(\"dispose\");\r\n \t\tvar queue = outdatedModules.slice();\r\n \t\twhile(queue.length > 0) {\r\n \t\t\tvar moduleId = queue.pop();\r\n \t\t\tvar module = installedModules[moduleId];\r\n \t\t\tif(!module) continue;\r\n \t\r\n \t\t\tvar data = {};\r\n \t\r\n \t\t\t// Call dispose handlers\r\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\r\n \t\t\tfor(var j = 0; j < disposeHandlers.length; j++) {\r\n \t\t\t\tvar cb = disposeHandlers[j];\r\n \t\t\t\tcb(data);\r\n \t\t\t}\r\n \t\t\thotCurrentModuleData[moduleId] = data;\r\n \t\r\n \t\t\t// disable module (this disables requires from this module)\r\n \t\t\tmodule.hot.active = false;\r\n \t\r\n \t\t\t// remove module from cache\r\n \t\t\tdelete installedModules[moduleId];\r\n \t\r\n \t\t\t// remove \"parents\" references from all children\r\n \t\t\tfor(var j = 0; j < module.children.length; j++) {\r\n \t\t\t\tvar child = installedModules[module.children[j]];\r\n \t\t\t\tif(!child) continue;\r\n \t\t\t\tvar idx = child.parents.indexOf(moduleId);\r\n \t\t\t\tif(idx >= 0) {\r\n \t\t\t\t\tchild.parents.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// remove outdated dependency from module children\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tfor(var j = 0; j < moduleOutdatedDependencies.length; j++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\r\n \t\t\t\t\tvar idx = module.children.indexOf(dependency);\r\n \t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Not in \"apply\" phase\r\n \t\thotSetStatus(\"apply\");\r\n \t\r\n \t\thotCurrentHash = hotUpdateNewHash;\r\n \t\r\n \t\t// insert new code\r\n \t\tfor(var moduleId in appliedUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\r\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// call accept handlers\r\n \t\tvar error = null;\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tvar callbacks = [];\r\n \t\t\t\tfor(var i = 0; i < moduleOutdatedDependencies.length; i++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[i];\r\n \t\t\t\t\tvar cb = module.hot._acceptedDependencies[dependency];\r\n \t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\r\n \t\t\t\t\tcallbacks.push(cb);\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < callbacks.length; i++) {\r\n \t\t\t\t\tvar cb = callbacks[i];\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\tcb(outdatedDependencies);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Load self accepted modules\r\n \t\tfor(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {\r\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\r\n \t\t\tvar moduleId = item.module;\r\n \t\t\thotCurrentParents = [moduleId];\r\n \t\t\ttry {\r\n \t\t\t\t__webpack_require__(moduleId);\r\n \t\t\t} catch(err) {\r\n \t\t\t\tif(typeof item.errorHandler === \"function\") {\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\titem.errorHandler(err);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t} else if(!error)\r\n \t\t\t\t\terror = err;\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// handle errors in accept handlers and self accepted module load\r\n \t\tif(error) {\r\n \t\t\thotSetStatus(\"fail\");\r\n \t\t\treturn callback(error);\r\n \t\t}\r\n \t\r\n \t\thotSetStatus(\"idle\");\r\n \t\tcallback(null, outdatedModules);\r\n \t}\r\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false,\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: hotCurrentParents,\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d978b80bf9258b2bc773","import { getMillGcodeFromOp } from '../cam-gcode-mill'\r\n\r\nonmessage = (event) => {\r\n\r\n    const {settings, opIndex, op, geometry=[], openGeometry=[], tabGeometry=[]} = event.data\r\n    const errors = [];\r\n\r\n    const showAlert = (message, level) => {\r\n        errors.push({ message, level })\r\n    };\r\n    const progress = () => {\r\n        postMessage(JSON.stringify({ event: \"onProgress\", gcode, errors }))\r\n    };\r\n    const done = (gcode) => {\r\n        if (gcode === false && errors.length) {\r\n            postMessage(JSON.stringify({ event: \"onError\", errors }))\r\n        } else {\r\n            postMessage(JSON.stringify({ event: \"onDone\", gcode }))\r\n        }\r\n    };\r\n\r\n    getMillGcodeFromOp.apply(this, [settings, opIndex, op, geometry, openGeometry, tabGeometry, showAlert, done, progress])\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/workers/cam-mill.js","// Copyright 2014, 2016 Todd Fleming\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n'use strict';\r\n\r\nimport { dist, cut, insideOutside, pocket, reduceCamPaths, separateTabs, vCarve } from './cam';\r\nimport { mmToClipperScale, offset, rawPathsToClipperPaths, union } from './mesh';\r\n\r\n// Convert mill paths to gcode.\r\n//      paths:          Array of CamPath\r\n//      ramp:           Ramp these paths?\r\n//      scale:          Factor to convert Clipper units to gcode units\r\n//      useZ:           Use Z coordinates in paths? (defaults to false, used for vPocket)\r\n//      offsetX:        Offset X (gcode units)\r\n//      offsetY:        Offset Y (gcode units)\r\n//      decimal:        Number of decimal places to keep in gcode\r\n//      topZ:           Top of area to cut (gcode units)\r\n//      botZ:           Bottom of area to cut (gcode units)\r\n//      safeZ:          Z position to safely move over uncut areas (gcode units)\r\n//      passDepth:      Cut depth for each pass (gcode units)\r\n//      plungeFeed:     Feedrate to plunge cutter (gcode units)\r\n//      cutFeed:        Feedrate for horizontal cuts (gcode units)\r\n//      tabGeometry:    Tab geometry (optional)\r\n//      tabZ:           Z position over tabs (required if tabGeometry is not empty) (gcode units)\r\nexport function getMillGcode(props) {\r\n    let { paths, ramp, scale, useZ, offsetX, offsetY, decimal, topZ, botZ, safeZ, passDepth,\r\n        plungeFeed, cutFeed, tabGeometry, tabZ, toolSpeed } = props;\r\n\r\n    let plungeFeedGcode = ' F' + plungeFeed;\r\n    let cutFeedGcode = ' F' + cutFeed;\r\n\r\n    if (useZ === undefined)\r\n        useZ = false;\r\n\r\n    if (tabGeometry === undefined || tabZ <= botZ) {\r\n        tabGeometry = [];\r\n        tabZ = botZ;\r\n    }\r\n\r\n    let retractGcode =\r\n        '; Retract\\r\\n' +\r\n        'G0 Z' + safeZ.toFixed(decimal) + '\\r\\n';\r\n\r\n    let retractForTabGcode =\r\n        '; Retract for tab\\r\\n' +\r\n        'G0 Z' + tabZ.toFixed(decimal) + '\\r\\n';\r\n\r\n    let gcode = retractGcode;\r\n\r\n    function getX(p) {\r\n        return p.X * scale + offsetX;\r\n    }\r\n\r\n    function getY(p) {\r\n        return p.Y * scale + offsetY;\r\n    }\r\n\r\n    function convertPoint(p, useZ) {\r\n        let result = ' X' + (p.X * scale + offsetX).toFixed(decimal) + ' Y' + (p.Y * scale + offsetY).toFixed(decimal);\r\n        if (useZ)\r\n            result += ' Z' + (p.Z * scale + topZ).toFixed(decimal);\r\n        return result;\r\n    }\r\n\r\n    for (let pathIndex = 0; pathIndex < paths.length; ++pathIndex) {\r\n        let path = paths[pathIndex];\r\n        let origPath = path.path;\r\n        if (origPath.length === 0)\r\n            continue;\r\n        let separatedPaths = separateTabs(origPath, tabGeometry);\r\n\r\n        gcode +=\r\n            '\\r\\n' +\r\n            '; Path ' + pathIndex + '\\r\\n';\r\n\r\n        let currentZ = safeZ;\r\n        let finishedZ = topZ;\r\n        while (finishedZ > botZ || useZ) {\r\n            let nextZ = Math.max(finishedZ - passDepth, botZ);\r\n            if (currentZ < safeZ && (!path.safeToClose || tabGeometry.length > 0)) {\r\n                gcode += retractGcode;\r\n                currentZ = safeZ;\r\n            }\r\n\r\n            if (tabGeometry.length === 0)\r\n                currentZ = finishedZ;\r\n            else\r\n                currentZ = Math.max(finishedZ, tabZ);\r\n            gcode +=\r\n                '; Rapid to initial position\\r\\n' +\r\n                'G0' + convertPoint(origPath[0], false) + '\\r\\n' +\r\n                'G0 Z' + currentZ.toFixed(decimal) + '\\r\\n';\r\n\r\n            let selectedPaths;\r\n            if (nextZ >= tabZ || useZ)\r\n                selectedPaths = [origPath];\r\n            else\r\n                selectedPaths = separatedPaths;\r\n\r\n            for (let selectedIndex = 0; selectedIndex < selectedPaths.length; ++selectedIndex) {\r\n                let selectedPath = selectedPaths[selectedIndex];\r\n                if (selectedPath.length === 0)\r\n                    continue;\r\n\r\n                if (!useZ) {\r\n                    let selectedZ;\r\n                    if (selectedIndex & 1)\r\n                        selectedZ = tabZ;\r\n                    else\r\n                        selectedZ = nextZ;\r\n\r\n                    if (selectedZ < currentZ) {\r\n                        let executedRamp = false;\r\n                        if (ramp) {\r\n                            let minPlungeTime = (currentZ - selectedZ) / plungeFeed;\r\n                            let idealDist = cutFeed * minPlungeTime;\r\n                            let end;\r\n                            let totalDist = 0;\r\n                            for (end = 1; end < selectedPath.length; ++end) {\r\n                                if (totalDist > idealDist)\r\n                                    break;\r\n                                totalDist += 2 * dist(getX(selectedPath[end - 1]), getY(selectedPath[end - 1]), getX(selectedPath[end]), getY(selectedPath[end]));\r\n                            }\r\n                            if (totalDist > 0) {\r\n                                gcode += '; ramp\\r\\n'\r\n                                executedRamp = true;\r\n                                let rampPath = selectedPath.slice(0, end).concat(selectedPath.slice(0, end - 1).reverse());\r\n                                let distTravelled = 0;\r\n                                for (let i = 1; i < rampPath.length; ++i) {\r\n                                    distTravelled += dist(getX(rampPath[i - 1]), getY(rampPath[i - 1]), getX(rampPath[i]), getY(rampPath[i]));\r\n                                    let newZ = currentZ + distTravelled / totalDist * (selectedZ - currentZ);\r\n                                    gcode += 'G1' + convertPoint(rampPath[i], false) + ' Z' + newZ.toFixed(decimal);\r\n                                    if (i === 1) {\r\n                                        gcode += ' F' + Math.min(totalDist / minPlungeTime, cutFeed).toFixed(decimal)\r\n                                        if (toolSpeed) gcode += ' S' + toolSpeed;\r\n                                    }\r\n                                    gcode += '\\r\\n';\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!executedRamp)\r\n                            gcode +=\r\n                                '; plunge\\r\\n' +\r\n                                'G1 Z' + selectedZ.toFixed(decimal) + plungeFeedGcode\r\n                        if (toolSpeed) gcode += ' S' + toolSpeed;\r\n                        gcode += '\\r\\n';\r\n                    } else if (selectedZ > currentZ) {\r\n                        gcode += retractForTabGcode;\r\n                    }\r\n                    currentZ = selectedZ;\r\n                } // !useZ\r\n\r\n                gcode += '; cut\\r\\n';\r\n\r\n                for (let i = 1; i < selectedPath.length; ++i) {\r\n                    gcode += 'G1' + convertPoint(selectedPath[i], useZ);\r\n                    if (i === 1) {\r\n                        gcode += cutFeedGcode\r\n                        if (toolSpeed) gcode += ' S' + toolSpeed;\r\n                    }\r\n                    gcode += '\\r\\n';\r\n                }\r\n            } // selectedIndex\r\n            finishedZ = nextZ;\r\n            if (useZ)\r\n                break;\r\n        } // while (finishedZ > botZ)\r\n        gcode += retractGcode;\r\n    } // pathIndex\r\n\r\n    return gcode;\r\n}; // getMillGcode\r\n\r\nexport function getMillGcodeFromOp(settings, opIndex, op, geometry, openGeometry, tabGeometry, showAlert, done, progress) {\r\n    let ok = true;\r\n    if (op.passDepth <= 0) {\r\n        showAlert(\"Pass Depth must be greater than 0\", \"danger\");\r\n        ok = false;\r\n    }\r\n    if (op.type === 'Mill V Carve') {\r\n        if (op.toolAngle <= 0 || op.toolAngle >= 180) {\r\n            showAlert(\"Tool Angle must be in range (0, 180)\", \"danger\");\r\n            ok = false;\r\n        }\r\n    } else {\r\n        if (op.cutDepth <= 0) {\r\n            showAlert(\"Final Cut Depth must be greater than 0\", \"danger\");\r\n            ok = false;\r\n        }\r\n        if (op.type !== 'Mill Cut' && op.toolDiameter <= 0) {\r\n            showAlert(\"Tool Diameter must be greater than 0\", \"danger\");\r\n            ok = false;\r\n        }\r\n        if (op.stepOver <= 0 || op.stepOver > 100) {\r\n            showAlert(\"Step Over must be in range 0-100%\", \"danger\");\r\n            ok = false;\r\n        }\r\n    }\r\n    if (op.plungeRate <= 0) {\r\n        showAlert(\"Plunge Rate must be greater than 0\", \"danger\");\r\n        ok = false;\r\n    }\r\n    if (op.cutRate <= 0) {\r\n        showAlert(\"Cut Rate must be greater than 0\", \"danger\");\r\n        ok = false;\r\n    }\r\n    if (!ok)\r\n        done(false);\r\n\r\n    if (tabGeometry && op.toolDiameter > 0)\r\n        tabGeometry = offset(tabGeometry, op.toolDiameter / 2 * mmToClipperScale);\r\n\r\n    let camPaths = [];\r\n    if (op.type === 'Mill Pocket') {\r\n        if (op.margin)\r\n            geometry = offset(geometry, -op.margin * mmToClipperScale);\r\n        camPaths = pocket(geometry, op.toolDiameter * mmToClipperScale, op.stepOver, op.direction === 'Climb');\r\n    } else if (op.type === 'Mill Cut') {\r\n        camPaths = cut(geometry, openGeometry, op.direction === 'Climb');\r\n    } else if (op.type === 'Mill Cut Inside') {\r\n        if (op.margin)\r\n            geometry = offset(geometry, -op.margin * mmToClipperScale);\r\n        camPaths = insideOutside(geometry, op.toolDiameter * mmToClipperScale, true, op.cutWidth * mmToClipperScale, op.stepOver, op.direction === 'Climb', true);\r\n    } else if (op.type === 'Mill Cut Outside') {\r\n        if (op.margin)\r\n            geometry = offset(geometry, op.margin * mmToClipperScale);\r\n        camPaths = insideOutside(geometry, op.toolDiameter * mmToClipperScale, false, op.cutWidth * mmToClipperScale, op.stepOver, op.direction === 'Climb', true);\r\n    } else if (op.type === 'Mill V Carve') {\r\n        camPaths = vCarve(geometry, op.toolAngle, op.passDepth * mmToClipperScale);\r\n    }\r\n\r\n    for (let camPath of camPaths) {\r\n        let path = camPath.path;\r\n        for (let point of path) {\r\n            point.X = Math.round(point.X / mmToClipperScale * 1000) * mmToClipperScale / 1000;\r\n            point.Y = Math.round(point.Y / mmToClipperScale * 1000) * mmToClipperScale / 1000;\r\n        }\r\n    }\r\n    reduceCamPaths(camPaths, op.segmentLength * mmToClipperScale);\r\n\r\n    let feedScale = 1;\r\n    if (settings.toolFeedUnits === 'mm/s')\r\n        feedScale = 60;\r\n\r\n    let gcode =\r\n        \"\\r\\n;\" +\r\n        \"\\r\\n; Operation:    \" + opIndex +\r\n        \"\\r\\n; Type:         \" + op.type +\r\n        \"\\r\\n; Paths:        \" + camPaths.length +\r\n        \"\\r\\n; Direction:    \" + op.direction +\r\n        \"\\r\\n; Cut Depth:    \" + op.cutDepth +\r\n        \"\\r\\n; Pass Depth:   \" + op.passDepth +\r\n        \"\\r\\n; clearance:    \" + op.clearance +\r\n        \"\\r\\n; Plunge rate:  \" + op.plungeRate + ' ' + settings.toolFeedUnits +\r\n        \"\\r\\n; Cut rate:     \" + op.cutRate + ' ' + settings.toolFeedUnits +\r\n        \"\\r\\n;\\r\\n\";\r\n\r\n    if (op.hookOperationStart.length) gcode += op.hookOperationStart;\r\n\r\n    gcode += getMillGcode({\r\n        paths: camPaths,\r\n        ramp: op.ramp,\r\n        scale: 1 / mmToClipperScale,\r\n        useZ: op.type === 'Mill V Carve',\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        decimal: 3,\r\n        topZ: 0,\r\n        botZ: -op.cutDepth,\r\n        safeZ: +op.clearance,\r\n        passDepth: op.passDepth,\r\n        plungeFeed: op.plungeRate * feedScale,\r\n        cutFeed: op.cutRate * feedScale,\r\n        tabGeometry: op.type === 'Mill V Carve' ? [] : tabGeometry,\r\n        tabZ: -op.tabDepth,\r\n        toolSpeed: op.toolSpeed\r\n    });\r\n\r\n    if (op.hookOperationEnd.length) gcode += op.hookOperationEnd;\r\n\r\n    done(gcode)\r\n\r\n} // getMillGcodeFromOp\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cam-gcode-mill.js","// Copyright 2014, 2016 Todd Fleming\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n'use strict';\r\n\r\nimport ClipperLib from 'clipper-lib';\r\nimport { mat3, vec2 } from 'gl-matrix';\r\n\r\nimport { diff, offset, cPathsToClipperPaths, cPathsToCamPaths, clipperBounds, clipperPathsToCPaths, clipperToCppScale } from './mesh';\r\n\r\nrequire('script!web-cam-cpp');\r\n\r\nexport function dist(x1, y1, x2, y2) {\r\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n}\r\n\r\n// Does the line from p1 to p2 cross outside of bounds?\r\nfunction crosses(bounds, p1, p2) {\r\n    if (bounds === null)\r\n        return true;\r\n    if (p1.X === p2.X && p1.Y === p2.Y)\r\n        return false;\r\n    let clipper = new ClipperLib.Clipper();\r\n    clipper.AddPath([p1, p2], ClipperLib.PolyType.ptSubject, false);\r\n    clipper.AddPaths(bounds, ClipperLib.PolyType.ptClip, true);\r\n    let result = new ClipperLib.PolyTree();\r\n    clipper.Execute(ClipperLib.ClipType.ctIntersection, result, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\r\n    if (result.ChildCount() === 1) {\r\n        let child = result.Childs()[0];\r\n        let points = child.Contour();\r\n        if (points.length === 2) {\r\n            if (points[0].X === p1.X && points[1].X === p2.X && points[0].Y === p1.Y && points[1].Y === p2.Y)\r\n                return false;\r\n            if (points[0].X === p2.X && points[1].X === p1.X && points[0].Y === p2.Y && points[1].Y === p1.Y)\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction pathIsClosed(clipperPath) {\r\n    return (\r\n        clipperPath.length >= 2 &&\r\n        clipperPath[0].X === clipperPath[clipperPath.length - 1].X &&\r\n        clipperPath[0].Y === clipperPath[clipperPath.length - 1].Y);\r\n}\r\n\r\n// Close all paths\r\nfunction closeClipperPaths(paths) {\r\n    for (let path of paths)\r\n        path.push(path[0]);\r\n}\r\n\r\n// CamPath has this format: {\r\n//      path:               Clipper path\r\n//      safeToClose:        Is it safe to close the path without retracting?\r\n// }\r\n\r\n// Try to merge paths. A merged path doesn't cross outside of bounds. Returns array of CamPath.\r\n// If paths contains both open and closed paths, then the closed paths must be before the open\r\n// paths within the array.\r\nfunction mergePaths(bounds, paths) {\r\n    if (paths.length === 0)\r\n        return [];\r\n\r\n    let currentPath = paths[0];\r\n    if (pathIsClosed(currentPath))\r\n        currentPath.push(currentPath[0]);\r\n    let currentPoint = currentPath[currentPath.length - 1];\r\n    paths[0] = [];\r\n\r\n    let mergedPaths = [];\r\n    let numLeft = paths.length - 1;\r\n    while (numLeft > 0) {\r\n        let closestPathIndex = null;\r\n        let closestPointIndex = null;\r\n        let closestPointDist = null;\r\n        let closestReverse = false;\r\n        for (let pathIndex = 0; pathIndex < paths.length; ++pathIndex) {\r\n            let path = paths[pathIndex];\r\n            function check(pointIndex) {\r\n                let point = path[pointIndex];\r\n                let dist = (currentPoint.X - point.X) * (currentPoint.X - point.X) + (currentPoint.Y - point.Y) * (currentPoint.Y - point.Y);\r\n                if (closestPointDist === null || dist < closestPointDist) {\r\n                    closestPathIndex = pathIndex;\r\n                    closestPointIndex = pointIndex;\r\n                    closestPointDist = dist;\r\n                    closestReverse = false;\r\n                    return true;\r\n                }\r\n                else\r\n                    return false;\r\n            }\r\n            if (pathIsClosed(path)) {\r\n                for (let pointIndex = 0; pointIndex < path.length; ++pointIndex)\r\n                    check(pointIndex);\r\n            } else if (path.length) {\r\n                check(0);\r\n                if (check(path.length - 1))\r\n                    closestReverse = true;\r\n            }\r\n        }\r\n\r\n        let path = paths[closestPathIndex];\r\n        paths[closestPathIndex] = [];\r\n        numLeft -= 1;\r\n        let needNew;\r\n        if (pathIsClosed(path)) {\r\n            needNew = crosses(bounds, currentPoint, path[closestPointIndex]);\r\n            path = path.slice(closestPointIndex, path.length).concat(path.slice(1, closestPointIndex));\r\n            path.push(path[0]);\r\n        } else {\r\n            needNew = true;\r\n            if (closestReverse) {\r\n                path = path.slice();\r\n                path.reverse();\r\n            }\r\n        }\r\n        if (needNew) {\r\n            mergedPaths.push(currentPath);\r\n            currentPath = path;\r\n            currentPoint = currentPath[currentPath.length - 1];\r\n        }\r\n        else {\r\n            currentPath = currentPath.concat(path);\r\n            currentPoint = currentPath[currentPath.length - 1];\r\n        }\r\n    }\r\n    mergedPaths.push(currentPath);\r\n\r\n    let camPaths = [];\r\n    for (let i = 0; i < mergedPaths.length; ++i) {\r\n        let path = mergedPaths[i];\r\n        camPaths.push({\r\n            path: path,\r\n            safeToClose: !crosses(bounds, path[0], path[path.length - 1])\r\n        });\r\n    }\r\n\r\n    return camPaths;\r\n}\r\n\r\n// Compute paths for pocket operation on Clipper geometry. Returns array\r\n// of CamPath. cutterDia is in Clipper units. stepover is in the range (0, 100).\r\nexport function pocket(geometry, cutterDia, stepover, climb) {\r\n    stepover = stepover / 100;\r\n    let current = offset(geometry, -cutterDia / 2);\r\n    let bounds = current.slice(0);\r\n    let allPaths = [];\r\n    while (current.length !== 0) {\r\n        if (!climb)\r\n            for (let i = 0; i < current.length; ++i)\r\n                current[i].reverse();\r\n        allPaths = current.concat(allPaths);\r\n        current = offset(current, -cutterDia * stepover);\r\n    }\r\n    closeClipperPaths(allPaths);\r\n    return mergePaths(bounds, allPaths);\r\n};\r\n\r\n// Compute paths for inside/outside operation on Clipper geometry. Returns array\r\n// of CamPath. cutterDia and width are in Clipper units. stepover is in the\r\n// range (0, 100].\r\nexport function insideOutside(geometry, cutterDia, isInside, width, stepover, climb, allowRecutInBounds) {\r\n\r\n    stepover = stepover / 100;\r\n    width = Math.max(width, cutterDia);\r\n\r\n    let currentWidth = cutterDia;\r\n    let allPaths = [];\r\n    let eachWidth = cutterDia * stepover;\r\n\r\n    let current;\r\n    let bounds = null;\r\n    let eachOffset;\r\n    let needReverse;\r\n\r\n    if (isInside) {\r\n        current = offset(geometry, -cutterDia / 2);\r\n        if (allowRecutInBounds)\r\n            bounds = diff(current, offset(geometry, -(width - cutterDia / 2)));\r\n        eachOffset = -eachWidth;\r\n        needReverse = !climb;\r\n    } else {\r\n        current = offset(geometry, cutterDia / 2);\r\n        if (allowRecutInBounds)\r\n            bounds = diff(offset(geometry, width - cutterDia / 2), current);\r\n        eachOffset = eachWidth;\r\n        needReverse = climb;\r\n    }\r\n\r\n    while (currentWidth <= width) {\r\n        if (needReverse)\r\n            for (let i = 0; i < current.length; ++i)\r\n                current[i].reverse();\r\n        allPaths = current.concat(allPaths);\r\n        let nextWidth = currentWidth + eachWidth;\r\n        if (nextWidth > width && width - currentWidth > 0) {\r\n            current = offset(current, width - currentWidth);\r\n            if (needReverse)\r\n                for (let i = 0; i < current.length; ++i)\r\n                    current[i].reverse();\r\n            allPaths = current.concat(allPaths);\r\n            break;\r\n        }\r\n        currentWidth = nextWidth;\r\n        if (currentWidth <= width)\r\n            current = offset(current, eachOffset);\r\n    }\r\n    closeClipperPaths(allPaths);\r\n    return mergePaths(bounds, allPaths);\r\n};\r\n\r\n// Compute paths for cut operation on Clipper geometry. Returns array\r\n// of CamPath.\r\nexport function cut(geometry, openGeometry, climb) {\r\n    let allPaths = [];\r\n    for (let i = 0; i < geometry.length; ++i) {\r\n        let path = geometry[i].slice(0);\r\n        if (climb)\r\n            path.reverse();\r\n        path.push(path[0]);\r\n        allPaths.push(path);\r\n    }\r\n    for (let path of openGeometry)\r\n        allPaths.push(path.slice());\r\n    let result = mergePaths(null, allPaths);\r\n    for (let i = 0; i < result.length; ++i)\r\n        result[i].safeToClose = pathIsClosed(result[i].path);\r\n    return result;\r\n};\r\n\r\nexport function fillPath(geometry, lineDistance, angle) {\r\n    if (!geometry.length || !geometry[0].length)\r\n        return [];\r\n    let bounds = clipperBounds(geometry);\r\n    let cx = (bounds.minX + bounds.maxX) / 2;\r\n    let cy = (bounds.minY + bounds.maxY) / 2;\r\n    let r = dist(cx, cy, bounds.minX, bounds.minY) + lineDistance;\r\n\r\n    let m = mat3.fromTranslation([], [cx, cy]);\r\n    m = mat3.rotate([], m, angle * Math.PI / 180);\r\n    m = mat3.translate([], m, [-cx, -cy]);\r\n    let makePoint = (x, y) => {\r\n        let p = vec2.transformMat3([], [x, y], m);\r\n        return { X: p[0], Y: p[1] };\r\n    }\r\n\r\n    let scan = [];\r\n    for (let y = cy - r; y < cy + r; y += lineDistance * 2) {\r\n        scan.push(\r\n            makePoint(cx - r, y),\r\n            makePoint(cx + r, y),\r\n            makePoint(cx + r, y + lineDistance),\r\n            makePoint(cx - r, y + lineDistance),\r\n        );\r\n    }\r\n\r\n    let allPaths = [];\r\n    let separated = separateTabs(scan, geometry);\r\n    for (let i = 1; i < separated.length; i += 2)\r\n        allPaths.push(separated[i]);\r\n    return mergePaths(null, allPaths);\r\n};\r\n\r\nexport function vCarve(geometry, cutterAngle, passDepth) {\r\n    if (cutterAngle <= 0 || cutterAngle >= 180)\r\n        return [];\r\n\r\n    let memoryBlocks = [];\r\n    let cGeometry = clipperPathsToCPaths(memoryBlocks, geometry);\r\n    let resultPathsRef = Module._malloc(4);\r\n    let resultNumPathsRef = Module._malloc(4);\r\n    let resultPathSizesRef = Module._malloc(4);\r\n    memoryBlocks.push(resultPathsRef);\r\n    memoryBlocks.push(resultNumPathsRef);\r\n    memoryBlocks.push(resultPathSizesRef);\r\n\r\n    let debugArg0 = 0, debugArg1 = 0;\r\n\r\n    //extern \"C\" void vCarve(\r\n    //    int debugArg0, int debugArg1,\r\n    //    double** paths, int numPaths, int* pathSizes,\r\n    //    double cutterAngle, double passDepth,\r\n    //    double**& resultPaths, int& resultNumPaths, int*& resultPathSizes)\r\n    Module.ccall(\r\n        'vCarve',\r\n        'void', ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'],\r\n        [\r\n            debugArg0, debugArg1, cGeometry[0], cGeometry[1], cGeometry[2],\r\n            cutterAngle, passDepth * clipperToCppScale,\r\n            resultPathsRef, resultNumPathsRef, resultPathSizesRef\r\n        ]);\r\n\r\n    let result = cPathsToCamPaths(memoryBlocks, resultPathsRef, resultNumPathsRef, resultPathSizesRef);\r\n\r\n    for (let i = 0; i < memoryBlocks.length; ++i)\r\n        Module._free(memoryBlocks[i]);\r\n\r\n    return result;\r\n};\r\n\r\nexport function reduceCamPaths(camPaths, minDist) {\r\n    let minDistSqr = minDist * minDist;\r\n    let distSqr = (p1, p2) => (p1.X - p2.X) * (p1.X - p2.X) + (p1.Y - p2.Y) * (p1.Y - p2.Y);\r\n    for (let camPath of camPaths) {\r\n        let path = camPath.path;\r\n        let newPath = [path[0]];\r\n        for (let i = 1; i < path.length - 1; ++i) {\r\n            let sq = distSqr(path[i], newPath[newPath.length - 1]);\r\n            if (sq > 0 && sq >= minDistSqr)\r\n                newPath.push(path[i]);\r\n        }\r\n        newPath.push(path[path.length - 1]);\r\n        camPath.path = newPath;\r\n    }\r\n}\r\n\r\n// Convert array of CamPath to array of Clipper path\r\nexport function getClipperPathsFromCamPaths(paths) {\r\n    let result = [];\r\n    if (paths !== null)\r\n        for (let i = 0; i < paths.length; ++i)\r\n            result.push(paths[i].path);\r\n    return result;\r\n}\r\n\r\nlet displayedCppTabError1 = false;\r\nlet displayedCppTabError2 = false;\r\n\r\nexport function separateTabs(cutterPath, tabGeometry) {\r\n    if (tabGeometry.length === 0)\r\n        return [cutterPath];\r\n    if (typeof Module === 'undefined') {\r\n        if (!displayedCppTabError1) {\r\n            showAlert(\"Failed to load cam-cpp.js; tabs will be missing. This message will not repeat.\", \"danger\", false);\r\n            displayedCppTabError1 = true;\r\n        }\r\n        return cutterPath;\r\n    }\r\n\r\n    let memoryBlocks = [];\r\n\r\n    let cCutterPath = clipperPathsToCPaths(memoryBlocks, [cutterPath]);\r\n    let cTabGeometry = clipperPathsToCPaths(memoryBlocks, tabGeometry);\r\n\r\n    let errorRef = Module._malloc(4);\r\n    let resultPathsRef = Module._malloc(4);\r\n    let resultNumPathsRef = Module._malloc(4);\r\n    let resultPathSizesRef = Module._malloc(4);\r\n    memoryBlocks.push(errorRef);\r\n    memoryBlocks.push(resultPathsRef);\r\n    memoryBlocks.push(resultNumPathsRef);\r\n    memoryBlocks.push(resultPathSizesRef);\r\n\r\n    //extern \"C\" void separateTabs(\r\n    //    double** pathPolygons, int numPaths, int* pathSizes,\r\n    //    double** tabPolygons, int numTabPolygons, int* tabPolygonSizes,\r\n    //    bool& error,\r\n    //    double**& resultPaths, int& resultNumPaths, int*& resultPathSizes)\r\n    Module.ccall(\r\n        'separateTabs',\r\n        'void', ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'],\r\n        [cCutterPath[0], cCutterPath[1], cCutterPath[2], cTabGeometry[0], cTabGeometry[1], cTabGeometry[2], errorRef, resultPathsRef, resultNumPathsRef, resultPathSizesRef]);\r\n\r\n    if (Module.HEAPU32[errorRef >> 2] && !displayedCppTabError2) {\r\n        showAlert(\"Internal error processing tabs; tabs will be missing. This message will not repeat.\", \"danger\", false);\r\n        displayedCppTabError2 = true;\r\n    }\r\n\r\n    let result = cPathsToClipperPaths(memoryBlocks, resultPathsRef, resultNumPathsRef, resultPathSizesRef);\r\n\r\n    for (let i = 0; i < memoryBlocks.length; ++i)\r\n        Module._free(memoryBlocks[i]);\r\n\r\n    return result;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cam.js","// rev 482\n/********************************************************************************\n *                                                                              *\n * Author    :  Angus Johnson                                                   *\n * Version   :  6.2.1                                                          *\n * Date      :  31 October 2014                                                 *\n * Website   :  http://www.angusj.com                                           *\n * Copyright :  Angus Johnson 2010-2014                                         *\n *                                                                              *\n * License:                                                                     *\n * Use, modification & distribution is subject to Boost Software License Ver 1. *\n * http://www.boost.org/LICENSE_1_0.txt                                         *\n *                                                                              *\n * Attributions:                                                                *\n * The code in this library is an extension of Bala Vatti's clipping algorithm: *\n * \"A generic solution to polygon clipping\"                                     *\n * Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n * http://portal.acm.org/citation.cfm?id=129906                                 *\n *                                                                              *\n * Computer graphics and geometric modeling: implementation and algorithms      *\n * By Max K. Agoston                                                            *\n * Springer; 1 edition (January 4, 2005)                                        *\n * http://books.google.com/books?q=vatti+clipping+agoston                       *\n *                                                                              *\n * See also:                                                                    *\n * \"Polygon Offsetting by Computing Winding Numbers\"                            *\n * Paper no. DETC2005-85513 pp. 565-575                                         *\n * ASME 2005 International Design Engineering Technical Conferences             *\n * and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n * September 24-28, 2005 , Long Beach, California, USA                          *\n * http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n *                                                                              *\n *******************************************************************************/\n/*******************************************************************************\n *                                                                              *\n * Author    :  Timo                                                            *\n * Version   :  6.2.1.0                                                         *\n * Date      :  17 June 2016                                                 *\n *                                                                              *\n * This is a translation of the C# Clipper library to Javascript.               *\n * Int128 struct of C# is implemented using JSBN of Tom Wu.                     *\n * Because Javascript lacks support for 64-bit integers, the space              *\n * is a little more restricted than in C# version.                              *\n *                                                                              *\n * C# version has support for coordinate space:                                 *\n * +-4611686018427387903 ( sqrt(2^127 -1)/2 )                                   *\n * while Javascript version has support for space:                              *\n * +-4503599627370495 ( sqrt(2^106 -1)/2 )                                      *\n *                                                                              *\n * Tom Wu's JSBN proved to be the fastest big integer library:                  *\n * http://jsperf.com/big-integer-library-test                                   *\n *                                                                              *\n * This class can be made simpler when (if ever) 64-bit integer support comes.  *\n *                                                                              *\n *******************************************************************************/\n/*******************************************************************************\n *                                                                              *\n * Basic JavaScript BN library - subset useful for RSA encryption.              *\n * http://www-cs-students.stanford.edu/~tjw/jsbn/                               *\n * Copyright (c) 2005  Tom Wu                                                   *\n * All Rights Reserved.                                                         *\n * See \"LICENSE\" for details:                                                   *\n * http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE                        *\n *                                                                              *\n *******************************************************************************/\n(function ()\n{\n  \"use strict\";\n  //use_int32: When enabled 32bit ints are used instead of 64bit ints. This\n  //improve performance but coordinate values are limited to the range +/- 46340\n  var use_int32 = false;\n  //use_xyz: adds a Z member to IntPoint. Adds a minor cost to performance.\n  var use_xyz = false;\n  //UseLines: Enables open path clipping. Adds a very minor cost to performance.\n  var use_lines = true;\n\n  var ClipperLib = {};\n  var isNode = false;\n  if (typeof module !== 'undefined' && module.exports)\n  {\n    module.exports = ClipperLib;\n    isNode = true;\n  }\n  else\n  {\n    if (typeof define === 'function' && define.amd) {\n      define(ClipperLib);\n    }\n    if (typeof (document) !== \"undefined\") window.ClipperLib = ClipperLib;\n    else self['ClipperLib'] = ClipperLib;\n  }\n  var navigator_appName;\n  if (!isNode)\n  {\n    var nav = navigator.userAgent.toString().toLowerCase();\n    navigator_appName = navigator.appName;\n  }\n  else\n  {\n    var nav = \"chrome\"; // Node.js uses Chrome's V8 engine\n    navigator_appName = \"Netscape\"; // Firefox, Chrome and Safari returns \"Netscape\", so Node.js should also\n  }\n  // Browser test to speedup performance critical functions\n  var browser = {};\n  if (nav.indexOf(\"chrome\") != -1 && nav.indexOf(\"chromium\") == -1) browser.chrome = 1;\n  else browser.chrome = 0;\n  if (nav.indexOf(\"chromium\") != -1) browser.chromium = 1;\n  else browser.chromium = 0;\n  if (nav.indexOf(\"safari\") != -1 && nav.indexOf(\"chrome\") == -1 && nav.indexOf(\"chromium\") == -1) browser.safari = 1;\n  else browser.safari = 0;\n  if (nav.indexOf(\"firefox\") != -1) browser.firefox = 1;\n  else browser.firefox = 0;\n  if (nav.indexOf(\"firefox/17\") != -1) browser.firefox17 = 1;\n  else browser.firefox17 = 0;\n  if (nav.indexOf(\"firefox/15\") != -1) browser.firefox15 = 1;\n  else browser.firefox15 = 0;\n  if (nav.indexOf(\"firefox/3\") != -1) browser.firefox3 = 1;\n  else browser.firefox3 = 0;\n  if (nav.indexOf(\"opera\") != -1) browser.opera = 1;\n  else browser.opera = 0;\n  if (nav.indexOf(\"msie 10\") != -1) browser.msie10 = 1;\n  else browser.msie10 = 0;\n  if (nav.indexOf(\"msie 9\") != -1) browser.msie9 = 1;\n  else browser.msie9 = 0;\n  if (nav.indexOf(\"msie 8\") != -1) browser.msie8 = 1;\n  else browser.msie8 = 0;\n  if (nav.indexOf(\"msie 7\") != -1) browser.msie7 = 1;\n  else browser.msie7 = 0;\n  if (nav.indexOf(\"msie \") != -1) browser.msie = 1;\n  else browser.msie = 0;\n  ClipperLib.biginteger_used = null;\n\n  // Copyright (c) 2005  Tom Wu\n  // All Rights Reserved.\n  // See \"LICENSE\" for details.\n  // Basic JavaScript BN library - subset useful for RSA encryption.\n  // Bits per digit\n  var dbits;\n  // JavaScript engine analysis\n  var canary = 0xdeadbeefcafe;\n  var j_lm = ((canary & 0xffffff) == 0xefcafe);\n  // (public) Constructor\n  function BigInteger(a, b, c)\n  {\n    // This test variable can be removed,\n    // but at least for performance tests it is useful piece of knowledge\n    // This is the only ClipperLib related variable in BigInteger library\n    ClipperLib.biginteger_used = 1;\n    if (a != null)\n      if (\"number\" == typeof a && \"undefined\" == typeof (b)) this.fromInt(a); // faster conversion\n      else if (\"number\" == typeof a) this.fromNumber(a, b, c);\n    else if (b == null && \"string\" != typeof a) this.fromString(a, 256);\n    else this.fromString(a, b);\n  }\n  // return new, unset BigInteger\n  function nbi()\n  {\n    return new BigInteger(null,undefined,undefined);\n  }\n  // am: Compute w_j += (x*this_i), propagate carries,\n  // c is initial carry, returns final carry.\n  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n  // We need to select the fastest one that works in this environment.\n  // am1: use a single mult and divide to get the high bits,\n  // max digit bits should be 26 because\n  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n  function am1(i, x, w, j, c, n)\n  {\n    while (--n >= 0)\n    {\n      var v = x * this[i++] + w[j] + c;\n      c = Math.floor(v / 0x4000000);\n      w[j++] = v & 0x3ffffff;\n    }\n    return c;\n  }\n  // am2 avoids a big mult-and-extract completely.\n  // Max digit bits should be <= 30 because we do bitwise ops\n  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n  function am2(i, x, w, j, c, n)\n  {\n    var xl = x & 0x7fff,\n      xh = x >> 15;\n    while (--n >= 0)\n    {\n      var l = this[i] & 0x7fff;\n      var h = this[i++] >> 15;\n      var m = xh * l + h * xl;\n      l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n      c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n      w[j++] = l & 0x3fffffff;\n    }\n    return c;\n  }\n  // Alternately, set max digit bits to 28 since some\n  // browsers slow down when dealing with 32-bit numbers.\n  function am3(i, x, w, j, c, n)\n  {\n    var xl = x & 0x3fff,\n      xh = x >> 14;\n    while (--n >= 0)\n    {\n      var l = this[i] & 0x3fff;\n      var h = this[i++] >> 14;\n      var m = xh * l + h * xl;\n      l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n      c = (l >> 28) + (m >> 14) + xh * h;\n      w[j++] = l & 0xfffffff;\n    }\n    return c;\n  }\n  if (j_lm && (navigator_appName == \"Microsoft Internet Explorer\"))\n  {\n    BigInteger.prototype.am = am2;\n    dbits = 30;\n  }\n  else if (j_lm && (navigator_appName != \"Netscape\"))\n  {\n    BigInteger.prototype.am = am1;\n    dbits = 26;\n  }\n  else\n  { // Mozilla/Netscape seems to prefer am3\n    BigInteger.prototype.am = am3;\n    dbits = 28;\n  }\n  BigInteger.prototype.DB = dbits;\n  BigInteger.prototype.DM = ((1 << dbits) - 1);\n  BigInteger.prototype.DV = (1 << dbits);\n  var BI_FP = 52;\n  BigInteger.prototype.FV = Math.pow(2, BI_FP);\n  BigInteger.prototype.F1 = BI_FP - dbits;\n  BigInteger.prototype.F2 = 2 * dbits - BI_FP;\n  // Digit conversions\n  var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n  var BI_RC = new Array();\n  var rr, vv;\n  rr = \"0\".charCodeAt(0);\n  for (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n  rr = \"a\".charCodeAt(0);\n  for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n  rr = \"A\".charCodeAt(0);\n  for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\n  function int2char(n)\n  {\n    return BI_RM.charAt(n);\n  }\n\n  function intAt(s, i)\n  {\n    var c = BI_RC[s.charCodeAt(i)];\n    return (c == null) ? -1 : c;\n  }\n  // (protected) copy this to r\n  function bnpCopyTo(r)\n  {\n    for (var i = this.t - 1; i >= 0; --i) r[i] = this[i];\n    r.t = this.t;\n    r.s = this.s;\n  }\n  // (protected) set from integer value x, -DV <= x < DV\n  function bnpFromInt(x)\n  {\n    this.t = 1;\n    this.s = (x < 0) ? -1 : 0;\n    if (x > 0) this[0] = x;\n    else if (x < -1) this[0] = x + this.DV;\n    else this.t = 0;\n  }\n  // return bigint initialized to value\n  function nbv(i)\n  {\n    var r = nbi();\n    r.fromInt(i);\n    return r;\n  }\n  // (protected) set from string and radix\n  function bnpFromString(s, b)\n  {\n    var k;\n    if (b == 16) k = 4;\n    else if (b == 8) k = 3;\n    else if (b == 256) k = 8; // byte array\n    else if (b == 2) k = 1;\n    else if (b == 32) k = 5;\n    else if (b == 4) k = 2;\n    else\n    {\n      this.fromRadix(s, b);\n      return;\n    }\n    this.t = 0;\n    this.s = 0;\n    var i = s.length,\n      mi = false,\n      sh = 0;\n    while (--i >= 0)\n    {\n      var x = (k == 8) ? s[i] & 0xff : intAt(s, i);\n      if (x < 0)\n      {\n        if (s.charAt(i) == \"-\") mi = true;\n        continue;\n      }\n      mi = false;\n      if (sh == 0)\n        this[this.t++] = x;\n      else if (sh + k > this.DB)\n      {\n        this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n        this[this.t++] = (x >> (this.DB - sh));\n      }\n      else\n        this[this.t - 1] |= x << sh;\n      sh += k;\n      if (sh >= this.DB) sh -= this.DB;\n    }\n    if (k == 8 && (s[0] & 0x80) != 0)\n    {\n      this.s = -1;\n      if (sh > 0) this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;\n    }\n    this.clamp();\n    if (mi) BigInteger.ZERO.subTo(this, this);\n  }\n  // (protected) clamp off excess high words\n  function bnpClamp()\n  {\n    var c = this.s & this.DM;\n    while (this.t > 0 && this[this.t - 1] == c)--this.t;\n  }\n  // (public) return string representation in given radix\n  function bnToString(b)\n  {\n    if (this.s < 0) return \"-\" + this.negate().toString(b);\n    var k;\n    if (b == 16) k = 4;\n    else if (b == 8) k = 3;\n    else if (b == 2) k = 1;\n    else if (b == 32) k = 5;\n    else if (b == 4) k = 2;\n    else return this.toRadix(b);\n    var km = (1 << k) - 1,\n      d, m = false,\n      r = \"\",\n      i = this.t;\n    var p = this.DB - (i * this.DB) % k;\n    if (i-- > 0)\n    {\n      if (p < this.DB && (d = this[i] >> p) > 0)\n      {\n        m = true;\n        r = int2char(d);\n      }\n      while (i >= 0)\n      {\n        if (p < k)\n        {\n          d = (this[i] & ((1 << p) - 1)) << (k - p);\n          d |= this[--i] >> (p += this.DB - k);\n        }\n        else\n        {\n          d = (this[i] >> (p -= k)) & km;\n          if (p <= 0)\n          {\n            p += this.DB;\n            --i;\n          }\n        }\n        if (d > 0) m = true;\n        if (m) r += int2char(d);\n      }\n    }\n    return m ? r : \"0\";\n  }\n  // (public) -this\n  function bnNegate()\n  {\n    var r = nbi();\n    BigInteger.ZERO.subTo(this, r);\n    return r;\n  }\n  // (public) |this|\n  function bnAbs()\n  {\n    return (this.s < 0) ? this.negate() : this;\n  }\n  // (public) return + if this > a, - if this < a, 0 if equal\n  function bnCompareTo(a)\n  {\n    var r = this.s - a.s;\n    if (r != 0) return r;\n    var i = this.t;\n    r = i - a.t;\n    if (r != 0) return (this.s < 0) ? -r : r;\n    while (--i >= 0)\n      if ((r = this[i] - a[i]) != 0) return r;\n    return 0;\n  }\n  // returns bit length of the integer x\n  function nbits(x)\n  {\n    var r = 1,\n      t;\n    if ((t = x >>> 16) != 0)\n    {\n      x = t;\n      r += 16;\n    }\n    if ((t = x >> 8) != 0)\n    {\n      x = t;\n      r += 8;\n    }\n    if ((t = x >> 4) != 0)\n    {\n      x = t;\n      r += 4;\n    }\n    if ((t = x >> 2) != 0)\n    {\n      x = t;\n      r += 2;\n    }\n    if ((t = x >> 1) != 0)\n    {\n      x = t;\n      r += 1;\n    }\n    return r;\n  }\n  // (public) return the number of bits in \"this\"\n  function bnBitLength()\n  {\n    if (this.t <= 0) return 0;\n    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n  }\n  // (protected) r = this << n*DB\n  function bnpDLShiftTo(n, r)\n  {\n    var i;\n    for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];\n    for (i = n - 1; i >= 0; --i) r[i] = 0;\n    r.t = this.t + n;\n    r.s = this.s;\n  }\n  // (protected) r = this >> n*DB\n  function bnpDRShiftTo(n, r)\n  {\n    for (var i = n; i < this.t; ++i) r[i - n] = this[i];\n    r.t = Math.max(this.t - n, 0);\n    r.s = this.s;\n  }\n  // (protected) r = this << n\n  function bnpLShiftTo(n, r)\n  {\n    var bs = n % this.DB;\n    var cbs = this.DB - bs;\n    var bm = (1 << cbs) - 1;\n    var ds = Math.floor(n / this.DB),\n      c = (this.s << bs) & this.DM,\n      i;\n    for (i = this.t - 1; i >= 0; --i)\n    {\n      r[i + ds + 1] = (this[i] >> cbs) | c;\n      c = (this[i] & bm) << bs;\n    }\n    for (i = ds - 1; i >= 0; --i) r[i] = 0;\n    r[ds] = c;\n    r.t = this.t + ds + 1;\n    r.s = this.s;\n    r.clamp();\n  }\n  // (protected) r = this >> n\n  function bnpRShiftTo(n, r)\n  {\n    r.s = this.s;\n    var ds = Math.floor(n / this.DB);\n    if (ds >= this.t)\n    {\n      r.t = 0;\n      return;\n    }\n    var bs = n % this.DB;\n    var cbs = this.DB - bs;\n    var bm = (1 << bs) - 1;\n    r[0] = this[ds] >> bs;\n    for (var i = ds + 1; i < this.t; ++i)\n    {\n      r[i - ds - 1] |= (this[i] & bm) << cbs;\n      r[i - ds] = this[i] >> bs;\n    }\n    if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n    r.t = this.t - ds;\n    r.clamp();\n  }\n  // (protected) r = this - a\n  function bnpSubTo(a, r)\n  {\n    var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n    while (i < m)\n    {\n      c += this[i] - a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    if (a.t < this.t)\n    {\n      c -= a.s;\n      while (i < this.t)\n      {\n        c += this[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n      }\n      c += this.s;\n    }\n    else\n    {\n      c += this.s;\n      while (i < a.t)\n      {\n        c -= a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n      }\n      c -= a.s;\n    }\n    r.s = (c < 0) ? -1 : 0;\n    if (c < -1) r[i++] = this.DV + c;\n    else if (c > 0) r[i++] = c;\n    r.t = i;\n    r.clamp();\n  }\n  // (protected) r = this * a, r != this,a (HAC 14.12)\n  // \"this\" should be the larger one if appropriate.\n  function bnpMultiplyTo(a, r)\n  {\n    var x = this.abs(),\n      y = a.abs();\n    var i = x.t;\n    r.t = i + y.t;\n    while (--i >= 0) r[i] = 0;\n    for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n    r.s = 0;\n    r.clamp();\n    if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n  }\n  // (protected) r = this^2, r != this (HAC 14.16)\n  function bnpSquareTo(r)\n  {\n    var x = this.abs();\n    var i = r.t = 2 * x.t;\n    while (--i >= 0) r[i] = 0;\n    for (i = 0; i < x.t - 1; ++i)\n    {\n      var c = x.am(i, x[i], r, 2 * i, 0, 1);\n      if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV)\n      {\n        r[i + x.t] -= x.DV;\n        r[i + x.t + 1] = 1;\n      }\n    }\n    if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n    r.s = 0;\n    r.clamp();\n  }\n  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n  // r != q, this != m.  q or r may be null.\n  function bnpDivRemTo(m, q, r)\n  {\n    var pm = m.abs();\n    if (pm.t <= 0) return;\n    var pt = this.abs();\n    if (pt.t < pm.t)\n    {\n      if (q != null) q.fromInt(0);\n      if (r != null) this.copyTo(r);\n      return;\n    }\n    if (r == null) r = nbi();\n    var y = nbi(),\n      ts = this.s,\n      ms = m.s;\n    var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n    if (nsh > 0)\n    {\n      pm.lShiftTo(nsh, y);\n      pt.lShiftTo(nsh, r);\n    }\n    else\n    {\n      pm.copyTo(y);\n      pt.copyTo(r);\n    }\n    var ys = y.t;\n    var y0 = y[ys - 1];\n    if (y0 == 0) return;\n    var yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);\n    var d1 = this.FV / yt,\n      d2 = (1 << this.F1) / yt,\n      e = 1 << this.F2;\n    var i = r.t,\n      j = i - ys,\n      t = (q == null) ? nbi() : q;\n    y.dlShiftTo(j, t);\n    if (r.compareTo(t) >= 0)\n    {\n      r[r.t++] = 1;\n      r.subTo(t, r);\n    }\n    BigInteger.ONE.dlShiftTo(ys, t);\n    t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n    while (y.t < ys) y[y.t++] = 0;\n    while (--j >= 0)\n    {\n      // Estimate quotient digit\n      var qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n      if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd)\n      { // Try it out\n        y.dlShiftTo(j, t);\n        r.subTo(t, r);\n        while (r[i] < --qd) r.subTo(t, r);\n      }\n    }\n    if (q != null)\n    {\n      r.drShiftTo(ys, q);\n      if (ts != ms) BigInteger.ZERO.subTo(q, q);\n    }\n    r.t = ys;\n    r.clamp();\n    if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n    if (ts < 0) BigInteger.ZERO.subTo(r, r);\n  }\n  // (public) this mod a\n  function bnMod(a)\n  {\n    var r = nbi();\n    this.abs().divRemTo(a, null, r);\n    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n    return r;\n  }\n  // Modular reduction using \"classic\" algorithm\n  function Classic(m)\n  {\n    this.m = m;\n  }\n\n  function cConvert(x)\n  {\n    if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n    else return x;\n  }\n\n  function cRevert(x)\n  {\n    return x;\n  }\n\n  function cReduce(x)\n  {\n    x.divRemTo(this.m, null, x);\n  }\n\n  function cMulTo(x, y, r)\n  {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n  }\n\n  function cSqrTo(x, r)\n  {\n    x.squareTo(r);\n    this.reduce(r);\n  }\n  Classic.prototype.convert = cConvert;\n  Classic.prototype.revert = cRevert;\n  Classic.prototype.reduce = cReduce;\n  Classic.prototype.mulTo = cMulTo;\n  Classic.prototype.sqrTo = cSqrTo;\n  // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n  // justification:\n  //         xy == 1 (mod m)\n  //         xy =  1+km\n  //   xy(2-xy) = (1+km)(1-km)\n  // x[y(2-xy)] = 1-k^2m^2\n  // x[y(2-xy)] == 1 (mod m^2)\n  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n  // JS multiply \"overflows\" differently from C/C++, so care is needed here.\n  function bnpInvDigit()\n  {\n    if (this.t < 1) return 0;\n    var x = this[0];\n    if ((x & 1) == 0) return 0;\n    var y = x & 3; // y == 1/x mod 2^2\n    y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4\n    y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16\n    // last step - calculate inverse mod DV directly;\n    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n    y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits\n    // we really want the negative inverse, and -DV < y < DV\n    return (y > 0) ? this.DV - y : -y;\n  }\n  // Montgomery reduction\n  function Montgomery(m)\n  {\n    this.m = m;\n    this.mp = m.invDigit();\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (m.DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n  }\n  // xR mod m\n  function montConvert(x)\n  {\n    var r = nbi();\n    x.abs().dlShiftTo(this.m.t, r);\n    r.divRemTo(this.m, null, r);\n    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n    return r;\n  }\n  // x/R mod m\n  function montRevert(x)\n  {\n    var r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n  }\n  // x = x/R mod m (HAC 14.32)\n  function montReduce(x)\n  {\n    while (x.t <= this.mt2) // pad x so am has enough room later\n      x[x.t++] = 0;\n    for (var i = 0; i < this.m.t; ++i)\n    {\n      // faster way of calculating u0 = x[i]*mp mod DV\n      var j = x[i] & 0x7fff;\n      var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;\n      // use am to combine the multiply-shift-add into one call\n      j = i + this.m.t;\n      x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n      // propagate carry\n      while (x[j] >= x.DV)\n      {\n        x[j] -= x.DV;\n        x[++j]++;\n      }\n    }\n    x.clamp();\n    x.drShiftTo(this.m.t, x);\n    if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n  }\n  // r = \"x^2/R mod m\"; x != r\n  function montSqrTo(x, r)\n  {\n    x.squareTo(r);\n    this.reduce(r);\n  }\n  // r = \"xy/R mod m\"; x,y != r\n  function montMulTo(x, y, r)\n  {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n  }\n  Montgomery.prototype.convert = montConvert;\n  Montgomery.prototype.revert = montRevert;\n  Montgomery.prototype.reduce = montReduce;\n  Montgomery.prototype.mulTo = montMulTo;\n  Montgomery.prototype.sqrTo = montSqrTo;\n  // (protected) true iff this is even\n  function bnpIsEven()\n  {\n    return ((this.t > 0) ? (this[0] & 1) : this.s) == 0;\n  }\n  // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n  function bnpExp(e, z)\n  {\n    if (e > 0xffffffff || e < 1) return BigInteger.ONE;\n    var r = nbi(),\n      r2 = nbi(),\n      g = z.convert(this),\n      i = nbits(e) - 1;\n    g.copyTo(r);\n    while (--i >= 0)\n    {\n      z.sqrTo(r, r2);\n      if ((e & (1 << i)) > 0) z.mulTo(r2, g, r);\n      else\n      {\n        var t = r;\n        r = r2;\n        r2 = t;\n      }\n    }\n    return z.revert(r);\n  }\n  // (public) this^e % m, 0 <= e < 2^32\n  function bnModPowInt(e, m)\n  {\n    var z;\n    if (e < 256 || m.isEven()) z = new Classic(m);\n    else z = new Montgomery(m);\n    return this.exp(e, z);\n  }\n  // protected\n  BigInteger.prototype.copyTo = bnpCopyTo;\n  BigInteger.prototype.fromInt = bnpFromInt;\n  BigInteger.prototype.fromString = bnpFromString;\n  BigInteger.prototype.clamp = bnpClamp;\n  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n  BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n  BigInteger.prototype.lShiftTo = bnpLShiftTo;\n  BigInteger.prototype.rShiftTo = bnpRShiftTo;\n  BigInteger.prototype.subTo = bnpSubTo;\n  BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n  BigInteger.prototype.squareTo = bnpSquareTo;\n  BigInteger.prototype.divRemTo = bnpDivRemTo;\n  BigInteger.prototype.invDigit = bnpInvDigit;\n  BigInteger.prototype.isEven = bnpIsEven;\n  BigInteger.prototype.exp = bnpExp;\n  // public\n  BigInteger.prototype.toString = bnToString;\n  BigInteger.prototype.negate = bnNegate;\n  BigInteger.prototype.abs = bnAbs;\n  BigInteger.prototype.compareTo = bnCompareTo;\n  BigInteger.prototype.bitLength = bnBitLength;\n  BigInteger.prototype.mod = bnMod;\n  BigInteger.prototype.modPowInt = bnModPowInt;\n  // \"constants\"\n  BigInteger.ZERO = nbv(0);\n  BigInteger.ONE = nbv(1);\n  // Copyright (c) 2005-2009  Tom Wu\n  // All Rights Reserved.\n  // See \"LICENSE\" for details.\n  // Extended JavaScript BN functions, required for RSA private ops.\n  // Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n  // Version 1.2: square() API, isProbablePrime fix\n  // (public)\n  function bnClone()\n  {\n    var r = nbi();\n    this.copyTo(r);\n    return r;\n  }\n  // (public) return value as integer\n  function bnIntValue()\n  {\n    if (this.s < 0)\n    {\n      if (this.t == 1) return this[0] - this.DV;\n      else if (this.t == 0) return -1;\n    }\n    else if (this.t == 1) return this[0];\n    else if (this.t == 0) return 0;\n    // assumes 16 < DB < 32\n    return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];\n  }\n  // (public) return value as byte\n  function bnByteValue()\n  {\n    return (this.t == 0) ? this.s : (this[0] << 24) >> 24;\n  }\n  // (public) return value as short (assumes DB>=16)\n  function bnShortValue()\n  {\n    return (this.t == 0) ? this.s : (this[0] << 16) >> 16;\n  }\n  // (protected) return x s.t. r^x < DV\n  function bnpChunkSize(r)\n  {\n    return Math.floor(Math.LN2 * this.DB / Math.log(r));\n  }\n  // (public) 0 if this == 0, 1 if this > 0\n  function bnSigNum()\n  {\n    if (this.s < 0) return -1;\n    else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n    else return 1;\n  }\n  // (protected) convert to radix string\n  function bnpToRadix(b)\n  {\n    if (b == null) b = 10;\n    if (this.signum() == 0 || b < 2 || b > 36) return \"0\";\n    var cs = this.chunkSize(b);\n    var a = Math.pow(b, cs);\n    var d = nbv(a),\n      y = nbi(),\n      z = nbi(),\n      r = \"\";\n    this.divRemTo(d, y, z);\n    while (y.signum() > 0)\n    {\n      r = (a + z.intValue()).toString(b).substr(1) + r;\n      y.divRemTo(d, y, z);\n    }\n    return z.intValue().toString(b) + r;\n  }\n  // (protected) convert from radix string\n  function bnpFromRadix(s, b)\n  {\n    this.fromInt(0);\n    if (b == null) b = 10;\n    var cs = this.chunkSize(b);\n    var d = Math.pow(b, cs),\n      mi = false,\n      j = 0,\n      w = 0;\n    for (var i = 0; i < s.length; ++i)\n    {\n      var x = intAt(s, i);\n      if (x < 0)\n      {\n        if (s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n        continue;\n      }\n      w = b * w + x;\n      if (++j >= cs)\n      {\n        this.dMultiply(d);\n        this.dAddOffset(w, 0);\n        j = 0;\n        w = 0;\n      }\n    }\n    if (j > 0)\n    {\n      this.dMultiply(Math.pow(b, j));\n      this.dAddOffset(w, 0);\n    }\n    if (mi) BigInteger.ZERO.subTo(this, this);\n  }\n  // (protected) alternate constructor\n  function bnpFromNumber(a, b, c)\n  {\n    if (\"number\" == typeof b)\n    {\n      // new BigInteger(int,int,RNG)\n      if (a < 2) this.fromInt(1);\n      else\n      {\n        this.fromNumber(a, c);\n        if (!this.testBit(a - 1)) // force MSB set\n          this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n        if (this.isEven()) this.dAddOffset(1, 0); // force odd\n        while (!this.isProbablePrime(b))\n        {\n          this.dAddOffset(2, 0);\n          if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n        }\n      }\n    }\n    else\n    {\n      // new BigInteger(int,RNG)\n      var x = new Array(),\n        t = a & 7;\n      x.length = (a >> 3) + 1;\n      b.nextBytes(x);\n      if (t > 0) x[0] &= ((1 << t) - 1);\n      else x[0] = 0;\n      this.fromString(x, 256);\n    }\n  }\n  // (public) convert to bigendian byte array\n  function bnToByteArray()\n  {\n    var i = this.t,\n      r = new Array();\n    r[0] = this.s;\n    var p = this.DB - (i * this.DB) % 8,\n      d, k = 0;\n    if (i-- > 0)\n    {\n      if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p)\n        r[k++] = d | (this.s << (this.DB - p));\n      while (i >= 0)\n      {\n        if (p < 8)\n        {\n          d = (this[i] & ((1 << p) - 1)) << (8 - p);\n          d |= this[--i] >> (p += this.DB - 8);\n        }\n        else\n        {\n          d = (this[i] >> (p -= 8)) & 0xff;\n          if (p <= 0)\n          {\n            p += this.DB;\n            --i;\n          }\n        }\n        if ((d & 0x80) != 0) d |= -256;\n        if (k == 0 && (this.s & 0x80) != (d & 0x80))++k;\n        if (k > 0 || d != this.s) r[k++] = d;\n      }\n    }\n    return r;\n  }\n\n  function bnEquals(a)\n  {\n    return (this.compareTo(a) == 0);\n  }\n\n  function bnMin(a)\n  {\n    return (this.compareTo(a) < 0) ? this : a;\n  }\n\n  function bnMax(a)\n  {\n    return (this.compareTo(a) > 0) ? this : a;\n  }\n  // (protected) r = this op a (bitwise)\n  function bnpBitwiseTo(a, op, r)\n  {\n    var i, f, m = Math.min(a.t, this.t);\n    for (i = 0; i < m; ++i) r[i] = op(this[i], a[i]);\n    if (a.t < this.t)\n    {\n      f = a.s & this.DM;\n      for (i = m; i < this.t; ++i) r[i] = op(this[i], f);\n      r.t = this.t;\n    }\n    else\n    {\n      f = this.s & this.DM;\n      for (i = m; i < a.t; ++i) r[i] = op(f, a[i]);\n      r.t = a.t;\n    }\n    r.s = op(this.s, a.s);\n    r.clamp();\n  }\n  // (public) this & a\n  function op_and(x, y)\n  {\n    return x & y;\n  }\n\n  function bnAnd(a)\n  {\n    var r = nbi();\n    this.bitwiseTo(a, op_and, r);\n    return r;\n  }\n  // (public) this | a\n  function op_or(x, y)\n  {\n    return x | y;\n  }\n\n  function bnOr(a)\n  {\n    var r = nbi();\n    this.bitwiseTo(a, op_or, r);\n    return r;\n  }\n  // (public) this ^ a\n  function op_xor(x, y)\n  {\n    return x ^ y;\n  }\n\n  function bnXor(a)\n  {\n    var r = nbi();\n    this.bitwiseTo(a, op_xor, r);\n    return r;\n  }\n  // (public) this & ~a\n  function op_andnot(x, y)\n  {\n    return x & ~y;\n  }\n\n  function bnAndNot(a)\n  {\n    var r = nbi();\n    this.bitwiseTo(a, op_andnot, r);\n    return r;\n  }\n  // (public) ~this\n  function bnNot()\n  {\n    var r = nbi();\n    for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i];\n    r.t = this.t;\n    r.s = ~this.s;\n    return r;\n  }\n  // (public) this << n\n  function bnShiftLeft(n)\n  {\n    var r = nbi();\n    if (n < 0) this.rShiftTo(-n, r);\n    else this.lShiftTo(n, r);\n    return r;\n  }\n  // (public) this >> n\n  function bnShiftRight(n)\n  {\n    var r = nbi();\n    if (n < 0) this.lShiftTo(-n, r);\n    else this.rShiftTo(n, r);\n    return r;\n  }\n  // return index of lowest 1-bit in x, x < 2^31\n  function lbit(x)\n  {\n    if (x == 0) return -1;\n    var r = 0;\n    if ((x & 0xffff) == 0)\n    {\n      x >>= 16;\n      r += 16;\n    }\n    if ((x & 0xff) == 0)\n    {\n      x >>= 8;\n      r += 8;\n    }\n    if ((x & 0xf) == 0)\n    {\n      x >>= 4;\n      r += 4;\n    }\n    if ((x & 3) == 0)\n    {\n      x >>= 2;\n      r += 2;\n    }\n    if ((x & 1) == 0)++r;\n    return r;\n  }\n  // (public) returns index of lowest 1-bit (or -1 if none)\n  function bnGetLowestSetBit()\n  {\n    for (var i = 0; i < this.t; ++i)\n      if (this[i] != 0) return i * this.DB + lbit(this[i]);\n    if (this.s < 0) return this.t * this.DB;\n    return -1;\n  }\n  // return number of 1 bits in x\n  function cbit(x)\n  {\n    var r = 0;\n    while (x != 0)\n    {\n      x &= x - 1;\n      ++r;\n    }\n    return r;\n  }\n  // (public) return number of set bits\n  function bnBitCount()\n  {\n    var r = 0,\n      x = this.s & this.DM;\n    for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x);\n    return r;\n  }\n  // (public) true iff nth bit is set\n  function bnTestBit(n)\n  {\n    var j = Math.floor(n / this.DB);\n    if (j >= this.t) return (this.s != 0);\n    return ((this[j] & (1 << (n % this.DB))) != 0);\n  }\n  // (protected) this op (1<<n)\n  function bnpChangeBit(n, op)\n  {\n    var r = BigInteger.ONE.shiftLeft(n);\n    this.bitwiseTo(r, op, r);\n    return r;\n  }\n  // (public) this | (1<<n)\n  function bnSetBit(n)\n  {\n    return this.changeBit(n, op_or);\n  }\n  // (public) this & ~(1<<n)\n  function bnClearBit(n)\n  {\n    return this.changeBit(n, op_andnot);\n  }\n  // (public) this ^ (1<<n)\n  function bnFlipBit(n)\n  {\n    return this.changeBit(n, op_xor);\n  }\n  // (protected) r = this + a\n  function bnpAddTo(a, r)\n  {\n    var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n    while (i < m)\n    {\n      c += this[i] + a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    if (a.t < this.t)\n    {\n      c += a.s;\n      while (i < this.t)\n      {\n        c += this[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n      }\n      c += this.s;\n    }\n    else\n    {\n      c += this.s;\n      while (i < a.t)\n      {\n        c += a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n      }\n      c += a.s;\n    }\n    r.s = (c < 0) ? -1 : 0;\n    if (c > 0) r[i++] = c;\n    else if (c < -1) r[i++] = this.DV + c;\n    r.t = i;\n    r.clamp();\n  }\n  // (public) this + a\n  function bnAdd(a)\n  {\n    var r = nbi();\n    this.addTo(a, r);\n    return r;\n  }\n  // (public) this - a\n  function bnSubtract(a)\n  {\n    var r = nbi();\n    this.subTo(a, r);\n    return r;\n  }\n  // (public) this * a\n  function bnMultiply(a)\n  {\n    var r = nbi();\n    this.multiplyTo(a, r);\n    return r;\n  }\n  // (public) this^2\n  function bnSquare()\n  {\n    var r = nbi();\n    this.squareTo(r);\n    return r;\n  }\n  // (public) this / a\n  function bnDivide(a)\n  {\n    var r = nbi();\n    this.divRemTo(a, r, null);\n    return r;\n  }\n  // (public) this % a\n  function bnRemainder(a)\n  {\n    var r = nbi();\n    this.divRemTo(a, null, r);\n    return r;\n  }\n  // (public) [this/a,this%a]\n  function bnDivideAndRemainder(a)\n  {\n    var q = nbi(),\n      r = nbi();\n    this.divRemTo(a, q, r);\n    return new Array(q, r);\n  }\n  // (protected) this *= n, this >= 0, 1 < n < DV\n  function bnpDMultiply(n)\n  {\n    this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n    ++this.t;\n    this.clamp();\n  }\n  // (protected) this += n << w words, this >= 0\n  function bnpDAddOffset(n, w)\n  {\n    if (n == 0) return;\n    while (this.t <= w) this[this.t++] = 0;\n    this[w] += n;\n    while (this[w] >= this.DV)\n    {\n      this[w] -= this.DV;\n      if (++w >= this.t) this[this.t++] = 0;\n      ++this[w];\n    }\n  }\n  // A \"null\" reducer\n  function NullExp()\n  {}\n\n  function nNop(x)\n  {\n    return x;\n  }\n\n  function nMulTo(x, y, r)\n  {\n    x.multiplyTo(y, r);\n  }\n\n  function nSqrTo(x, r)\n  {\n    x.squareTo(r);\n  }\n  NullExp.prototype.convert = nNop;\n  NullExp.prototype.revert = nNop;\n  NullExp.prototype.mulTo = nMulTo;\n  NullExp.prototype.sqrTo = nSqrTo;\n  // (public) this^e\n  function bnPow(e)\n  {\n    return this.exp(e, new NullExp());\n  }\n  // (protected) r = lower n words of \"this * a\", a.t <= n\n  // \"this\" should be the larger one if appropriate.\n  function bnpMultiplyLowerTo(a, n, r)\n  {\n    var i = Math.min(this.t + a.t, n);\n    r.s = 0; // assumes a,this >= 0\n    r.t = i;\n    while (i > 0) r[--i] = 0;\n    var j;\n    for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\n    for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i);\n    r.clamp();\n  }\n  // (protected) r = \"this * a\" without lower n words, n > 0\n  // \"this\" should be the larger one if appropriate.\n  function bnpMultiplyUpperTo(a, n, r)\n  {\n    --n;\n    var i = r.t = this.t + a.t - n;\n    r.s = 0; // assumes a,this >= 0\n    while (--i >= 0) r[i] = 0;\n    for (i = Math.max(n - this.t, 0); i < a.t; ++i)\n      r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\n    r.clamp();\n    r.drShiftTo(1, r);\n  }\n  // Barrett modular reduction\n  function Barrett(m)\n  {\n    // setup Barrett\n    this.r2 = nbi();\n    this.q3 = nbi();\n    BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n    this.mu = this.r2.divide(m);\n    this.m = m;\n  }\n\n  function barrettConvert(x)\n  {\n    if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);\n    else if (x.compareTo(this.m) < 0) return x;\n    else\n    {\n      var r = nbi();\n      x.copyTo(r);\n      this.reduce(r);\n      return r;\n    }\n  }\n\n  function barrettRevert(x)\n  {\n    return x;\n  }\n  // x = x mod m (HAC 14.42)\n  function barrettReduce(x)\n  {\n    x.drShiftTo(this.m.t - 1, this.r2);\n    if (x.t > this.m.t + 1)\n    {\n      x.t = this.m.t + 1;\n      x.clamp();\n    }\n    this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n    this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n    while (x.compareTo(this.r2) < 0) x.dAddOffset(1, this.m.t + 1);\n    x.subTo(this.r2, x);\n    while (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n  }\n  // r = x^2 mod m; x != r\n  function barrettSqrTo(x, r)\n  {\n    x.squareTo(r);\n    this.reduce(r);\n  }\n  // r = x*y mod m; x,y != r\n  function barrettMulTo(x, y, r)\n  {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n  }\n  Barrett.prototype.convert = barrettConvert;\n  Barrett.prototype.revert = barrettRevert;\n  Barrett.prototype.reduce = barrettReduce;\n  Barrett.prototype.mulTo = barrettMulTo;\n  Barrett.prototype.sqrTo = barrettSqrTo;\n  // (public) this^e % m (HAC 14.85)\n  function bnModPow(e, m)\n  {\n    var i = e.bitLength(),\n      k, r = nbv(1),\n      z;\n    if (i <= 0) return r;\n    else if (i < 18) k = 1;\n    else if (i < 48) k = 3;\n    else if (i < 144) k = 4;\n    else if (i < 768) k = 5;\n    else k = 6;\n    if (i < 8)\n      z = new Classic(m);\n    else if (m.isEven())\n      z = new Barrett(m);\n    else\n      z = new Montgomery(m);\n    // precomputation\n    var g = new Array(),\n      n = 3,\n      k1 = k - 1,\n      km = (1 << k) - 1;\n    g[1] = z.convert(this);\n    if (k > 1)\n    {\n      var g2 = nbi();\n      z.sqrTo(g[1], g2);\n      while (n <= km)\n      {\n        g[n] = nbi();\n        z.mulTo(g2, g[n - 2], g[n]);\n        n += 2;\n      }\n    }\n    var j = e.t - 1,\n      w, is1 = true,\n      r2 = nbi(),\n      t;\n    i = nbits(e[j]) - 1;\n    while (j >= 0)\n    {\n      if (i >= k1) w = (e[j] >> (i - k1)) & km;\n      else\n      {\n        w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n        if (j > 0) w |= e[j - 1] >> (this.DB + i - k1);\n      }\n      n = k;\n      while ((w & 1) == 0)\n      {\n        w >>= 1;\n        --n;\n      }\n      if ((i -= n) < 0)\n      {\n        i += this.DB;\n        --j;\n      }\n      if (is1)\n      { // ret == 1, don't bother squaring or multiplying it\n        g[w].copyTo(r);\n        is1 = false;\n      }\n      else\n      {\n        while (n > 1)\n        {\n          z.sqrTo(r, r2);\n          z.sqrTo(r2, r);\n          n -= 2;\n        }\n        if (n > 0) z.sqrTo(r, r2);\n        else\n        {\n          t = r;\n          r = r2;\n          r2 = t;\n        }\n        z.mulTo(r2, g[w], r);\n      }\n      while (j >= 0 && (e[j] & (1 << i)) == 0)\n      {\n        z.sqrTo(r, r2);\n        t = r;\n        r = r2;\n        r2 = t;\n        if (--i < 0)\n        {\n          i = this.DB - 1;\n          --j;\n        }\n      }\n    }\n    return z.revert(r);\n  }\n  // (public) gcd(this,a) (HAC 14.54)\n  function bnGCD(a)\n  {\n    var x = (this.s < 0) ? this.negate() : this.clone();\n    var y = (a.s < 0) ? a.negate() : a.clone();\n    if (x.compareTo(y) < 0)\n    {\n      var t = x;\n      x = y;\n      y = t;\n    }\n    var i = x.getLowestSetBit(),\n      g = y.getLowestSetBit();\n    if (g < 0) return x;\n    if (i < g) g = i;\n    if (g > 0)\n    {\n      x.rShiftTo(g, x);\n      y.rShiftTo(g, y);\n    }\n    while (x.signum() > 0)\n    {\n      if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);\n      if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);\n      if (x.compareTo(y) >= 0)\n      {\n        x.subTo(y, x);\n        x.rShiftTo(1, x);\n      }\n      else\n      {\n        y.subTo(x, y);\n        y.rShiftTo(1, y);\n      }\n    }\n    if (g > 0) y.lShiftTo(g, y);\n    return y;\n  }\n  // (protected) this % n, n < 2^26\n  function bnpModInt(n)\n  {\n    if (n <= 0) return 0;\n    var d = this.DV % n,\n      r = (this.s < 0) ? n - 1 : 0;\n    if (this.t > 0)\n      if (d == 0) r = this[0] % n;\n      else\n        for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n;\n    return r;\n  }\n  // (public) 1/this % m (HAC 14.61)\n  function bnModInverse(m)\n  {\n    var ac = m.isEven();\n    if ((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n    var u = m.clone(),\n      v = this.clone();\n    var a = nbv(1),\n      b = nbv(0),\n      c = nbv(0),\n      d = nbv(1);\n    while (u.signum() != 0)\n    {\n      while (u.isEven())\n      {\n        u.rShiftTo(1, u);\n        if (ac)\n        {\n          if (!a.isEven() || !b.isEven())\n          {\n            a.addTo(this, a);\n            b.subTo(m, b);\n          }\n          a.rShiftTo(1, a);\n        }\n        else if (!b.isEven()) b.subTo(m, b);\n        b.rShiftTo(1, b);\n      }\n      while (v.isEven())\n      {\n        v.rShiftTo(1, v);\n        if (ac)\n        {\n          if (!c.isEven() || !d.isEven())\n          {\n            c.addTo(this, c);\n            d.subTo(m, d);\n          }\n          c.rShiftTo(1, c);\n        }\n        else if (!d.isEven()) d.subTo(m, d);\n        d.rShiftTo(1, d);\n      }\n      if (u.compareTo(v) >= 0)\n      {\n        u.subTo(v, u);\n        if (ac) a.subTo(c, a);\n        b.subTo(d, b);\n      }\n      else\n      {\n        v.subTo(u, v);\n        if (ac) c.subTo(a, c);\n        d.subTo(b, d);\n      }\n    }\n    if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n    if (d.compareTo(m) >= 0) return d.subtract(m);\n    if (d.signum() < 0) d.addTo(m, d);\n    else return d;\n    if (d.signum() < 0) return d.add(m);\n    else return d;\n  }\n  var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n  var lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\n  // (public) test primality with certainty >= 1-.5^t\n  function bnIsProbablePrime(t)\n  {\n    var i, x = this.abs();\n    if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1])\n    {\n      for (i = 0; i < lowprimes.length; ++i)\n        if (x[0] == lowprimes[i]) return true;\n      return false;\n    }\n    if (x.isEven()) return false;\n    i = 1;\n    while (i < lowprimes.length)\n    {\n      var m = lowprimes[i],\n        j = i + 1;\n      while (j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n      m = x.modInt(m);\n      while (i < j)\n        if (m % lowprimes[i++] == 0) return false;\n    }\n    return x.millerRabin(t);\n  }\n  // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n  function bnpMillerRabin(t)\n  {\n    var n1 = this.subtract(BigInteger.ONE);\n    var k = n1.getLowestSetBit();\n    if (k <= 0) return false;\n    var r = n1.shiftRight(k);\n    t = (t + 1) >> 1;\n    if (t > lowprimes.length) t = lowprimes.length;\n    var a = nbi();\n    for (var i = 0; i < t; ++i)\n    {\n      //Pick bases at random, instead of starting at 2\n      a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\n      var y = a.modPow(r, this);\n      if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0)\n      {\n        var j = 1;\n        while (j++ < k && y.compareTo(n1) != 0)\n        {\n          y = y.modPowInt(2, this);\n          if (y.compareTo(BigInteger.ONE) == 0) return false;\n        }\n        if (y.compareTo(n1) != 0) return false;\n      }\n    }\n    return true;\n  }\n  // protected\n  BigInteger.prototype.chunkSize = bnpChunkSize;\n  BigInteger.prototype.toRadix = bnpToRadix;\n  BigInteger.prototype.fromRadix = bnpFromRadix;\n  BigInteger.prototype.fromNumber = bnpFromNumber;\n  BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n  BigInteger.prototype.changeBit = bnpChangeBit;\n  BigInteger.prototype.addTo = bnpAddTo;\n  BigInteger.prototype.dMultiply = bnpDMultiply;\n  BigInteger.prototype.dAddOffset = bnpDAddOffset;\n  BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n  BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n  BigInteger.prototype.modInt = bnpModInt;\n  BigInteger.prototype.millerRabin = bnpMillerRabin;\n  // public\n  BigInteger.prototype.clone = bnClone;\n  BigInteger.prototype.intValue = bnIntValue;\n  BigInteger.prototype.byteValue = bnByteValue;\n  BigInteger.prototype.shortValue = bnShortValue;\n  BigInteger.prototype.signum = bnSigNum;\n  BigInteger.prototype.toByteArray = bnToByteArray;\n  BigInteger.prototype.equals = bnEquals;\n  BigInteger.prototype.min = bnMin;\n  BigInteger.prototype.max = bnMax;\n  BigInteger.prototype.and = bnAnd;\n  BigInteger.prototype.or = bnOr;\n  BigInteger.prototype.xor = bnXor;\n  BigInteger.prototype.andNot = bnAndNot;\n  BigInteger.prototype.not = bnNot;\n  BigInteger.prototype.shiftLeft = bnShiftLeft;\n  BigInteger.prototype.shiftRight = bnShiftRight;\n  BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n  BigInteger.prototype.bitCount = bnBitCount;\n  BigInteger.prototype.testBit = bnTestBit;\n  BigInteger.prototype.setBit = bnSetBit;\n  BigInteger.prototype.clearBit = bnClearBit;\n  BigInteger.prototype.flipBit = bnFlipBit;\n  BigInteger.prototype.add = bnAdd;\n  BigInteger.prototype.subtract = bnSubtract;\n  BigInteger.prototype.multiply = bnMultiply;\n  BigInteger.prototype.divide = bnDivide;\n  BigInteger.prototype.remainder = bnRemainder;\n  BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n  BigInteger.prototype.modPow = bnModPow;\n  BigInteger.prototype.modInverse = bnModInverse;\n  BigInteger.prototype.pow = bnPow;\n  BigInteger.prototype.gcd = bnGCD;\n  BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n  // JSBN-specific extension\n  BigInteger.prototype.square = bnSquare;\n  var Int128 = BigInteger;\n  // BigInteger interfaces not implemented in jsbn:\n  // BigInteger(int signum, byte[] magnitude)\n  // double doubleValue()\n  // float floatValue()\n  // int hashCode()\n  // long longValue()\n  // static BigInteger valueOf(long val)\n  // Helper functions to make BigInteger functions callable with two parameters\n  // as in original C# Clipper\n  Int128.prototype.IsNegative = function ()\n  {\n    if (this.compareTo(Int128.ZERO) == -1) return true;\n    else return false;\n  };\n  Int128.op_Equality = function (val1, val2)\n  {\n    if (val1.compareTo(val2) == 0) return true;\n    else return false;\n  };\n  Int128.op_Inequality = function (val1, val2)\n  {\n    if (val1.compareTo(val2) != 0) return true;\n    else return false;\n  };\n  Int128.op_GreaterThan = function (val1, val2)\n  {\n    if (val1.compareTo(val2) > 0) return true;\n    else return false;\n  };\n  Int128.op_LessThan = function (val1, val2)\n  {\n    if (val1.compareTo(val2) < 0) return true;\n    else return false;\n  };\n  Int128.op_Addition = function (lhs, rhs)\n  {\n    return new Int128(lhs).add(new Int128(rhs));\n  };\n  Int128.op_Subtraction = function (lhs, rhs)\n  {\n    return new Int128(lhs).subtract(new Int128(rhs));\n  };\n  Int128.Int128Mul = function (lhs, rhs)\n  {\n    return new Int128(lhs).multiply(new Int128(rhs));\n  };\n  Int128.op_Division = function (lhs, rhs)\n  {\n    return lhs.divide(rhs);\n  };\n  Int128.prototype.ToDouble = function ()\n  {\n    return parseFloat(this.toString()); // This could be something faster\n  };\n  // end of Int128 section\n  /*\n  // Uncomment the following two lines if you want to use Int128 outside ClipperLib\n  if (typeof(document) !== \"undefined\") window.Int128 = Int128;\n  else self.Int128 = Int128;\n  */\n\n\n  // ---------------------------------------------\n  // Here starts the actual Clipper library:\n  // Helper function to support Inheritance in Javascript\n\tvar Inherit = function (ce, ce2)\n\t{\n\t\tvar p;\n\t\tif (typeof (Object.getOwnPropertyNames) == 'undefined')\n\t\t{\n\t\t\tfor (p in ce2.prototype)\n\t\t\t\tif (typeof (ce.prototype[p]) == 'undefined' || ce.prototype[p] == Object.prototype[p]) ce.prototype[p] = ce2.prototype[p];\n\t\t\tfor (p in ce2)\n\t\t\t\tif (typeof (ce[p]) == 'undefined') ce[p] = ce2[p];\n\t\t\tce.$baseCtor = ce2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar props = Object.getOwnPropertyNames(ce2.prototype);\n\t\t\tfor (var i = 0; i < props.length; i++)\n\t\t\t\tif (typeof (Object.getOwnPropertyDescriptor(ce.prototype, props[i])) == 'undefined') Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));\n\t\t\tfor (p in ce2)\n\t\t\t\tif (typeof (ce[p]) == 'undefined') ce[p] = ce2[p];\n\t\t\tce.$baseCtor = ce2;\n\t\t}\n\t};\n  ClipperLib.Path = function ()\n  {\n    return [];\n  };\n  ClipperLib.Paths = function ()\n  {\n    return []; // Was previously [[]], but caused problems when pushed\n  };\n  // Preserves the calling way of original C# Clipper\n  // Is essential due to compatibility, because DoublePoint is public class in original C# version\n  ClipperLib.DoublePoint = function ()\n  {\n    var a = arguments;\n    this.X = 0;\n    this.Y = 0;\n    // public DoublePoint(DoublePoint dp)\n    // public DoublePoint(IntPoint ip)\n    if (a.length == 1)\n    {\n      this.X = a[0].X;\n      this.Y = a[0].Y;\n    }\n    else if (a.length == 2)\n    {\n      this.X = a[0];\n      this.Y = a[1];\n    }\n  }; // This is internal faster function when called without arguments\n  ClipperLib.DoublePoint0 = function ()\n  {\n    this.X = 0;\n    this.Y = 0;\n  };\n  // This is internal faster function when called with 1 argument (dp or ip)\n  ClipperLib.DoublePoint1 = function (dp)\n  {\n    this.X = dp.X;\n    this.Y = dp.Y;\n  };\n  // This is internal faster function when called with 2 arguments (x and y)\n  ClipperLib.DoublePoint2 = function (x, y)\n  {\n    this.X = x;\n    this.Y = y;\n  };\n  // PolyTree & PolyNode start\n  // -------------------------------\n  ClipperLib.PolyNode = function ()\n  {\n    this.m_Parent = null;\n    this.m_polygon = new ClipperLib.Path();\n    this.m_Index = 0;\n    this.m_jointype = 0;\n    this.m_endtype = 0;\n    this.m_Childs = [];\n    this.IsOpen = false;\n  };\n  ClipperLib.PolyNode.prototype.IsHoleNode = function ()\n  {\n    var result = true;\n    var node = this.m_Parent;\n    while (node !== null)\n    {\n      result = !result;\n      node = node.m_Parent;\n    }\n    return result;\n  };\n  ClipperLib.PolyNode.prototype.ChildCount = function ()\n  {\n    return this.m_Childs.length;\n  };\n  ClipperLib.PolyNode.prototype.Contour = function ()\n  {\n    return this.m_polygon;\n  };\n  ClipperLib.PolyNode.prototype.AddChild = function (Child)\n  {\n    var cnt = this.m_Childs.length;\n    this.m_Childs.push(Child);\n    Child.m_Parent = this;\n    Child.m_Index = cnt;\n  };\n  ClipperLib.PolyNode.prototype.GetNext = function ()\n  {\n    if (this.m_Childs.length > 0)\n      return this.m_Childs[0];\n    else\n      return this.GetNextSiblingUp();\n  };\n  ClipperLib.PolyNode.prototype.GetNextSiblingUp = function ()\n  {\n    if (this.m_Parent === null)\n      return null;\n    else if (this.m_Index == this.m_Parent.m_Childs.length - 1)\n      return this.m_Parent.GetNextSiblingUp();\n    else\n      return this.m_Parent.m_Childs[this.m_Index + 1];\n  };\n  ClipperLib.PolyNode.prototype.Childs = function ()\n  {\n    return this.m_Childs;\n  };\n  ClipperLib.PolyNode.prototype.Parent = function ()\n  {\n    return this.m_Parent;\n  };\n  ClipperLib.PolyNode.prototype.IsHole = function ()\n  {\n    return this.IsHoleNode();\n  };\n  // PolyTree : PolyNode\n  ClipperLib.PolyTree = function ()\n  {\n    this.m_AllPolys = [];\n    ClipperLib.PolyNode.call(this);\n  };\n  ClipperLib.PolyTree.prototype.Clear = function ()\n  {\n    for (var i = 0, ilen = this.m_AllPolys.length; i < ilen; i++)\n      this.m_AllPolys[i] = null;\n    this.m_AllPolys.length = 0;\n    this.m_Childs.length = 0;\n  };\n  ClipperLib.PolyTree.prototype.GetFirst = function ()\n  {\n    if (this.m_Childs.length > 0)\n      return this.m_Childs[0];\n    else\n      return null;\n  };\n  ClipperLib.PolyTree.prototype.Total = function ()\n  {\n\t\tvar result = this.m_AllPolys.length;\n\t\t//with negative offsets, ignore the hidden outer polygon ...\n\t\tif (result > 0 && this.m_Childs[0] != this.m_AllPolys[0]) result--;\n\t\treturn result;\n  };\n  Inherit(ClipperLib.PolyTree, ClipperLib.PolyNode);\n  // -------------------------------\n  // PolyTree & PolyNode end\n  ClipperLib.Math_Abs_Int64 = ClipperLib.Math_Abs_Int32 = ClipperLib.Math_Abs_Double = function (a)\n  {\n    return Math.abs(a);\n  };\n  ClipperLib.Math_Max_Int32_Int32 = function (a, b)\n  {\n    return Math.max(a, b);\n  };\n  /*\n  -----------------------------------\n  cast_32 speedtest: http://jsperf.com/truncate-float-to-integer/2\n  -----------------------------------\n  */\n  if (browser.msie || browser.opera || browser.safari) ClipperLib.Cast_Int32 = function (a)\n  {\n    return a | 0;\n  };\n  else ClipperLib.Cast_Int32 = function (a)\n  { // eg. browser.chrome || browser.chromium || browser.firefox\n    return~~ a;\n  };\n  /*\n  --------------------------\n  cast_64 speedtests: http://jsperf.com/truncate-float-to-integer\n  Chrome: bitwise_not_floor\n  Firefox17: toInteger (typeof test)\n  IE9: bitwise_or_floor\n  IE7 and IE8: to_parseint\n  Chromium: to_floor_or_ceil\n  Firefox3: to_floor_or_ceil\n  Firefox15: to_floor_or_ceil\n  Opera: to_floor_or_ceil\n  Safari: to_floor_or_ceil\n  --------------------------\n  */\n  if (browser.chrome) ClipperLib.Cast_Int64 = function (a)\n  {\n    if (a < -2147483648 || a > 2147483647)\n      return a < 0 ? Math.ceil(a) : Math.floor(a);\n    else return~~ a;\n  };\n  else if (browser.firefox && typeof (Number.toInteger) == \"function\") ClipperLib.Cast_Int64 = function (a)\n  {\n    return Number.toInteger(a);\n  };\n  else if (browser.msie7 || browser.msie8) ClipperLib.Cast_Int64 = function (a)\n  {\n    return parseInt(a, 10);\n  };\n  else if (browser.msie) ClipperLib.Cast_Int64 = function (a)\n  {\n    if (a < -2147483648 || a > 2147483647)\n      return a < 0 ? Math.ceil(a) : Math.floor(a);\n    return a | 0;\n  };\n  // eg. browser.chromium || browser.firefox || browser.opera || browser.safari\n  else ClipperLib.Cast_Int64 = function (a)\n  {\n    return a < 0 ? Math.ceil(a) : Math.floor(a);\n  };\n  ClipperLib.Clear = function (a)\n  {\n    a.length = 0;\n  };\n  //ClipperLib.MaxSteps = 64; // How many steps at maximum in arc in BuildArc() function\n  ClipperLib.PI = 3.141592653589793;\n  ClipperLib.PI2 = 2 * 3.141592653589793;\n  ClipperLib.IntPoint = function ()\n  {\n    var a = arguments,\n      alen = a.length;\n    this.X = 0;\n    this.Y = 0;\n    if (use_xyz)\n    {\n      this.Z = 0;\n      if (alen == 3) // public IntPoint(cInt x, cInt y, cInt z = 0)\n      {\n        this.X = a[0];\n        this.Y = a[1];\n        this.Z = a[2];\n      }\n      else if (alen == 2) // public IntPoint(cInt x, cInt y)\n      {\n        this.X = a[0];\n        this.Y = a[1];\n        this.Z = 0;\n      }\n      else if (alen == 1)\n      {\n        if (a[0] instanceof ClipperLib.DoublePoint) // public IntPoint(DoublePoint dp)\n        {\n          var dp = a[0];\n          this.X = ClipperLib.Clipper.Round(dp.X);\n          this.Y = ClipperLib.Clipper.Round(dp.Y);\n          this.Z = 0;\n        }\n        else // public IntPoint(IntPoint pt)\n        {\n          var pt = a[0];\n          if (typeof (pt.Z) == \"undefined\") pt.Z = 0;\n          this.X = pt.X;\n          this.Y = pt.Y;\n          this.Z = pt.Z;\n        }\n      }\n      else // public IntPoint()\n      {\n        this.X = 0;\n        this.Y = 0;\n        this.Z = 0;\n      }\n    }\n    else // if (!use_xyz)\n    {\n      if (alen == 2) // public IntPoint(cInt X, cInt Y)\n      {\n        this.X = a[0];\n        this.Y = a[1];\n      }\n      else if (alen == 1)\n      {\n        if (a[0] instanceof ClipperLib.DoublePoint) // public IntPoint(DoublePoint dp)\n        {\n          var dp = a[0];\n          this.X = ClipperLib.Clipper.Round(dp.X);\n          this.Y = ClipperLib.Clipper.Round(dp.Y);\n        }\n        else // public IntPoint(IntPoint pt)\n        {\n          var pt = a[0];\n          this.X = pt.X;\n          this.Y = pt.Y;\n        }\n      }\n      else // public IntPoint(IntPoint pt)\n      {\n        this.X = 0;\n        this.Y = 0;\n      }\n    }\n  };\n  ClipperLib.IntPoint.op_Equality = function (a, b)\n  {\n    //return a == b;\n    return a.X == b.X && a.Y == b.Y;\n  };\n  ClipperLib.IntPoint.op_Inequality = function (a, b)\n  {\n    //return a != b;\n    return a.X != b.X || a.Y != b.Y;\n  };\n  /*\n  ClipperLib.IntPoint.prototype.Equals = function (obj)\n  {\n    if (obj === null)\n        return false;\n    if (obj instanceof ClipperLib.IntPoint)\n    {\n        var a = Cast(obj, ClipperLib.IntPoint);\n        return (this.X == a.X) && (this.Y == a.Y);\n    }\n    else\n        return false;\n  };\n*/\n  if (use_xyz)\n  {\n    ClipperLib.IntPoint0 = function ()\n    {\n      this.X = 0;\n      this.Y = 0;\n      this.Z = 0;\n    };\n    ClipperLib.IntPoint1 = function (pt)\n    {\n      this.X = pt.X;\n      this.Y = pt.Y;\n      this.Z = pt.Z;\n    };\n    ClipperLib.IntPoint1dp = function (dp)\n    {\n      this.X = ClipperLib.Clipper.Round(dp.X);\n      this.Y = ClipperLib.Clipper.Round(dp.Y);\n      this.Z = 0;\n    };\n    ClipperLib.IntPoint2 = function (x, y)\n    {\n      this.X = x;\n      this.Y = y;\n      this.Z = 0;\n    };\n    ClipperLib.IntPoint3 = function (x, y, z)\n    {\n      this.X = x;\n      this.Y = y;\n      this.Z = z;\n    };\n  }\n  else // if (!use_xyz)\n  {\n    ClipperLib.IntPoint0 = function ()\n    {\n      this.X = 0;\n      this.Y = 0;\n    };\n    ClipperLib.IntPoint1 = function (pt)\n    {\n      this.X = pt.X;\n      this.Y = pt.Y;\n    };\n    ClipperLib.IntPoint1dp = function (dp)\n    {\n      this.X = ClipperLib.Clipper.Round(dp.X);\n      this.Y = ClipperLib.Clipper.Round(dp.Y);\n    };\n    ClipperLib.IntPoint2 = function (x, y)\n    {\n      this.X = x;\n      this.Y = y;\n    };\n  }\n  ClipperLib.IntRect = function ()\n  {\n    var a = arguments,\n      alen = a.length;\n    if (alen == 4) // function (l, t, r, b)\n    {\n      this.left = a[0];\n      this.top = a[1];\n      this.right = a[2];\n      this.bottom = a[3];\n    }\n    else if (alen == 1) // function (ir)\n    {\n      this.left = ir.left;\n      this.top = ir.top;\n      this.right = ir.right;\n      this.bottom = ir.bottom;\n    }\n    else // function ()\n    {\n      this.left = 0;\n      this.top = 0;\n      this.right = 0;\n      this.bottom = 0;\n    }\n  };\n  ClipperLib.IntRect0 = function ()\n  {\n    this.left = 0;\n    this.top = 0;\n    this.right = 0;\n    this.bottom = 0;\n  };\n  ClipperLib.IntRect1 = function (ir)\n  {\n    this.left = ir.left;\n    this.top = ir.top;\n    this.right = ir.right;\n    this.bottom = ir.bottom;\n  };\n  ClipperLib.IntRect4 = function (l, t, r, b)\n  {\n    this.left = l;\n    this.top = t;\n    this.right = r;\n    this.bottom = b;\n  };\n  ClipperLib.ClipType = {\n    ctIntersection: 0,\n    ctUnion: 1,\n    ctDifference: 2,\n    ctXor: 3\n  };\n  ClipperLib.PolyType = {\n    ptSubject: 0,\n    ptClip: 1\n  };\n  ClipperLib.PolyFillType = {\n    pftEvenOdd: 0,\n    pftNonZero: 1,\n    pftPositive: 2,\n    pftNegative: 3\n  };\n  ClipperLib.JoinType = {\n    jtSquare: 0,\n    jtRound: 1,\n    jtMiter: 2\n  };\n  ClipperLib.EndType = {\n    etOpenSquare: 0,\n    etOpenRound: 1,\n    etOpenButt: 2,\n    etClosedLine: 3,\n    etClosedPolygon: 4\n  };\n  ClipperLib.EdgeSide = {\n    esLeft: 0,\n    esRight: 1\n  };\n  ClipperLib.Direction = {\n    dRightToLeft: 0,\n    dLeftToRight: 1\n  };\n  ClipperLib.TEdge = function ()\n  {\n    this.Bot = new ClipperLib.IntPoint();\n    this.Curr = new ClipperLib.IntPoint();\n    this.Top = new ClipperLib.IntPoint();\n    this.Delta = new ClipperLib.IntPoint();\n    this.Dx = 0;\n    this.PolyTyp = ClipperLib.PolyType.ptSubject;\n    this.Side = ClipperLib.EdgeSide.esLeft;\n    this.WindDelta = 0;\n    this.WindCnt = 0;\n    this.WindCnt2 = 0;\n    this.OutIdx = 0;\n    this.Next = null;\n    this.Prev = null;\n    this.NextInLML = null;\n    this.NextInAEL = null;\n    this.PrevInAEL = null;\n    this.NextInSEL = null;\n    this.PrevInSEL = null;\n  };\n  ClipperLib.IntersectNode = function ()\n  {\n    this.Edge1 = null;\n    this.Edge2 = null;\n    this.Pt = new ClipperLib.IntPoint();\n  };\n  ClipperLib.MyIntersectNodeSort = function () {};\n  ClipperLib.MyIntersectNodeSort.Compare = function (node1, node2)\n  {\n    var i = node2.Pt.Y - node1.Pt.Y;\n    if (i > 0) return 1;\n    else if (i < 0) return -1;\n    else return 0;\n  };\n\n  ClipperLib.LocalMinima = function ()\n  {\n    this.Y = 0;\n    this.LeftBound = null;\n    this.RightBound = null;\n    this.Next = null;\n  };\n  ClipperLib.Scanbeam = function ()\n  {\n    this.Y = 0;\n    this.Next = null;\n  };\n  ClipperLib.OutRec = function ()\n  {\n    this.Idx = 0;\n    this.IsHole = false;\n    this.IsOpen = false;\n    this.FirstLeft = null;\n    this.Pts = null;\n    this.BottomPt = null;\n    this.PolyNode = null;\n  };\n  ClipperLib.OutPt = function ()\n  {\n    this.Idx = 0;\n    this.Pt = new ClipperLib.IntPoint();\n    this.Next = null;\n    this.Prev = null;\n  };\n  ClipperLib.Join = function ()\n  {\n    this.OutPt1 = null;\n    this.OutPt2 = null;\n    this.OffPt = new ClipperLib.IntPoint();\n  };\n  ClipperLib.ClipperBase = function ()\n  {\n    this.m_MinimaList = null;\n    this.m_CurrentLM = null;\n    this.m_edges = new Array();\n    this.m_UseFullRange = false;\n    this.m_HasOpenPaths = false;\n    this.PreserveCollinear = false;\n    this.m_MinimaList = null;\n    this.m_CurrentLM = null;\n    this.m_UseFullRange = false;\n    this.m_HasOpenPaths = false;\n  };\n  // Ranges are in original C# too high for Javascript (in current state 2013 september):\n  // protected const double horizontal = -3.4E+38;\n  // internal const cInt loRange = 0x3FFFFFFF; // = 1073741823 = sqrt(2^63 -1)/2\n  // internal const cInt hiRange = 0x3FFFFFFFFFFFFFFFL; // = 4611686018427387903 = sqrt(2^127 -1)/2\n  // So had to adjust them to more suitable for Javascript.\n  // If JS some day supports truly 64-bit integers, then these ranges can be as in C#\n  // and biginteger library can be more simpler (as then 128bit can be represented as two 64bit numbers)\n  ClipperLib.ClipperBase.horizontal = -9007199254740992; //-2^53\n  ClipperLib.ClipperBase.Skip = -2;\n  ClipperLib.ClipperBase.Unassigned = -1;\n  ClipperLib.ClipperBase.tolerance = 1E-20;\n  if (use_int32)\n  {\n    ClipperLib.ClipperBase.loRange = 0x7FFF;\n    ClipperLib.ClipperBase.hiRange = 0x7FFF;\n  }\n  else\n  {\n    ClipperLib.ClipperBase.loRange = 47453132; // sqrt(2^53 -1)/2\n    ClipperLib.ClipperBase.hiRange = 4503599627370495; // sqrt(2^106 -1)/2\n  }\n\n  ClipperLib.ClipperBase.near_zero = function (val)\n  {\n    return (val > -ClipperLib.ClipperBase.tolerance) && (val < ClipperLib.ClipperBase.tolerance);\n  };\n  ClipperLib.ClipperBase.IsHorizontal = function (e)\n  {\n    return e.Delta.Y === 0;\n  };\n  ClipperLib.ClipperBase.prototype.PointIsVertex = function (pt, pp)\n  {\n    var pp2 = pp;\n    do {\n      if (ClipperLib.IntPoint.op_Equality(pp2.Pt, pt))\n        return true;\n      pp2 = pp2.Next;\n    }\n    while (pp2 != pp)\n    return false;\n  };\n  ClipperLib.ClipperBase.prototype.PointOnLineSegment = function (pt, linePt1, linePt2, UseFullRange)\n  {\n    if (UseFullRange)\n      return ((pt.X == linePt1.X) && (pt.Y == linePt1.Y)) ||\n        ((pt.X == linePt2.X) && (pt.Y == linePt2.Y)) ||\n        (((pt.X > linePt1.X) == (pt.X < linePt2.X)) &&\n        ((pt.Y > linePt1.Y) == (pt.Y < linePt2.Y)) &&\n        (Int128.op_Equality(Int128.Int128Mul((pt.X - linePt1.X), (linePt2.Y - linePt1.Y)),\n          Int128.Int128Mul((linePt2.X - linePt1.X), (pt.Y - linePt1.Y)))));\n    else\n      return ((pt.X == linePt1.X) && (pt.Y == linePt1.Y)) || ((pt.X == linePt2.X) && (pt.Y == linePt2.Y)) || (((pt.X > linePt1.X) == (pt.X < linePt2.X)) && ((pt.Y > linePt1.Y) == (pt.Y < linePt2.Y)) && ((pt.X - linePt1.X) * (linePt2.Y - linePt1.Y) == (linePt2.X - linePt1.X) * (pt.Y - linePt1.Y)));\n  };\n  ClipperLib.ClipperBase.prototype.PointOnPolygon = function (pt, pp, UseFullRange)\n  {\n    var pp2 = pp;\n    while (true)\n    {\n      if (this.PointOnLineSegment(pt, pp2.Pt, pp2.Next.Pt, UseFullRange))\n        return true;\n      pp2 = pp2.Next;\n      if (pp2 == pp)\n        break;\n    }\n    return false;\n  };\n  ClipperLib.ClipperBase.prototype.SlopesEqual = ClipperLib.ClipperBase.SlopesEqual = function ()\n  {\n    var a = arguments,\n      alen = a.length;\n    var e1, e2, pt1, pt2, pt3, pt4, UseFullRange;\n    if (alen == 3) // function (e1, e2, UseFullRange)\n    {\n      e1 = a[0];\n      e2 = a[1];\n      UseFullRange = a[2];\n      if (UseFullRange)\n        return Int128.op_Equality(Int128.Int128Mul(e1.Delta.Y, e2.Delta.X), Int128.Int128Mul(e1.Delta.X, e2.Delta.Y));\n      else\n        return ClipperLib.Cast_Int64((e1.Delta.Y) * (e2.Delta.X)) == ClipperLib.Cast_Int64((e1.Delta.X) * (e2.Delta.Y));\n    }\n    else if (alen == 4) // function (pt1, pt2, pt3, UseFullRange)\n    {\n      pt1 = a[0];\n      pt2 = a[1];\n      pt3 = a[2];\n      UseFullRange = a[3];\n      if (UseFullRange)\n        return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt2.X - pt3.X), Int128.Int128Mul(pt1.X - pt2.X, pt2.Y - pt3.Y));\n      else\n        return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt2.X - pt3.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt2.Y - pt3.Y)) === 0;\n    }\n    else // function (pt1, pt2, pt3, pt4, UseFullRange)\n    {\n      pt1 = a[0];\n      pt2 = a[1];\n      pt3 = a[2];\n      pt4 = a[3];\n      UseFullRange = a[4];\n      if (UseFullRange)\n        return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt3.X - pt4.X), Int128.Int128Mul(pt1.X - pt2.X, pt3.Y - pt4.Y));\n      else\n        return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt3.X - pt4.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt3.Y - pt4.Y)) === 0;\n    }\n  };\n  ClipperLib.ClipperBase.SlopesEqual3 = function (e1, e2, UseFullRange)\n  {\n    if (UseFullRange)\n      return Int128.op_Equality(Int128.Int128Mul(e1.Delta.Y, e2.Delta.X), Int128.Int128Mul(e1.Delta.X, e2.Delta.Y));\n    else\n      return ClipperLib.Cast_Int64((e1.Delta.Y) * (e2.Delta.X)) == ClipperLib.Cast_Int64((e1.Delta.X) * (e2.Delta.Y));\n  };\n  ClipperLib.ClipperBase.SlopesEqual4 = function (pt1, pt2, pt3, UseFullRange)\n  {\n    if (UseFullRange)\n      return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt2.X - pt3.X), Int128.Int128Mul(pt1.X - pt2.X, pt2.Y - pt3.Y));\n    else\n      return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt2.X - pt3.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt2.Y - pt3.Y)) === 0;\n  };\n  ClipperLib.ClipperBase.SlopesEqual5 = function (pt1, pt2, pt3, pt4, UseFullRange)\n  {\n    if (UseFullRange)\n      return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt3.X - pt4.X), Int128.Int128Mul(pt1.X - pt2.X, pt3.Y - pt4.Y));\n    else\n      return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt3.X - pt4.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt3.Y - pt4.Y)) === 0;\n  };\n  ClipperLib.ClipperBase.prototype.Clear = function ()\n  {\n    this.DisposeLocalMinimaList();\n    for (var i = 0, ilen = this.m_edges.length; i < ilen; ++i)\n    {\n      for (var j = 0, jlen = this.m_edges[i].length; j < jlen; ++j)\n        this.m_edges[i][j] = null;\n      ClipperLib.Clear(this.m_edges[i]);\n    }\n    ClipperLib.Clear(this.m_edges);\n    this.m_UseFullRange = false;\n    this.m_HasOpenPaths = false;\n  };\n  ClipperLib.ClipperBase.prototype.DisposeLocalMinimaList = function ()\n  {\n    while (this.m_MinimaList !== null)\n    {\n      var tmpLm = this.m_MinimaList.Next;\n      this.m_MinimaList = null;\n      this.m_MinimaList = tmpLm;\n    }\n    this.m_CurrentLM = null;\n  };\n  ClipperLib.ClipperBase.prototype.RangeTest = function (Pt, useFullRange)\n  {\n    if (useFullRange.Value)\n    {\n      if (Pt.X > ClipperLib.ClipperBase.hiRange || Pt.Y > ClipperLib.ClipperBase.hiRange || -Pt.X > ClipperLib.ClipperBase.hiRange || -Pt.Y > ClipperLib.ClipperBase.hiRange)\n        ClipperLib.Error(\"Coordinate outside allowed range in RangeTest().\");\n    }\n    else if (Pt.X > ClipperLib.ClipperBase.loRange || Pt.Y > ClipperLib.ClipperBase.loRange || -Pt.X > ClipperLib.ClipperBase.loRange || -Pt.Y > ClipperLib.ClipperBase.loRange)\n    {\n      useFullRange.Value = true;\n      this.RangeTest(Pt, useFullRange);\n    }\n  };\n  ClipperLib.ClipperBase.prototype.InitEdge = function (e, eNext, ePrev, pt)\n  {\n    e.Next = eNext;\n    e.Prev = ePrev;\n    //e.Curr = pt;\n    e.Curr.X = pt.X;\n    e.Curr.Y = pt.Y;\n    e.OutIdx = -1;\n  };\n  ClipperLib.ClipperBase.prototype.InitEdge2 = function (e, polyType)\n  {\n    if (e.Curr.Y >= e.Next.Curr.Y)\n    {\n      //e.Bot = e.Curr;\n      e.Bot.X = e.Curr.X;\n      e.Bot.Y = e.Curr.Y;\n      //e.Top = e.Next.Curr;\n      e.Top.X = e.Next.Curr.X;\n      e.Top.Y = e.Next.Curr.Y;\n    }\n    else\n    {\n      //e.Top = e.Curr;\n      e.Top.X = e.Curr.X;\n      e.Top.Y = e.Curr.Y;\n      //e.Bot = e.Next.Curr;\n      e.Bot.X = e.Next.Curr.X;\n      e.Bot.Y = e.Next.Curr.Y;\n    }\n    this.SetDx(e);\n    e.PolyTyp = polyType;\n  };\n  ClipperLib.ClipperBase.prototype.FindNextLocMin = function (E)\n  {\n    var E2;\n    for (;;)\n    {\n      while (ClipperLib.IntPoint.op_Inequality(E.Bot, E.Prev.Bot) || ClipperLib.IntPoint.op_Equality(E.Curr, E.Top))\n        E = E.Next;\n      if (E.Dx != ClipperLib.ClipperBase.horizontal && E.Prev.Dx != ClipperLib.ClipperBase.horizontal)\n        break;\n      while (E.Prev.Dx == ClipperLib.ClipperBase.horizontal)\n        E = E.Prev;\n      E2 = E;\n      while (E.Dx == ClipperLib.ClipperBase.horizontal)\n        E = E.Next;\n      if (E.Top.Y == E.Prev.Bot.Y)\n        continue;\n      //ie just an intermediate horz.\n      if (E2.Prev.Bot.X < E.Bot.X)\n        E = E2;\n      break;\n    }\n    return E;\n  };\n  ClipperLib.ClipperBase.prototype.ProcessBound = function (E, LeftBoundIsForward)\n  {\n    var EStart;\n    var Result = E;\n    var Horz;\n\n      if (Result.OutIdx == ClipperLib.ClipperBase.Skip)\n      {\n        //check if there are edges beyond the skip edge in the bound and if so\n        //create another LocMin and calling ProcessBound once more ...\n        E = Result;\n        if (LeftBoundIsForward)\n        {\n          while (E.Top.Y == E.Next.Bot.Y) E = E.Next;\n          while (E != Result && E.Dx == ClipperLib.ClipperBase.horizontal) E = E.Prev;\n        }\n        else\n        {\n          while (E.Top.Y == E.Prev.Bot.Y) E = E.Prev;\n          while (E != Result && E.Dx == ClipperLib.ClipperBase.horizontal) E = E.Next;\n        }\n        if (E == Result)\n        {\n          if (LeftBoundIsForward) Result = E.Next;\n          else Result = E.Prev;\n        }\n        else\n        {\n          //there are more edges in the bound beyond result starting with E\n          if (LeftBoundIsForward)\n            E = Result.Next;\n          else\n            E = Result.Prev;\n          var locMin = new ClipperLib.LocalMinima();\n          locMin.Next = null;\n          locMin.Y = E.Bot.Y;\n          locMin.LeftBound = null;\n          locMin.RightBound = E;\n          E.WindDelta = 0;\n          Result = this.ProcessBound(E, LeftBoundIsForward);\n          this.InsertLocalMinima(locMin);\n        }\n        return Result;\n      }\n\n      if (E.Dx == ClipperLib.ClipperBase.horizontal)\n      {\n        //We need to be careful with open paths because this may not be a\n        //true local minima (ie E may be following a skip edge).\n        //Also, consecutive horz. edges may start heading left before going right.\n        if (LeftBoundIsForward) EStart = E.Prev;\n        else EStart = E.Next;\n        if (EStart.OutIdx != ClipperLib.ClipperBase.Skip)\n        {\n          if (EStart.Dx == ClipperLib.ClipperBase.horizontal) //ie an adjoining horizontal skip edge\n          {\n            if (EStart.Bot.X != E.Bot.X && EStart.Top.X != E.Bot.X)\n              this.ReverseHorizontal(E);\n          }\n          else if (EStart.Bot.X != E.Bot.X)\n            this.ReverseHorizontal(E);\n        }\n      }\n\n      EStart = E;\n      if (LeftBoundIsForward)\n      {\n        while (Result.Top.Y == Result.Next.Bot.Y && Result.Next.OutIdx != ClipperLib.ClipperBase.Skip)\n          Result = Result.Next;\n        if (Result.Dx == ClipperLib.ClipperBase.horizontal && Result.Next.OutIdx != ClipperLib.ClipperBase.Skip)\n        {\n          //nb: at the top of a bound, horizontals are added to the bound\n          //only when the preceding edge attaches to the horizontal's left vertex\n          //unless a Skip edge is encountered when that becomes the top divide\n          Horz = Result;\n          while (Horz.Prev.Dx == ClipperLib.ClipperBase.horizontal)\n            Horz = Horz.Prev;\n          if (Horz.Prev.Top.X == Result.Next.Top.X)\n          {\n            if (!LeftBoundIsForward)\n              Result = Horz.Prev;\n          }\n          else if (Horz.Prev.Top.X > Result.Next.Top.X)\n            Result = Horz.Prev;\n        }\n        while (E != Result)\n        {\n          E.NextInLML = E.Next;\n          if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Prev.Top.X)\n            this.ReverseHorizontal(E);\n          E = E.Next;\n        }\n        if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Prev.Top.X)\n          this.ReverseHorizontal(E);\n        Result = Result.Next;\n        //move to the edge just beyond current bound\n      }\n      else\n      {\n        while (Result.Top.Y == Result.Prev.Bot.Y && Result.Prev.OutIdx != ClipperLib.ClipperBase.Skip)\n          Result = Result.Prev;\n        if (Result.Dx == ClipperLib.ClipperBase.horizontal && Result.Prev.OutIdx != ClipperLib.ClipperBase.Skip)\n        {\n          Horz = Result;\n          while (Horz.Next.Dx == ClipperLib.ClipperBase.horizontal)\n            Horz = Horz.Next;\n          if (Horz.Next.Top.X == Result.Prev.Top.X)\n          {\n            if (!LeftBoundIsForward)\n              Result = Horz.Next;\n          }\n          else if (Horz.Next.Top.X > Result.Prev.Top.X)\n            Result = Horz.Next;\n        }\n        while (E != Result)\n        {\n          E.NextInLML = E.Prev;\n          if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Next.Top.X)\n            this.ReverseHorizontal(E);\n          E = E.Prev;\n        }\n        if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Next.Top.X)\n          this.ReverseHorizontal(E);\n        Result = Result.Prev;\n        //move to the edge just beyond current bound\n      }\n\n    return Result;\n  };\n\n  ClipperLib.ClipperBase.prototype.AddPath = function (pg, polyType, Closed)\n  {\n    if (use_lines)\n    {\n      if (!Closed && polyType == ClipperLib.PolyType.ptClip)\n        ClipperLib.Error(\"AddPath: Open paths must be subject.\");\n    }\n    else\n    {\n      if (!Closed)\n        ClipperLib.Error(\"AddPath: Open paths have been disabled.\");\n    }\n    var highI = pg.length - 1;\n    if (Closed)\n      while (highI > 0 && (ClipperLib.IntPoint.op_Equality(pg[highI], pg[0])))\n    --highI;\n    while (highI > 0 && (ClipperLib.IntPoint.op_Equality(pg[highI], pg[highI - 1])))\n    --highI;\n    if ((Closed && highI < 2) || (!Closed && highI < 1))\n      return false;\n    //create a new edge array ...\n    var edges = new Array();\n    for (var i = 0; i <= highI; i++)\n      edges.push(new ClipperLib.TEdge());\n    var IsFlat = true;\n    //1. Basic (first) edge initialization ...\n\n    //edges[1].Curr = pg[1];\n    edges[1].Curr.X = pg[1].X;\n    edges[1].Curr.Y = pg[1].Y;\n\n    var $1 = {Value: this.m_UseFullRange};\n    this.RangeTest(pg[0], $1);\n    this.m_UseFullRange = $1.Value;\n\n    $1.Value = this.m_UseFullRange;\n    this.RangeTest(pg[highI], $1);\n    this.m_UseFullRange = $1.Value;\n\n    this.InitEdge(edges[0], edges[1], edges[highI], pg[0]);\n    this.InitEdge(edges[highI], edges[0], edges[highI - 1], pg[highI]);\n    for (var i = highI - 1; i >= 1; --i)\n    {\n      $1.Value = this.m_UseFullRange;\n      this.RangeTest(pg[i], $1);\n      this.m_UseFullRange = $1.Value;\n\n      this.InitEdge(edges[i], edges[i + 1], edges[i - 1], pg[i]);\n    }\n\n    var eStart = edges[0];\n    //2. Remove duplicate vertices, and (when closed) collinear edges ...\n    var E = eStart,\n      eLoopStop = eStart;\n    for (;;)\n    {\n    //console.log(E.Next, eStart);\n    \t//nb: allows matching start and end points when not Closed ...\n      if (E.Curr == E.Next.Curr && (Closed || E.Next != eStart))\n      {\n        if (E == E.Next)\n          break;\n        if (E == eStart)\n          eStart = E.Next;\n        E = this.RemoveEdge(E);\n        eLoopStop = E;\n        continue;\n      }\n      if (E.Prev == E.Next)\n        break;\n      else if (Closed && ClipperLib.ClipperBase.SlopesEqual(E.Prev.Curr, E.Curr, E.Next.Curr, this.m_UseFullRange) && (!this.PreserveCollinear || !this.Pt2IsBetweenPt1AndPt3(E.Prev.Curr, E.Curr, E.Next.Curr)))\n      {\n        //Collinear edges are allowed for open paths but in closed paths\n        //the default is to merge adjacent collinear edges into a single edge.\n        //However, if the PreserveCollinear property is enabled, only overlapping\n        //collinear edges (ie spikes) will be removed from closed paths.\n        if (E == eStart)\n          eStart = E.Next;\n        E = this.RemoveEdge(E);\n        E = E.Prev;\n        eLoopStop = E;\n        continue;\n      }\n      E = E.Next;\n      if ((E == eLoopStop) || (!Closed && E.Next == eStart)) break;\n    }\n    if ((!Closed && (E == E.Next)) || (Closed && (E.Prev == E.Next)))\n      return false;\n    if (!Closed)\n    {\n      this.m_HasOpenPaths = true;\n      eStart.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n    }\n    //3. Do second stage of edge initialization ...\n    E = eStart;\n    do {\n      this.InitEdge2(E, polyType);\n      E = E.Next;\n      if (IsFlat && E.Curr.Y != eStart.Curr.Y)\n        IsFlat = false;\n    }\n    while (E != eStart)\n    //4. Finally, add edge bounds to LocalMinima list ...\n    //Totally flat paths must be handled differently when adding them\n    //to LocalMinima list to avoid endless loops etc ...\n    if (IsFlat)\n    {\n      if (Closed)\n        return false;\n      E.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n      if (E.Prev.Bot.X < E.Prev.Top.X)\n        this.ReverseHorizontal(E.Prev);\n      var locMin = new ClipperLib.LocalMinima();\n      locMin.Next = null;\n      locMin.Y = E.Bot.Y;\n      locMin.LeftBound = null;\n      locMin.RightBound = E;\n      locMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n      locMin.RightBound.WindDelta = 0;\n      while (E.Next.OutIdx != ClipperLib.ClipperBase.Skip)\n      {\n        E.NextInLML = E.Next;\n        if (E.Bot.X != E.Prev.Top.X)\n          this.ReverseHorizontal(E);\n        E = E.Next;\n      }\n      this.InsertLocalMinima(locMin);\n      this.m_edges.push(edges);\n      return true;\n    }\n    this.m_edges.push(edges);\n    var leftBoundIsForward;\n    var EMin = null;\n\n\t\t//workaround to avoid an endless loop in the while loop below when\n    //open paths have matching start and end points ...\n    if(ClipperLib.IntPoint.op_Equality(E.Prev.Bot, E.Prev.Top))\n    \tE = E.Next;\n\n    for (;;)\n    {\n      E = this.FindNextLocMin(E);\n      if (E == EMin)\n        break;\n      else if (EMin == null)\n        EMin = E;\n      //E and E.Prev now share a local minima (left aligned if horizontal).\n      //Compare their slopes to find which starts which bound ...\n      var locMin = new ClipperLib.LocalMinima();\n      locMin.Next = null;\n      locMin.Y = E.Bot.Y;\n      if (E.Dx < E.Prev.Dx)\n      {\n        locMin.LeftBound = E.Prev;\n        locMin.RightBound = E;\n        leftBoundIsForward = false;\n        //Q.nextInLML = Q.prev\n      }\n      else\n      {\n        locMin.LeftBound = E;\n        locMin.RightBound = E.Prev;\n        leftBoundIsForward = true;\n        //Q.nextInLML = Q.next\n      }\n      locMin.LeftBound.Side = ClipperLib.EdgeSide.esLeft;\n      locMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n      if (!Closed)\n        locMin.LeftBound.WindDelta = 0;\n      else if (locMin.LeftBound.Next == locMin.RightBound)\n        locMin.LeftBound.WindDelta = -1;\n      else\n        locMin.LeftBound.WindDelta = 1;\n      locMin.RightBound.WindDelta = -locMin.LeftBound.WindDelta;\n      E = this.ProcessBound(locMin.LeftBound, leftBoundIsForward);\n      if (E.OutIdx == ClipperLib.ClipperBase.Skip)\n      \tE = this.ProcessBound(E, leftBoundIsForward);\n      var E2 = this.ProcessBound(locMin.RightBound, !leftBoundIsForward);\n      if (E2.OutIdx == ClipperLib.ClipperBase.Skip) E2 = this.ProcessBound(E2, !leftBoundIsForward);\n      if (locMin.LeftBound.OutIdx == ClipperLib.ClipperBase.Skip)\n        locMin.LeftBound = null;\n      else if (locMin.RightBound.OutIdx == ClipperLib.ClipperBase.Skip)\n        locMin.RightBound = null;\n      this.InsertLocalMinima(locMin);\n      if (!leftBoundIsForward)\n        E = E2;\n    }\n    return true;\n  };\n  ClipperLib.ClipperBase.prototype.AddPaths = function (ppg, polyType, closed)\n  {\n    //  console.log(\"-------------------------------------------\");\n    //  console.log(JSON.stringify(ppg));\n    var result = false;\n    for (var i = 0, ilen = ppg.length; i < ilen; ++i)\n      if (this.AddPath(ppg[i], polyType, closed))\n        result = true;\n    return result;\n  };\n  //------------------------------------------------------------------------------\n  ClipperLib.ClipperBase.prototype.Pt2IsBetweenPt1AndPt3 = function (pt1, pt2, pt3)\n  {\n    if ((ClipperLib.IntPoint.op_Equality(pt1, pt3)) || (ClipperLib.IntPoint.op_Equality(pt1, pt2)) ||       (ClipperLib.IntPoint.op_Equality(pt3, pt2)))\n\n   //if ((pt1 == pt3) || (pt1 == pt2) || (pt3 == pt2))\n   return false;\n\n    else if (pt1.X != pt3.X)\n      return (pt2.X > pt1.X) == (pt2.X < pt3.X);\n    else\n      return (pt2.Y > pt1.Y) == (pt2.Y < pt3.Y);\n  };\n  ClipperLib.ClipperBase.prototype.RemoveEdge = function (e)\n  {\n    //removes e from double_linked_list (but without removing from memory)\n    e.Prev.Next = e.Next;\n    e.Next.Prev = e.Prev;\n    var result = e.Next;\n    e.Prev = null; //flag as removed (see ClipperBase.Clear)\n    return result;\n  };\n  ClipperLib.ClipperBase.prototype.SetDx = function (e)\n  {\n    e.Delta.X = (e.Top.X - e.Bot.X);\n    e.Delta.Y = (e.Top.Y - e.Bot.Y);\n    if (e.Delta.Y === 0) e.Dx = ClipperLib.ClipperBase.horizontal;\n    else e.Dx = (e.Delta.X) / (e.Delta.Y);\n  };\n  ClipperLib.ClipperBase.prototype.InsertLocalMinima = function (newLm)\n  {\n    if (this.m_MinimaList === null)\n    {\n      this.m_MinimaList = newLm;\n    }\n    else if (newLm.Y >= this.m_MinimaList.Y)\n    {\n      newLm.Next = this.m_MinimaList;\n      this.m_MinimaList = newLm;\n    }\n    else\n    {\n      var tmpLm = this.m_MinimaList;\n      while (tmpLm.Next !== null && (newLm.Y < tmpLm.Next.Y))\n        tmpLm = tmpLm.Next;\n      newLm.Next = tmpLm.Next;\n      tmpLm.Next = newLm;\n    }\n  };\n  ClipperLib.ClipperBase.prototype.PopLocalMinima = function ()\n  {\n    if (this.m_CurrentLM === null)\n      return;\n    this.m_CurrentLM = this.m_CurrentLM.Next;\n  };\n  ClipperLib.ClipperBase.prototype.ReverseHorizontal = function (e)\n  {\n    //swap horizontal edges' top and bottom x's so they follow the natural\n    //progression of the bounds - ie so their xbots will align with the\n    //adjoining lower edge. [Helpful in the ProcessHorizontal() method.]\n    var tmp = e.Top.X;\n    e.Top.X = e.Bot.X;\n    e.Bot.X = tmp;\n    if (use_xyz)\n    {\n      tmp = e.Top.Z;\n      e.Top.Z = e.Bot.Z;\n      e.Bot.Z = tmp;\n    }\n  };\n  ClipperLib.ClipperBase.prototype.Reset = function ()\n  {\n    this.m_CurrentLM = this.m_MinimaList;\n    if (this.m_CurrentLM == null)\n      return;\n    //ie nothing to process\n    //reset all edges ...\n    var lm = this.m_MinimaList;\n    while (lm != null)\n    {\n      var e = lm.LeftBound;\n      if (e != null)\n      {\n        //e.Curr = e.Bot;\n        e.Curr.X = e.Bot.X;\n        e.Curr.Y = e.Bot.Y;\n        e.Side = ClipperLib.EdgeSide.esLeft;\n        e.OutIdx = ClipperLib.ClipperBase.Unassigned;\n      }\n      e = lm.RightBound;\n      if (e != null)\n      {\n        //e.Curr = e.Bot;\n        e.Curr.X = e.Bot.X;\n        e.Curr.Y = e.Bot.Y;\n        e.Side = ClipperLib.EdgeSide.esRight;\n        e.OutIdx = ClipperLib.ClipperBase.Unassigned;\n      }\n      lm = lm.Next;\n    }\n  };\n  ClipperLib.Clipper = function (InitOptions) // public Clipper(int InitOptions = 0)\n  {\n    if (typeof (InitOptions) == \"undefined\") InitOptions = 0;\n    this.m_PolyOuts = null;\n    this.m_ClipType = ClipperLib.ClipType.ctIntersection;\n    this.m_Scanbeam = null;\n    this.m_ActiveEdges = null;\n    this.m_SortedEdges = null;\n    this.m_IntersectList = null;\n    this.m_IntersectNodeComparer = null;\n    this.m_ExecuteLocked = false;\n    this.m_ClipFillType = ClipperLib.PolyFillType.pftEvenOdd;\n    this.m_SubjFillType = ClipperLib.PolyFillType.pftEvenOdd;\n    this.m_Joins = null;\n    this.m_GhostJoins = null;\n    this.m_UsingPolyTree = false;\n    this.ReverseSolution = false;\n    this.StrictlySimple = false;\n    ClipperLib.ClipperBase.call(this);\n    this.m_Scanbeam = null;\n    this.m_ActiveEdges = null;\n    this.m_SortedEdges = null;\n    this.m_IntersectList = new Array();\n    this.m_IntersectNodeComparer = ClipperLib.MyIntersectNodeSort.Compare;\n    this.m_ExecuteLocked = false;\n    this.m_UsingPolyTree = false;\n    this.m_PolyOuts = new Array();\n    this.m_Joins = new Array();\n    this.m_GhostJoins = new Array();\n    this.ReverseSolution = (1 & InitOptions) !== 0;\n    this.StrictlySimple = (2 & InitOptions) !== 0;\n    this.PreserveCollinear = (4 & InitOptions) !== 0;\n    if (use_xyz)\n    {\n      this.ZFillFunction = null; // function (IntPoint vert1, IntPoint vert2, ref IntPoint intersectPt);\n    }\n  };\n  ClipperLib.Clipper.ioReverseSolution = 1;\n  ClipperLib.Clipper.ioStrictlySimple = 2;\n  ClipperLib.Clipper.ioPreserveCollinear = 4;\n\n  ClipperLib.Clipper.prototype.Clear = function ()\n  {\n    if (this.m_edges.length === 0)\n      return;\n    //avoids problems with ClipperBase destructor\n    this.DisposeAllPolyPts();\n    ClipperLib.ClipperBase.prototype.Clear.call(this);\n  };\n\n  ClipperLib.Clipper.prototype.DisposeScanbeamList = function ()\n  {\n    while (this.m_Scanbeam !== null)\n    {\n      var sb2 = this.m_Scanbeam.Next;\n      this.m_Scanbeam = null;\n      this.m_Scanbeam = sb2;\n    }\n  };\n  ClipperLib.Clipper.prototype.Reset = function ()\n  {\n    ClipperLib.ClipperBase.prototype.Reset.call(this);\n    this.m_Scanbeam = null;\n    this.m_ActiveEdges = null;\n    this.m_SortedEdges = null;\n\n    var lm = this.m_MinimaList;\n    while (lm !== null)\n    {\n      this.InsertScanbeam(lm.Y);\n      lm = lm.Next;\n    }\n  };\n  ClipperLib.Clipper.prototype.InsertScanbeam = function (Y)\n  {\n    if (this.m_Scanbeam === null)\n    {\n      this.m_Scanbeam = new ClipperLib.Scanbeam();\n      this.m_Scanbeam.Next = null;\n      this.m_Scanbeam.Y = Y;\n    }\n    else if (Y > this.m_Scanbeam.Y)\n    {\n      var newSb = new ClipperLib.Scanbeam();\n      newSb.Y = Y;\n      newSb.Next = this.m_Scanbeam;\n      this.m_Scanbeam = newSb;\n    }\n    else\n    {\n      var sb2 = this.m_Scanbeam;\n      while (sb2.Next !== null && (Y <= sb2.Next.Y))\n        sb2 = sb2.Next;\n      if (Y == sb2.Y)\n        return;\n      //ie ignores duplicates\n      var newSb = new ClipperLib.Scanbeam();\n      newSb.Y = Y;\n      newSb.Next = sb2.Next;\n      sb2.Next = newSb;\n    }\n  };\n  // ************************************\n  ClipperLib.Clipper.prototype.Execute = function ()\n  {\n    var a = arguments,\n      alen = a.length,\n      ispolytree = a[1] instanceof ClipperLib.PolyTree;\n    if (alen == 4 && !ispolytree) // function (clipType, solution, subjFillType, clipFillType)\n    {\n      var clipType = a[0],\n        solution = a[1],\n        subjFillType = a[2],\n        clipFillType = a[3];\n      if (this.m_ExecuteLocked)\n        return false;\n      if (this.m_HasOpenPaths)\n        ClipperLib.Error(\"Error: PolyTree struct is need for open path clipping.\");\n      this.m_ExecuteLocked = true;\n      ClipperLib.Clear(solution);\n      this.m_SubjFillType = subjFillType;\n      this.m_ClipFillType = clipFillType;\n      this.m_ClipType = clipType;\n      this.m_UsingPolyTree = false;\n      try\n      {\n        var succeeded = this.ExecuteInternal();\n        //build the return polygons ...\n        if (succeeded) this.BuildResult(solution);\n      }\n      finally\n      {\n        this.DisposeAllPolyPts();\n        this.m_ExecuteLocked = false;\n      }\n      return succeeded;\n    }\n    else if (alen == 4 && ispolytree) // function (clipType, polytree, subjFillType, clipFillType)\n    {\n      var clipType = a[0],\n        polytree = a[1],\n        subjFillType = a[2],\n        clipFillType = a[3];\n      if (this.m_ExecuteLocked)\n        return false;\n      this.m_ExecuteLocked = true;\n      this.m_SubjFillType = subjFillType;\n      this.m_ClipFillType = clipFillType;\n      this.m_ClipType = clipType;\n      this.m_UsingPolyTree = true;\n      try\n      {\n        var succeeded = this.ExecuteInternal();\n        //build the return polygons ...\n        if (succeeded) this.BuildResult2(polytree);\n      }\n      finally\n      {\n        this.DisposeAllPolyPts();\n        this.m_ExecuteLocked = false;\n      }\n      return succeeded;\n    }\n    else if (alen == 2 && !ispolytree) // function (clipType, solution)\n    {\n      var clipType = a[0],\n        solution = a[1];\n      return this.Execute(clipType, solution, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n    }\n    else if (alen == 2 && ispolytree) // function (clipType, polytree)\n    {\n      var clipType = a[0],\n        polytree = a[1];\n      return this.Execute(clipType, polytree, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n    }\n  };\n  ClipperLib.Clipper.prototype.FixHoleLinkage = function (outRec)\n  {\n    //skip if an outermost polygon or\n    //already already points to the correct FirstLeft ...\n    if (outRec.FirstLeft === null || (outRec.IsHole != outRec.FirstLeft.IsHole && outRec.FirstLeft.Pts !== null))\n      return;\n    var orfl = outRec.FirstLeft;\n    while (orfl !== null && ((orfl.IsHole == outRec.IsHole) || orfl.Pts === null))\n      orfl = orfl.FirstLeft;\n    outRec.FirstLeft = orfl;\n  };\n  ClipperLib.Clipper.prototype.ExecuteInternal = function ()\n  {\n    try\n    {\n      this.Reset();\n      if (this.m_CurrentLM === null)\n        return false;\n      var botY = this.PopScanbeam();\n      do {\n        this.InsertLocalMinimaIntoAEL(botY);\n        ClipperLib.Clear(this.m_GhostJoins);\n        this.ProcessHorizontals(false);\n        if (this.m_Scanbeam === null)\n          break;\n        var topY = this.PopScanbeam();\n        if (!this.ProcessIntersections(topY)) return false;\n\n        this.ProcessEdgesAtTopOfScanbeam(topY);\n        botY = topY;\n      }\n      while (this.m_Scanbeam !== null || this.m_CurrentLM !== null)\n      //fix orientations ...\n      for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n      {\n        var outRec = this.m_PolyOuts[i];\n        if (outRec.Pts === null || outRec.IsOpen)\n          continue;\n        if ((outRec.IsHole ^ this.ReverseSolution) == (this.Area(outRec) > 0))\n          this.ReversePolyPtLinks(outRec.Pts);\n      }\n      this.JoinCommonEdges();\n      for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n      {\n        var outRec = this.m_PolyOuts[i];\n        if (outRec.Pts !== null && !outRec.IsOpen)\n          this.FixupOutPolygon(outRec);\n      }\n      if (this.StrictlySimple)\n        this.DoSimplePolygons();\n      return true;\n    }\n    finally\n    {\n      ClipperLib.Clear(this.m_Joins);\n      ClipperLib.Clear(this.m_GhostJoins);\n    }\n  };\n  ClipperLib.Clipper.prototype.PopScanbeam = function ()\n  {\n    var Y = this.m_Scanbeam.Y;\n    this.m_Scanbeam = this.m_Scanbeam.Next;\n    return Y;\n  };\n\n  ClipperLib.Clipper.prototype.DisposeAllPolyPts = function ()\n  {\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; ++i)\n      this.DisposeOutRec(i);\n    ClipperLib.Clear(this.m_PolyOuts);\n  };\n  ClipperLib.Clipper.prototype.DisposeOutRec = function (index)\n  {\n    var outRec = this.m_PolyOuts[index];\n    outRec.Pts = null;\n    outRec = null;\n    this.m_PolyOuts[index] = null;\n  };\n\n  ClipperLib.Clipper.prototype.AddJoin = function (Op1, Op2, OffPt)\n  {\n    var j = new ClipperLib.Join();\n    j.OutPt1 = Op1;\n    j.OutPt2 = Op2;\n    //j.OffPt = OffPt;\n    j.OffPt.X = OffPt.X;\n    j.OffPt.Y = OffPt.Y;\n    this.m_Joins.push(j);\n  };\n  ClipperLib.Clipper.prototype.AddGhostJoin = function (Op, OffPt)\n  {\n    var j = new ClipperLib.Join();\n    j.OutPt1 = Op;\n    //j.OffPt = OffPt;\n    j.OffPt.X = OffPt.X;\n    j.OffPt.Y = OffPt.Y;\n    this.m_GhostJoins.push(j);\n  };\n  if (use_xyz)\n  {\n    ClipperLib.Clipper.prototype.SetZ = function (pt, e1, e2)\n    {\n      if (this.ZFillFunction !== null)\n      {\n        if (pt.Z != 0 || this.ZFillFunction === null) return;\n        else if (ClipperLib.IntPoint.op_Equality(pt, e1.Bot)) pt.Z = e1.Bot.Z;\n        else if (ClipperLib.IntPoint.op_Equality(pt, e1.Top)) pt.Z = e1.Top.Z;\n        else if (ClipperLib.IntPoint.op_Equality(pt, e2.Bot)) pt.Z = e2.Bot.Z;\n        else if (ClipperLib.IntPoint.op_Equality(pt, e2.Top)) pt.Z = e2.Top.Z;\n        else ZFillFunction(e1.Bot, e1.Top, e2.Bot, e2.Top, pt);\n      }\n    };\n\n    //------------------------------------------------------------------------------\n  }\n\n  ClipperLib.Clipper.prototype.InsertLocalMinimaIntoAEL = function (botY)\n  {\n    while (this.m_CurrentLM !== null && (this.m_CurrentLM.Y == botY))\n    {\n      var lb = this.m_CurrentLM.LeftBound;\n      var rb = this.m_CurrentLM.RightBound;\n      this.PopLocalMinima();\n      var Op1 = null;\n      if (lb === null)\n      {\n        this.InsertEdgeIntoAEL(rb, null);\n        this.SetWindingCount(rb);\n        if (this.IsContributing(rb))\n          Op1 = this.AddOutPt(rb, rb.Bot);\n      }\n      else if (rb == null)\n      {\n        this.InsertEdgeIntoAEL(lb, null);\n        this.SetWindingCount(lb);\n        if (this.IsContributing(lb))\n          Op1 = this.AddOutPt(lb, lb.Bot);\n        this.InsertScanbeam(lb.Top.Y);\n      }\n      else\n      {\n        this.InsertEdgeIntoAEL(lb, null);\n        this.InsertEdgeIntoAEL(rb, lb);\n        this.SetWindingCount(lb);\n        rb.WindCnt = lb.WindCnt;\n        rb.WindCnt2 = lb.WindCnt2;\n        if (this.IsContributing(lb))\n          Op1 = this.AddLocalMinPoly(lb, rb, lb.Bot);\n        this.InsertScanbeam(lb.Top.Y);\n      }\n      if (rb != null)\n      {\n        if (ClipperLib.ClipperBase.IsHorizontal(rb))\n          this.AddEdgeToSEL(rb);\n        else\n          this.InsertScanbeam(rb.Top.Y);\n      }\n      if (lb == null || rb == null) continue;\n      //if output polygons share an Edge with a horizontal rb, they'll need joining later ...\n      if (Op1 !== null && ClipperLib.ClipperBase.IsHorizontal(rb) && this.m_GhostJoins.length > 0 && rb.WindDelta !== 0)\n      {\n        for (var i = 0, ilen = this.m_GhostJoins.length; i < ilen; i++)\n        {\n          //if the horizontal Rb and a 'ghost' horizontal overlap, then convert\n          //the 'ghost' join to a real join ready for later ...\n          var j = this.m_GhostJoins[i];\n\n\t\t\t\t\tif (this.HorzSegmentsOverlap(j.OutPt1.Pt.X, j.OffPt.X, rb.Bot.X, rb.Top.X))\n            this.AddJoin(j.OutPt1, Op1, j.OffPt);\n        }\n      }\n      if (lb.OutIdx >= 0 && lb.PrevInAEL !== null &&\n        lb.PrevInAEL.Curr.X == lb.Bot.X &&\n        lb.PrevInAEL.OutIdx >= 0 &&\n        ClipperLib.ClipperBase.SlopesEqual(lb.PrevInAEL, lb, this.m_UseFullRange) &&\n        lb.WindDelta !== 0 && lb.PrevInAEL.WindDelta !== 0)\n      {\n        var Op2 = this.AddOutPt(lb.PrevInAEL, lb.Bot);\n        this.AddJoin(Op1, Op2, lb.Top);\n      }\n      if (lb.NextInAEL != rb)\n      {\n        if (rb.OutIdx >= 0 && rb.PrevInAEL.OutIdx >= 0 &&\n          ClipperLib.ClipperBase.SlopesEqual(rb.PrevInAEL, rb, this.m_UseFullRange) &&\n          rb.WindDelta !== 0 && rb.PrevInAEL.WindDelta !== 0)\n        {\n          var Op2 = this.AddOutPt(rb.PrevInAEL, rb.Bot);\n          this.AddJoin(Op1, Op2, rb.Top);\n        }\n        var e = lb.NextInAEL;\n        if (e !== null)\n          while (e != rb)\n          {\n            //nb: For calculating winding counts etc, IntersectEdges() assumes\n            //that param1 will be to the right of param2 ABOVE the intersection ...\n            this.IntersectEdges(rb, e, lb.Curr, false);\n            //order important here\n            e = e.NextInAEL;\n          }\n      }\n    }\n  };\n  ClipperLib.Clipper.prototype.InsertEdgeIntoAEL = function (edge, startEdge)\n  {\n    if (this.m_ActiveEdges === null)\n    {\n      edge.PrevInAEL = null;\n      edge.NextInAEL = null;\n      this.m_ActiveEdges = edge;\n    }\n    else if (startEdge === null && this.E2InsertsBeforeE1(this.m_ActiveEdges, edge))\n    {\n      edge.PrevInAEL = null;\n      edge.NextInAEL = this.m_ActiveEdges;\n      this.m_ActiveEdges.PrevInAEL = edge;\n      this.m_ActiveEdges = edge;\n    }\n    else\n    {\n      if (startEdge === null)\n        startEdge = this.m_ActiveEdges;\n      while (startEdge.NextInAEL !== null && !this.E2InsertsBeforeE1(startEdge.NextInAEL, edge))\n        startEdge = startEdge.NextInAEL;\n      edge.NextInAEL = startEdge.NextInAEL;\n      if (startEdge.NextInAEL !== null)\n        startEdge.NextInAEL.PrevInAEL = edge;\n      edge.PrevInAEL = startEdge;\n      startEdge.NextInAEL = edge;\n    }\n  };\n  ClipperLib.Clipper.prototype.E2InsertsBeforeE1 = function (e1, e2)\n  {\n    if (e2.Curr.X == e1.Curr.X)\n    {\n      if (e2.Top.Y > e1.Top.Y)\n        return e2.Top.X < ClipperLib.Clipper.TopX(e1, e2.Top.Y);\n      else\n        return e1.Top.X > ClipperLib.Clipper.TopX(e2, e1.Top.Y);\n    }\n    else\n      return e2.Curr.X < e1.Curr.X;\n  };\n  ClipperLib.Clipper.prototype.IsEvenOddFillType = function (edge)\n  {\n    if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n      return this.m_SubjFillType == ClipperLib.PolyFillType.pftEvenOdd;\n    else\n      return this.m_ClipFillType == ClipperLib.PolyFillType.pftEvenOdd;\n  };\n  ClipperLib.Clipper.prototype.IsEvenOddAltFillType = function (edge)\n  {\n    if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n      return this.m_ClipFillType == ClipperLib.PolyFillType.pftEvenOdd;\n    else\n      return this.m_SubjFillType == ClipperLib.PolyFillType.pftEvenOdd;\n  };\n  ClipperLib.Clipper.prototype.IsContributing = function (edge)\n  {\n    var pft, pft2;\n    if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n    {\n      pft = this.m_SubjFillType;\n      pft2 = this.m_ClipFillType;\n    }\n    else\n    {\n      pft = this.m_ClipFillType;\n      pft2 = this.m_SubjFillType;\n    }\n    switch (pft)\n    {\n    case ClipperLib.PolyFillType.pftEvenOdd:\n      if (edge.WindDelta === 0 && edge.WindCnt != 1)\n        return false;\n      break;\n    case ClipperLib.PolyFillType.pftNonZero:\n      if (Math.abs(edge.WindCnt) != 1)\n        return false;\n      break;\n    case ClipperLib.PolyFillType.pftPositive:\n      if (edge.WindCnt != 1)\n        return false;\n      break;\n    default:\n      if (edge.WindCnt != -1)\n        return false;\n      break;\n    }\n    switch (this.m_ClipType)\n    {\n    case ClipperLib.ClipType.ctIntersection:\n      switch (pft2)\n      {\n      case ClipperLib.PolyFillType.pftEvenOdd:\n      case ClipperLib.PolyFillType.pftNonZero:\n        return (edge.WindCnt2 !== 0);\n      case ClipperLib.PolyFillType.pftPositive:\n        return (edge.WindCnt2 > 0);\n      default:\n        return (edge.WindCnt2 < 0);\n      }\n    case ClipperLib.ClipType.ctUnion:\n      switch (pft2)\n      {\n      case ClipperLib.PolyFillType.pftEvenOdd:\n      case ClipperLib.PolyFillType.pftNonZero:\n        return (edge.WindCnt2 === 0);\n      case ClipperLib.PolyFillType.pftPositive:\n        return (edge.WindCnt2 <= 0);\n      default:\n        return (edge.WindCnt2 >= 0);\n      }\n    case ClipperLib.ClipType.ctDifference:\n      if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n        switch (pft2)\n        {\n        case ClipperLib.PolyFillType.pftEvenOdd:\n        case ClipperLib.PolyFillType.pftNonZero:\n          return (edge.WindCnt2 === 0);\n        case ClipperLib.PolyFillType.pftPositive:\n          return (edge.WindCnt2 <= 0);\n        default:\n          return (edge.WindCnt2 >= 0);\n        }\n      else\n        switch (pft2)\n        {\n        case ClipperLib.PolyFillType.pftEvenOdd:\n        case ClipperLib.PolyFillType.pftNonZero:\n          return (edge.WindCnt2 !== 0);\n        case ClipperLib.PolyFillType.pftPositive:\n          return (edge.WindCnt2 > 0);\n        default:\n          return (edge.WindCnt2 < 0);\n        }\n    case ClipperLib.ClipType.ctXor:\n      if (edge.WindDelta === 0)\n        switch (pft2)\n        {\n        case ClipperLib.PolyFillType.pftEvenOdd:\n        case ClipperLib.PolyFillType.pftNonZero:\n          return (edge.WindCnt2 === 0);\n        case ClipperLib.PolyFillType.pftPositive:\n          return (edge.WindCnt2 <= 0);\n        default:\n          return (edge.WindCnt2 >= 0);\n        }\n      else\n        return true;\n    }\n    return true;\n  };\n  ClipperLib.Clipper.prototype.SetWindingCount = function (edge)\n  {\n    var e = edge.PrevInAEL;\n    //find the edge of the same polytype that immediately preceeds 'edge' in AEL\n    while (e !== null && ((e.PolyTyp != edge.PolyTyp) || (e.WindDelta === 0)))\n      e = e.PrevInAEL;\n    if (e === null)\n    {\n      edge.WindCnt = (edge.WindDelta === 0 ? 1 : edge.WindDelta);\n      edge.WindCnt2 = 0;\n      e = this.m_ActiveEdges;\n      //ie get ready to calc WindCnt2\n    }\n    else if (edge.WindDelta === 0 && this.m_ClipType != ClipperLib.ClipType.ctUnion)\n    {\n      edge.WindCnt = 1;\n      edge.WindCnt2 = e.WindCnt2;\n      e = e.NextInAEL;\n      //ie get ready to calc WindCnt2\n    }\n    else if (this.IsEvenOddFillType(edge))\n    {\n      //EvenOdd filling ...\n      if (edge.WindDelta === 0)\n      {\n        //are we inside a subj polygon ...\n        var Inside = true;\n        var e2 = e.PrevInAEL;\n        while (e2 !== null)\n        {\n          if (e2.PolyTyp == e.PolyTyp && e2.WindDelta !== 0)\n            Inside = !Inside;\n          e2 = e2.PrevInAEL;\n        }\n        edge.WindCnt = (Inside ? 0 : 1);\n      }\n      else\n      {\n        edge.WindCnt = edge.WindDelta;\n      }\n      edge.WindCnt2 = e.WindCnt2;\n      e = e.NextInAEL;\n      //ie get ready to calc WindCnt2\n    }\n    else\n    {\n      //nonZero, Positive or Negative filling ...\n      if (e.WindCnt * e.WindDelta < 0)\n      {\n        //prev edge is 'decreasing' WindCount (WC) toward zero\n        //so we're outside the previous polygon ...\n        if (Math.abs(e.WindCnt) > 1)\n        {\n          //outside prev poly but still inside another.\n          //when reversing direction of prev poly use the same WC\n          if (e.WindDelta * edge.WindDelta < 0)\n            edge.WindCnt = e.WindCnt;\n          else\n            edge.WindCnt = e.WindCnt + edge.WindDelta;\n        }\n        else\n          edge.WindCnt = (edge.WindDelta === 0 ? 1 : edge.WindDelta);\n      }\n      else\n      {\n        //prev edge is 'increasing' WindCount (WC) away from zero\n        //so we're inside the previous polygon ...\n        if (edge.WindDelta === 0)\n          edge.WindCnt = (e.WindCnt < 0 ? e.WindCnt - 1 : e.WindCnt + 1);\n        else if (e.WindDelta * edge.WindDelta < 0)\n          edge.WindCnt = e.WindCnt;\n        else\n          edge.WindCnt = e.WindCnt + edge.WindDelta;\n      }\n      edge.WindCnt2 = e.WindCnt2;\n      e = e.NextInAEL;\n      //ie get ready to calc WindCnt2\n    }\n    //update WindCnt2 ...\n    if (this.IsEvenOddAltFillType(edge))\n    {\n      //EvenOdd filling ...\n      while (e != edge)\n      {\n        if (e.WindDelta !== 0)\n          edge.WindCnt2 = (edge.WindCnt2 === 0 ? 1 : 0);\n        e = e.NextInAEL;\n      }\n    }\n    else\n    {\n      //nonZero, Positive or Negative filling ...\n      while (e != edge)\n      {\n        edge.WindCnt2 += e.WindDelta;\n        e = e.NextInAEL;\n      }\n    }\n  };\n  ClipperLib.Clipper.prototype.AddEdgeToSEL = function (edge)\n  {\n    //SEL pointers in PEdge are reused to build a list of horizontal edges.\n    //However, we don't need to worry about order with horizontal edge processing.\n    if (this.m_SortedEdges === null)\n    {\n      this.m_SortedEdges = edge;\n      edge.PrevInSEL = null;\n      edge.NextInSEL = null;\n    }\n    else\n    {\n      edge.NextInSEL = this.m_SortedEdges;\n      edge.PrevInSEL = null;\n      this.m_SortedEdges.PrevInSEL = edge;\n      this.m_SortedEdges = edge;\n    }\n  };\n  ClipperLib.Clipper.prototype.CopyAELToSEL = function ()\n  {\n    var e = this.m_ActiveEdges;\n    this.m_SortedEdges = e;\n    while (e !== null)\n    {\n      e.PrevInSEL = e.PrevInAEL;\n      e.NextInSEL = e.NextInAEL;\n      e = e.NextInAEL;\n    }\n  };\n  ClipperLib.Clipper.prototype.SwapPositionsInAEL = function (edge1, edge2)\n  {\n    //check that one or other edge hasn't already been removed from AEL ...\n    if (edge1.NextInAEL == edge1.PrevInAEL || edge2.NextInAEL == edge2.PrevInAEL)\n      return;\n    if (edge1.NextInAEL == edge2)\n    {\n      var next = edge2.NextInAEL;\n      if (next !== null)\n        next.PrevInAEL = edge1;\n      var prev = edge1.PrevInAEL;\n      if (prev !== null)\n        prev.NextInAEL = edge2;\n      edge2.PrevInAEL = prev;\n      edge2.NextInAEL = edge1;\n      edge1.PrevInAEL = edge2;\n      edge1.NextInAEL = next;\n    }\n    else if (edge2.NextInAEL == edge1)\n    {\n      var next = edge1.NextInAEL;\n      if (next !== null)\n        next.PrevInAEL = edge2;\n      var prev = edge2.PrevInAEL;\n      if (prev !== null)\n        prev.NextInAEL = edge1;\n      edge1.PrevInAEL = prev;\n      edge1.NextInAEL = edge2;\n      edge2.PrevInAEL = edge1;\n      edge2.NextInAEL = next;\n    }\n    else\n    {\n      var next = edge1.NextInAEL;\n      var prev = edge1.PrevInAEL;\n      edge1.NextInAEL = edge2.NextInAEL;\n      if (edge1.NextInAEL !== null)\n        edge1.NextInAEL.PrevInAEL = edge1;\n      edge1.PrevInAEL = edge2.PrevInAEL;\n      if (edge1.PrevInAEL !== null)\n        edge1.PrevInAEL.NextInAEL = edge1;\n      edge2.NextInAEL = next;\n      if (edge2.NextInAEL !== null)\n        edge2.NextInAEL.PrevInAEL = edge2;\n      edge2.PrevInAEL = prev;\n      if (edge2.PrevInAEL !== null)\n        edge2.PrevInAEL.NextInAEL = edge2;\n    }\n    if (edge1.PrevInAEL === null)\n      this.m_ActiveEdges = edge1;\n    else if (edge2.PrevInAEL === null)\n      this.m_ActiveEdges = edge2;\n  };\n  ClipperLib.Clipper.prototype.SwapPositionsInSEL = function (edge1, edge2)\n  {\n    if (edge1.NextInSEL === null && edge1.PrevInSEL === null)\n      return;\n    if (edge2.NextInSEL === null && edge2.PrevInSEL === null)\n      return;\n    if (edge1.NextInSEL == edge2)\n    {\n      var next = edge2.NextInSEL;\n      if (next !== null)\n        next.PrevInSEL = edge1;\n      var prev = edge1.PrevInSEL;\n      if (prev !== null)\n        prev.NextInSEL = edge2;\n      edge2.PrevInSEL = prev;\n      edge2.NextInSEL = edge1;\n      edge1.PrevInSEL = edge2;\n      edge1.NextInSEL = next;\n    }\n    else if (edge2.NextInSEL == edge1)\n    {\n      var next = edge1.NextInSEL;\n      if (next !== null)\n        next.PrevInSEL = edge2;\n      var prev = edge2.PrevInSEL;\n      if (prev !== null)\n        prev.NextInSEL = edge1;\n      edge1.PrevInSEL = prev;\n      edge1.NextInSEL = edge2;\n      edge2.PrevInSEL = edge1;\n      edge2.NextInSEL = next;\n    }\n    else\n    {\n      var next = edge1.NextInSEL;\n      var prev = edge1.PrevInSEL;\n      edge1.NextInSEL = edge2.NextInSEL;\n      if (edge1.NextInSEL !== null)\n        edge1.NextInSEL.PrevInSEL = edge1;\n      edge1.PrevInSEL = edge2.PrevInSEL;\n      if (edge1.PrevInSEL !== null)\n        edge1.PrevInSEL.NextInSEL = edge1;\n      edge2.NextInSEL = next;\n      if (edge2.NextInSEL !== null)\n        edge2.NextInSEL.PrevInSEL = edge2;\n      edge2.PrevInSEL = prev;\n      if (edge2.PrevInSEL !== null)\n        edge2.PrevInSEL.NextInSEL = edge2;\n    }\n    if (edge1.PrevInSEL === null)\n      this.m_SortedEdges = edge1;\n    else if (edge2.PrevInSEL === null)\n      this.m_SortedEdges = edge2;\n  };\n  ClipperLib.Clipper.prototype.AddLocalMaxPoly = function (e1, e2, pt)\n  {\n    this.AddOutPt(e1, pt);\n    if (e2.WindDelta == 0) this.AddOutPt(e2, pt);\n    if (e1.OutIdx == e2.OutIdx)\n    {\n      e1.OutIdx = -1;\n      e2.OutIdx = -1;\n    }\n    else if (e1.OutIdx < e2.OutIdx)\n      this.AppendPolygon(e1, e2);\n    else\n      this.AppendPolygon(e2, e1);\n  };\n  ClipperLib.Clipper.prototype.AddLocalMinPoly = function (e1, e2, pt)\n  {\n    var result;\n    var e, prevE;\n    if (ClipperLib.ClipperBase.IsHorizontal(e2) || (e1.Dx > e2.Dx))\n    {\n      result = this.AddOutPt(e1, pt);\n      e2.OutIdx = e1.OutIdx;\n      e1.Side = ClipperLib.EdgeSide.esLeft;\n      e2.Side = ClipperLib.EdgeSide.esRight;\n      e = e1;\n      if (e.PrevInAEL == e2)\n        prevE = e2.PrevInAEL;\n      else\n        prevE = e.PrevInAEL;\n    }\n    else\n    {\n      result = this.AddOutPt(e2, pt);\n      e1.OutIdx = e2.OutIdx;\n      e1.Side = ClipperLib.EdgeSide.esRight;\n      e2.Side = ClipperLib.EdgeSide.esLeft;\n      e = e2;\n      if (e.PrevInAEL == e1)\n        prevE = e1.PrevInAEL;\n      else\n        prevE = e.PrevInAEL;\n    }\n    if (prevE !== null && prevE.OutIdx >= 0 && (ClipperLib.Clipper.TopX(prevE, pt.Y) == ClipperLib.Clipper.TopX(e, pt.Y)) && ClipperLib.ClipperBase.SlopesEqual(e, prevE, this.m_UseFullRange) && (e.WindDelta !== 0) && (prevE.WindDelta !== 0))\n    {\n      var outPt = this.AddOutPt(prevE, pt);\n      this.AddJoin(result, outPt, e.Top);\n    }\n    return result;\n  };\n  ClipperLib.Clipper.prototype.CreateOutRec = function ()\n  {\n    var result = new ClipperLib.OutRec();\n    result.Idx = -1;\n    result.IsHole = false;\n    result.IsOpen = false;\n    result.FirstLeft = null;\n    result.Pts = null;\n    result.BottomPt = null;\n    result.PolyNode = null;\n    this.m_PolyOuts.push(result);\n    result.Idx = this.m_PolyOuts.length - 1;\n    return result;\n  };\n  ClipperLib.Clipper.prototype.AddOutPt = function (e, pt)\n  {\n    var ToFront = (e.Side == ClipperLib.EdgeSide.esLeft);\n    if (e.OutIdx < 0)\n    {\n      var outRec = this.CreateOutRec();\n      outRec.IsOpen = (e.WindDelta === 0);\n      var newOp = new ClipperLib.OutPt();\n      outRec.Pts = newOp;\n      newOp.Idx = outRec.Idx;\n      //newOp.Pt = pt;\n      newOp.Pt.X = pt.X;\n      newOp.Pt.Y = pt.Y;\n      newOp.Next = newOp;\n      newOp.Prev = newOp;\n      if (!outRec.IsOpen)\n        this.SetHoleState(e, outRec);\n      e.OutIdx = outRec.Idx;\n      //nb: do this after SetZ !\n      return newOp;\n    }\n    else\n    {\n      var outRec = this.m_PolyOuts[e.OutIdx];\n      //OutRec.Pts is the 'Left-most' point & OutRec.Pts.Prev is the 'Right-most'\n      var op = outRec.Pts;\n      if (ToFront && ClipperLib.IntPoint.op_Equality(pt, op.Pt))\n        return op;\n      else if (!ToFront && ClipperLib.IntPoint.op_Equality(pt, op.Prev.Pt))\n        return op.Prev;\n      var newOp = new ClipperLib.OutPt();\n      newOp.Idx = outRec.Idx;\n      //newOp.Pt = pt;\n      newOp.Pt.X = pt.X;\n      newOp.Pt.Y = pt.Y;\n      newOp.Next = op;\n      newOp.Prev = op.Prev;\n      newOp.Prev.Next = newOp;\n      op.Prev = newOp;\n      if (ToFront)\n        outRec.Pts = newOp;\n      return newOp;\n    }\n  };\n  ClipperLib.Clipper.prototype.SwapPoints = function (pt1, pt2)\n  {\n    var tmp = new ClipperLib.IntPoint(pt1.Value);\n    //pt1.Value = pt2.Value;\n    pt1.Value.X = pt2.Value.X;\n    pt1.Value.Y = pt2.Value.Y;\n    //pt2.Value = tmp;\n    pt2.Value.X = tmp.X;\n    pt2.Value.Y = tmp.Y;\n  };\n  ClipperLib.Clipper.prototype.HorzSegmentsOverlap = function (seg1a, seg1b, seg2a, seg2b)\n\t{\n\t\tvar tmp;\n\t\tif (seg1a > seg1b)\n\t\t{\n\t\t\ttmp = seg1a;\n\t\t\tseg1a = seg1b;\n\t\t\tseg1b = tmp;\n\t\t}\n\t\tif (seg2a > seg2b)\n\t\t{\n\t\t\ttmp = seg2a;\n\t\t\tseg2a = seg2b;\n\t\t\tseg2b = tmp;\n\t\t}\n\t\treturn (seg1a < seg2b) && (seg2a < seg1b);\n\t}\n\n  ClipperLib.Clipper.prototype.SetHoleState = function (e, outRec)\n  {\n    var isHole = false;\n    var e2 = e.PrevInAEL;\n    while (e2 !== null)\n    {\n      if (e2.OutIdx >= 0 && e2.WindDelta != 0)\n      {\n        isHole = !isHole;\n        if (outRec.FirstLeft === null)\n          outRec.FirstLeft = this.m_PolyOuts[e2.OutIdx];\n      }\n      e2 = e2.PrevInAEL;\n    }\n    if (isHole)\n      outRec.IsHole = true;\n  };\n  ClipperLib.Clipper.prototype.GetDx = function (pt1, pt2)\n  {\n    if (pt1.Y == pt2.Y)\n      return ClipperLib.ClipperBase.horizontal;\n    else\n      return (pt2.X - pt1.X) / (pt2.Y - pt1.Y);\n  };\n  ClipperLib.Clipper.prototype.FirstIsBottomPt = function (btmPt1, btmPt2)\n  {\n    var p = btmPt1.Prev;\n    while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt1.Pt)) && (p != btmPt1))\n      p = p.Prev;\n    var dx1p = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n    p = btmPt1.Next;\n    while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt1.Pt)) && (p != btmPt1))\n      p = p.Next;\n    var dx1n = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n    p = btmPt2.Prev;\n    while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt2.Pt)) && (p != btmPt2))\n      p = p.Prev;\n    var dx2p = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n    p = btmPt2.Next;\n    while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt2.Pt)) && (p != btmPt2))\n      p = p.Next;\n    var dx2n = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n    return (dx1p >= dx2p && dx1p >= dx2n) || (dx1n >= dx2p && dx1n >= dx2n);\n  };\n  ClipperLib.Clipper.prototype.GetBottomPt = function (pp)\n  {\n    var dups = null;\n    var p = pp.Next;\n    while (p != pp)\n    {\n      if (p.Pt.Y > pp.Pt.Y)\n      {\n        pp = p;\n        dups = null;\n      }\n      else if (p.Pt.Y == pp.Pt.Y && p.Pt.X <= pp.Pt.X)\n      {\n        if (p.Pt.X < pp.Pt.X)\n        {\n          dups = null;\n          pp = p;\n        }\n        else\n        {\n          if (p.Next != pp && p.Prev != pp)\n            dups = p;\n        }\n      }\n      p = p.Next;\n    }\n    if (dups !== null)\n    {\n      //there appears to be at least 2 vertices at bottomPt so ...\n      while (dups != p)\n      {\n        if (!this.FirstIsBottomPt(p, dups))\n          pp = dups;\n        dups = dups.Next;\n        while (ClipperLib.IntPoint.op_Inequality(dups.Pt, pp.Pt))\n          dups = dups.Next;\n      }\n    }\n    return pp;\n  };\n  ClipperLib.Clipper.prototype.GetLowermostRec = function (outRec1, outRec2)\n  {\n    //work out which polygon fragment has the correct hole state ...\n    if (outRec1.BottomPt === null)\n      outRec1.BottomPt = this.GetBottomPt(outRec1.Pts);\n    if (outRec2.BottomPt === null)\n      outRec2.BottomPt = this.GetBottomPt(outRec2.Pts);\n    var bPt1 = outRec1.BottomPt;\n    var bPt2 = outRec2.BottomPt;\n    if (bPt1.Pt.Y > bPt2.Pt.Y)\n      return outRec1;\n    else if (bPt1.Pt.Y < bPt2.Pt.Y)\n      return outRec2;\n    else if (bPt1.Pt.X < bPt2.Pt.X)\n      return outRec1;\n    else if (bPt1.Pt.X > bPt2.Pt.X)\n      return outRec2;\n    else if (bPt1.Next == bPt1)\n      return outRec2;\n    else if (bPt2.Next == bPt2)\n      return outRec1;\n    else if (this.FirstIsBottomPt(bPt1, bPt2))\n      return outRec1;\n    else\n      return outRec2;\n  };\n  ClipperLib.Clipper.prototype.Param1RightOfParam2 = function (outRec1, outRec2)\n  {\n    do {\n      outRec1 = outRec1.FirstLeft;\n      if (outRec1 == outRec2)\n        return true;\n    }\n    while (outRec1 !== null)\n    return false;\n  };\n  ClipperLib.Clipper.prototype.GetOutRec = function (idx)\n  {\n    var outrec = this.m_PolyOuts[idx];\n    while (outrec != this.m_PolyOuts[outrec.Idx])\n      outrec = this.m_PolyOuts[outrec.Idx];\n    return outrec;\n  };\n  ClipperLib.Clipper.prototype.AppendPolygon = function (e1, e2)\n  {\n    //get the start and ends of both output polygons ...\n    var outRec1 = this.m_PolyOuts[e1.OutIdx];\n    var outRec2 = this.m_PolyOuts[e2.OutIdx];\n    var holeStateRec;\n    if (this.Param1RightOfParam2(outRec1, outRec2))\n      holeStateRec = outRec2;\n    else if (this.Param1RightOfParam2(outRec2, outRec1))\n      holeStateRec = outRec1;\n    else\n      holeStateRec = this.GetLowermostRec(outRec1, outRec2);\n    var p1_lft = outRec1.Pts;\n    var p1_rt = p1_lft.Prev;\n    var p2_lft = outRec2.Pts;\n    var p2_rt = p2_lft.Prev;\n    var side;\n    //join e2 poly onto e1 poly and delete pointers to e2 ...\n    if (e1.Side == ClipperLib.EdgeSide.esLeft)\n    {\n      if (e2.Side == ClipperLib.EdgeSide.esLeft)\n      {\n        //z y x a b c\n        this.ReversePolyPtLinks(p2_lft);\n        p2_lft.Next = p1_lft;\n        p1_lft.Prev = p2_lft;\n        p1_rt.Next = p2_rt;\n        p2_rt.Prev = p1_rt;\n        outRec1.Pts = p2_rt;\n      }\n      else\n      {\n        //x y z a b c\n        p2_rt.Next = p1_lft;\n        p1_lft.Prev = p2_rt;\n        p2_lft.Prev = p1_rt;\n        p1_rt.Next = p2_lft;\n        outRec1.Pts = p2_lft;\n      }\n      side = ClipperLib.EdgeSide.esLeft;\n    }\n    else\n    {\n      if (e2.Side == ClipperLib.EdgeSide.esRight)\n      {\n        //a b c z y x\n        this.ReversePolyPtLinks(p2_lft);\n        p1_rt.Next = p2_rt;\n        p2_rt.Prev = p1_rt;\n        p2_lft.Next = p1_lft;\n        p1_lft.Prev = p2_lft;\n      }\n      else\n      {\n        //a b c x y z\n        p1_rt.Next = p2_lft;\n        p2_lft.Prev = p1_rt;\n        p1_lft.Prev = p2_rt;\n        p2_rt.Next = p1_lft;\n      }\n      side = ClipperLib.EdgeSide.esRight;\n    }\n    outRec1.BottomPt = null;\n    if (holeStateRec == outRec2)\n    {\n      if (outRec2.FirstLeft != outRec1)\n        outRec1.FirstLeft = outRec2.FirstLeft;\n      outRec1.IsHole = outRec2.IsHole;\n    }\n    outRec2.Pts = null;\n    outRec2.BottomPt = null;\n    outRec2.FirstLeft = outRec1;\n    var OKIdx = e1.OutIdx;\n    var ObsoleteIdx = e2.OutIdx;\n    e1.OutIdx = -1;\n    //nb: safe because we only get here via AddLocalMaxPoly\n    e2.OutIdx = -1;\n    var e = this.m_ActiveEdges;\n    while (e !== null)\n    {\n      if (e.OutIdx == ObsoleteIdx)\n      {\n        e.OutIdx = OKIdx;\n        e.Side = side;\n        break;\n      }\n      e = e.NextInAEL;\n    }\n    outRec2.Idx = outRec1.Idx;\n  };\n  ClipperLib.Clipper.prototype.ReversePolyPtLinks = function (pp)\n  {\n    if (pp === null)\n      return;\n    var pp1;\n    var pp2;\n    pp1 = pp;\n    do {\n      pp2 = pp1.Next;\n      pp1.Next = pp1.Prev;\n      pp1.Prev = pp2;\n      pp1 = pp2;\n    }\n    while (pp1 != pp)\n  };\n  ClipperLib.Clipper.SwapSides = function (edge1, edge2)\n  {\n    var side = edge1.Side;\n    edge1.Side = edge2.Side;\n    edge2.Side = side;\n  };\n  ClipperLib.Clipper.SwapPolyIndexes = function (edge1, edge2)\n  {\n    var outIdx = edge1.OutIdx;\n    edge1.OutIdx = edge2.OutIdx;\n    edge2.OutIdx = outIdx;\n  };\n  ClipperLib.Clipper.prototype.IntersectEdges = function (e1, e2, pt)\n  {\n    //e1 will be to the left of e2 BELOW the intersection. Therefore e1 is before\n    //e2 in AEL except when e1 is being inserted at the intersection point ...\n    var e1Contributing = (e1.OutIdx >= 0);\n    var e2Contributing = (e2.OutIdx >= 0);\n\n    if (use_xyz)\n    \tthis.SetZ(pt, e1, e2);\n\n    if (use_lines)\n    {\n      //if either edge is on an OPEN path ...\n      if (e1.WindDelta === 0 || e2.WindDelta === 0)\n      {\n        //ignore subject-subject open path intersections UNLESS they\n        //are both open paths, AND they are both 'contributing maximas' ...\n\t\t\t\tif (e1.WindDelta == 0 && e2.WindDelta == 0) return;\n        //if intersecting a subj line with a subj poly ...\n        else if (e1.PolyTyp == e2.PolyTyp &&\n          e1.WindDelta != e2.WindDelta && this.m_ClipType == ClipperLib.ClipType.ctUnion)\n        {\n          if (e1.WindDelta === 0)\n          {\n            if (e2Contributing)\n            {\n              this.AddOutPt(e1, pt);\n              if (e1Contributing)\n                e1.OutIdx = -1;\n            }\n          }\n          else\n          {\n            if (e1Contributing)\n            {\n              this.AddOutPt(e2, pt);\n              if (e2Contributing)\n                e2.OutIdx = -1;\n            }\n          }\n        }\n        else if (e1.PolyTyp != e2.PolyTyp)\n        {\n          if ((e1.WindDelta === 0) && Math.abs(e2.WindCnt) == 1 &&\n            (this.m_ClipType != ClipperLib.ClipType.ctUnion || e2.WindCnt2 === 0))\n          {\n            this.AddOutPt(e1, pt);\n            if (e1Contributing)\n              e1.OutIdx = -1;\n          }\n          else if ((e2.WindDelta === 0) && (Math.abs(e1.WindCnt) == 1) &&\n            (this.m_ClipType != ClipperLib.ClipType.ctUnion || e1.WindCnt2 === 0))\n          {\n            this.AddOutPt(e2, pt);\n            if (e2Contributing)\n              e2.OutIdx = -1;\n          }\n        }\n        return;\n      }\n    }\n    //update winding counts...\n    //assumes that e1 will be to the Right of e2 ABOVE the intersection\n    if (e1.PolyTyp == e2.PolyTyp)\n    {\n      if (this.IsEvenOddFillType(e1))\n      {\n        var oldE1WindCnt = e1.WindCnt;\n        e1.WindCnt = e2.WindCnt;\n        e2.WindCnt = oldE1WindCnt;\n      }\n      else\n      {\n        if (e1.WindCnt + e2.WindDelta === 0)\n          e1.WindCnt = -e1.WindCnt;\n        else\n          e1.WindCnt += e2.WindDelta;\n        if (e2.WindCnt - e1.WindDelta === 0)\n          e2.WindCnt = -e2.WindCnt;\n        else\n          e2.WindCnt -= e1.WindDelta;\n      }\n    }\n    else\n    {\n      if (!this.IsEvenOddFillType(e2))\n        e1.WindCnt2 += e2.WindDelta;\n      else\n        e1.WindCnt2 = (e1.WindCnt2 === 0) ? 1 : 0;\n      if (!this.IsEvenOddFillType(e1))\n        e2.WindCnt2 -= e1.WindDelta;\n      else\n        e2.WindCnt2 = (e2.WindCnt2 === 0) ? 1 : 0;\n    }\n    var e1FillType, e2FillType, e1FillType2, e2FillType2;\n    if (e1.PolyTyp == ClipperLib.PolyType.ptSubject)\n    {\n      e1FillType = this.m_SubjFillType;\n      e1FillType2 = this.m_ClipFillType;\n    }\n    else\n    {\n      e1FillType = this.m_ClipFillType;\n      e1FillType2 = this.m_SubjFillType;\n    }\n    if (e2.PolyTyp == ClipperLib.PolyType.ptSubject)\n    {\n      e2FillType = this.m_SubjFillType;\n      e2FillType2 = this.m_ClipFillType;\n    }\n    else\n    {\n      e2FillType = this.m_ClipFillType;\n      e2FillType2 = this.m_SubjFillType;\n    }\n    var e1Wc, e2Wc;\n    switch (e1FillType)\n    {\n    case ClipperLib.PolyFillType.pftPositive:\n      e1Wc = e1.WindCnt;\n      break;\n    case ClipperLib.PolyFillType.pftNegative:\n      e1Wc = -e1.WindCnt;\n      break;\n    default:\n      e1Wc = Math.abs(e1.WindCnt);\n      break;\n    }\n    switch (e2FillType)\n    {\n    case ClipperLib.PolyFillType.pftPositive:\n      e2Wc = e2.WindCnt;\n      break;\n    case ClipperLib.PolyFillType.pftNegative:\n      e2Wc = -e2.WindCnt;\n      break;\n    default:\n      e2Wc = Math.abs(e2.WindCnt);\n      break;\n    }\n    if (e1Contributing && e2Contributing)\n    {\n\t\t\tif ((e1Wc != 0 && e1Wc != 1) || (e2Wc != 0 && e2Wc != 1) ||\n\t\t\t(e1.PolyTyp != e2.PolyTyp && this.m_ClipType != ClipperLib.ClipType.ctXor))\n\t\t\t{\n\t\t\t\tthis.AddLocalMaxPoly(e1, e2, pt);\n\t\t\t}\n      else\n      {\n        this.AddOutPt(e1, pt);\n        this.AddOutPt(e2, pt);\n        ClipperLib.Clipper.SwapSides(e1, e2);\n        ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n      }\n    }\n    else if (e1Contributing)\n    {\n      if (e2Wc === 0 || e2Wc == 1)\n      {\n        this.AddOutPt(e1, pt);\n        ClipperLib.Clipper.SwapSides(e1, e2);\n        ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n      }\n    }\n    else if (e2Contributing)\n    {\n      if (e1Wc === 0 || e1Wc == 1)\n      {\n        this.AddOutPt(e2, pt);\n        ClipperLib.Clipper.SwapSides(e1, e2);\n        ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n      }\n    }\n\t\telse if ( (e1Wc == 0 || e1Wc == 1) && (e2Wc == 0 || e2Wc == 1))\n    {\n      //neither edge is currently contributing ...\n      var e1Wc2, e2Wc2;\n      switch (e1FillType2)\n      {\n      case ClipperLib.PolyFillType.pftPositive:\n        e1Wc2 = e1.WindCnt2;\n        break;\n      case ClipperLib.PolyFillType.pftNegative:\n        e1Wc2 = -e1.WindCnt2;\n        break;\n      default:\n        e1Wc2 = Math.abs(e1.WindCnt2);\n        break;\n      }\n      switch (e2FillType2)\n      {\n      case ClipperLib.PolyFillType.pftPositive:\n        e2Wc2 = e2.WindCnt2;\n        break;\n      case ClipperLib.PolyFillType.pftNegative:\n        e2Wc2 = -e2.WindCnt2;\n        break;\n      default:\n        e2Wc2 = Math.abs(e2.WindCnt2);\n        break;\n      }\n      if (e1.PolyTyp != e2.PolyTyp)\n      {\n        this.AddLocalMinPoly(e1, e2, pt);\n      }\n      else if (e1Wc == 1 && e2Wc == 1)\n        switch (this.m_ClipType)\n        {\n        case ClipperLib.ClipType.ctIntersection:\n          if (e1Wc2 > 0 && e2Wc2 > 0)\n            this.AddLocalMinPoly(e1, e2, pt);\n          break;\n        case ClipperLib.ClipType.ctUnion:\n          if (e1Wc2 <= 0 && e2Wc2 <= 0)\n            this.AddLocalMinPoly(e1, e2, pt);\n          break;\n        case ClipperLib.ClipType.ctDifference:\n          if (((e1.PolyTyp == ClipperLib.PolyType.ptClip) && (e1Wc2 > 0) && (e2Wc2 > 0)) ||\n            ((e1.PolyTyp == ClipperLib.PolyType.ptSubject) && (e1Wc2 <= 0) && (e2Wc2 <= 0)))\n            this.AddLocalMinPoly(e1, e2, pt);\n          break;\n        case ClipperLib.ClipType.ctXor:\n          this.AddLocalMinPoly(e1, e2, pt);\n          break;\n        }\n      else\n        ClipperLib.Clipper.SwapSides(e1, e2);\n    }\n  };\n  ClipperLib.Clipper.prototype.DeleteFromAEL = function (e)\n  {\n    var AelPrev = e.PrevInAEL;\n    var AelNext = e.NextInAEL;\n    if (AelPrev === null && AelNext === null && (e != this.m_ActiveEdges))\n      return;\n    //already deleted\n    if (AelPrev !== null)\n      AelPrev.NextInAEL = AelNext;\n    else\n      this.m_ActiveEdges = AelNext;\n    if (AelNext !== null)\n      AelNext.PrevInAEL = AelPrev;\n    e.NextInAEL = null;\n    e.PrevInAEL = null;\n  };\n  ClipperLib.Clipper.prototype.DeleteFromSEL = function (e)\n  {\n    var SelPrev = e.PrevInSEL;\n    var SelNext = e.NextInSEL;\n    if (SelPrev === null && SelNext === null && (e != this.m_SortedEdges))\n      return;\n    //already deleted\n    if (SelPrev !== null)\n      SelPrev.NextInSEL = SelNext;\n    else\n      this.m_SortedEdges = SelNext;\n    if (SelNext !== null)\n      SelNext.PrevInSEL = SelPrev;\n    e.NextInSEL = null;\n    e.PrevInSEL = null;\n  };\n  ClipperLib.Clipper.prototype.UpdateEdgeIntoAEL = function (e)\n  {\n    if (e.NextInLML === null)\n      ClipperLib.Error(\"UpdateEdgeIntoAEL: invalid call\");\n    var AelPrev = e.PrevInAEL;\n    var AelNext = e.NextInAEL;\n    e.NextInLML.OutIdx = e.OutIdx;\n    if (AelPrev !== null)\n      AelPrev.NextInAEL = e.NextInLML;\n    else\n      this.m_ActiveEdges = e.NextInLML;\n    if (AelNext !== null)\n      AelNext.PrevInAEL = e.NextInLML;\n    e.NextInLML.Side = e.Side;\n    e.NextInLML.WindDelta = e.WindDelta;\n    e.NextInLML.WindCnt = e.WindCnt;\n    e.NextInLML.WindCnt2 = e.WindCnt2;\n    e = e.NextInLML;\n    //    e.Curr = e.Bot;\n    e.Curr.X = e.Bot.X;\n    e.Curr.Y = e.Bot.Y;\n    e.PrevInAEL = AelPrev;\n    e.NextInAEL = AelNext;\n    if (!ClipperLib.ClipperBase.IsHorizontal(e))\n      this.InsertScanbeam(e.Top.Y);\n    return e;\n  };\n  ClipperLib.Clipper.prototype.ProcessHorizontals = function (isTopOfScanbeam)\n  {\n    var horzEdge = this.m_SortedEdges;\n    while (horzEdge !== null)\n    {\n      this.DeleteFromSEL(horzEdge);\n      this.ProcessHorizontal(horzEdge, isTopOfScanbeam);\n      horzEdge = this.m_SortedEdges;\n    }\n  };\n  ClipperLib.Clipper.prototype.GetHorzDirection = function (HorzEdge, $var)\n  {\n    if (HorzEdge.Bot.X < HorzEdge.Top.X)\n    {\n        $var.Left = HorzEdge.Bot.X;\n        $var.Right = HorzEdge.Top.X;\n        $var.Dir = ClipperLib.Direction.dLeftToRight;\n    }\n    else\n    {\n        $var.Left = HorzEdge.Top.X;\n        $var.Right = HorzEdge.Bot.X;\n        $var.Dir = ClipperLib.Direction.dRightToLeft;\n    }\n  };\n  ClipperLib.Clipper.prototype.ProcessHorizontal = function (horzEdge, isTopOfScanbeam)\n  {\n    var $var = {Dir: null, Left: null, Right: null};\n    this.GetHorzDirection(horzEdge, $var);\n    var dir = $var.Dir;\n    var horzLeft = $var.Left;\n    var horzRight = $var.Right;\n\n    var eLastHorz = horzEdge,\n      eMaxPair = null;\n    while (eLastHorz.NextInLML !== null && ClipperLib.ClipperBase.IsHorizontal(eLastHorz.NextInLML))\n      eLastHorz = eLastHorz.NextInLML;\n    if (eLastHorz.NextInLML === null)\n      eMaxPair = this.GetMaximaPair(eLastHorz);\n    for (;;)\n    {\n      var IsLastHorz = (horzEdge == eLastHorz);\n      var e = this.GetNextInAEL(horzEdge, dir);\n      while (e !== null)\n      {\n        //Break if we've got to the end of an intermediate horizontal edge ...\n        //nb: Smaller Dx's are to the right of larger Dx's ABOVE the horizontal.\n        if (e.Curr.X == horzEdge.Top.X && horzEdge.NextInLML !== null && e.Dx < horzEdge.NextInLML.Dx)\n          break;\n        var eNext = this.GetNextInAEL(e, dir);\n        //saves eNext for later\n        if ((dir == ClipperLib.Direction.dLeftToRight && e.Curr.X <= horzRight) || (dir == ClipperLib.Direction.dRightToLeft && e.Curr.X >= horzLeft))\n        {\n          //so far we're still in range of the horizontal Edge  but make sure\n          //we're at the last of consec. horizontals when matching with eMaxPair\n          if (e == eMaxPair && IsLastHorz)\n          {\n\t\t\t\t\t\tif (horzEdge.OutIdx >= 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar op1 = this.AddOutPt(horzEdge, horzEdge.Top);\n\t\t\t\t\t\t\tvar eNextHorz = this.m_SortedEdges;\n\t\t\t\t\t\t\twhile (eNextHorz !== null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (eNextHorz.OutIdx >= 0 &&\n\t\t\t\t\t\t\t\t\tthis.HorzSegmentsOverlap(horzEdge.Bot.X,\n\t\t\t\t\t\t\t\t\thorzEdge.Top.X, eNextHorz.Bot.X, eNextHorz.Top.X))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar op2 = this.AddOutPt(eNextHorz, eNextHorz.Bot);\n\t\t\t\t\t\t\t\t\tthis.AddJoin(op2, op1, eNextHorz.Top);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\teNextHorz = eNextHorz.NextInSEL;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.AddGhostJoin(op1, horzEdge.Bot);\n\t\t\t\t\t\t\tthis.AddLocalMaxPoly(horzEdge, eMaxPair, horzEdge.Top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.DeleteFromAEL(horzEdge);\n\t\t\t\t\t\tthis.DeleteFromAEL(eMaxPair);\n            return;\n          }\n          else if (dir == ClipperLib.Direction.dLeftToRight)\n          {\n            var Pt = new ClipperLib.IntPoint(e.Curr.X, horzEdge.Curr.Y);\n            this.IntersectEdges(horzEdge, e, Pt);\n          }\n          else\n          {\n            var Pt = new ClipperLib.IntPoint(e.Curr.X, horzEdge.Curr.Y);\n            this.IntersectEdges(e, horzEdge, Pt);\n          }\n          this.SwapPositionsInAEL(horzEdge, e);\n        }\n        else if ((dir == ClipperLib.Direction.dLeftToRight && e.Curr.X >= horzRight) || (dir == ClipperLib.Direction.dRightToLeft && e.Curr.X <= horzLeft))\n          break;\n        e = eNext;\n      }\n      //end while\n      if (horzEdge.NextInLML !== null && ClipperLib.ClipperBase.IsHorizontal(horzEdge.NextInLML))\n      {\n        horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n        if (horzEdge.OutIdx >= 0)\n          this.AddOutPt(horzEdge, horzEdge.Bot);\n\n          var $var = {Dir: dir, Left: horzLeft, Right: horzRight};\n          this.GetHorzDirection(horzEdge, $var);\n          dir = $var.Dir;\n          horzLeft = $var.Left;\n          horzRight = $var.Right;\n      }\n      else\n        break;\n    }\n    //end for (;;)\n    if (horzEdge.NextInLML !== null)\n    {\n      if (horzEdge.OutIdx >= 0)\n      {\n        var op1 = this.AddOutPt(horzEdge, horzEdge.Top);\n\t\t\t\tif (isTopOfScanbeam) this.AddGhostJoin(op1, horzEdge.Bot);\n        horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n        if (horzEdge.WindDelta === 0)\n          return;\n        //nb: HorzEdge is no longer horizontal here\n        var ePrev = horzEdge.PrevInAEL;\n        var eNext = horzEdge.NextInAEL;\n        if (ePrev !== null && ePrev.Curr.X == horzEdge.Bot.X &&\n          ePrev.Curr.Y == horzEdge.Bot.Y && ePrev.WindDelta !== 0 &&\n          (ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y &&\n            ClipperLib.ClipperBase.SlopesEqual(horzEdge, ePrev, this.m_UseFullRange)))\n        {\n          var op2 = this.AddOutPt(ePrev, horzEdge.Bot);\n          this.AddJoin(op1, op2, horzEdge.Top);\n        }\n        else if (eNext !== null && eNext.Curr.X == horzEdge.Bot.X &&\n          eNext.Curr.Y == horzEdge.Bot.Y && eNext.WindDelta !== 0 &&\n          eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y &&\n          ClipperLib.ClipperBase.SlopesEqual(horzEdge, eNext, this.m_UseFullRange))\n        {\n          var op2 = this.AddOutPt(eNext, horzEdge.Bot);\n          this.AddJoin(op1, op2, horzEdge.Top);\n        }\n      }\n      else horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n    }\n  \telse\n    {\n      if (horzEdge.OutIdx >= 0)\n        this.AddOutPt(horzEdge, horzEdge.Top);\n      this.DeleteFromAEL(horzEdge);\n    }\n  };\n  ClipperLib.Clipper.prototype.GetNextInAEL = function (e, Direction)\n  {\n    return Direction == ClipperLib.Direction.dLeftToRight ? e.NextInAEL : e.PrevInAEL;\n  };\n  ClipperLib.Clipper.prototype.IsMinima = function (e)\n  {\n    return e !== null && (e.Prev.NextInLML != e) && (e.Next.NextInLML != e);\n  };\n  ClipperLib.Clipper.prototype.IsMaxima = function (e, Y)\n  {\n    return (e !== null && e.Top.Y == Y && e.NextInLML === null);\n  };\n  ClipperLib.Clipper.prototype.IsIntermediate = function (e, Y)\n  {\n    return (e.Top.Y == Y && e.NextInLML !== null);\n  };\n  ClipperLib.Clipper.prototype.GetMaximaPair = function (e)\n  {\n    var result = null;\n    if ((ClipperLib.IntPoint.op_Equality(e.Next.Top, e.Top)) && e.Next.NextInLML === null)\n      result = e.Next;\n    else if ((ClipperLib.IntPoint.op_Equality(e.Prev.Top, e.Top)) && e.Prev.NextInLML === null)\n      result = e.Prev;\n    if (result !== null && (result.OutIdx == -2 || (result.NextInAEL == result.PrevInAEL && !ClipperLib.ClipperBase.IsHorizontal(result))))\n      return null;\n    return result;\n  };\n\n  ClipperLib.Clipper.prototype.ProcessIntersections = function (topY)\n  {\n    if (this.m_ActiveEdges == null)\n      return true;\n    try\n    {\n      this.BuildIntersectList(topY);\n      if (this.m_IntersectList.length == 0)\n        return true;\n      if (this.m_IntersectList.length == 1 || this.FixupIntersectionOrder())\n        this.ProcessIntersectList();\n      else\n        return false;\n    }\n    catch ($$e2)\n    {\n      this.m_SortedEdges = null;\n      this.m_IntersectList.length = 0;\n      ClipperLib.Error(\"ProcessIntersections error\");\n    }\n    this.m_SortedEdges = null;\n    return true;\n  };\n  ClipperLib.Clipper.prototype.BuildIntersectList = function (topY)\n  {\n    if (this.m_ActiveEdges === null)\n      return;\n    //prepare for sorting ...\n    var e = this.m_ActiveEdges;\n    //console.log(JSON.stringify(JSON.decycle( e )));\n    this.m_SortedEdges = e;\n    while (e !== null)\n    {\n      e.PrevInSEL = e.PrevInAEL;\n      e.NextInSEL = e.NextInAEL;\n      e.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n      e = e.NextInAEL;\n    }\n    //bubblesort ...\n    var isModified = true;\n    while (isModified && this.m_SortedEdges !== null)\n    {\n      isModified = false;\n      e = this.m_SortedEdges;\n      while (e.NextInSEL !== null)\n      {\n        var eNext = e.NextInSEL;\n        var pt = new ClipperLib.IntPoint();\n        //console.log(\"e.Curr.X: \" + e.Curr.X + \" eNext.Curr.X\" + eNext.Curr.X);\n        if (e.Curr.X > eNext.Curr.X)\n        {\n\t\t\t\t\tthis.IntersectPoint(e, eNext, pt);\n          var newNode = new ClipperLib.IntersectNode();\n          newNode.Edge1 = e;\n          newNode.Edge2 = eNext;\n          //newNode.Pt = pt;\n          newNode.Pt.X = pt.X;\n          newNode.Pt.Y = pt.Y;\n          this.m_IntersectList.push(newNode);\n          this.SwapPositionsInSEL(e, eNext);\n          isModified = true;\n        }\n        else\n          e = eNext;\n      }\n      if (e.PrevInSEL !== null)\n        e.PrevInSEL.NextInSEL = null;\n      else\n        break;\n    }\n    this.m_SortedEdges = null;\n  };\n  ClipperLib.Clipper.prototype.EdgesAdjacent = function (inode)\n  {\n    return (inode.Edge1.NextInSEL == inode.Edge2) || (inode.Edge1.PrevInSEL == inode.Edge2);\n  };\n  ClipperLib.Clipper.IntersectNodeSort = function (node1, node2)\n  {\n    //the following typecast is safe because the differences in Pt.Y will\n    //be limited to the height of the scanbeam.\n    return (node2.Pt.Y - node1.Pt.Y);\n  };\n  ClipperLib.Clipper.prototype.FixupIntersectionOrder = function ()\n  {\n    //pre-condition: intersections are sorted bottom-most first.\n    //Now it's crucial that intersections are made only between adjacent edges,\n    //so to ensure this the order of intersections may need adjusting ...\n    this.m_IntersectList.sort(this.m_IntersectNodeComparer);\n    this.CopyAELToSEL();\n    var cnt = this.m_IntersectList.length;\n    for (var i = 0; i < cnt; i++)\n    {\n      if (!this.EdgesAdjacent(this.m_IntersectList[i]))\n      {\n        var j = i + 1;\n        while (j < cnt && !this.EdgesAdjacent(this.m_IntersectList[j]))\n          j++;\n        if (j == cnt)\n          return false;\n        var tmp = this.m_IntersectList[i];\n        this.m_IntersectList[i] = this.m_IntersectList[j];\n        this.m_IntersectList[j] = tmp;\n      }\n      this.SwapPositionsInSEL(this.m_IntersectList[i].Edge1, this.m_IntersectList[i].Edge2);\n    }\n    return true;\n  };\n  ClipperLib.Clipper.prototype.ProcessIntersectList = function ()\n  {\n    for (var i = 0, ilen = this.m_IntersectList.length; i < ilen; i++)\n    {\n      var iNode = this.m_IntersectList[i];\n      this.IntersectEdges(iNode.Edge1, iNode.Edge2, iNode.Pt);\n      this.SwapPositionsInAEL(iNode.Edge1, iNode.Edge2);\n    }\n    this.m_IntersectList.length = 0;\n  };\n  /*\n  --------------------------------\n  Round speedtest: http://jsperf.com/fastest-round\n  --------------------------------\n  */\n  var R1 = function (a)\n  {\n    return a < 0 ? Math.ceil(a - 0.5) : Math.round(a)\n  };\n  var R2 = function (a)\n  {\n    return a < 0 ? Math.ceil(a - 0.5) : Math.floor(a + 0.5)\n  };\n  var R3 = function (a)\n  {\n    return a < 0 ? -Math.round(Math.abs(a)) : Math.round(a)\n  };\n  var R4 = function (a)\n  {\n    if (a < 0)\n    {\n      a -= 0.5;\n      return a < -2147483648 ? Math.ceil(a) : a | 0;\n    }\n    else\n    {\n      a += 0.5;\n      return a > 2147483647 ? Math.floor(a) : a | 0;\n    }\n  };\n  if (browser.msie) ClipperLib.Clipper.Round = R1;\n  else if (browser.chromium) ClipperLib.Clipper.Round = R3;\n  else if (browser.safari) ClipperLib.Clipper.Round = R4;\n  else ClipperLib.Clipper.Round = R2; // eg. browser.chrome || browser.firefox || browser.opera\n  ClipperLib.Clipper.TopX = function (edge, currentY)\n  {\n    //if (edge.Bot == edge.Curr) alert (\"edge.Bot = edge.Curr\");\n    //if (edge.Bot == edge.Top) alert (\"edge.Bot = edge.Top\");\n    if (currentY == edge.Top.Y)\n      return edge.Top.X;\n    return edge.Bot.X + ClipperLib.Clipper.Round(edge.Dx * (currentY - edge.Bot.Y));\n  };\n  ClipperLib.Clipper.prototype.IntersectPoint = function (edge1, edge2, ip)\n  {\n    ip.X = 0;\n    ip.Y = 0;\n    var b1, b2;\n    //nb: with very large coordinate values, it's possible for SlopesEqual() to\n    //return false but for the edge.Dx value be equal due to double precision rounding.\n    if (edge1.Dx == edge2.Dx)\n\t\t{\n\t\t\tip.Y = edge1.Curr.Y;\n\t\t\tip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n\t\t\treturn;\n    }\n    if (edge1.Delta.X === 0)\n    {\n      ip.X = edge1.Bot.X;\n      if (ClipperLib.ClipperBase.IsHorizontal(edge2))\n      {\n        ip.Y = edge2.Bot.Y;\n      }\n      else\n      {\n        b2 = edge2.Bot.Y - (edge2.Bot.X / edge2.Dx);\n        ip.Y = ClipperLib.Clipper.Round(ip.X / edge2.Dx + b2);\n      }\n    }\n    else if (edge2.Delta.X === 0)\n    {\n      ip.X = edge2.Bot.X;\n      if (ClipperLib.ClipperBase.IsHorizontal(edge1))\n      {\n        ip.Y = edge1.Bot.Y;\n      }\n      else\n      {\n        b1 = edge1.Bot.Y - (edge1.Bot.X / edge1.Dx);\n        ip.Y = ClipperLib.Clipper.Round(ip.X / edge1.Dx + b1);\n      }\n    }\n    else\n    {\n      b1 = edge1.Bot.X - edge1.Bot.Y * edge1.Dx;\n      b2 = edge2.Bot.X - edge2.Bot.Y * edge2.Dx;\n      var q = (b2 - b1) / (edge1.Dx - edge2.Dx);\n      ip.Y = ClipperLib.Clipper.Round(q);\n      if (Math.abs(edge1.Dx) < Math.abs(edge2.Dx))\n        ip.X = ClipperLib.Clipper.Round(edge1.Dx * q + b1);\n      else\n        ip.X = ClipperLib.Clipper.Round(edge2.Dx * q + b2);\n    }\n    if (ip.Y < edge1.Top.Y || ip.Y < edge2.Top.Y)\n    {\n      if (edge1.Top.Y > edge2.Top.Y)\n      {\n        ip.Y = edge1.Top.Y;\n        ip.X = ClipperLib.Clipper.TopX(edge2, edge1.Top.Y);\n        return ip.X < edge1.Top.X;\n      }\n      else\n        ip.Y = edge2.Top.Y;\n      if (Math.abs(edge1.Dx) < Math.abs(edge2.Dx))\n        ip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n      else\n        ip.X = ClipperLib.Clipper.TopX(edge2, ip.Y);\n    }\n\t\t//finally, don't allow 'ip' to be BELOW curr.Y (ie bottom of scanbeam) ...\n\t\tif (ip.Y > edge1.Curr.Y)\n\t\t{\n\t\t\tip.Y = edge1.Curr.Y;\n\t\t\t//better to use the more vertical edge to derive X ...\n\t\t\tif (Math.abs(edge1.Dx) > Math.abs(edge2.Dx))\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge2, ip.Y);\n\t\t\telse\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n\t\t}\n  };\n\n  ClipperLib.Clipper.prototype.ProcessEdgesAtTopOfScanbeam = function (topY)\n  {\n    var e = this.m_ActiveEdges;\n    while (e !== null)\n    {\n      //1. process maxima, treating them as if they're 'bent' horizontal edges,\n      //   but exclude maxima with horizontal edges. nb: e can't be a horizontal.\n      var IsMaximaEdge = this.IsMaxima(e, topY);\n      if (IsMaximaEdge)\n      {\n        var eMaxPair = this.GetMaximaPair(e);\n        IsMaximaEdge = (eMaxPair === null || !ClipperLib.ClipperBase.IsHorizontal(eMaxPair));\n      }\n      if (IsMaximaEdge)\n      {\n        var ePrev = e.PrevInAEL;\n        this.DoMaxima(e);\n        if (ePrev === null)\n          e = this.m_ActiveEdges;\n        else\n          e = ePrev.NextInAEL;\n      }\n      else\n      {\n        //2. promote horizontal edges, otherwise update Curr.X and Curr.Y ...\n        if (this.IsIntermediate(e, topY) && ClipperLib.ClipperBase.IsHorizontal(e.NextInLML))\n        {\n          e = this.UpdateEdgeIntoAEL(e);\n          if (e.OutIdx >= 0)\n            this.AddOutPt(e, e.Bot);\n          this.AddEdgeToSEL(e);\n        }\n        else\n        {\n          e.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n          e.Curr.Y = topY;\n        }\n        if (this.StrictlySimple)\n        {\n          var ePrev = e.PrevInAEL;\n          if ((e.OutIdx >= 0) && (e.WindDelta !== 0) && ePrev !== null &&\n            (ePrev.OutIdx >= 0) && (ePrev.Curr.X == e.Curr.X) &&\n            (ePrev.WindDelta !== 0))\n          {\n           \tvar ip = new ClipperLib.IntPoint(e.Curr);\n\n\t\t\t\t\t\tif(use_xyz)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.SetZ(ip, ePrev, e);\n\t\t\t\t\t\t}\n\n            var op = this.AddOutPt(ePrev, ip);\n            var op2 = this.AddOutPt(e, ip);\n            this.AddJoin(op, op2, ip);\n            //StrictlySimple (type-3) join\n          }\n        }\n        e = e.NextInAEL;\n      }\n    }\n    //3. Process horizontals at the Top of the scanbeam ...\n    this.ProcessHorizontals(true);\n    //4. Promote intermediate vertices ...\n    e = this.m_ActiveEdges;\n    while (e !== null)\n    {\n      if (this.IsIntermediate(e, topY))\n      {\n        var op = null;\n        if (e.OutIdx >= 0)\n          op = this.AddOutPt(e, e.Top);\n        e = this.UpdateEdgeIntoAEL(e);\n        //if output polygons share an edge, they'll need joining later ...\n        var ePrev = e.PrevInAEL;\n        var eNext = e.NextInAEL;\n        if (ePrev !== null && ePrev.Curr.X == e.Bot.X &&\n          ePrev.Curr.Y == e.Bot.Y && op !== null &&\n          ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y &&\n          ClipperLib.ClipperBase.SlopesEqual(e, ePrev, this.m_UseFullRange) &&\n          (e.WindDelta !== 0) && (ePrev.WindDelta !== 0))\n        {\n          var op2 = this.AddOutPt(ePrev, e.Bot);\n          this.AddJoin(op, op2, e.Top);\n        }\n        else if (eNext !== null && eNext.Curr.X == e.Bot.X &&\n          eNext.Curr.Y == e.Bot.Y && op !== null &&\n          eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y &&\n          ClipperLib.ClipperBase.SlopesEqual(e, eNext, this.m_UseFullRange) &&\n          (e.WindDelta !== 0) && (eNext.WindDelta !== 0))\n        {\n          var op2 = this.AddOutPt(eNext, e.Bot);\n          this.AddJoin(op, op2, e.Top);\n        }\n      }\n      e = e.NextInAEL;\n    }\n  };\n  ClipperLib.Clipper.prototype.DoMaxima = function (e)\n  {\n    var eMaxPair = this.GetMaximaPair(e);\n    if (eMaxPair === null)\n    {\n      if (e.OutIdx >= 0)\n        this.AddOutPt(e, e.Top);\n      this.DeleteFromAEL(e);\n      return;\n    }\n    var eNext = e.NextInAEL;\n    var use_lines = true;\n    while (eNext !== null && eNext != eMaxPair)\n    {\n      this.IntersectEdges(e, eNext, e.Top);\n      this.SwapPositionsInAEL(e, eNext);\n      eNext = e.NextInAEL;\n    }\n    if (e.OutIdx == -1 && eMaxPair.OutIdx == -1)\n    {\n      this.DeleteFromAEL(e);\n      this.DeleteFromAEL(eMaxPair);\n    }\n    else if (e.OutIdx >= 0 && eMaxPair.OutIdx >= 0)\n    {\n    \tif (e.OutIdx >= 0) this.AddLocalMaxPoly(e, eMaxPair, e.Top);\n      this.DeleteFromAEL(e);\n      this.DeleteFromAEL(eMaxPair);\n    }\n    else if (use_lines && e.WindDelta === 0)\n    {\n      if (e.OutIdx >= 0)\n      {\n        this.AddOutPt(e, e.Top);\n        e.OutIdx = -1;\n      }\n      this.DeleteFromAEL(e);\n      if (eMaxPair.OutIdx >= 0)\n      {\n        this.AddOutPt(eMaxPair, e.Top);\n        eMaxPair.OutIdx = -1;\n      }\n      this.DeleteFromAEL(eMaxPair);\n    }\n    else\n      ClipperLib.Error(\"DoMaxima error\");\n  };\n  ClipperLib.Clipper.ReversePaths = function (polys)\n  {\n    for (var i = 0, len = polys.length; i < len; i++)\n      polys[i].reverse();\n  };\n  ClipperLib.Clipper.Orientation = function (poly)\n  {\n    return ClipperLib.Clipper.Area(poly) >= 0;\n  };\n  ClipperLib.Clipper.prototype.PointCount = function (pts)\n  {\n    if (pts === null)\n      return 0;\n    var result = 0;\n    var p = pts;\n    do {\n      result++;\n      p = p.Next;\n    }\n    while (p != pts)\n    return result;\n  };\n  ClipperLib.Clipper.prototype.BuildResult = function (polyg)\n  {\n    ClipperLib.Clear(polyg);\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n    {\n      var outRec = this.m_PolyOuts[i];\n      if (outRec.Pts === null)\n        continue;\n      var p = outRec.Pts.Prev;\n      var cnt = this.PointCount(p);\n      if (cnt < 2)\n        continue;\n      var pg = new Array(cnt);\n      for (var j = 0; j < cnt; j++)\n      {\n        pg[j] = p.Pt;\n        p = p.Prev;\n      }\n      polyg.push(pg);\n    }\n  };\n  ClipperLib.Clipper.prototype.BuildResult2 = function (polytree)\n  {\n    polytree.Clear();\n    //add each output polygon/contour to polytree ...\n    //polytree.m_AllPolys.set_Capacity(this.m_PolyOuts.length);\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n    {\n      var outRec = this.m_PolyOuts[i];\n      var cnt = this.PointCount(outRec.Pts);\n      if ((outRec.IsOpen && cnt < 2) || (!outRec.IsOpen && cnt < 3))\n        continue;\n      this.FixHoleLinkage(outRec);\n      var pn = new ClipperLib.PolyNode();\n      polytree.m_AllPolys.push(pn);\n      outRec.PolyNode = pn;\n      pn.m_polygon.length = cnt;\n      var op = outRec.Pts.Prev;\n      for (var j = 0; j < cnt; j++)\n      {\n        pn.m_polygon[j] = op.Pt;\n        op = op.Prev;\n      }\n    }\n    //fixup PolyNode links etc ...\n    //polytree.m_Childs.set_Capacity(this.m_PolyOuts.length);\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n    {\n      var outRec = this.m_PolyOuts[i];\n      if (outRec.PolyNode === null)\n        continue;\n      else if (outRec.IsOpen)\n      {\n        outRec.PolyNode.IsOpen = true;\n        polytree.AddChild(outRec.PolyNode);\n      }\n      else if (outRec.FirstLeft !== null && outRec.FirstLeft.PolyNode != null)\n        outRec.FirstLeft.PolyNode.AddChild(outRec.PolyNode);\n      else\n        polytree.AddChild(outRec.PolyNode);\n    }\n  };\n  ClipperLib.Clipper.prototype.FixupOutPolygon = function (outRec)\n  {\n    //FixupOutPolygon() - removes duplicate points and simplifies consecutive\n    //parallel edges by removing the middle vertex.\n    var lastOK = null;\n    outRec.BottomPt = null;\n    var pp = outRec.Pts;\n    for (;;)\n    {\n      if (pp.Prev == pp || pp.Prev == pp.Next)\n      {\n        outRec.Pts = null;\n        return;\n      }\n      //test for duplicate points and collinear edges ...\n      if ((ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Next.Pt)) || (ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Prev.Pt)) ||\n        (ClipperLib.ClipperBase.SlopesEqual(pp.Prev.Pt, pp.Pt, pp.Next.Pt, this.m_UseFullRange) &&\n          (!this.PreserveCollinear || !this.Pt2IsBetweenPt1AndPt3(pp.Prev.Pt, pp.Pt, pp.Next.Pt))))\n      {\n        lastOK = null;\n        pp.Prev.Next = pp.Next;\n        pp.Next.Prev = pp.Prev;\n        pp = pp.Prev;\n      }\n      else if (pp == lastOK)\n        break;\n      else\n      {\n        if (lastOK === null)\n          lastOK = pp;\n        pp = pp.Next;\n      }\n    }\n    outRec.Pts = pp;\n  };\n  ClipperLib.Clipper.prototype.DupOutPt = function (outPt, InsertAfter)\n  {\n    var result = new ClipperLib.OutPt();\n    //result.Pt = outPt.Pt;\n    result.Pt.X = outPt.Pt.X;\n    result.Pt.Y = outPt.Pt.Y;\n    result.Idx = outPt.Idx;\n    if (InsertAfter)\n    {\n      result.Next = outPt.Next;\n      result.Prev = outPt;\n      outPt.Next.Prev = result;\n      outPt.Next = result;\n    }\n    else\n    {\n      result.Prev = outPt.Prev;\n      result.Next = outPt;\n      outPt.Prev.Next = result;\n      outPt.Prev = result;\n    }\n    return result;\n  };\n  ClipperLib.Clipper.prototype.GetOverlap = function (a1, a2, b1, b2, $val)\n  {\n    if (a1 < a2)\n    {\n      if (b1 < b2)\n      {\n        $val.Left = Math.max(a1, b1);\n        $val.Right = Math.min(a2, b2);\n      }\n      else\n      {\n        $val.Left = Math.max(a1, b2);\n        $val.Right = Math.min(a2, b1);\n      }\n    }\n    else\n    {\n      if (b1 < b2)\n      {\n        $val.Left = Math.max(a2, b1);\n        $val.Right = Math.min(a1, b2);\n      }\n      else\n      {\n        $val.Left = Math.max(a2, b2);\n        $val.Right = Math.min(a1, b1);\n      }\n    }\n    return $val.Left < $val.Right;\n  };\n  ClipperLib.Clipper.prototype.JoinHorz = function (op1, op1b, op2, op2b, Pt, DiscardLeft)\n  {\n    var Dir1 = (op1.Pt.X > op1b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight);\n    var Dir2 = (op2.Pt.X > op2b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight);\n    if (Dir1 == Dir2)\n      return false;\n    //When DiscardLeft, we want Op1b to be on the Left of Op1, otherwise we\n    //want Op1b to be on the Right. (And likewise with Op2 and Op2b.)\n    //So, to facilitate this while inserting Op1b and Op2b ...\n    //when DiscardLeft, make sure we're AT or RIGHT of Pt before adding Op1b,\n    //otherwise make sure we're AT or LEFT of Pt. (Likewise with Op2b.)\n    if (Dir1 == ClipperLib.Direction.dLeftToRight)\n    {\n      while (op1.Next.Pt.X <= Pt.X &&\n        op1.Next.Pt.X >= op1.Pt.X && op1.Next.Pt.Y == Pt.Y)\n        op1 = op1.Next;\n      if (DiscardLeft && (op1.Pt.X != Pt.X))\n        op1 = op1.Next;\n      op1b = this.DupOutPt(op1, !DiscardLeft);\n      if (ClipperLib.IntPoint.op_Inequality(op1b.Pt, Pt))\n      {\n        op1 = op1b;\n        //op1.Pt = Pt;\n        op1.Pt.X = Pt.X;\n        op1.Pt.Y = Pt.Y;\n        op1b = this.DupOutPt(op1, !DiscardLeft);\n      }\n    }\n    else\n    {\n      while (op1.Next.Pt.X >= Pt.X &&\n        op1.Next.Pt.X <= op1.Pt.X && op1.Next.Pt.Y == Pt.Y)\n        op1 = op1.Next;\n      if (!DiscardLeft && (op1.Pt.X != Pt.X))\n        op1 = op1.Next;\n      op1b = this.DupOutPt(op1, DiscardLeft);\n      if (ClipperLib.IntPoint.op_Inequality(op1b.Pt, Pt))\n      {\n        op1 = op1b;\n        //op1.Pt = Pt;\n        op1.Pt.X = Pt.X;\n        op1.Pt.Y = Pt.Y;\n        op1b = this.DupOutPt(op1, DiscardLeft);\n      }\n    }\n    if (Dir2 == ClipperLib.Direction.dLeftToRight)\n    {\n      while (op2.Next.Pt.X <= Pt.X &&\n        op2.Next.Pt.X >= op2.Pt.X && op2.Next.Pt.Y == Pt.Y)\n        op2 = op2.Next;\n      if (DiscardLeft && (op2.Pt.X != Pt.X))\n        op2 = op2.Next;\n      op2b = this.DupOutPt(op2, !DiscardLeft);\n      if (ClipperLib.IntPoint.op_Inequality(op2b.Pt, Pt))\n      {\n        op2 = op2b;\n        //op2.Pt = Pt;\n        op2.Pt.X = Pt.X;\n        op2.Pt.Y = Pt.Y;\n        op2b = this.DupOutPt(op2, !DiscardLeft);\n      }\n    }\n    else\n    {\n      while (op2.Next.Pt.X >= Pt.X &&\n        op2.Next.Pt.X <= op2.Pt.X && op2.Next.Pt.Y == Pt.Y)\n        op2 = op2.Next;\n      if (!DiscardLeft && (op2.Pt.X != Pt.X))\n        op2 = op2.Next;\n      op2b = this.DupOutPt(op2, DiscardLeft);\n      if (ClipperLib.IntPoint.op_Inequality(op2b.Pt, Pt))\n      {\n        op2 = op2b;\n        //op2.Pt = Pt;\n        op2.Pt.X = Pt.X;\n        op2.Pt.Y = Pt.Y;\n        op2b = this.DupOutPt(op2, DiscardLeft);\n      }\n    }\n    if ((Dir1 == ClipperLib.Direction.dLeftToRight) == DiscardLeft)\n    {\n      op1.Prev = op2;\n      op2.Next = op1;\n      op1b.Next = op2b;\n      op2b.Prev = op1b;\n    }\n    else\n    {\n      op1.Next = op2;\n      op2.Prev = op1;\n      op1b.Prev = op2b;\n      op2b.Next = op1b;\n    }\n    return true;\n  };\n  ClipperLib.Clipper.prototype.JoinPoints = function (j, outRec1, outRec2)\n  {\n    var op1 = j.OutPt1,\n      op1b = new ClipperLib.OutPt();\n    var op2 = j.OutPt2,\n      op2b = new ClipperLib.OutPt();\n    //There are 3 kinds of joins for output polygons ...\n    //1. Horizontal joins where Join.OutPt1 & Join.OutPt2 are a vertices anywhere\n    //along (horizontal) collinear edges (& Join.OffPt is on the same horizontal).\n    //2. Non-horizontal joins where Join.OutPt1 & Join.OutPt2 are at the same\n    //location at the Bottom of the overlapping segment (& Join.OffPt is above).\n    //3. StrictlySimple joins where edges touch but are not collinear and where\n    //Join.OutPt1, Join.OutPt2 & Join.OffPt all share the same point.\n    var isHorizontal = (j.OutPt1.Pt.Y == j.OffPt.Y);\n    if (isHorizontal && (ClipperLib.IntPoint.op_Equality(j.OffPt, j.OutPt1.Pt)) && (ClipperLib.IntPoint.op_Equality(j.OffPt, j.OutPt2.Pt)))\n    {\n      //Strictly Simple join ...\n\t\t\tif (outRec1 != outRec2) return false;\n\n      op1b = j.OutPt1.Next;\n      while (op1b != op1 && (ClipperLib.IntPoint.op_Equality(op1b.Pt, j.OffPt)))\n        op1b = op1b.Next;\n      var reverse1 = (op1b.Pt.Y > j.OffPt.Y);\n      op2b = j.OutPt2.Next;\n      while (op2b != op2 && (ClipperLib.IntPoint.op_Equality(op2b.Pt, j.OffPt)))\n        op2b = op2b.Next;\n      var reverse2 = (op2b.Pt.Y > j.OffPt.Y);\n      if (reverse1 == reverse2)\n        return false;\n      if (reverse1)\n      {\n        op1b = this.DupOutPt(op1, false);\n        op2b = this.DupOutPt(op2, true);\n        op1.Prev = op2;\n        op2.Next = op1;\n        op1b.Next = op2b;\n        op2b.Prev = op1b;\n        j.OutPt1 = op1;\n        j.OutPt2 = op1b;\n        return true;\n      }\n      else\n      {\n        op1b = this.DupOutPt(op1, true);\n        op2b = this.DupOutPt(op2, false);\n        op1.Next = op2;\n        op2.Prev = op1;\n        op1b.Prev = op2b;\n        op2b.Next = op1b;\n        j.OutPt1 = op1;\n        j.OutPt2 = op1b;\n        return true;\n      }\n    }\n    else if (isHorizontal)\n    {\n      //treat horizontal joins differently to non-horizontal joins since with\n      //them we're not yet sure where the overlapping is. OutPt1.Pt & OutPt2.Pt\n      //may be anywhere along the horizontal edge.\n      op1b = op1;\n      while (op1.Prev.Pt.Y == op1.Pt.Y && op1.Prev != op1b && op1.Prev != op2)\n        op1 = op1.Prev;\n      while (op1b.Next.Pt.Y == op1b.Pt.Y && op1b.Next != op1 && op1b.Next != op2)\n        op1b = op1b.Next;\n      if (op1b.Next == op1 || op1b.Next == op2)\n        return false;\n      //a flat 'polygon'\n      op2b = op2;\n      while (op2.Prev.Pt.Y == op2.Pt.Y && op2.Prev != op2b && op2.Prev != op1b)\n        op2 = op2.Prev;\n      while (op2b.Next.Pt.Y == op2b.Pt.Y && op2b.Next != op2 && op2b.Next != op1)\n        op2b = op2b.Next;\n      if (op2b.Next == op2 || op2b.Next == op1)\n        return false;\n      //a flat 'polygon'\n      //Op1 -. Op1b & Op2 -. Op2b are the extremites of the horizontal edges\n\n      var $val = {Left: null, Right: null};\n      if (!this.GetOverlap(op1.Pt.X, op1b.Pt.X, op2.Pt.X, op2b.Pt.X, $val))\n        return false;\n      var Left = $val.Left;\n      var Right = $val.Right;\n\n      //DiscardLeftSide: when overlapping edges are joined, a spike will created\n      //which needs to be cleaned up. However, we don't want Op1 or Op2 caught up\n      //on the discard Side as either may still be needed for other joins ...\n      var Pt = new ClipperLib.IntPoint();\n      var DiscardLeftSide;\n      if (op1.Pt.X >= Left && op1.Pt.X <= Right)\n      {\n        //Pt = op1.Pt;\n        Pt.X = op1.Pt.X;\n        Pt.Y = op1.Pt.Y;\n        DiscardLeftSide = (op1.Pt.X > op1b.Pt.X);\n      }\n      else if (op2.Pt.X >= Left && op2.Pt.X <= Right)\n      {\n        //Pt = op2.Pt;\n        Pt.X = op2.Pt.X;\n        Pt.Y = op2.Pt.Y;\n        DiscardLeftSide = (op2.Pt.X > op2b.Pt.X);\n      }\n      else if (op1b.Pt.X >= Left && op1b.Pt.X <= Right)\n      {\n        //Pt = op1b.Pt;\n        Pt.X = op1b.Pt.X;\n        Pt.Y = op1b.Pt.Y;\n        DiscardLeftSide = op1b.Pt.X > op1.Pt.X;\n      }\n      else\n      {\n        //Pt = op2b.Pt;\n        Pt.X = op2b.Pt.X;\n        Pt.Y = op2b.Pt.Y;\n        DiscardLeftSide = (op2b.Pt.X > op2.Pt.X);\n      }\n      j.OutPt1 = op1;\n      j.OutPt2 = op2;\n      return this.JoinHorz(op1, op1b, op2, op2b, Pt, DiscardLeftSide);\n    }\n    else\n    {\n      //nb: For non-horizontal joins ...\n      //    1. Jr.OutPt1.Pt.Y == Jr.OutPt2.Pt.Y\n      //    2. Jr.OutPt1.Pt > Jr.OffPt.Y\n      //make sure the polygons are correctly oriented ...\n      op1b = op1.Next;\n      while ((ClipperLib.IntPoint.op_Equality(op1b.Pt, op1.Pt)) && (op1b != op1))\n        op1b = op1b.Next;\n      var Reverse1 = ((op1b.Pt.Y > op1.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op1.Pt, op1b.Pt, j.OffPt, this.m_UseFullRange));\n      if (Reverse1)\n      {\n        op1b = op1.Prev;\n        while ((ClipperLib.IntPoint.op_Equality(op1b.Pt, op1.Pt)) && (op1b != op1))\n          op1b = op1b.Prev;\n        if ((op1b.Pt.Y > op1.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op1.Pt, op1b.Pt, j.OffPt, this.m_UseFullRange))\n          return false;\n      }\n      op2b = op2.Next;\n      while ((ClipperLib.IntPoint.op_Equality(op2b.Pt, op2.Pt)) && (op2b != op2))\n        op2b = op2b.Next;\n      var Reverse2 = ((op2b.Pt.Y > op2.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op2.Pt, op2b.Pt, j.OffPt, this.m_UseFullRange));\n      if (Reverse2)\n      {\n        op2b = op2.Prev;\n        while ((ClipperLib.IntPoint.op_Equality(op2b.Pt, op2.Pt)) && (op2b != op2))\n          op2b = op2b.Prev;\n        if ((op2b.Pt.Y > op2.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op2.Pt, op2b.Pt, j.OffPt, this.m_UseFullRange))\n          return false;\n      }\n      if ((op1b == op1) || (op2b == op2) || (op1b == op2b) ||\n        ((outRec1 == outRec2) && (Reverse1 == Reverse2)))\n        return false;\n      if (Reverse1)\n      {\n        op1b = this.DupOutPt(op1, false);\n        op2b = this.DupOutPt(op2, true);\n        op1.Prev = op2;\n        op2.Next = op1;\n        op1b.Next = op2b;\n        op2b.Prev = op1b;\n        j.OutPt1 = op1;\n        j.OutPt2 = op1b;\n        return true;\n      }\n      else\n      {\n        op1b = this.DupOutPt(op1, true);\n        op2b = this.DupOutPt(op2, false);\n        op1.Next = op2;\n        op2.Prev = op1;\n        op1b.Prev = op2b;\n        op2b.Next = op1b;\n        j.OutPt1 = op1;\n        j.OutPt2 = op1b;\n        return true;\n      }\n    }\n  };\n  ClipperLib.Clipper.GetBounds = function (paths)\n  {\n    var i = 0,\n      cnt = paths.length;\n    while (i < cnt && paths[i].length == 0) i++;\n    if (i == cnt) return new ClipperLib.IntRect(0, 0, 0, 0);\n    var result = new ClipperLib.IntRect();\n    result.left = paths[i][0].X;\n    result.right = result.left;\n    result.top = paths[i][0].Y;\n    result.bottom = result.top;\n    for (; i < cnt; i++)\n      for (var j = 0, jlen = paths[i].length; j < jlen; j++)\n      {\n        if (paths[i][j].X < result.left) result.left = paths[i][j].X;\n        else if (paths[i][j].X > result.right) result.right = paths[i][j].X;\n        if (paths[i][j].Y < result.top) result.top = paths[i][j].Y;\n        else if (paths[i][j].Y > result.bottom) result.bottom = paths[i][j].Y;\n      }\n    return result;\n  }\n  ClipperLib.Clipper.prototype.GetBounds2 = function (ops)\n  {\n    var opStart = ops;\n    var result = new ClipperLib.IntRect();\n    result.left = ops.Pt.X;\n    result.right = ops.Pt.X;\n    result.top = ops.Pt.Y;\n    result.bottom = ops.Pt.Y;\n    ops = ops.Next;\n    while (ops != opStart)\n    {\n      if (ops.Pt.X < result.left)\n        result.left = ops.Pt.X;\n      if (ops.Pt.X > result.right)\n        result.right = ops.Pt.X;\n      if (ops.Pt.Y < result.top)\n        result.top = ops.Pt.Y;\n      if (ops.Pt.Y > result.bottom)\n        result.bottom = ops.Pt.Y;\n      ops = ops.Next;\n    }\n    return result;\n  };\n\n  ClipperLib.Clipper.PointInPolygon = function (pt, path)\n  {\n    //returns 0 if false, +1 if true, -1 if pt ON polygon boundary\n\t\t//See \"The Point in Polygon Problem for Arbitrary Polygons\" by Hormann & Agathos\n    //http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.5498&rep=rep1&type=pdf\n    var result = 0,\n      cnt = path.length;\n    if (cnt < 3)\n      return 0;\n    var ip = path[0];\n    for (var i = 1; i <= cnt; ++i)\n    {\n      var ipNext = (i == cnt ? path[0] : path[i]);\n      if (ipNext.Y == pt.Y)\n      {\n        if ((ipNext.X == pt.X) || (ip.Y == pt.Y && ((ipNext.X > pt.X) == (ip.X < pt.X))))\n          return -1;\n      }\n      if ((ip.Y < pt.Y) != (ipNext.Y < pt.Y))\n      {\n        if (ip.X >= pt.X)\n        {\n          if (ipNext.X > pt.X)\n            result = 1 - result;\n          else\n          {\n            var d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n            if (d == 0)\n              return -1;\n            else if ((d > 0) == (ipNext.Y > ip.Y))\n              result = 1 - result;\n          }\n        }\n        else\n        {\n          if (ipNext.X > pt.X)\n          {\n            var d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n            if (d == 0)\n              return -1;\n            else if ((d > 0) == (ipNext.Y > ip.Y))\n              result = 1 - result;\n          }\n        }\n      }\n      ip = ipNext;\n    }\n    return result;\n  };\n\n  ClipperLib.Clipper.prototype.PointInPolygon = function (pt, op)\n  {\n    //returns 0 if false, +1 if true, -1 if pt ON polygon boundary\n\t\t//See \"The Point in Polygon Problem for Arbitrary Polygons\" by Hormann & Agathos\n    //http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.5498&rep=rep1&type=pdf\n    var result = 0;\n    var startOp = op;\n\t\tvar ptx = pt.X, pty = pt.Y;\n    var poly0x = op.Pt.X, poly0y = op.Pt.Y;\n    do\n    {\n\t\t\top = op.Next;\n\t\t\tvar poly1x = op.Pt.X, poly1y = op.Pt.Y;\n      if (poly1y == pty)\n      {\n        if ((poly1x == ptx) || (poly0y == pty && ((poly1x > ptx) == (poly0x < ptx))))\n          return -1;\n      }\n      if ((poly0y < pty) != (poly1y < pty))\n      {\n        if (poly0x >= ptx)\n        {\n          if (poly1x > ptx)\n            result = 1 - result;\n          else\n          {\n            var d = (poly0x - ptx) * (poly1y - pty) - (poly1x - ptx) * (poly0y - pty);\n            if (d == 0)\n              return -1;\n            if ((d > 0) == (poly1y > poly0y))\n              result = 1 - result;\n          }\n        }\n        else\n        {\n          if (poly1x > ptx)\n          {\n            var d = (poly0x - ptx) * (poly1y - pty) - (poly1x - ptx) * (poly0y - pty);\n            if (d == 0)\n              return -1;\n            if ((d > 0) == (poly1y > poly0y))\n              result = 1 - result;\n          }\n        }\n      }\n      poly0x = poly1x;\n      poly0y = poly1y;\n    } while (startOp != op);\n\n    return result;\n  };\n\n  ClipperLib.Clipper.prototype.Poly2ContainsPoly1 = function (outPt1, outPt2)\n  {\n    var op = outPt1;\n    do\n    {\n\t\t\t//nb: PointInPolygon returns 0 if false, +1 if true, -1 if pt on polygon\n      var res = this.PointInPolygon(op.Pt, outPt2);\n      if (res >= 0)\n        return res > 0;\n      op = op.Next;\n    }\n    while (op != outPt1)\n    return true;\n  };\n  ClipperLib.Clipper.prototype.FixupFirstLefts1 = function (OldOutRec, NewOutRec)\n  {\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n    {\n\t\t\tvar outRec = this.m_PolyOuts[i];\n\t\t\tif (outRec.Pts == null || outRec.FirstLeft == null)\n\t\t\t\tcontinue;\n\t\t\tvar firstLeft = this.ParseFirstLeft(outRec.FirstLeft);\n\t\t\tif (firstLeft == OldOutRec)\n\t\t\t{\n        if (this.Poly2ContainsPoly1(outRec.Pts, NewOutRec.Pts))\n          outRec.FirstLeft = NewOutRec;\n      }\n    }\n  };\n  ClipperLib.Clipper.prototype.FixupFirstLefts2 = function (OldOutRec, NewOutRec)\n  {\n    for (var $i2 = 0, $t2 = this.m_PolyOuts, $l2 = $t2.length, outRec = $t2[$i2]; $i2 < $l2; $i2++, outRec = $t2[$i2])\n      if (outRec.FirstLeft == OldOutRec)\n        outRec.FirstLeft = NewOutRec;\n  };\n  ClipperLib.Clipper.ParseFirstLeft = function (FirstLeft)\n  {\n    while (FirstLeft != null && FirstLeft.Pts == null)\n      FirstLeft = FirstLeft.FirstLeft;\n    return FirstLeft;\n  };\n  ClipperLib.Clipper.prototype.JoinCommonEdges = function ()\n  {\n    for (var i = 0, ilen = this.m_Joins.length; i < ilen; i++)\n    {\n      var join = this.m_Joins[i];\n      var outRec1 = this.GetOutRec(join.OutPt1.Idx);\n      var outRec2 = this.GetOutRec(join.OutPt2.Idx);\n      if (outRec1.Pts == null || outRec2.Pts == null)\n        continue;\n      //get the polygon fragment with the correct hole state (FirstLeft)\n      //before calling JoinPoints() ...\n      var holeStateRec;\n      if (outRec1 == outRec2)\n        holeStateRec = outRec1;\n      else if (this.Param1RightOfParam2(outRec1, outRec2))\n        holeStateRec = outRec2;\n      else if (this.Param1RightOfParam2(outRec2, outRec1))\n        holeStateRec = outRec1;\n      else\n        holeStateRec = this.GetLowermostRec(outRec1, outRec2);\n\n      if (!this.JoinPoints(join, outRec1, outRec2)) continue;\n\n      if (outRec1 == outRec2)\n      {\n        //instead of joining two polygons, we've just created a new one by\n        //splitting one polygon into two.\n        outRec1.Pts = join.OutPt1;\n        outRec1.BottomPt = null;\n        outRec2 = this.CreateOutRec();\n        outRec2.Pts = join.OutPt2;\n        //update all OutRec2.Pts Idx's ...\n        this.UpdateOutPtIdxs(outRec2);\n        //We now need to check every OutRec.FirstLeft pointer. If it points\n        //to OutRec1 it may need to point to OutRec2 instead ...\n        if (this.m_UsingPolyTree)\n          for (var j = 0, jlen = this.m_PolyOuts.length; j < jlen - 1; j++)\n          {\n            var oRec = this.m_PolyOuts[j];\n            if (oRec.Pts == null || ClipperLib.Clipper.ParseFirstLeft(oRec.FirstLeft) != outRec1 || oRec.IsHole == outRec1.IsHole)\n              continue;\n            if (this.Poly2ContainsPoly1(oRec.Pts, join.OutPt2))\n              oRec.FirstLeft = outRec2;\n          }\n        if (this.Poly2ContainsPoly1(outRec2.Pts, outRec1.Pts))\n        {\n          //outRec2 is contained by outRec1 ...\n          outRec2.IsHole = !outRec1.IsHole;\n          outRec2.FirstLeft = outRec1;\n          //fixup FirstLeft pointers that may need reassigning to OutRec1\n          if (this.m_UsingPolyTree)\n            this.FixupFirstLefts2(outRec2, outRec1);\n          if ((outRec2.IsHole ^ this.ReverseSolution) == (this.Area(outRec2) > 0))\n            this.ReversePolyPtLinks(outRec2.Pts);\n        }\n        else if (this.Poly2ContainsPoly1(outRec1.Pts, outRec2.Pts))\n        {\n          //outRec1 is contained by outRec2 ...\n          outRec2.IsHole = outRec1.IsHole;\n          outRec1.IsHole = !outRec2.IsHole;\n          outRec2.FirstLeft = outRec1.FirstLeft;\n          outRec1.FirstLeft = outRec2;\n          //fixup FirstLeft pointers that may need reassigning to OutRec1\n          if (this.m_UsingPolyTree)\n            this.FixupFirstLefts2(outRec1, outRec2);\n          if ((outRec1.IsHole ^ this.ReverseSolution) == (this.Area(outRec1) > 0))\n            this.ReversePolyPtLinks(outRec1.Pts);\n        }\n        else\n        {\n          //the 2 polygons are completely separate ...\n          outRec2.IsHole = outRec1.IsHole;\n          outRec2.FirstLeft = outRec1.FirstLeft;\n          //fixup FirstLeft pointers that may need reassigning to OutRec2\n          if (this.m_UsingPolyTree)\n            this.FixupFirstLefts1(outRec1, outRec2);\n        }\n      }\n      else\n      {\n        //joined 2 polygons together ...\n        outRec2.Pts = null;\n        outRec2.BottomPt = null;\n        outRec2.Idx = outRec1.Idx;\n        outRec1.IsHole = holeStateRec.IsHole;\n        if (holeStateRec == outRec2)\n          outRec1.FirstLeft = outRec2.FirstLeft;\n        outRec2.FirstLeft = outRec1;\n        //fixup FirstLeft pointers that may need reassigning to OutRec1\n        if (this.m_UsingPolyTree)\n          this.FixupFirstLefts2(outRec2, outRec1);\n      }\n    }\n  };\n  ClipperLib.Clipper.prototype.UpdateOutPtIdxs = function (outrec)\n  {\n    var op = outrec.Pts;\n    do {\n      op.Idx = outrec.Idx;\n      op = op.Prev;\n    }\n    while (op != outrec.Pts)\n  };\n  ClipperLib.Clipper.prototype.DoSimplePolygons = function ()\n  {\n    var i = 0;\n    while (i < this.m_PolyOuts.length)\n    {\n      var outrec = this.m_PolyOuts[i++];\n      var op = outrec.Pts;\n\t\t\tif (op == null || outrec.IsOpen)\n\t\t\t\tcontinue;\n      do //for each Pt in Polygon until duplicate found do ...\n      {\n        var op2 = op.Next;\n        while (op2 != outrec.Pts)\n        {\n          if ((ClipperLib.IntPoint.op_Equality(op.Pt, op2.Pt)) && op2.Next != op && op2.Prev != op)\n          {\n            //split the polygon into two ...\n            var op3 = op.Prev;\n            var op4 = op2.Prev;\n            op.Prev = op4;\n            op4.Next = op;\n            op2.Prev = op3;\n            op3.Next = op2;\n            outrec.Pts = op;\n            var outrec2 = this.CreateOutRec();\n            outrec2.Pts = op2;\n            this.UpdateOutPtIdxs(outrec2);\n            if (this.Poly2ContainsPoly1(outrec2.Pts, outrec.Pts))\n            {\n              //OutRec2 is contained by OutRec1 ...\n              outrec2.IsHole = !outrec.IsHole;\n              outrec2.FirstLeft = outrec;\n\t\t\t\t\t\t\tif (this.m_UsingPolyTree) this.FixupFirstLefts2(outrec2, outrec);\n\n            }\n            else if (this.Poly2ContainsPoly1(outrec.Pts, outrec2.Pts))\n            {\n              //OutRec1 is contained by OutRec2 ...\n              outrec2.IsHole = outrec.IsHole;\n              outrec.IsHole = !outrec2.IsHole;\n              outrec2.FirstLeft = outrec.FirstLeft;\n              outrec.FirstLeft = outrec2;\n              if (this.m_UsingPolyTree) this.FixupFirstLefts2(outrec, outrec2);\n            }\n            else\n            {\n              //the 2 polygons are separate ...\n              outrec2.IsHole = outrec.IsHole;\n              outrec2.FirstLeft = outrec.FirstLeft;\n\t\t\t\t\t\t\tif (this.m_UsingPolyTree) this.FixupFirstLefts1(outrec, outrec2);\n            }\n            op2 = op;\n            //ie get ready for the next iteration\n          }\n          op2 = op2.Next;\n        }\n        op = op.Next;\n      }\n      while (op != outrec.Pts)\n    }\n  };\n  ClipperLib.Clipper.Area = function (poly)\n  {\n    var cnt = poly.length;\n    if (cnt < 3)\n      return 0;\n    var a = 0;\n    for (var i = 0, j = cnt - 1; i < cnt; ++i)\n    {\n      a += (poly[j].X + poly[i].X) * (poly[j].Y - poly[i].Y);\n      j = i;\n    }\n    return -a * 0.5;\n  };\n  ClipperLib.Clipper.prototype.Area = function (outRec)\n  {\n    var op = outRec.Pts;\n    if (op == null)\n      return 0;\n    var a = 0;\n    do {\n      a = a + (op.Prev.Pt.X + op.Pt.X) * (op.Prev.Pt.Y - op.Pt.Y);\n      op = op.Next;\n    }\n    while (op != outRec.Pts)\n    return a * 0.5;\n  };\n  ClipperLib.Clipper.SimplifyPolygon = function (poly, fillType)\n  {\n    var result = new Array();\n    var c = new ClipperLib.Clipper(0);\n    c.StrictlySimple = true;\n    c.AddPath(poly, ClipperLib.PolyType.ptSubject, true);\n    c.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n    return result;\n  };\n  ClipperLib.Clipper.SimplifyPolygons = function (polys, fillType)\n  {\n    if (typeof (fillType) == \"undefined\") fillType = ClipperLib.PolyFillType.pftEvenOdd;\n    var result = new Array();\n    var c = new ClipperLib.Clipper(0);\n    c.StrictlySimple = true;\n    c.AddPaths(polys, ClipperLib.PolyType.ptSubject, true);\n    c.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n    return result;\n  };\n  ClipperLib.Clipper.DistanceSqrd = function (pt1, pt2)\n  {\n    var dx = (pt1.X - pt2.X);\n    var dy = (pt1.Y - pt2.Y);\n    return (dx * dx + dy * dy);\n  };\n  ClipperLib.Clipper.DistanceFromLineSqrd = function (pt, ln1, ln2)\n  {\n    //The equation of a line in general form (Ax + By + C = 0)\n    //given 2 points (x¹,y¹) & (x²,y²) is ...\n    //(y¹ - y²)x + (x² - x¹)y + (y² - y¹)x¹ - (x² - x¹)y¹ = 0\n    //A = (y¹ - y²); B = (x² - x¹); C = (y² - y¹)x¹ - (x² - x¹)y¹\n    //perpendicular distance of point (x³,y³) = (Ax³ + By³ + C)/Sqrt(A² + B²)\n    //see http://en.wikipedia.org/wiki/Perpendicular_distance\n    var A = ln1.Y - ln2.Y;\n    var B = ln2.X - ln1.X;\n    var C = A * ln1.X + B * ln1.Y;\n    C = A * pt.X + B * pt.Y - C;\n    return (C * C) / (A * A + B * B);\n  };\n\n\tClipperLib.Clipper.SlopesNearCollinear = function(pt1, pt2, pt3, distSqrd)\n\t{\n\t\t//this function is more accurate when the point that's GEOMETRICALLY\n\t\t//between the other 2 points is the one that's tested for distance.\n\t\t//nb: with 'spikes', either pt1 or pt3 is geometrically between the other pts\n\t\tif (Math.abs(pt1.X - pt2.X) > Math.abs(pt1.Y - pt2.Y))\n\t\t{\n\t\tif ((pt1.X > pt2.X) == (pt1.X < pt3.X))\n\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt1, pt2, pt3) < distSqrd;\n\t\telse if ((pt2.X > pt1.X) == (pt2.X < pt3.X))\n\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt2, pt1, pt3) < distSqrd;\n\t\t\t\telse\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt3, pt1, pt2) < distSqrd;\n\t\t}\n\t\telse\n\t\t{\n\t\tif ((pt1.Y > pt2.Y) == (pt1.Y < pt3.Y))\n\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt1, pt2, pt3) < distSqrd;\n\t\telse if ((pt2.Y > pt1.Y) == (pt2.Y < pt3.Y))\n\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt2, pt1, pt3) < distSqrd;\n\t\t\t\telse\n\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt3, pt1, pt2) < distSqrd;\n\t\t}\n\t}\n\n  ClipperLib.Clipper.PointsAreClose = function (pt1, pt2, distSqrd)\n  {\n    var dx = pt1.X - pt2.X;\n    var dy = pt1.Y - pt2.Y;\n    return ((dx * dx) + (dy * dy) <= distSqrd);\n  };\n  //------------------------------------------------------------------------------\n  ClipperLib.Clipper.ExcludeOp = function (op)\n  {\n    var result = op.Prev;\n    result.Next = op.Next;\n    op.Next.Prev = result;\n    result.Idx = 0;\n    return result;\n  };\n  ClipperLib.Clipper.CleanPolygon = function (path, distance)\n  {\n    if (typeof (distance) == \"undefined\") distance = 1.415;\n    //distance = proximity in units/pixels below which vertices will be stripped.\n    //Default ~= sqrt(2) so when adjacent vertices or semi-adjacent vertices have\n    //both x & y coords within 1 unit, then the second vertex will be stripped.\n    var cnt = path.length;\n    if (cnt == 0)\n      return new Array();\n    var outPts = new Array(cnt);\n    for (var i = 0; i < cnt; ++i)\n      outPts[i] = new ClipperLib.OutPt();\n    for (var i = 0; i < cnt; ++i)\n    {\n      outPts[i].Pt = path[i];\n      outPts[i].Next = outPts[(i + 1) % cnt];\n      outPts[i].Next.Prev = outPts[i];\n      outPts[i].Idx = 0;\n    }\n    var distSqrd = distance * distance;\n    var op = outPts[0];\n    while (op.Idx == 0 && op.Next != op.Prev)\n    {\n      if (ClipperLib.Clipper.PointsAreClose(op.Pt, op.Prev.Pt, distSqrd))\n      {\n        op = ClipperLib.Clipper.ExcludeOp(op);\n        cnt--;\n      }\n      else if (ClipperLib.Clipper.PointsAreClose(op.Prev.Pt, op.Next.Pt, distSqrd))\n      {\n        ClipperLib.Clipper.ExcludeOp(op.Next);\n        op = ClipperLib.Clipper.ExcludeOp(op);\n        cnt -= 2;\n      }\n      else if (ClipperLib.Clipper.SlopesNearCollinear(op.Prev.Pt, op.Pt, op.Next.Pt, distSqrd))\n      {\n        op = ClipperLib.Clipper.ExcludeOp(op);\n        cnt--;\n      }\n      else\n      {\n        op.Idx = 1;\n        op = op.Next;\n      }\n    }\n    if (cnt < 3)\n      cnt = 0;\n    var result = new Array(cnt);\n    for (var i = 0; i < cnt; ++i)\n    {\n      result[i] = new ClipperLib.IntPoint(op.Pt);\n      op = op.Next;\n    }\n    outPts = null;\n    return result;\n  };\n  ClipperLib.Clipper.CleanPolygons = function (polys, distance)\n  {\n    var result = new Array(polys.length);\n    for (var i = 0, ilen = polys.length; i < ilen; i++)\n      result[i] = ClipperLib.Clipper.CleanPolygon(polys[i], distance);\n    return result;\n  };\n  ClipperLib.Clipper.Minkowski = function (pattern, path, IsSum, IsClosed)\n  {\n    var delta = (IsClosed ? 1 : 0);\n    var polyCnt = pattern.length;\n    var pathCnt = path.length;\n    var result = new Array();\n    if (IsSum)\n      for (var i = 0; i < pathCnt; i++)\n      {\n        var p = new Array(polyCnt);\n        for (var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j])\n          p[j] = new ClipperLib.IntPoint(path[i].X + ip.X, path[i].Y + ip.Y);\n        result.push(p);\n      }\n    else\n      for (var i = 0; i < pathCnt; i++)\n      {\n        var p = new Array(polyCnt);\n        for (var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j])\n          p[j] = new ClipperLib.IntPoint(path[i].X - ip.X, path[i].Y - ip.Y);\n        result.push(p);\n      }\n    var quads = new Array();\n    for (var i = 0; i < pathCnt - 1 + delta; i++)\n      for (var j = 0; j < polyCnt; j++)\n      {\n        var quad = new Array();\n        quad.push(result[i % pathCnt][j % polyCnt]);\n        quad.push(result[(i + 1) % pathCnt][j % polyCnt]);\n        quad.push(result[(i + 1) % pathCnt][(j + 1) % polyCnt]);\n        quad.push(result[i % pathCnt][(j + 1) % polyCnt]);\n        if (!ClipperLib.Clipper.Orientation(quad))\n          quad.reverse();\n        quads.push(quad);\n      }\n\t\t\treturn quads;\n  };\n\n\tClipperLib.Clipper.MinkowskiSum = function(pattern, path_or_paths, pathIsClosed)\n\t{\n\t\tif(!(path_or_paths[0] instanceof Array))\n\t\t{\n\t\t\tvar path = path_or_paths;\n\t\t\tvar paths = ClipperLib.Clipper.Minkowski(pattern, path, true, pathIsClosed);\n\t\t\tvar c = new ClipperLib.Clipper();\n\t\t\tc.AddPaths(paths, ClipperLib.PolyType.ptSubject, true);\n\t\t\tc.Execute(ClipperLib.ClipType.ctUnion, paths, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n\t\t\treturn paths;\n\t\t}\n\t\telse\n\t\t{\n \t\t\tvar paths = path_or_paths;\n\t\t\tvar solution = new ClipperLib.Paths();\n\t\t\tvar c = new ClipperLib.Clipper();\n\t\t\tfor (var i = 0; i < paths.length; ++i)\n\t\t\t{\n\t\t\t\tvar tmp = ClipperLib.Clipper.Minkowski(pattern, paths[i], true, pathIsClosed);\n\t\t\t\tc.AddPaths(tmp, ClipperLib.PolyType.ptSubject, true);\n\t\t\t\tif (pathIsClosed)\n\t\t\t\t{\n\t\t\t\t\tvar path = ClipperLib.Clipper.TranslatePath(paths[i], pattern[0]);\n\t\t\t\t\tc.AddPath(path, ClipperLib.PolyType.ptClip, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tc.Execute(ClipperLib.ClipType.ctUnion, solution,\n\t\t\t\tClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n\t\t\treturn solution;\n\t\t}\n\t}\n\t//------------------------------------------------------------------------------\n\n\tClipperLib.Clipper.TranslatePath = function (path, delta)\n\t{\n\t\tvar outPath = new ClipperLib.Path();\n\t\tfor (var i = 0; i < path.length; i++)\n\t\t\toutPath.push(new ClipperLib.IntPoint(path[i].X + delta.X, path[i].Y + delta.Y));\n\t\treturn outPath;\n\t}\n\t//------------------------------------------------------------------------------\n\n\tClipperLib.Clipper.MinkowskiDiff = function (poly1, poly2)\n\t{\n\t\tvar paths = ClipperLib.Clipper.Minkowski(poly1, poly2, false, true);\n\t\tvar c = new ClipperLib.Clipper();\n\t\tc.AddPaths(paths, ClipperLib.PolyType.ptSubject, true);\n\t\tc.Execute(ClipperLib.ClipType.ctUnion, paths, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n\t\treturn paths;\n\t}\n\n  ClipperLib.Clipper.PolyTreeToPaths = function (polytree)\n  {\n    var result = new Array();\n    //result.set_Capacity(polytree.get_Total());\n    ClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntAny, result);\n    return result;\n  };\n  ClipperLib.Clipper.AddPolyNodeToPaths = function (polynode, nt, paths)\n  {\n    var match = true;\n    switch (nt)\n    {\n    case ClipperLib.Clipper.NodeType.ntOpen:\n      return;\n    case ClipperLib.Clipper.NodeType.ntClosed:\n      match = !polynode.IsOpen;\n      break;\n    default:\n      break;\n    }\n    if (polynode.m_polygon.length > 0 && match)\n      paths.push(polynode.m_polygon);\n    for (var $i3 = 0, $t3 = polynode.Childs(), $l3 = $t3.length, pn = $t3[$i3]; $i3 < $l3; $i3++, pn = $t3[$i3])\n      ClipperLib.Clipper.AddPolyNodeToPaths(pn, nt, paths);\n  };\n  ClipperLib.Clipper.OpenPathsFromPolyTree = function (polytree)\n  {\n    var result = new ClipperLib.Paths();\n    //result.set_Capacity(polytree.ChildCount());\n    for (var i = 0, ilen = polytree.ChildCount(); i < ilen; i++)\n      if (polytree.Childs()[i].IsOpen)\n        result.push(polytree.Childs()[i].m_polygon);\n    return result;\n  };\n  ClipperLib.Clipper.ClosedPathsFromPolyTree = function (polytree)\n  {\n    var result = new ClipperLib.Paths();\n    //result.set_Capacity(polytree.Total());\n    ClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntClosed, result);\n    return result;\n  };\n  Inherit(ClipperLib.Clipper, ClipperLib.ClipperBase);\n  ClipperLib.Clipper.NodeType = {\n    ntAny: 0,\n    ntOpen: 1,\n    ntClosed: 2\n  };\n  ClipperLib.ClipperOffset = function (miterLimit, arcTolerance)\n  {\n    if (typeof (miterLimit) == \"undefined\") miterLimit = 2;\n    if (typeof (arcTolerance) == \"undefined\") arcTolerance = ClipperLib.ClipperOffset.def_arc_tolerance;\n    this.m_destPolys = new ClipperLib.Paths();\n    this.m_srcPoly = new ClipperLib.Path();\n    this.m_destPoly = new ClipperLib.Path();\n    this.m_normals = new Array();\n    this.m_delta = 0;\n    this.m_sinA = 0;\n    this.m_sin = 0;\n    this.m_cos = 0;\n    this.m_miterLim = 0;\n    this.m_StepsPerRad = 0;\n    this.m_lowest = new ClipperLib.IntPoint();\n    this.m_polyNodes = new ClipperLib.PolyNode();\n    this.MiterLimit = miterLimit;\n    this.ArcTolerance = arcTolerance;\n    this.m_lowest.X = -1;\n  };\n  ClipperLib.ClipperOffset.two_pi = 6.28318530717959;\n  ClipperLib.ClipperOffset.def_arc_tolerance = 0.25;\n  ClipperLib.ClipperOffset.prototype.Clear = function ()\n  {\n    ClipperLib.Clear(this.m_polyNodes.Childs());\n    this.m_lowest.X = -1;\n  };\n  ClipperLib.ClipperOffset.Round = ClipperLib.Clipper.Round;\n  ClipperLib.ClipperOffset.prototype.AddPath = function (path, joinType, endType)\n  {\n    var highI = path.length - 1;\n    if (highI < 0)\n      return;\n    var newNode = new ClipperLib.PolyNode();\n    newNode.m_jointype = joinType;\n    newNode.m_endtype = endType;\n    //strip duplicate points from path and also get index to the lowest point ...\n    if (endType == ClipperLib.EndType.etClosedLine || endType == ClipperLib.EndType.etClosedPolygon)\n      while (highI > 0 && ClipperLib.IntPoint.op_Equality(path[0], path[highI]))\n        highI--;\n    //newNode.m_polygon.set_Capacity(highI + 1);\n    newNode.m_polygon.push(path[0]);\n    var j = 0,\n      k = 0;\n    for (var i = 1; i <= highI; i++)\n      if (ClipperLib.IntPoint.op_Inequality(newNode.m_polygon[j], path[i]))\n      {\n        j++;\n        newNode.m_polygon.push(path[i]);\n        if (path[i].Y > newNode.m_polygon[k].Y || (path[i].Y == newNode.m_polygon[k].Y && path[i].X < newNode.m_polygon[k].X))\n          k = j;\n      }\n    if (endType == ClipperLib.EndType.etClosedPolygon && j < 2) return;\n\n    this.m_polyNodes.AddChild(newNode);\n    //if this path's lowest pt is lower than all the others then update m_lowest\n    if (endType != ClipperLib.EndType.etClosedPolygon)\n      return;\n    if (this.m_lowest.X < 0)\n      this.m_lowest = new ClipperLib.IntPoint(this.m_polyNodes.ChildCount() - 1, k);\n    else\n    {\n      var ip = this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon[this.m_lowest.Y];\n      if (newNode.m_polygon[k].Y > ip.Y || (newNode.m_polygon[k].Y == ip.Y && newNode.m_polygon[k].X < ip.X))\n        this.m_lowest = new ClipperLib.IntPoint(this.m_polyNodes.ChildCount() - 1, k);\n    }\n  };\n  ClipperLib.ClipperOffset.prototype.AddPaths = function (paths, joinType, endType)\n  {\n    for (var i = 0, ilen = paths.length; i < ilen; i++)\n      this.AddPath(paths[i], joinType, endType);\n  };\n  ClipperLib.ClipperOffset.prototype.FixOrientations = function ()\n  {\n    //fixup orientations of all closed paths if the orientation of the\n    //closed path with the lowermost vertex is wrong ...\n    if (this.m_lowest.X >= 0 && !ClipperLib.Clipper.Orientation(this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon))\n    {\n      for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n      {\n        var node = this.m_polyNodes.Childs()[i];\n        if (node.m_endtype == ClipperLib.EndType.etClosedPolygon || (node.m_endtype == ClipperLib.EndType.etClosedLine && ClipperLib.Clipper.Orientation(node.m_polygon)))\n          node.m_polygon.reverse();\n      }\n    }\n    else\n    {\n      for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n      {\n        var node = this.m_polyNodes.Childs()[i];\n        if (node.m_endtype == ClipperLib.EndType.etClosedLine && !ClipperLib.Clipper.Orientation(node.m_polygon))\n          node.m_polygon.reverse();\n      }\n    }\n  };\n  ClipperLib.ClipperOffset.GetUnitNormal = function (pt1, pt2)\n  {\n    var dx = (pt2.X - pt1.X);\n    var dy = (pt2.Y - pt1.Y);\n    if ((dx == 0) && (dy == 0))\n      return new ClipperLib.DoublePoint(0, 0);\n    var f = 1 / Math.sqrt(dx * dx + dy * dy);\n    dx *= f;\n    dy *= f;\n    return new ClipperLib.DoublePoint(dy, -dx);\n  };\n  ClipperLib.ClipperOffset.prototype.DoOffset = function (delta)\n  {\n    this.m_destPolys = new Array();\n    this.m_delta = delta;\n    //if Zero offset, just copy any CLOSED polygons to m_p and return ...\n    if (ClipperLib.ClipperBase.near_zero(delta))\n    {\n      //this.m_destPolys.set_Capacity(this.m_polyNodes.ChildCount);\n      for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n      {\n        var node = this.m_polyNodes.Childs()[i];\n        if (node.m_endtype == ClipperLib.EndType.etClosedPolygon)\n          this.m_destPolys.push(node.m_polygon);\n      }\n      return;\n    }\n    //see offset_triginometry3.svg in the documentation folder ...\n    if (this.MiterLimit > 2)\n      this.m_miterLim = 2 / (this.MiterLimit * this.MiterLimit);\n    else\n      this.m_miterLim = 0.5;\n    var y;\n    if (this.ArcTolerance <= 0)\n      y = ClipperLib.ClipperOffset.def_arc_tolerance;\n    else if (this.ArcTolerance > Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance)\n      y = Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance;\n    else\n      y = this.ArcTolerance;\n    //see offset_triginometry2.svg in the documentation folder ...\n    var steps = 3.14159265358979 / Math.acos(1 - y / Math.abs(delta));\n    this.m_sin = Math.sin(ClipperLib.ClipperOffset.two_pi / steps);\n    this.m_cos = Math.cos(ClipperLib.ClipperOffset.two_pi / steps);\n    this.m_StepsPerRad = steps / ClipperLib.ClipperOffset.two_pi;\n    if (delta < 0)\n      this.m_sin = -this.m_sin;\n    //this.m_destPolys.set_Capacity(this.m_polyNodes.ChildCount * 2);\n    for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n    {\n      var node = this.m_polyNodes.Childs()[i];\n      this.m_srcPoly = node.m_polygon;\n      var len = this.m_srcPoly.length;\n      if (len == 0 || (delta <= 0 && (len < 3 || node.m_endtype != ClipperLib.EndType.etClosedPolygon)))\n        continue;\n      this.m_destPoly = new Array();\n      if (len == 1)\n      {\n        if (node.m_jointype == ClipperLib.JoinType.jtRound)\n        {\n          var X = 1,\n            Y = 0;\n          for (var j = 1; j <= steps; j++)\n          {\n            this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + Y * delta)));\n            var X2 = X;\n            X = X * this.m_cos - this.m_sin * Y;\n            Y = X2 * this.m_sin + Y * this.m_cos;\n          }\n        }\n        else\n        {\n          var X = -1,\n            Y = -1;\n          for (var j = 0; j < 4; ++j)\n          {\n            this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + Y * delta)));\n            if (X < 0)\n              X = 1;\n            else if (Y < 0)\n              Y = 1;\n            else\n              X = -1;\n          }\n        }\n        this.m_destPolys.push(this.m_destPoly);\n        continue;\n      }\n      //build m_normals ...\n      this.m_normals.length = 0;\n      //this.m_normals.set_Capacity(len);\n      for (var j = 0; j < len - 1; j++)\n        this.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[j], this.m_srcPoly[j + 1]));\n      if (node.m_endtype == ClipperLib.EndType.etClosedLine || node.m_endtype == ClipperLib.EndType.etClosedPolygon)\n        this.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[len - 1], this.m_srcPoly[0]));\n      else\n        this.m_normals.push(new ClipperLib.DoublePoint(this.m_normals[len - 2]));\n      if (node.m_endtype == ClipperLib.EndType.etClosedPolygon)\n      {\n        var k = len - 1;\n        for (var j = 0; j < len; j++)\n          k = this.OffsetPoint(j, k, node.m_jointype);\n        this.m_destPolys.push(this.m_destPoly);\n      }\n      else if (node.m_endtype == ClipperLib.EndType.etClosedLine)\n      {\n        var k = len - 1;\n        for (var j = 0; j < len; j++)\n          k = this.OffsetPoint(j, k, node.m_jointype);\n        this.m_destPolys.push(this.m_destPoly);\n        this.m_destPoly = new Array();\n        //re-build m_normals ...\n        var n = this.m_normals[len - 1];\n        for (var j = len - 1; j > 0; j--)\n          this.m_normals[j] = new ClipperLib.DoublePoint(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n        this.m_normals[0] = new ClipperLib.DoublePoint(-n.X, -n.Y);\n        k = 0;\n        for (var j = len - 1; j >= 0; j--)\n          k = this.OffsetPoint(j, k, node.m_jointype);\n        this.m_destPolys.push(this.m_destPoly);\n      }\n      else\n      {\n        var k = 0;\n        for (var j = 1; j < len - 1; ++j)\n          k = this.OffsetPoint(j, k, node.m_jointype);\n        var pt1;\n        if (node.m_endtype == ClipperLib.EndType.etOpenButt)\n        {\n          var j = len - 1;\n          pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * delta));\n          this.m_destPoly.push(pt1);\n          pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X - this.m_normals[j].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y - this.m_normals[j].Y * delta));\n          this.m_destPoly.push(pt1);\n        }\n        else\n        {\n          var j = len - 1;\n          k = len - 2;\n          this.m_sinA = 0;\n          this.m_normals[j] = new ClipperLib.DoublePoint(-this.m_normals[j].X, -this.m_normals[j].Y);\n          if (node.m_endtype == ClipperLib.EndType.etOpenSquare)\n            this.DoSquare(j, k);\n          else\n            this.DoRound(j, k);\n        }\n        //re-build m_normals ...\n        for (var j = len - 1; j > 0; j--)\n          this.m_normals[j] = new ClipperLib.DoublePoint(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n        this.m_normals[0] = new ClipperLib.DoublePoint(-this.m_normals[1].X, -this.m_normals[1].Y);\n        k = len - 1;\n        for (var j = k - 1; j > 0; --j)\n          k = this.OffsetPoint(j, k, node.m_jointype);\n        if (node.m_endtype == ClipperLib.EndType.etOpenButt)\n        {\n          pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X - this.m_normals[0].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y - this.m_normals[0].Y * delta));\n          this.m_destPoly.push(pt1);\n          pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + this.m_normals[0].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + this.m_normals[0].Y * delta));\n          this.m_destPoly.push(pt1);\n        }\n        else\n        {\n          k = 1;\n          this.m_sinA = 0;\n          if (node.m_endtype == ClipperLib.EndType.etOpenSquare)\n            this.DoSquare(0, 1);\n          else\n            this.DoRound(0, 1);\n        }\n        this.m_destPolys.push(this.m_destPoly);\n      }\n    }\n  };\n  ClipperLib.ClipperOffset.prototype.Execute = function ()\n  {\n    var a = arguments,\n      ispolytree = a[0] instanceof ClipperLib.PolyTree;\n    if (!ispolytree) // function (solution, delta)\n    {\n      var solution = a[0],\n        delta = a[1];\n      ClipperLib.Clear(solution);\n      this.FixOrientations();\n      this.DoOffset(delta);\n      //now clean up 'corners' ...\n      var clpr = new ClipperLib.Clipper(0);\n      clpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n      if (delta > 0)\n      {\n        clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n      }\n      else\n      {\n        var r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n        var outer = new ClipperLib.Path();\n        outer.push(new ClipperLib.IntPoint(r.left - 10, r.bottom + 10));\n        outer.push(new ClipperLib.IntPoint(r.right + 10, r.bottom + 10));\n        outer.push(new ClipperLib.IntPoint(r.right + 10, r.top - 10));\n        outer.push(new ClipperLib.IntPoint(r.left - 10, r.top - 10));\n        clpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n        clpr.ReverseSolution = true;\n        clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n        if (solution.length > 0)\n          solution.splice(0, 1);\n      }\n      //console.log(JSON.stringify(solution));\n    }\n    else // function (polytree, delta)\n    {\n      var solution = a[0],\n        delta = a[1];\n      solution.Clear();\n      this.FixOrientations();\n      this.DoOffset(delta);\n      //now clean up 'corners' ...\n      var clpr = new ClipperLib.Clipper(0);\n      clpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n      if (delta > 0)\n      {\n        clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n      }\n      else\n      {\n        var r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n        var outer = new ClipperLib.Path();\n        outer.push(new ClipperLib.IntPoint(r.left - 10, r.bottom + 10));\n        outer.push(new ClipperLib.IntPoint(r.right + 10, r.bottom + 10));\n        outer.push(new ClipperLib.IntPoint(r.right + 10, r.top - 10));\n        outer.push(new ClipperLib.IntPoint(r.left - 10, r.top - 10));\n        clpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n        clpr.ReverseSolution = true;\n        clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n        //remove the outer PolyNode rectangle ...\n        if (solution.ChildCount() == 1 && solution.Childs()[0].ChildCount() > 0)\n        {\n          var outerNode = solution.Childs()[0];\n          //solution.Childs.set_Capacity(outerNode.ChildCount);\n          solution.Childs()[0] = outerNode.Childs()[0];\n          solution.Childs()[0].m_Parent = solution;\n          for (var i = 1; i < outerNode.ChildCount(); i++)\n            solution.AddChild(outerNode.Childs()[i]);\n        }\n        else\n          solution.Clear();\n      }\n    }\n  };\n  ClipperLib.ClipperOffset.prototype.OffsetPoint = function (j, k, jointype)\n  {\n\t\t//cross product ...\n\t\tthis.m_sinA = (this.m_normals[k].X * this.m_normals[j].Y - this.m_normals[j].X * this.m_normals[k].Y);\n\n\t\tif (Math.abs(this.m_sinA * this.m_delta) < 1.0)\n\t\t{\n\t\t\t//dot product ...\n\t\t\tvar cosA = (this.m_normals[k].X * this.m_normals[j].X + this.m_normals[j].Y * this.m_normals[k].Y);\n\t\t\tif (cosA > 0) // angle ==> 0 degrees\n\t\t\t{\n\t\t\t\tthis.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[k].X * this.m_delta),\n\t\t\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[k].Y * this.m_delta)));\n\t\t\t\treturn k;\n\t\t\t}\n\t\t\t//else angle ==> 180 degrees\n\t\t}\n    else if (this.m_sinA > 1)\n      this.m_sinA = 1.0;\n    else if (this.m_sinA < -1)\n      this.m_sinA = -1.0;\n    if (this.m_sinA * this.m_delta < 0)\n    {\n      this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[k].X * this.m_delta),\n        ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[k].Y * this.m_delta)));\n      this.m_destPoly.push(new ClipperLib.IntPoint(this.m_srcPoly[j]));\n      this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta),\n        ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta)));\n    }\n    else\n      switch (jointype)\n      {\n      case ClipperLib.JoinType.jtMiter:\n        {\n          var r = 1 + (this.m_normals[j].X * this.m_normals[k].X + this.m_normals[j].Y * this.m_normals[k].Y);\n          if (r >= this.m_miterLim)\n            this.DoMiter(j, k, r);\n          else\n            this.DoSquare(j, k);\n          break;\n        }\n      case ClipperLib.JoinType.jtSquare:\n        this.DoSquare(j, k);\n        break;\n      case ClipperLib.JoinType.jtRound:\n        this.DoRound(j, k);\n        break;\n      }\n    k = j;\n    return k;\n  };\n  ClipperLib.ClipperOffset.prototype.DoSquare = function (j, k)\n  {\n    var dx = Math.tan(Math.atan2(this.m_sinA,\n      this.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y) / 4);\n    this.m_destPoly.push(new ClipperLib.IntPoint(\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_delta * (this.m_normals[k].X - this.m_normals[k].Y * dx)),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_delta * (this.m_normals[k].Y + this.m_normals[k].X * dx))));\n    this.m_destPoly.push(new ClipperLib.IntPoint(\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_delta * (this.m_normals[j].X + this.m_normals[j].Y * dx)),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_delta * (this.m_normals[j].Y - this.m_normals[j].X * dx))));\n  };\n  ClipperLib.ClipperOffset.prototype.DoMiter = function (j, k, r)\n  {\n    var q = this.m_delta / r;\n    this.m_destPoly.push(new ClipperLib.IntPoint(\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + (this.m_normals[k].X + this.m_normals[j].X) * q),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + (this.m_normals[k].Y + this.m_normals[j].Y) * q)));\n  };\n  ClipperLib.ClipperOffset.prototype.DoRound = function (j, k)\n  {\n    var a = Math.atan2(this.m_sinA,\n      this.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y);\n\n    \tvar steps = Math.max(ClipperLib.Cast_Int32(ClipperLib.ClipperOffset.Round(this.m_StepsPerRad * Math.abs(a))), 1);\n\n    var X = this.m_normals[k].X,\n      Y = this.m_normals[k].Y,\n      X2;\n    for (var i = 0; i < steps; ++i)\n    {\n      this.m_destPoly.push(new ClipperLib.IntPoint(\n        ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + X * this.m_delta),\n        ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + Y * this.m_delta)));\n      X2 = X;\n      X = X * this.m_cos - this.m_sin * Y;\n      Y = X2 * this.m_sin + Y * this.m_cos;\n    }\n    this.m_destPoly.push(new ClipperLib.IntPoint(\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta)));\n  };\n  ClipperLib.Error = function (message)\n  {\n    try\n    {\n      throw new Error(message);\n    }\n    catch (err)\n    {\n      alert(err.message);\n    }\n  };\n  // ---------------------------------\n  // JS extension by Timo 2013\n  ClipperLib.JS = {};\n  ClipperLib.JS.AreaOfPolygon = function (poly, scale)\n  {\n    if (!scale) scale = 1;\n    return ClipperLib.Clipper.Area(poly) / (scale * scale);\n  };\n  ClipperLib.JS.AreaOfPolygons = function (poly, scale)\n  {\n    if (!scale) scale = 1;\n    var area = 0;\n    for (var i = 0; i < poly.length; i++)\n    {\n      area += ClipperLib.Clipper.Area(poly[i]);\n    }\n    return area / (scale * scale);\n  };\n  ClipperLib.JS.BoundsOfPath = function (path, scale)\n  {\n    return ClipperLib.JS.BoundsOfPaths([path], scale);\n  };\n  ClipperLib.JS.BoundsOfPaths = function (paths, scale)\n  {\n    if (!scale) scale = 1;\n    var bounds = ClipperLib.Clipper.GetBounds(paths);\n    bounds.left /= scale;\n    bounds.bottom /= scale;\n    bounds.right /= scale;\n    bounds.top /= scale;\n    return bounds;\n  };\n  // Clean() joins vertices that are too near each other\n  // and causes distortion to offsetted polygons without cleaning\n  ClipperLib.JS.Clean = function (polygon, delta)\n  {\n    if (!(polygon instanceof Array)) return [];\n    var isPolygons = polygon[0] instanceof Array;\n    var polygon = ClipperLib.JS.Clone(polygon);\n    if (typeof delta != \"number\" || delta === null)\n    {\n      ClipperLib.Error(\"Delta is not a number in Clean().\");\n      return polygon;\n    }\n    if (polygon.length === 0 || (polygon.length == 1 && polygon[0].length === 0) || delta < 0) return polygon;\n    if (!isPolygons) polygon = [polygon];\n    var k_length = polygon.length;\n    var len, poly, result, d, p, j, i;\n    var results = [];\n    for (var k = 0; k < k_length; k++)\n    {\n      poly = polygon[k];\n      len = poly.length;\n      if (len === 0) continue;\n      else if (len < 3)\n      {\n        result = poly;\n        results.push(result);\n        continue;\n      }\n      result = poly;\n      d = delta * delta;\n      //d = Math.floor(c_delta * c_delta);\n      p = poly[0];\n      j = 1;\n      for (i = 1; i < len; i++)\n      {\n        if ((poly[i].X - p.X) * (poly[i].X - p.X) +\n          (poly[i].Y - p.Y) * (poly[i].Y - p.Y) <= d)\n          continue;\n        result[j] = poly[i];\n        p = poly[i];\n        j++;\n      }\n      p = poly[j - 1];\n      if ((poly[0].X - p.X) * (poly[0].X - p.X) +\n        (poly[0].Y - p.Y) * (poly[0].Y - p.Y) <= d)\n        j--;\n      if (j < len)\n        result.splice(j, len - j);\n      if (result.length) results.push(result);\n    }\n    if (!isPolygons && results.length) results = results[0];\n    else if (!isPolygons && results.length === 0) results = [];\n    else if (isPolygons && results.length === 0) results = [\n      []\n    ];\n    return results;\n  }\n  // Make deep copy of Polygons or Polygon\n  // so that also IntPoint objects are cloned and not only referenced\n  // This should be the fastest way\n  ClipperLib.JS.Clone = function (polygon)\n  {\n    if (!(polygon instanceof Array)) return [];\n    if (polygon.length === 0) return [];\n    else if (polygon.length == 1 && polygon[0].length === 0) return [[]];\n    var isPolygons = polygon[0] instanceof Array;\n    if (!isPolygons) polygon = [polygon];\n    var len = polygon.length,\n      plen, i, j, result;\n    var results = new Array(len);\n    for (i = 0; i < len; i++)\n    {\n      plen = polygon[i].length;\n      result = new Array(plen);\n      for (j = 0; j < plen; j++)\n      {\n        result[j] = {\n          X: polygon[i][j].X,\n          Y: polygon[i][j].Y\n        };\n      }\n      results[i] = result;\n    }\n    if (!isPolygons) results = results[0];\n    return results;\n  };\n  // Removes points that doesn't affect much to the visual appearance.\n  // If middle point is at or under certain distance (tolerance) of the line segment between\n  // start and end point, the middle point is removed.\n  ClipperLib.JS.Lighten = function (polygon, tolerance)\n  {\n    if (!(polygon instanceof Array)) return [];\n    if (typeof tolerance != \"number\" || tolerance === null)\n    {\n      ClipperLib.Error(\"Tolerance is not a number in Lighten().\")\n      return ClipperLib.JS.Clone(polygon);\n    }\n    if (polygon.length === 0 || (polygon.length == 1 && polygon[0].length === 0) || tolerance < 0)\n    {\n      return ClipperLib.JS.Clone(polygon);\n    }\n    if (!(polygon[0] instanceof Array)) polygon = [polygon];\n    var i, j, poly, k, poly2, plen, A, B, P, d, rem, addlast;\n    var bxax, byay, l, ax, ay;\n    var len = polygon.length;\n    var toleranceSq = tolerance * tolerance;\n    var results = [];\n    for (i = 0; i < len; i++)\n    {\n      poly = polygon[i];\n      plen = poly.length;\n      if (plen == 0) continue;\n      for (k = 0; k < 1000000; k++) // could be forever loop, but wiser to restrict max repeat count\n      {\n        poly2 = [];\n        plen = poly.length;\n        // the first have to added to the end, if first and last are not the same\n        // this way we ensure that also the actual last point can be removed if needed\n        if (poly[plen - 1].X != poly[0].X || poly[plen - 1].Y != poly[0].Y)\n        {\n          addlast = 1;\n          poly.push(\n          {\n            X: poly[0].X,\n            Y: poly[0].Y\n          });\n          plen = poly.length;\n        }\n        else addlast = 0;\n        rem = []; // Indexes of removed points\n        for (j = 0; j < plen - 2; j++)\n        {\n          A = poly[j]; // Start point of line segment\n          P = poly[j + 1]; // Middle point. This is the one to be removed.\n          B = poly[j + 2]; // End point of line segment\n          ax = A.X;\n          ay = A.Y;\n          bxax = B.X - ax;\n          byay = B.Y - ay;\n          if (bxax !== 0 || byay !== 0) // To avoid Nan, when A==P && P==B. And to avoid peaks (A==B && A!=P), which have lenght, but not area.\n          {\n            l = ((P.X - ax) * bxax + (P.Y - ay) * byay) / (bxax * bxax + byay * byay);\n            if (l > 1)\n            {\n              ax = B.X;\n              ay = B.Y;\n            }\n            else if (l > 0)\n            {\n              ax += bxax * l;\n              ay += byay * l;\n            }\n          }\n          bxax = P.X - ax;\n          byay = P.Y - ay;\n          d = bxax * bxax + byay * byay;\n          if (d <= toleranceSq)\n          {\n            rem[j + 1] = 1;\n            j++; // when removed, transfer the pointer to the next one\n          }\n        }\n        // add all unremoved points to poly2\n        poly2.push(\n        {\n          X: poly[0].X,\n          Y: poly[0].Y\n        });\n        for (j = 1; j < plen - 1; j++)\n          if (!rem[j]) poly2.push(\n          {\n            X: poly[j].X,\n            Y: poly[j].Y\n          });\n        poly2.push(\n        {\n          X: poly[plen - 1].X,\n          Y: poly[plen - 1].Y\n        });\n        // if the first point was added to the end, remove it\n        if (addlast) poly.pop();\n        // break, if there was not anymore removed points\n        if (!rem.length) break;\n        // else continue looping using poly2, to check if there are points to remove\n        else poly = poly2;\n      }\n      plen = poly2.length;\n      // remove duplicate from end, if needed\n      if (poly2[plen - 1].X == poly2[0].X && poly2[plen - 1].Y == poly2[0].Y)\n      {\n        poly2.pop();\n      }\n      if (poly2.length > 2) // to avoid two-point-polygons\n        results.push(poly2);\n    }\n    if (!(polygon[0] instanceof Array)) results = results[0];\n    if (typeof (results) == \"undefined\") results = [\n      []\n    ];\n    return results;\n  }\n  ClipperLib.JS.PerimeterOfPath = function (path, closed, scale)\n  {\n    if (typeof (path) == \"undefined\") return 0;\n    var sqrt = Math.sqrt;\n    var perimeter = 0.0;\n    var p1, p2, p1x = 0.0,\n      p1y = 0.0,\n      p2x = 0.0,\n      p2y = 0.0;\n    var j = path.length;\n    if (j < 2) return 0;\n    if (closed)\n    {\n      path[j] = path[0];\n      j++;\n    }\n    while (--j)\n    {\n      p1 = path[j];\n      p1x = p1.X;\n      p1y = p1.Y;\n      p2 = path[j - 1];\n      p2x = p2.X;\n      p2y = p2.Y;\n      perimeter += sqrt((p1x - p2x) * (p1x - p2x) + (p1y - p2y) * (p1y - p2y));\n    }\n    if (closed) path.pop();\n    return perimeter / scale;\n  };\n  ClipperLib.JS.PerimeterOfPaths = function (paths, closed, scale)\n  {\n    if (!scale) scale = 1;\n    var perimeter = 0;\n    for (var i = 0; i < paths.length; i++)\n    {\n      perimeter += ClipperLib.JS.PerimeterOfPath(paths[i], closed, scale);\n    }\n    return perimeter;\n  };\n  ClipperLib.JS.ScaleDownPath = function (path, scale)\n  {\n    var i, p;\n    if (!scale) scale = 1;\n    i = path.length;\n    while (i--)\n    {\n      p = path[i];\n      p.X = p.X / scale;\n      p.Y = p.Y / scale;\n    }\n  };\n  ClipperLib.JS.ScaleDownPaths = function (paths, scale)\n  {\n    var i, j, p;\n    if (!scale) scale = 1;\n    i = paths.length;\n    while (i--)\n    {\n      j = paths[i].length;\n      while (j--)\n      {\n        p = paths[i][j];\n        p.X = p.X / scale;\n        p.Y = p.Y / scale;\n      }\n    }\n  };\n  ClipperLib.JS.ScaleUpPath = function (path, scale)\n  {\n    var i, p, round = Math.round;\n    if (!scale) scale = 1;\n    i = path.length;\n    while (i--)\n    {\n      p = path[i];\n      p.X = round(p.X * scale);\n      p.Y = round(p.Y * scale);\n    }\n  };\n  ClipperLib.JS.ScaleUpPaths = function (paths, scale)\n  {\n    var i, j, p, round = Math.round;\n    if (!scale) scale = 1;\n    i = paths.length;\n    while (i--)\n    {\n      j = paths[i].length;\n      while (j--)\n      {\n        p = paths[i][j];\n        p.X = round(p.X * scale);\n        p.Y = round(p.Y * scale);\n      }\n    }\n  };\n  ClipperLib.ExPolygons = function ()\n  {\n    return [];\n  }\n  ClipperLib.ExPolygon = function ()\n  {\n    this.outer = null;\n    this.holes = null;\n  };\n  ClipperLib.JS.AddOuterPolyNodeToExPolygons = function (polynode, expolygons)\n  {\n    var ep = new ClipperLib.ExPolygon();\n    ep.outer = polynode.Contour();\n    var childs = polynode.Childs();\n    var ilen = childs.length;\n    ep.holes = new Array(ilen);\n    var node, n, i, j, childs2, jlen;\n    for (i = 0; i < ilen; i++)\n    {\n      node = childs[i];\n      ep.holes[i] = node.Contour();\n      //Add outer polygons contained by (nested within) holes ...\n      for (j = 0, childs2 = node.Childs(), jlen = childs2.length; j < jlen; j++)\n      {\n        n = childs2[j];\n        ClipperLib.JS.AddOuterPolyNodeToExPolygons(n, expolygons);\n      }\n    }\n    expolygons.push(ep);\n  };\n  ClipperLib.JS.ExPolygonsToPaths = function (expolygons)\n  {\n    var a, i, alen, ilen;\n    var paths = new ClipperLib.Paths();\n    for (a = 0, alen = expolygons.length; a < alen; a++)\n    {\n      paths.push(expolygons[a].outer);\n      for (i = 0, ilen = expolygons[a].holes.length; i < ilen; i++)\n      {\n        paths.push(expolygons[a].holes[i]);\n      }\n    }\n    return paths;\n  }\n  ClipperLib.JS.PolyTreeToExPolygons = function (polytree)\n  {\n    var expolygons = new ClipperLib.ExPolygons();\n    var node, i, childs, ilen;\n    for (i = 0, childs = polytree.Childs(), ilen = childs.length; i < ilen; i++)\n    {\n      node = childs[i];\n      ClipperLib.JS.AddOuterPolyNodeToExPolygons(node, expolygons);\n    }\n    return expolygons;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/clipper-lib/clipper.js\n// module id = 3\n// module chunks = 0","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.2\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\nexports.glMatrix = require(\"./gl-matrix/common.js\");\nexports.mat2 = require(\"./gl-matrix/mat2.js\");\nexports.mat2d = require(\"./gl-matrix/mat2d.js\");\nexports.mat3 = require(\"./gl-matrix/mat3.js\");\nexports.mat4 = require(\"./gl-matrix/mat4.js\");\nexports.quat = require(\"./gl-matrix/quat.js\");\nexports.vec2 = require(\"./gl-matrix/vec2.js\");\nexports.vec3 = require(\"./gl-matrix/vec3.js\");\nexports.vec4 = require(\"./gl-matrix/vec4.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/gl-matrix/src/gl-matrix.js\n// module id = 4\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n// Configuration Constants\nglMatrix.EPSILON = 0.000001;\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nglMatrix.RANDOM = Math.random;\nglMatrix.ENABLE_SIMD = false;\n\n// Capability detection\nglMatrix.SIMD_AVAILABLE = (glMatrix.ARRAY_TYPE === Float32Array) && ('SIMD' in this);\nglMatrix.USE_SIMD = glMatrix.ENABLE_SIMD && glMatrix.SIMD_AVAILABLE;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    glMatrix.ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less \n * than or equal to 1.0, and a relative tolerance is used for larger values)\n * \n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nglMatrix.equals = function(a, b) {\n\treturn Math.abs(a - b) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nmodule.exports = glMatrix;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/gl-matrix/src/gl-matrix/common.js\n// module id = 5\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nmat2.fromValues = function(m00, m01, m10, m11) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m10;\n    out[3] = m11;\n    return out;\n};\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nmat2.set = function(out, m00, m01, m10, m11) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m10;\n    out[3] = m11;\n    return out;\n};\n\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n    \n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.fromRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nmat2.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2.str = function (a) {\n    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix \n * @param {mat2} D the diagonal matrix \n * @param {mat2} U the upper triangular matrix \n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) { \n    L[2] = a[2]/a[0]; \n    U[0] = a[0]; \n    U[1] = a[1]; \n    U[3] = a[3] - L[2] * U[1]; \n    return [L, D, U];       \n}; \n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nmat2.sub = mat2.subtract;\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n};\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nmat2.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nmat2.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\nmodule.exports = mat2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/gl-matrix/src/gl-matrix/mat2.js\n// module id = 6\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n * \n * @description \n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nmat2d.fromValues = function(a, b, c, d, tx, ty) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a;\n    out[1] = b;\n    out[2] = c;\n    out[3] = d;\n    out[4] = tx;\n    out[5] = ty;\n    return out;\n};\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nmat2d.set = function(out, a, b, c, d, tx, ty) {\n    out[0] = a;\n    out[1] = b;\n    out[2] = c;\n    out[3] = d;\n    out[4] = tx;\n    out[5] = ty;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nmat2d.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nmat2d.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2d.str = function (a) {\n    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) { \n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}; \n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nmat2d.sub = mat2d.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nmat2d.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    return out;\n};\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nmat2d.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    return out;\n};\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2d.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2d.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n};\n\nmodule.exports = mat2d;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/gl-matrix/src/gl-matrix/mat2d.js\n// module id = 7\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nmat3.fromValues = function(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n};\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nmat3.set = function(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nmat3.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nmat3.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat3.str = function (a) {\n    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + \n                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n};\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nmat3.sub = mat3.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nmat3.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n};\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nmat3.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    out[6] = a[6] + (b[6] * scale);\n    out[7] = a[7] + (b[7] * scale);\n    out[8] = a[8] + (b[8] * scale);\n    return out;\n};\n\n/*\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat3.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && \n           a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n           a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat3.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = a[6], b7 = b[7], b8 = b[8];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n};\n\n\nmodule.exports = mat3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/gl-matrix/src/gl-matrix/mat3.js\n// module id = 8\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\nvar mat4 = {\n  scalar: {},\n  SIMD: {},\n};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nmat4.fromValues = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n};\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nmat4.set = function(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n};\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n};\n\n/**\n * Transpose the values of a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.transpose = function(out, a) {\n    var a0, a1, a2, a3,\n        tmp01, tmp23,\n        out0, out1, out2, out3;\n\n    a0 = SIMD.Float32x4.load(a, 0);\n    a1 = SIMD.Float32x4.load(a, 4);\n    a2 = SIMD.Float32x4.load(a, 8);\n    a3 = SIMD.Float32x4.load(a, 12);\n\n    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n    out0  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);\n    out1  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);\n    SIMD.Float32x4.store(out, 0,  out0);\n    SIMD.Float32x4.store(out, 4,  out1);\n\n    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n    out2  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);\n    out3  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);\n    SIMD.Float32x4.store(out, 8,  out2);\n    SIMD.Float32x4.store(out, 12, out3);\n\n    return out;\n};\n\n/**\n * Transpse a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = glMatrix.USE_SIMD ? mat4.SIMD.transpose : mat4.scalar.transpose;\n\n/**\n * Inverts a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Inverts a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.invert = function(out, a) {\n  var row0, row1, row2, row3,\n      tmp1,\n      minor0, minor1, minor2, minor3,\n      det,\n      a0 = SIMD.Float32x4.load(a, 0),\n      a1 = SIMD.Float32x4.load(a, 4),\n      a2 = SIMD.Float32x4.load(a, 8),\n      a3 = SIMD.Float32x4.load(a, 12);\n\n  // Compute matrix adjugate\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);\n  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);\n  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);\n\n  tmp1   = SIMD.Float32x4.mul(row2, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.mul(row1, tmp1);\n  minor1 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);\n  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);\n  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row1, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);\n  minor3 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);\n  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);\n  minor2 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);\n  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row0, row1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);\n  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);\n\n  // Compute matrix determinant\n  det   = SIMD.Float32x4.mul(row0, minor0);\n  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 2, 3, 0, 1), det);\n  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 1, 0, 3, 2), det);\n  tmp1  = SIMD.Float32x4.reciprocalApproximation(det);\n  det   = SIMD.Float32x4.sub(\n               SIMD.Float32x4.add(tmp1, tmp1),\n               SIMD.Float32x4.mul(det, SIMD.Float32x4.mul(tmp1, tmp1)));\n  det   = SIMD.Float32x4.swizzle(det, 0, 0, 0, 0);\n  if (!det) {\n      return null;\n  }\n\n  // Compute matrix inverse\n  SIMD.Float32x4.store(out, 0,  SIMD.Float32x4.mul(det, minor0));\n  SIMD.Float32x4.store(out, 4,  SIMD.Float32x4.mul(det, minor1));\n  SIMD.Float32x4.store(out, 8,  SIMD.Float32x4.mul(det, minor2));\n  SIMD.Float32x4.store(out, 12, SIMD.Float32x4.mul(det, minor3));\n  return out;\n}\n\n/**\n * Inverts a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = glMatrix.USE_SIMD ? mat4.SIMD.invert : mat4.scalar.invert;\n\n/**\n * Calculates the adjugate of a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.adjoint = function(out, a) {\n  var a0, a1, a2, a3;\n  var row0, row1, row2, row3;\n  var tmp1;\n  var minor0, minor1, minor2, minor3;\n\n  var a0 = SIMD.Float32x4.load(a, 0);\n  var a1 = SIMD.Float32x4.load(a, 4);\n  var a2 = SIMD.Float32x4.load(a, 8);\n  var a3 = SIMD.Float32x4.load(a, 12);\n\n  // Transpose the source matrix.  Sort of.  Not a true transpose operation\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);\n  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);\n\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);\n  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);\n\n  tmp1   = SIMD.Float32x4.mul(row2, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.mul(row1, tmp1);\n  minor1 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);\n  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);\n  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row1, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);\n  minor3 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);\n  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);\n  minor2 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);\n  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row0, row1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);\n  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);\n\n  SIMD.Float32x4.store(out, 0,  minor0);\n  SIMD.Float32x4.store(out, 4,  minor1);\n  SIMD.Float32x4.store(out, 8,  minor2);\n  SIMD.Float32x4.store(out, 12, minor3);\n  return out;\n};\n\n/**\n * Calculates the adjugate of a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\n mat4.adjoint = glMatrix.USE_SIMD ? mat4.SIMD.adjoint : mat4.scalar.adjoint;\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's explicitly using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand, must be a Float32Array\n * @param {mat4} b the second operand, must be a Float32Array\n * @returns {mat4} out\n */\nmat4.SIMD.multiply = function (out, a, b) {\n    var a0 = SIMD.Float32x4.load(a, 0);\n    var a1 = SIMD.Float32x4.load(a, 4);\n    var a2 = SIMD.Float32x4.load(a, 8);\n    var a3 = SIMD.Float32x4.load(a, 12);\n\n    var b0 = SIMD.Float32x4.load(b, 0);\n    var out0 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 2, 2, 2, 2), a2),\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 0, out0);\n\n    var b1 = SIMD.Float32x4.load(b, 4);\n    var out1 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 2, 2, 2, 2), a2),\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 4, out1);\n\n    var b2 = SIMD.Float32x4.load(b, 8);\n    var out2 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 2, 2, 2, 2), a2),\n                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 8, out2);\n\n    var b3 = SIMD.Float32x4.load(b, 12);\n    var out3 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                        SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 1, 1, 1, 1), a1),\n                        SIMD.Float32x4.add(\n                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 2, 2, 2, 2), a2),\n                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 12, out3);\n\n    return out;\n};\n\n/**\n * Multiplies two mat4's explicitly not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.scalar.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Multiplies two mat4's using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = glMatrix.USE_SIMD ? mat4.SIMD.multiply : mat4.scalar.multiply;\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Translate a mat4 by the given vector not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.scalar.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Translates a mat4 by the given vector using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.SIMD.translate = function (out, a, v) {\n    var a0 = SIMD.Float32x4.load(a, 0),\n        a1 = SIMD.Float32x4.load(a, 4),\n        a2 = SIMD.Float32x4.load(a, 8),\n        a3 = SIMD.Float32x4.load(a, 12),\n        vec = SIMD.Float32x4(v[0], v[1], v[2] , 0);\n\n    if (a !== out) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        out[4] = a[4]; out[5] = a[5]; out[6] = a[6]; out[7] = a[7];\n        out[8] = a[8]; out[9] = a[9]; out[10] = a[10]; out[11] = a[11];\n    }\n\n    a0 = SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0));\n    a1 = SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1));\n    a2 = SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2));\n\n    var t0 = SIMD.Float32x4.add(a0, SIMD.Float32x4.add(a1, SIMD.Float32x4.add(a2, a3)));\n    SIMD.Float32x4.store(out, 12, t0);\n\n    return out;\n};\n\n/**\n * Translates a mat4 by the given vector using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = glMatrix.USE_SIMD ? mat4.SIMD.translate : mat4.scalar.translate;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scalar.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.SIMD.scale = function(out, a, v) {\n    var a0, a1, a2;\n    var vec = SIMD.Float32x4(v[0], v[1], v[2], 0);\n\n    a0 = SIMD.Float32x4.load(a, 0);\n    SIMD.Float32x4.store(\n        out, 0, SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0)));\n\n    a1 = SIMD.Float32x4.load(a, 4);\n    SIMD.Float32x4.store(\n        out, 4, SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1)));\n\n    a2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(\n        out, 8, SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2)));\n\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n */\nmat4.scale = glMatrix.USE_SIMD ? mat4.SIMD.scale : mat4.scalar.scale;\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateX = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n      out[0]  = a[0];\n      out[1]  = a[1];\n      out[2]  = a[2];\n      out[3]  = a[3];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_1 = SIMD.Float32x4.load(a, 4);\n    var a_2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(out, 4,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_2, s)));\n    SIMD.Float32x4.store(out, 8,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_2, c), SIMD.Float32x4.mul(a_1, s)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis using SIMD if availabe and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = glMatrix.USE_SIMD ? mat4.SIMD.rotateX : mat4.scalar.rotateX;\n\n/**\n * Rotates a matrix by the given angle around the Y axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateY = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_0 = SIMD.Float32x4.load(a, 0);\n    var a_2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(out, 0,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_2, s)));\n    SIMD.Float32x4.store(out, 8,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, s), SIMD.Float32x4.mul(a_2, c)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis if SIMD available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n mat4.rotateY = glMatrix.USE_SIMD ? mat4.SIMD.rotateY : mat4.scalar.rotateY;\n\n/**\n * Rotates a matrix by the given angle around the Z axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateZ = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_0 = SIMD.Float32x4.load(a, 0);\n    var a_1 = SIMD.Float32x4.load(a, 4);\n    SIMD.Float32x4.store(out, 0,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_1, s)));\n    SIMD.Float32x4.store(out, 4,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_0, s)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis if SIMD available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n mat4.rotateZ = glMatrix.USE_SIMD ? mat4.SIMD.rotateZ : mat4.scalar.rotateZ;\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nmat4.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.fromRotation = function(out, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromXRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = 1;\n    out[1]  = 0;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromYRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = 0;\n    out[2]  = -s;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromZRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = s;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nmat4.getTranslation = function (out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n};\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nmat4.getRotation = function (out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) { \n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S; \n    out[2] = (mat[1] - mat[4]) / S; \n  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) { \n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S; \n    out[2] = (mat[8] + mat[2]) / S; \n  } else if (mat[5] > mat[10]) { \n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S; \n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S; \n  } else { \n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScale = function (out, q, v, s) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0], y = q[1], z = q[2], w = q[3],\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2,\n\n      sx = s[0],\n      sy = s[1],\n      sz = s[2],\n\n      ox = o[0],\n      oy = o[1],\n      oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n};\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat4.str = function (a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n};\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nmat4.sub = mat4.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nmat4.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n};\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nmat4.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    out[6] = a[6] + (b[6] * scale);\n    out[7] = a[7] + (b[7] * scale);\n    out[8] = a[8] + (b[8] * scale);\n    out[9] = a[9] + (b[9] * scale);\n    out[10] = a[10] + (b[10] * scale);\n    out[11] = a[11] + (b[11] * scale);\n    out[12] = a[12] + (b[12] * scale);\n    out[13] = a[13] + (b[13] * scale);\n    out[14] = a[14] + (b[14] * scale);\n    out[15] = a[15] + (b[15] * scale);\n    return out;\n};\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat4.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && \n           a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && \n           a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n           a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat4.equals = function (a, b) {\n    var a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3],\n        a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7], \n        a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11], \n        a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n    var b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3],\n        b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7], \n        b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11], \n        b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n            Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n            Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n            Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n            Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n            Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n            Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n            Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n};\n\n\n\nmodule.exports = mat4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/gl-matrix/src/gl-matrix/mat4.js\n// module id = 9\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\nvar mat3 = require(\"./mat3.js\");\nvar vec3 = require(\"./vec3.js\");\nvar vec4 = require(\"./vec4.js\");\n\n/**\n * @class Quaternion\n * @name quat\n */\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = vec3.create();\n    var xUnitVec3 = vec3.fromValues(1,0,0);\n    var yUnitVec3 = vec3.fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = vec3.dot(a, b);\n        if (dot < -0.999999) {\n            vec3.cross(tmpvec3, xUnitVec3, a);\n            if (vec3.length(tmpvec3) < 0.000001)\n                vec3.cross(tmpvec3, yUnitVec3, a);\n            vec3.normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            vec3.cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = mat3.create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = vec4.set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nquat.getAxisAngle = function(out_axis, q) {\n    var rad = Math.acos(q[3]) * 2.0;\n    var s = Math.sin(rad / 2.0);\n    if (s != 0.0) {\n        out_axis[0] = q[0] / s;\n        out_axis[1] = q[1] / s;\n        out_axis[2] = q[2] / s;\n    } else {\n        // If s is zero, return any axis (no rotation - axis does not matter)\n        out_axis[0] = 1;\n        out_axis[1] = 0;\n        out_axis[2] = 0;\n    }\n    return rad;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = vec4.add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = vec4.scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = vec4.lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {        \n        // \"from\" and \"to\" quaternions are very close \n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    \n    return out;\n};\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nquat.sqlerp = (function () {\n  var temp1 = quat.create();\n  var temp2 = quat.create();\n  \n  return function (out, a, b, c, d, t) {\n    quat.slerp(temp1, a, d, t);\n    quat.slerp(temp2, b, c, t);\n    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n    \n    return out;\n  };\n}());\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n    \n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = vec4.normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n        \n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n    \n    return out;\n};\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nquat.str = function (a) {\n    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nquat.exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nquat.equals = vec4.equals;\n\nmodule.exports = quat;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/gl-matrix/src/gl-matrix/quat.js\n// module id = 10\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nvec3.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nvec3.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nvec3.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.hermite = function (out, a, b, c, d, t) {\n  var factorTimes2 = t * t,\n      factor1 = factorTimes2 * (2 * t - 3) + 1,\n      factor2 = factorTimes2 * (t - 2) + t,\n      factor3 = factorTimes2 * (t - 1),\n      factor4 = factorTimes2 * (3 - 2 * t);\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.bezier = function (out, a, b, c, d, t) {\n  var inverseFactor = 1 - t,\n      inverseFactorTimesTwo = inverseFactor * inverseFactor,\n      factorTimes2 = t * t,\n      factor1 = inverseFactorTimesTwo * inverseFactor,\n      factor2 = 3 * t * inverseFactorTimesTwo,\n      factor3 = 3 * factorTimes2 * inverseFactor,\n      factor4 = factorTimes2 * t;\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    var z = (glMatrix.RANDOM() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n\n\t  //perform rotation\n\t  r[0] = p[0];\n\t  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n\t  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  \tr[1] = p[1];\n  \tr[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  \tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  \tr[2] = p[2];\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n   \n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n \n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n \n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }     \n};\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec3.str = function (a) {\n    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n};\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec3.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec3.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2];\n    var b0 = b[0], b1 = b[1], b2 = b[2];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n};\n\nmodule.exports = vec3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/gl-matrix/src/gl-matrix/vec3.js\n// module id = 11\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\nvar vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nvec4.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    out[3] = Math.ceil(a[3]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nvec4.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    out[3] = Math.floor(a[3]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nvec4.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    out[3] = Math.round(a[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = glMatrix.RANDOM();\n    out[1] = glMatrix.RANDOM();\n    out[2] = glMatrix.RANDOM();\n    out[3] = glMatrix.RANDOM();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec4.str = function (a) {\n    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec4.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec4.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n};\n\nmodule.exports = vec4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/gl-matrix/src/gl-matrix/vec4.js\n// module id = 12\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nvec2.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nvec2.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nvec2.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0], \n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec2.str = function (a) {\n    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n};\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec2.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec2.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1];\n    var b0 = b[0], b1 = b[1];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n};\n\nmodule.exports = vec2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/gl-matrix/src/gl-matrix/vec2.js\n// module id = 13\n// module chunks = 0","// Copyright 2014-2016 Todd Fleming\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n// \r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n// \r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n// TODO: pass React elements to alertFn\r\n\r\n\"use strict\";\r\n\r\nimport ClipperLib from 'clipper-lib';\r\nimport SweepContext from 'poly2tri/src/sweepcontext';\r\n\r\nexport const inchToClipperScale = 1270000000;\r\nexport const mmToClipperScale = inchToClipperScale / 25.4; // 50000000;\r\nexport const clipperToCppScale = 1 / 128; // Prevent overflow for coordinates up to ~1000 mm\r\nexport const cleanPolyDist = 100;\r\nexport const arcTolerance = 10000;\r\n\r\n// Linearize a cubic bezier. Returns ['L', x2, y2, x3, y3, ...]. The return value doesn't\r\n// include (p1x, p1y); it's part of the previous segment.\r\nfunction linearizeCubicBezier(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, minNumSegments, minSegmentLength) {\r\n    function bez(p0, p1, p2, p3, t) {\r\n        return (1 - t) * (1 - t) * (1 - t) * p0 + 3 * (1 - t) * (1 - t) * t * p1 + 3 * (1 - t) * t * t * p2 + t * t * t * p3;\r\n    }\r\n\r\n    if (p1x == c1x && p1y == c1y && p2x == c2x && p2y == c2y)\r\n        return ['L', p2x, p2y];\r\n\r\n    let numSegments = minNumSegments;\r\n    while (true) {\r\n        let x = p1x;\r\n        let y = p1y;\r\n        let result = ['L'];\r\n        for (let i = 1; i <= numSegments; ++i) {\r\n            let t = 1.0 * i / numSegments;\r\n            let nextX = bez(p1x, c1x, c2x, p2x, t);\r\n            let nextY = bez(p1y, c1y, c2y, p2y, t);\r\n            if ((nextX - x) * (nextX - x) + (nextY - y) * (nextY - y) > minSegmentLength * minSegmentLength) {\r\n                numSegments *= 2;\r\n                result = null;\r\n                break;\r\n            }\r\n            result.push(nextX, nextY);\r\n            x = nextX;\r\n            y = nextY;\r\n        }\r\n        if (result)\r\n            return result;\r\n    }\r\n}\r\n\r\n// Linearize a path. Both the input path and the returned path are in snap.svg's format.\r\n// Calls alertFn with an error message and returns null if there's a problem.\r\nfunction linearizeSnapPath(path, minNumSegments, minSegmentLength, alertFn) {\r\n    if (path.length < 2 || path[0].length != 3 || path[0][0] != 'M') {\r\n        alertFn('Path does not begin with M')\r\n        return null;\r\n    }\r\n    let x = path[0][1];\r\n    let y = path[0][2];\r\n    let result = [path[0]];\r\n    for (let i = 1; i < path.length; ++i) {\r\n        let subpath = path[i];\r\n        if (subpath[0] == 'C' && subpath.length == 7) {\r\n            result.push(linearizeCubicBezier(\r\n                x, y, subpath[1], subpath[2], subpath[3], subpath[4], subpath[5], subpath[6], minNumSegments, minSegmentLength));\r\n            x = subpath[5];\r\n            y = subpath[6];\r\n        } else if (subpath[0] == 'M' && subpath.length == 3) {\r\n            result.push(subpath);\r\n            x = subpath[1];\r\n            y = subpath[2];\r\n        } else {\r\n            alertFn('Subpath has an unknown prefix: ' + subpath[0]);\r\n            return null;\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\n// Get linear paths (snap format) from an SVG element. Calls alertFn with an \r\n// error message and returns null if there's a problem.\r\nfunction elementToLinearSnapPaths(element, minNumSegments, minSegmentLength, alertFn) {\r\n    let path = null;\r\n    let Snap = require('snapsvg-cjs');\r\n    let snapElement = Snap(element);\r\n\r\n    if (snapElement.type == 'path')\r\n        path = snapElement.attr('d');\r\n    else if (snapElement.type == 'rect') {\r\n        let x = Number(snapElement.attr('x'));\r\n        let y = Number(snapElement.attr('y'));\r\n        let w = Number(snapElement.attr('width'));\r\n        let h = Number(snapElement.attr('height'));\r\n        path = 'm' + x + ',' + y + ' ' + w + ',' + 0 + ' ' + 0 + ',' + h + ' ' + (-w) + ',' + 0 + ' ' + 0 + ',' + (-h) + ' ';\r\n    }\r\n    else {\r\n        alertFn('<b>' + snapElement.type + \"</b> is not supported; try Inkscape's <strong>Object to Path</strong> command\");\r\n        return null;\r\n    }\r\n\r\n    if (snapElement.attr('clip-path') != '') {\r\n        alertFn('clip-path is not supported');\r\n        return null;\r\n    }\r\n\r\n    if (snapElement.attr('mask') != '') {\r\n        alertFn('mask is not supported');\r\n        return null;\r\n    }\r\n\r\n    if (path == null) {\r\n        alertFn('path is missing');\r\n        return;\r\n    }\r\n\r\n    path = Snap.path.map(path, snapElement.transform().globalMatrix);\r\n    path = Snap.parsePathString(path);\r\n    path = linearizeSnapPath(path, minNumSegments, minSegmentLength, alertFn);\r\n    return path;\r\n};\r\n\r\n// Convert a path in snap.svg format to [[x0, y0, x1, y1, ...], ...].\r\n// Result is in mm. Returns multiple paths. Only supports linear paths.\r\n// Calls alertFn with an error message and returns null if there's a problem.\r\nfunction snapPathToRawPaths(snapPath, pxPerInch, alertFn) {\r\n    let factor = 25.4 / pxPerInch;\r\n    if (snapPath.length < 2 || snapPath[0].length != 3 || snapPath[0][0] != 'M') {\r\n        alertFn('Path does not begin with M');\r\n        return null;\r\n    }\r\n    let currentPath = [snapPath[0][1] * factor, snapPath[0][2] * factor];\r\n    let result = [currentPath];\r\n    for (let i = 1; i < snapPath.length; ++i) {\r\n        let subpath = snapPath[i];\r\n        if (subpath[0] == 'M' && subpath.length == 3) {\r\n            currentPath = [subpath[1] * factor, subpath[2] * factor];\r\n            result.push(currentPath);\r\n        } else if (subpath[0] == 'L') {\r\n            for (let j = 0; j < (subpath.length - 1) / 2; ++j)\r\n                currentPath.push(subpath[1 + j * 2] * factor, subpath[2 + j * 2] * factor);\r\n        } else {\r\n            alertFn('Subpath has a non-linear prefix: ' + subpath[0]);\r\n            return null;\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\n// Convert a path in an SVG element to [[x0, y0, x1, y1, ...], ...].\r\n// Result is in mm. Returns multiple paths. Converts curves.\r\n// Calls alertFn with an error message and returns null if there's a problem.\r\nexport function elementToRawPaths(element, pxPerInch, minNumSegments, minSegmentLength, alertFn) {\r\n    let path = elementToLinearSnapPaths(element, minNumSegments, minSegmentLength, alertFn);\r\n    if (path !== null)\r\n        return snapPathToRawPaths(path, pxPerInch, alertFn);\r\n    return null;\r\n}\r\n\r\n// Convert an SVG path string to [[x0, y0, x1, y1, ...], ...].\r\n// Result is in mm. Returns multiple paths. Converts curves.\r\n// Calls alertFn with an error message and returns null if there's a problem.\r\nexport function pathStrToRawPaths(str, pxPerInch, minNumSegments, minSegmentLength, alertFn) {\r\n    let Snap = require('snapsvg-cjs');\r\n    let path = Snap.parsePathString(str);\r\n    path = Snap.path.toCubic(path);\r\n    path = linearizeSnapPath(path, minNumSegments, minSegmentLength, alertFn);\r\n    if (path !== null)\r\n        return snapPathToRawPaths(path, pxPerInch, alertFn);\r\n    return null;\r\n}\r\n\r\n// [[[x0, y0, x1, y1, ...], ...], ...]\r\nexport function flipY(allRawPaths, deltaY) {\r\n    for (let rawPaths of allRawPaths)\r\n        for (let rawPath of rawPaths)\r\n            for (let i = 0; i < rawPath.length; i += 2)\r\n                rawPath[i + 1] = deltaY - rawPath[i + 1];\r\n}\r\n\r\nexport function hasClosedRawPaths(rawPaths) {\r\n    for (let path of rawPaths)\r\n        if (path.length >= 4 && path[0] == path[path.length - 2] && path[1] == path[path.length - 1])\r\n            return true;\r\n    return false;\r\n}\r\n\r\nexport function filterClosedRawPaths(rawPaths) {\r\n    let result = [];\r\n    for (let path of rawPaths)\r\n        if (path.length >= 4 && path[0] == path[path.length - 2] && path[1] == path[path.length - 1])\r\n            result.push(path);\r\n    return result;\r\n}\r\n\r\nexport function rawPathsToClipperPaths(rawPaths, transform) {\r\n    let result = rawPaths.map(p => {\r\n        let result = [];\r\n        for (let i = 0; i < p.length; i += 2) {\r\n            result.push({\r\n                X: (transform[0] * p[i] + transform[2] * p[i + 1] + transform[4]) * mmToClipperScale,\r\n                Y: (transform[1] * p[i] + transform[3] * p[i + 1] + transform[5]) * mmToClipperScale,\r\n            });\r\n        }\r\n        return result;\r\n    });\r\n    if (hasClosedRawPaths(rawPaths)) {\r\n        result = ClipperLib.Clipper.CleanPolygons(result, cleanPolyDist);\r\n        result = ClipperLib.Clipper.SimplifyPolygons(result, ClipperLib.PolyFillType.pftEvenOdd);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction clipperPathsToPolyTree(paths) {\r\n    let c = new ClipperLib.Clipper();\r\n    c.AddPaths(paths, ClipperLib.PolyType.ptSubject, true);\r\n    let polyTree = new ClipperLib.PolyTree();\r\n    c.Execute(ClipperLib.ClipType.ctUnion, polyTree, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\r\n    return polyTree;\r\n}\r\n\r\nfunction triangulatePolyTree(polyTree) {\r\n    let result = [];\r\n    let pointToVertex = point => ({ x: point.X / mmToClipperScale, y: point.Y / mmToClipperScale });\r\n    let contourToVertexes = path => path.map(pointToVertex);\r\n    let nodesToVertexes = nodes => nodes.map(node => contourToVertexes(node.Contour()));\r\n    let processNode = node => {\r\n        let vertexes = contourToVertexes(node.Contour());\r\n        let holes = nodesToVertexes(node.Childs());\r\n        let context = new SweepContext(vertexes);\r\n        context.addHoles(holes);\r\n        context.triangulate();\r\n        let triangles = context.getTriangles();\r\n        for (let t of triangles) {\r\n            let p = t.getPoints();\r\n            result.push(\r\n                p[0].x, p[0].y,\r\n                p[1].x, p[1].y,\r\n                p[2].x, p[2].y);\r\n        }\r\n        for (let hole of node.Childs()) {\r\n            for (let next of hole.Childs()) {\r\n                processNode(next);\r\n            }\r\n        }\r\n    };\r\n    for (let node of polyTree.Childs()) {\r\n        processNode(node);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function triangulateRawPaths(rawPaths) {\r\n    return triangulatePolyTree(clipperPathsToPolyTree(rawPathsToClipperPaths(rawPaths, [1, 0, 0, 1, 0, 0])));\r\n}\r\n\r\n// Convert Clipper paths to C. Returns [double** cPaths, int cNumPaths, int* cPathSizes].\r\nexport function clipperPathsToCPaths(memoryBlocks, clipperPaths) {\r\n    let doubleSize = 8;\r\n\r\n    let cPaths = Module._malloc(clipperPaths.length * 4);\r\n    memoryBlocks.push(cPaths);\r\n    let cPathsBase = cPaths >> 2;\r\n\r\n    let cPathSizes = Module._malloc(clipperPaths.length * 4);\r\n    memoryBlocks.push(cPathSizes);\r\n    let cPathSizesBase = cPathSizes >> 2;\r\n\r\n    for (let i = 0; i < clipperPaths.length; ++i) {\r\n        let clipperPath = clipperPaths[i];\r\n\r\n        let cPath = Module._malloc(clipperPath.length * 2 * doubleSize + 4);\r\n        memoryBlocks.push(cPath);\r\n        if (cPath & 4)\r\n            cPath += 4;\r\n        //console.log(\"-> \" + cPath.toString(16));\r\n        let pathArray = new Float64Array(Module.HEAPU32.buffer, Module.HEAPU32.byteOffset + cPath);\r\n\r\n        for (let j = 0; j < clipperPath.length; ++j) {\r\n            let point = clipperPath[j];\r\n            pathArray[j * 2] = point.X * clipperToCppScale;\r\n            pathArray[j * 2 + 1] = point.Y * clipperToCppScale;\r\n        }\r\n\r\n        Module.HEAPU32[cPathsBase + i] = cPath;\r\n        Module.HEAPU32[cPathSizesBase + i] = clipperPath.length;\r\n    }\r\n\r\n    return [cPaths, clipperPaths.length, cPathSizes];\r\n}\r\n\r\n// Convert C paths to Clipper paths. double**& cPathsRef, int& cNumPathsRef, int*& cPathSizesRef\r\n// Each point has X, Y (stride = 2).\r\nexport function cPathsToClipperPaths(memoryBlocks, cPathsRef, cNumPathsRef, cPathSizesRef) {\r\n    let cPaths = Module.HEAPU32[cPathsRef >> 2];\r\n    memoryBlocks.push(cPaths);\r\n    let cPathsBase = cPaths >> 2;\r\n\r\n    let cNumPaths = Module.HEAPU32[cNumPathsRef >> 2];\r\n\r\n    let cPathSizes = Module.HEAPU32[cPathSizesRef >> 2];\r\n    memoryBlocks.push(cPathSizes);\r\n    let cPathSizesBase = cPathSizes >> 2;\r\n\r\n    let clipperPaths = [];\r\n    for (let i = 0; i < cNumPaths; ++i) {\r\n        let pathSize = Module.HEAPU32[cPathSizesBase + i];\r\n        let cPath = Module.HEAPU32[cPathsBase + i];\r\n        // cPath contains value to pass to Module._free(). The aligned version contains the actual data.\r\n        memoryBlocks.push(cPath);\r\n        if (cPath & 4)\r\n            cPath += 4;\r\n        let pathArray = new Float64Array(Module.HEAPU32.buffer, Module.HEAPU32.byteOffset + cPath);\r\n\r\n        let clipperPath = [];\r\n        clipperPaths.push(clipperPath);\r\n        for (let j = 0; j < pathSize; ++j)\r\n            clipperPath.push({\r\n                X: pathArray[j * 2] / clipperToCppScale,\r\n                Y: pathArray[j * 2 + 1] / clipperToCppScale,\r\n            });\r\n    }\r\n\r\n    return clipperPaths;\r\n}\r\n\r\n// Convert C paths to array of CamPath. double**& cPathsRef, int& cNumPathsRef, int*& cPathSizesRef\r\n// Each point has X, Y, Z (stride = 3).\r\nexport function cPathsToCamPaths(memoryBlocks, cPathsRef, cNumPathsRef, cPathSizesRef) {\r\n    let cPaths = Module.HEAPU32[cPathsRef >> 2];\r\n    memoryBlocks.push(cPaths);\r\n    let cPathsBase = cPaths >> 2;\r\n\r\n    let cNumPaths = Module.HEAPU32[cNumPathsRef >> 2];\r\n\r\n    let cPathSizes = Module.HEAPU32[cPathSizesRef >> 2];\r\n    memoryBlocks.push(cPathSizes);\r\n    let cPathSizesBase = cPathSizes >> 2;\r\n\r\n    let convertedPaths = [];\r\n    for (let i = 0; i < cNumPaths; ++i) {\r\n        let pathSize = Module.HEAPU32[cPathSizesBase + i];\r\n        let cPath = Module.HEAPU32[cPathsBase + i];\r\n        // cPath contains value to pass to Module._free(). The aligned version contains the actual data.\r\n        memoryBlocks.push(cPath);\r\n        if (cPath & 4)\r\n            cPath += 4;\r\n        let pathArray = new Float64Array(Module.HEAPU32.buffer, Module.HEAPU32.byteOffset + cPath);\r\n\r\n        let convertedPath = [];\r\n        convertedPaths.push({ path: convertedPath, safeToClose: false });\r\n        for (let j = 0; j < pathSize; ++j)\r\n            convertedPath.push({\r\n                X: pathArray[j * 3] / clipperToCppScale,\r\n                Y: pathArray[j * 3 + 1] / clipperToCppScale,\r\n                Z: pathArray[j * 3 + 2] / clipperToCppScale,\r\n            });\r\n\r\n        //console.log('got: path', i, ':', pathArray[0], pathArray[1], pathArray[2]);\r\n    }\r\n\r\n    return convertedPaths;\r\n}\r\n\r\nexport function clipperBounds(paths) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    for (let path of paths) {\r\n        for (let pt of path) {\r\n            minX = Math.min(minX, pt.X);\r\n            maxX = Math.max(maxX, pt.X);\r\n            minY = Math.min(minY, pt.Y);\r\n            maxY = Math.max(maxY, pt.Y);\r\n        }\r\n    }\r\n    return { minX, minY, maxX, maxY };\r\n}\r\n\r\n// Clip Clipper geometry. clipType is a ClipperLib.ClipType constant. Returns new geometry.\r\nexport function clip(paths1, paths2, clipType) {\r\n    var clipper = new ClipperLib.Clipper();\r\n    clipper.AddPaths(paths1, ClipperLib.PolyType.ptSubject, true);\r\n    clipper.AddPaths(paths2, ClipperLib.PolyType.ptClip, true);\r\n    var result = [];\r\n    clipper.Execute(clipType, result, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\r\n    return result;\r\n}\r\n\r\n// Return union of two Clipper geometries. Returns new geometry.\r\nexport function union(paths1, paths2) {\r\n    return clip(paths1, paths2, ClipperLib.ClipType.ctUnion);\r\n}\r\n\r\n// Return difference between two Clipper geometries. Returns new geometry.\r\nexport function diff(paths1, paths2) {\r\n    return clip(paths1, paths2, ClipperLib.ClipType.ctDifference);\r\n}\r\n\r\n// Return xor of two Clipper geometries. Returns new geometry.\r\nexport function xor(paths1, paths2) {\r\n    return clip(paths1, paths2, ClipperLib.ClipType.ctXor);\r\n}\r\n\r\n// Offset Clipper geometries by amount (positive expands, negative shrinks). Returns new geometry.\r\nexport function offset(paths, amount, joinType, endType) {\r\n    if (joinType === undefined)\r\n        joinType = ClipperLib.JoinType.jtRound;\r\n    if (endType === undefined)\r\n        endType = ClipperLib.EndType.etClosedPolygon;\r\n\r\n    // bug workaround: join types are swapped in ClipperLib 6.1.3.2\r\n    if (joinType === ClipperLib.JoinType.jtSquare)\r\n        joinType = ClipperLib.JoinType.jtMiter;\r\n    else if (joinType === ClipperLib.JoinType.jtMiter)\r\n        joinType = ClipperLib.JoinType.jtSquare;\r\n\r\n    var co = new ClipperLib.ClipperOffset(2, arcTolerance);\r\n    co.AddPaths(paths, joinType, endType);\r\n    var offsetted = [];\r\n    co.Execute(offsetted, amount);\r\n    return offsetted;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/mesh.js","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n/* jshint maxcomplexity:6 */\n\n\"use strict\";\n\n\n/*\n * Note\n * ====\n * the structure of this JavaScript version of poly2tri intentionally follows\n * as closely as possible the structure of the reference C++ version, to make it \n * easier to keep the 2 versions in sync.\n */\n\nvar PointError = require('./pointerror');\nvar Point = require('./point');\nvar Triangle = require('./triangle');\nvar sweep = require('./sweep');\nvar AdvancingFront = require('./advancingfront');\nvar Node = AdvancingFront.Node;\n\n\n// ------------------------------------------------------------------------utils\n\n/**\n * Initial triangle factor, seed triangle will extend 30% of\n * PointSet width to both left and right.\n * @private\n * @const\n */\nvar kAlpha = 0.3;\n\n\n// -------------------------------------------------------------------------Edge\n/**\n * Represents a simple polygon's edge\n * @constructor\n * @struct\n * @private\n * @param {Point} p1\n * @param {Point} p2\n * @throw {PointError} if p1 is same as p2\n */\nvar Edge = function(p1, p2) {\n    this.p = p1;\n    this.q = p2;\n\n    if (p1.y > p2.y) {\n        this.q = p1;\n        this.p = p2;\n    } else if (p1.y === p2.y) {\n        if (p1.x > p2.x) {\n            this.q = p1;\n            this.p = p2;\n        } else if (p1.x === p2.x) {\n            throw new PointError('poly2tri Invalid Edge constructor: repeated points!', [p1]);\n        }\n    }\n\n    if (!this.q._p2t_edge_list) {\n        this.q._p2t_edge_list = [];\n    }\n    this.q._p2t_edge_list.push(this);\n};\n\n\n// ------------------------------------------------------------------------Basin\n/**\n * @constructor\n * @struct\n * @private\n */\nvar Basin = function() {\n    /** @type {Node} */\n    this.left_node = null;\n    /** @type {Node} */\n    this.bottom_node = null;\n    /** @type {Node} */\n    this.right_node = null;\n    /** @type {number} */\n    this.width = 0.0;\n    /** @type {boolean} */\n    this.left_highest = false;\n};\n\nBasin.prototype.clear = function() {\n    this.left_node = null;\n    this.bottom_node = null;\n    this.right_node = null;\n    this.width = 0.0;\n    this.left_highest = false;\n};\n\n// --------------------------------------------------------------------EdgeEvent\n/**\n * @constructor\n * @struct\n * @private\n */\nvar EdgeEvent = function() {\n    /** @type {Edge} */\n    this.constrained_edge = null;\n    /** @type {boolean} */\n    this.right = false;\n};\n\n// ----------------------------------------------------SweepContext (public API)\n/**\n * SweepContext constructor option\n * @typedef {Object} SweepContextOptions\n * @property {boolean=} cloneArrays - if <code>true</code>, do a shallow copy of the Array parameters\n *                  (contour, holes). Points inside arrays are never copied.\n *                  Default is <code>false</code> : keep a reference to the array arguments,\n *                  who will be modified in place.\n */\n/**\n * Constructor for the triangulation context.\n * It accepts a simple polyline (with non repeating points), \n * which defines the constrained edges.\n *\n * @example\n *          var contour = [\n *              new poly2tri.Point(100, 100),\n *              new poly2tri.Point(100, 300),\n *              new poly2tri.Point(300, 300),\n *              new poly2tri.Point(300, 100)\n *          ];\n *          var swctx = new poly2tri.SweepContext(contour, {cloneArrays: true});\n * @example\n *          var contour = [{x:100, y:100}, {x:100, y:300}, {x:300, y:300}, {x:300, y:100}];\n *          var swctx = new poly2tri.SweepContext(contour, {cloneArrays: true});\n * @constructor\n * @public\n * @struct\n * @param {Array.<XY>} contour - array of point objects. The points can be either {@linkcode Point} instances,\n *          or any \"Point like\" custom class with <code>{x, y}</code> attributes.\n * @param {SweepContextOptions=} options - constructor options\n */\nvar SweepContext = function(contour, options) {\n    options = options || {};\n    this.triangles_ = [];\n    this.map_ = [];\n    this.points_ = (options.cloneArrays ? contour.slice(0) : contour);\n    this.edge_list = [];\n\n    // Bounding box of all points. Computed at the start of the triangulation, \n    // it is stored in case it is needed by the caller.\n    this.pmin_ = this.pmax_ = null;\n\n    /**\n     * Advancing front\n     * @private\n     * @type {AdvancingFront}\n     */\n    this.front_ = null;\n\n    /**\n     * head point used with advancing front\n     * @private\n     * @type {Point}\n     */\n    this.head_ = null;\n\n    /**\n     * tail point used with advancing front\n     * @private\n     * @type {Point}\n     */\n    this.tail_ = null;\n\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.af_head_ = null;\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.af_middle_ = null;\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.af_tail_ = null;\n\n    this.basin = new Basin();\n    this.edge_event = new EdgeEvent();\n\n    this.initEdges(this.points_);\n};\n\n\n/**\n * Add a hole to the constraints\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      var hole = [\n *          new poly2tri.Point(200, 200),\n *          new poly2tri.Point(200, 250),\n *          new poly2tri.Point(250, 250)\n *      ];\n *      swctx.addHole(hole);\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.addHole([{x:200, y:200}, {x:200, y:250}, {x:250, y:250}]);\n * @public\n * @param {Array.<XY>} polyline - array of \"Point like\" objects with {x,y}\n */\nSweepContext.prototype.addHole = function(polyline) {\n    this.initEdges(polyline);\n    var i, len = polyline.length;\n    for (i = 0; i < len; i++) {\n        this.points_.push(polyline[i]);\n    }\n    return this; // for chaining\n};\n\n/**\n * For backward compatibility\n * @function\n * @deprecated use {@linkcode SweepContext#addHole} instead\n */\nSweepContext.prototype.AddHole = SweepContext.prototype.addHole;\n\n\n/**\n * Add several holes to the constraints\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      var holes = [\n *          [ new poly2tri.Point(200, 200), new poly2tri.Point(200, 250), new poly2tri.Point(250, 250) ],\n *          [ new poly2tri.Point(300, 300), new poly2tri.Point(300, 350), new poly2tri.Point(350, 350) ]\n *      ];\n *      swctx.addHoles(holes);\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      var holes = [\n *          [{x:200, y:200}, {x:200, y:250}, {x:250, y:250}],\n *          [{x:300, y:300}, {x:300, y:350}, {x:350, y:350}]\n *      ];\n *      swctx.addHoles(holes);\n * @public\n * @param {Array.<Array.<XY>>} holes - array of array of \"Point like\" objects with {x,y}\n */\n// Method added in the JavaScript version (was not present in the c++ version)\nSweepContext.prototype.addHoles = function(holes) {\n    var i, len = holes.length;\n    for (i = 0; i < len; i++) {\n        this.initEdges(holes[i]);\n    }\n    this.points_ = this.points_.concat.apply(this.points_, holes);\n    return this; // for chaining\n};\n\n\n/**\n * Add a Steiner point to the constraints\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      var point = new poly2tri.Point(150, 150);\n *      swctx.addPoint(point);\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.addPoint({x:150, y:150});\n * @public\n * @param {XY} point - any \"Point like\" object with {x,y}\n */\nSweepContext.prototype.addPoint = function(point) {\n    this.points_.push(point);\n    return this; // for chaining\n};\n\n/**\n * For backward compatibility\n * @function\n * @deprecated use {@linkcode SweepContext#addPoint} instead\n */\nSweepContext.prototype.AddPoint = SweepContext.prototype.addPoint;\n\n\n/**\n * Add several Steiner points to the constraints\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      var points = [\n *          new poly2tri.Point(150, 150),\n *          new poly2tri.Point(200, 250),\n *          new poly2tri.Point(250, 250)\n *      ];\n *      swctx.addPoints(points);\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.addPoints([{x:150, y:150}, {x:200, y:250}, {x:250, y:250}]);\n * @public\n * @param {Array.<XY>} points - array of \"Point like\" object with {x,y}\n */\n// Method added in the JavaScript version (was not present in the c++ version)\nSweepContext.prototype.addPoints = function(points) {\n    this.points_ = this.points_.concat(points);\n    return this; // for chaining\n};\n\n\n/**\n * Triangulate the polygon with holes and Steiner points.\n * Do this AFTER you've added the polyline, holes, and Steiner points\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.triangulate();\n *      var triangles = swctx.getTriangles();\n * @public\n */\n// Shortcut method for sweep.triangulate(SweepContext).\n// Method added in the JavaScript version (was not present in the c++ version)\nSweepContext.prototype.triangulate = function() {\n    sweep.triangulate(this);\n    return this; // for chaining\n};\n\n\n/**\n * Get the bounding box of the provided constraints (contour, holes and \n * Steinter points). Warning : these values are not available if the triangulation \n * has not been done yet.\n * @public\n * @returns {{min:Point,max:Point}} object with 'min' and 'max' Point\n */\n// Method added in the JavaScript version (was not present in the c++ version)\nSweepContext.prototype.getBoundingBox = function() {\n    return {min: this.pmin_, max: this.pmax_};\n};\n\n/**\n * Get result of triangulation.\n * The output triangles have vertices which are references\n * to the initial input points (not copies): any custom fields in the\n * initial points can be retrieved in the output triangles.\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.triangulate();\n *      var triangles = swctx.getTriangles();\n * @example\n *      var contour = [{x:100, y:100, id:1}, {x:100, y:300, id:2}, {x:300, y:300, id:3}];\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.triangulate();\n *      var triangles = swctx.getTriangles();\n *      typeof triangles[0].getPoint(0).id\n *      // → \"number\"\n * @public\n * @returns {array<Triangle>}   array of triangles\n */\nSweepContext.prototype.getTriangles = function() {\n    return this.triangles_;\n};\n\n/**\n * For backward compatibility\n * @function\n * @deprecated use {@linkcode SweepContext#getTriangles} instead\n */\nSweepContext.prototype.GetTriangles = SweepContext.prototype.getTriangles;\n\n\n// ---------------------------------------------------SweepContext (private API)\n\n/** @private */\nSweepContext.prototype.front = function() {\n    return this.front_;\n};\n\n/** @private */\nSweepContext.prototype.pointCount = function() {\n    return this.points_.length;\n};\n\n/** @private */\nSweepContext.prototype.head = function() {\n    return this.head_;\n};\n\n/** @private */\nSweepContext.prototype.setHead = function(p1) {\n    this.head_ = p1;\n};\n\n/** @private */\nSweepContext.prototype.tail = function() {\n    return this.tail_;\n};\n\n/** @private */\nSweepContext.prototype.setTail = function(p1) {\n    this.tail_ = p1;\n};\n\n/** @private */\nSweepContext.prototype.getMap = function() {\n    return this.map_;\n};\n\n/** @private */\nSweepContext.prototype.initTriangulation = function() {\n    var xmax = this.points_[0].x;\n    var xmin = this.points_[0].x;\n    var ymax = this.points_[0].y;\n    var ymin = this.points_[0].y;\n\n    // Calculate bounds\n    var i, len = this.points_.length;\n    for (i = 1; i < len; i++) {\n        var p = this.points_[i];\n        /* jshint expr:true */\n        (p.x > xmax) && (xmax = p.x);\n        (p.x < xmin) && (xmin = p.x);\n        (p.y > ymax) && (ymax = p.y);\n        (p.y < ymin) && (ymin = p.y);\n    }\n    this.pmin_ = new Point(xmin, ymin);\n    this.pmax_ = new Point(xmax, ymax);\n\n    var dx = kAlpha * (xmax - xmin);\n    var dy = kAlpha * (ymax - ymin);\n    this.head_ = new Point(xmax + dx, ymin - dy);\n    this.tail_ = new Point(xmin - dx, ymin - dy);\n\n    // Sort points along y-axis\n    this.points_.sort(Point.compare);\n};\n\n/** @private */\nSweepContext.prototype.initEdges = function(polyline) {\n    var i, len = polyline.length;\n    for (i = 0; i < len; ++i) {\n        this.edge_list.push(new Edge(polyline[i], polyline[(i + 1) % len]));\n    }\n};\n\n/** @private */\nSweepContext.prototype.getPoint = function(index) {\n    return this.points_[index];\n};\n\n/** @private */\nSweepContext.prototype.addToMap = function(triangle) {\n    this.map_.push(triangle);\n};\n\n/** @private */\nSweepContext.prototype.locateNode = function(point) {\n    return this.front_.locateNode(point.x);\n};\n\n/** @private */\nSweepContext.prototype.createAdvancingFront = function() {\n    var head;\n    var middle;\n    var tail;\n    // Initial triangle\n    var triangle = new Triangle(this.points_[0], this.tail_, this.head_);\n\n    this.map_.push(triangle);\n\n    head = new Node(triangle.getPoint(1), triangle);\n    middle = new Node(triangle.getPoint(0), triangle);\n    tail = new Node(triangle.getPoint(2));\n\n    this.front_ = new AdvancingFront(head, tail);\n\n    head.next = middle;\n    middle.next = tail;\n    middle.prev = head;\n    tail.prev = middle;\n};\n\n/** @private */\nSweepContext.prototype.removeNode = function(node) {\n    // do nothing\n    /* jshint unused:false */\n};\n\n/** @private */\nSweepContext.prototype.mapTriangleToNodes = function(t) {\n    for (var i = 0; i < 3; ++i) {\n        if (!t.getNeighbor(i)) {\n            var n = this.front_.locatePoint(t.pointCW(t.getPoint(i)));\n            if (n) {\n                n.triangle = t;\n            }\n        }\n    }\n};\n\n/** @private */\nSweepContext.prototype.removeFromMap = function(triangle) {\n    var i, map = this.map_, len = map.length;\n    for (i = 0; i < len; i++) {\n        if (map[i] === triangle) {\n            map.splice(i, 1);\n            break;\n        }\n    }\n};\n\n/**\n * Do a depth first traversal to collect triangles\n * @private\n * @param {Triangle} triangle start\n */\nSweepContext.prototype.meshClean = function(triangle) {\n    // New implementation avoids recursive calls and use a loop instead.\n    // Cf. issues # 57, 65 and 69.\n    var triangles = [triangle], t, i;\n    /* jshint boss:true */\n    while (t = triangles.pop()) {\n        if (!t.isInterior()) {\n            t.setInterior(true);\n            this.triangles_.push(t);\n            for (i = 0; i < 3; i++) {\n                if (!t.constrained_edge[i]) {\n                    triangles.push(t.getNeighbor(i));\n                }\n            }\n        }\n    }\n};\n\n// ----------------------------------------------------------------------Exports\n\nmodule.exports = SweepContext;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/poly2tri/src/sweepcontext.js\n// module id = 15\n// module chunks = 0","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n\"use strict\";\n\n/*\n * Class added in the JavaScript version (was not present in the c++ version)\n */\n\nvar xy = require('./xy');\n\n/**\n * Custom exception class to indicate invalid Point values\n * @constructor\n * @public\n * @extends Error\n * @struct\n * @param {string=} message - error message\n * @param {Array.<XY>=} points - invalid points\n */\nvar PointError = function(message, points) {\n    this.name = \"PointError\";\n    /**\n     * Invalid points\n     * @public\n     * @type {Array.<XY>}\n     */\n    this.points = points = points || [];\n    /**\n     * Error message\n     * @public\n     * @type {string}\n     */\n    this.message = message || \"Invalid Points!\";\n    for (var i = 0; i < points.length; i++) {\n        this.message += \" \" + xy.toString(points[i]);\n    }\n};\nPointError.prototype = new Error();\nPointError.prototype.constructor = PointError;\n\n\nmodule.exports = PointError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/poly2tri/src/pointerror.js\n// module id = 16\n// module chunks = 0","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n\"use strict\";\n\n/**\n * The following functions operate on \"Point\" or any \"Point like\" object with {x,y},\n * as defined by the {@link XY} type\n * ([duck typing]{@link http://en.wikipedia.org/wiki/Duck_typing}).\n * @module\n * @private\n */\n\n/**\n * poly2tri.js supports using custom point class instead of {@linkcode Point}.\n * Any \"Point like\" object with <code>{x, y}</code> attributes is supported\n * to initialize the SweepContext polylines and points\n * ([duck typing]{@link http://en.wikipedia.org/wiki/Duck_typing}).\n *\n * poly2tri.js might add extra fields to the point objects when computing the\n * triangulation : they are prefixed with <code>_p2t_</code> to avoid collisions\n * with fields in the custom class.\n *\n * @example\n *      var contour = [{x:100, y:100}, {x:100, y:300}, {x:300, y:300}, {x:300, y:100}];\n *      var swctx = new poly2tri.SweepContext(contour);\n *\n * @typedef {Object} XY\n * @property {number} x - x coordinate\n * @property {number} y - y coordinate\n */\n\n\n/**\n * Point pretty printing : prints x and y coordinates.\n * @example\n *      xy.toStringBase({x:5, y:42})\n *      // → \"(5;42)\"\n * @protected\n * @param {!XY} p - point object with {x,y}\n * @returns {string} <code>\"(x;y)\"</code>\n */\nfunction toStringBase(p) {\n    return (\"(\" + p.x + \";\" + p.y + \")\");\n}\n\n/**\n * Point pretty printing. Delegates to the point's custom \"toString()\" method if exists,\n * else simply prints x and y coordinates.\n * @example\n *      xy.toString({x:5, y:42})\n *      // → \"(5;42)\"\n * @example\n *      xy.toString({x:5,y:42,toString:function() {return this.x+\":\"+this.y;}})\n *      // → \"5:42\"\n * @param {!XY} p - point object with {x,y}\n * @returns {string} <code>\"(x;y)\"</code>\n */\nfunction toString(p) {\n    // Try a custom toString first, and fallback to own implementation if none\n    var s = p.toString();\n    return (s === '[object Object]' ? toStringBase(p) : s);\n}\n\n\n/**\n * Compare two points component-wise. Ordered by y axis first, then x axis.\n * @param {!XY} a - point object with {x,y}\n * @param {!XY} b - point object with {x,y}\n * @return {number} <code>&lt; 0</code> if <code>a &lt; b</code>,\n *         <code>&gt; 0</code> if <code>a &gt; b</code>, \n *         <code>0</code> otherwise.\n */\nfunction compare(a, b) {\n    if (a.y === b.y) {\n        return a.x - b.x;\n    } else {\n        return a.y - b.y;\n    }\n}\n\n/**\n * Test two Point objects for equality.\n * @param {!XY} a - point object with {x,y}\n * @param {!XY} b - point object with {x,y}\n * @return {boolean} <code>True</code> if <code>a == b</code>, <code>false</code> otherwise.\n */\nfunction equals(a, b) {\n    return a.x === b.x && a.y === b.y;\n}\n\n\nmodule.exports = {\n    toString: toString,\n    toStringBase: toStringBase,\n    compare: compare,\n    equals: equals\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/poly2tri/src/xy.js\n// module id = 17\n// module chunks = 0","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n\"use strict\";\n\n\n/*\n * Note\n * ====\n * the structure of this JavaScript version of poly2tri intentionally follows\n * as closely as possible the structure of the reference C++ version, to make it \n * easier to keep the 2 versions in sync.\n */\n\nvar xy = require('./xy');\n\n// ------------------------------------------------------------------------Point\n/**\n * Construct a point\n * @example\n *      var point = new poly2tri.Point(150, 150);\n * @public\n * @constructor\n * @struct\n * @param {number=} x    coordinate (0 if undefined)\n * @param {number=} y    coordinate (0 if undefined)\n */\nvar Point = function(x, y) {\n    /**\n     * @type {number}\n     * @expose\n     */\n    this.x = +x || 0;\n    /**\n     * @type {number}\n     * @expose\n     */\n    this.y = +y || 0;\n\n    // All extra fields added to Point are prefixed with _p2t_\n    // to avoid collisions if custom Point class is used.\n\n    /**\n     * The edges this point constitutes an upper ending point\n     * @private\n     * @type {Array.<Edge>}\n     */\n    this._p2t_edge_list = null;\n};\n\n/**\n * For pretty printing\n * @example\n *      \"p=\" + new poly2tri.Point(5,42)\n *      // → \"p=(5;42)\"\n * @returns {string} <code>\"(x;y)\"</code>\n */\nPoint.prototype.toString = function() {\n    return xy.toStringBase(this);\n};\n\n/**\n * JSON output, only coordinates\n * @example\n *      JSON.stringify(new poly2tri.Point(1,2))\n *      // → '{\"x\":1,\"y\":2}'\n */\nPoint.prototype.toJSON = function() {\n    return { x: this.x, y: this.y };\n};\n\n/**\n * Creates a copy of this Point object.\n * @return {Point} new cloned point\n */\nPoint.prototype.clone = function() {\n    return new Point(this.x, this.y);\n};\n\n/**\n * Set this Point instance to the origo. <code>(0; 0)</code>\n * @return {Point} this (for chaining)\n */\nPoint.prototype.set_zero = function() {\n    this.x = 0.0;\n    this.y = 0.0;\n    return this; // for chaining\n};\n\n/**\n * Set the coordinates of this instance.\n * @param {number} x   coordinate\n * @param {number} y   coordinate\n * @return {Point} this (for chaining)\n */\nPoint.prototype.set = function(x, y) {\n    this.x = +x || 0;\n    this.y = +y || 0;\n    return this; // for chaining\n};\n\n/**\n * Negate this Point instance. (component-wise)\n * @return {Point} this (for chaining)\n */\nPoint.prototype.negate = function() {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this; // for chaining\n};\n\n/**\n * Add another Point object to this instance. (component-wise)\n * @param {!Point} n - Point object.\n * @return {Point} this (for chaining)\n */\nPoint.prototype.add = function(n) {\n    this.x += n.x;\n    this.y += n.y;\n    return this; // for chaining\n};\n\n/**\n * Subtract this Point instance with another point given. (component-wise)\n * @param {!Point} n - Point object.\n * @return {Point} this (for chaining)\n */\nPoint.prototype.sub = function(n) {\n    this.x -= n.x;\n    this.y -= n.y;\n    return this; // for chaining\n};\n\n/**\n * Multiply this Point instance by a scalar. (component-wise)\n * @param {number} s   scalar.\n * @return {Point} this (for chaining)\n */\nPoint.prototype.mul = function(s) {\n    this.x *= s;\n    this.y *= s;\n    return this; // for chaining\n};\n\n/**\n * Return the distance of this Point instance from the origo.\n * @return {number} distance\n */\nPoint.prototype.length = function() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n};\n\n/**\n * Normalize this Point instance (as a vector).\n * @return {number} The original distance of this instance from the origo.\n */\nPoint.prototype.normalize = function() {\n    var len = this.length();\n    this.x /= len;\n    this.y /= len;\n    return len;\n};\n\n/**\n * Test this Point object with another for equality.\n * @param {!XY} p - any \"Point like\" object with {x,y}\n * @return {boolean} <code>true</code> if same x and y coordinates, <code>false</code> otherwise.\n */\nPoint.prototype.equals = function(p) {\n    return this.x === p.x && this.y === p.y;\n};\n\n\n// -----------------------------------------------------Point (\"static\" methods)\n\n/**\n * Negate a point component-wise and return the result as a new Point object.\n * @param {!XY} p - any \"Point like\" object with {x,y}\n * @return {Point} the resulting Point object.\n */\nPoint.negate = function(p) {\n    return new Point(-p.x, -p.y);\n};\n\n/**\n * Add two points component-wise and return the result as a new Point object.\n * @param {!XY} a - any \"Point like\" object with {x,y}\n * @param {!XY} b - any \"Point like\" object with {x,y}\n * @return {Point} the resulting Point object.\n */\nPoint.add = function(a, b) {\n    return new Point(a.x + b.x, a.y + b.y);\n};\n\n/**\n * Subtract two points component-wise and return the result as a new Point object.\n * @param {!XY} a - any \"Point like\" object with {x,y}\n * @param {!XY} b - any \"Point like\" object with {x,y}\n * @return {Point} the resulting Point object.\n */\nPoint.sub = function(a, b) {\n    return new Point(a.x - b.x, a.y - b.y);\n};\n\n/**\n * Multiply a point by a scalar and return the result as a new Point object.\n * @param {number} s - the scalar\n * @param {!XY} p - any \"Point like\" object with {x,y}\n * @return {Point} the resulting Point object.\n */\nPoint.mul = function(s, p) {\n    return new Point(s * p.x, s * p.y);\n};\n\n/**\n * Perform the cross product on either two points (this produces a scalar)\n * or a point and a scalar (this produces a point).\n * This function requires two parameters, either may be a Point object or a\n * number.\n * @param  {XY|number} a - Point object or scalar.\n * @param  {XY|number} b - Point object or scalar.\n * @return {Point|number} a Point object or a number, depending on the parameters.\n */\nPoint.cross = function(a, b) {\n    if (typeof(a) === 'number') {\n        if (typeof(b) === 'number') {\n            return a * b;\n        } else {\n            return new Point(-a * b.y, a * b.x);\n        }\n    } else {\n        if (typeof(b) === 'number') {\n            return new Point(b * a.y, -b * a.x);\n        } else {\n            return a.x * b.y - a.y * b.x;\n        }\n    }\n};\n\n\n// -----------------------------------------------------------------\"Point-Like\"\n/*\n * The following functions operate on \"Point\" or any \"Point like\" object \n * with {x,y} (duck typing).\n */\n\nPoint.toString = xy.toString;\nPoint.compare = xy.compare;\nPoint.cmp = xy.compare; // backward compatibility\nPoint.equals = xy.equals;\n\n/**\n * Peform the dot product on two vectors.\n * @public\n * @param {!XY} a - any \"Point like\" object with {x,y}\n * @param {!XY} b - any \"Point like\" object with {x,y}\n * @return {number} The dot product\n */\nPoint.dot = function(a, b) {\n    return a.x * b.x + a.y * b.y;\n};\n\n\n// ---------------------------------------------------------Exports (public API)\n\nmodule.exports = Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/poly2tri/src/point.js\n// module id = 18\n// module chunks = 0","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n *\n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n/* jshint maxcomplexity:10 */\n\n\"use strict\";\n\n\n/*\n * Note\n * ====\n * the structure of this JavaScript version of poly2tri intentionally follows\n * as closely as possible the structure of the reference C++ version, to make it \n * easier to keep the 2 versions in sync.\n */\n\nvar xy = require(\"./xy\");\n\n\n// ---------------------------------------------------------------------Triangle\n/**\n * Triangle class.<br>\n * Triangle-based data structures are known to have better performance than\n * quad-edge structures.\n * See: J. Shewchuk, \"Triangle: Engineering a 2D Quality Mesh Generator and\n * Delaunay Triangulator\", \"Triangulations in CGAL\"\n *\n * @constructor\n * @struct\n * @param {!XY} pa  point object with {x,y}\n * @param {!XY} pb  point object with {x,y}\n * @param {!XY} pc  point object with {x,y}\n */\nvar Triangle = function(a, b, c) {\n    /**\n     * Triangle points\n     * @private\n     * @type {Array.<XY>}\n     */\n    this.points_ = [a, b, c];\n\n    /**\n     * Neighbor list\n     * @private\n     * @type {Array.<Triangle>}\n     */\n    this.neighbors_ = [null, null, null];\n\n    /**\n     * Has this triangle been marked as an interior triangle?\n     * @private\n     * @type {boolean}\n     */\n    this.interior_ = false;\n\n    /**\n     * Flags to determine if an edge is a Constrained edge\n     * @private\n     * @type {Array.<boolean>}\n     */\n    this.constrained_edge = [false, false, false];\n\n    /**\n     * Flags to determine if an edge is a Delauney edge\n     * @private\n     * @type {Array.<boolean>}\n     */\n    this.delaunay_edge = [false, false, false];\n};\n\nvar p2s = xy.toString;\n/**\n * For pretty printing ex. <code>\"[(5;42)(10;20)(21;30)]\"</code>.\n * @public\n * @return {string}\n */\nTriangle.prototype.toString = function() {\n    return (\"[\" + p2s(this.points_[0]) + p2s(this.points_[1]) + p2s(this.points_[2]) + \"]\");\n};\n\n/**\n * Get one vertice of the triangle.\n * The output triangles of a triangulation have vertices which are references\n * to the initial input points (not copies): any custom fields in the\n * initial points can be retrieved in the output triangles.\n * @example\n *      var contour = [{x:100, y:100, id:1}, {x:100, y:300, id:2}, {x:300, y:300, id:3}];\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.triangulate();\n *      var triangles = swctx.getTriangles();\n *      typeof triangles[0].getPoint(0).id\n *      // → \"number\"\n * @param {number} index - vertice index: 0, 1 or 2\n * @public\n * @returns {XY}\n */\nTriangle.prototype.getPoint = function(index) {\n    return this.points_[index];\n};\n\n/**\n * For backward compatibility\n * @function\n * @deprecated use {@linkcode Triangle#getPoint} instead\n */\nTriangle.prototype.GetPoint = Triangle.prototype.getPoint;\n\n/**\n * Get all 3 vertices of the triangle as an array\n * @public\n * @return {Array.<XY>}\n */\n// Method added in the JavaScript version (was not present in the c++ version)\nTriangle.prototype.getPoints = function() {\n    return this.points_;\n};\n\n/**\n * @private\n * @param {number} index\n * @returns {?Triangle}\n */\nTriangle.prototype.getNeighbor = function(index) {\n    return this.neighbors_[index];\n};\n\n/**\n * Test if this Triangle contains the Point object given as parameter as one of its vertices.\n * Only point references are compared, not values.\n * @public\n * @param {XY} point - point object with {x,y}\n * @return {boolean} <code>True</code> if the Point object is of the Triangle's vertices,\n *         <code>false</code> otherwise.\n */\nTriangle.prototype.containsPoint = function(point) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    return (point === points[0] || point === points[1] || point === points[2]);\n};\n\n/**\n * Test if this Triangle contains the Edge object given as parameter as its\n * bounding edges. Only point references are compared, not values.\n * @private\n * @param {Edge} edge\n * @return {boolean} <code>True</code> if the Edge object is of the Triangle's bounding\n *         edges, <code>false</code> otherwise.\n */\nTriangle.prototype.containsEdge = function(edge) {\n    return this.containsPoint(edge.p) && this.containsPoint(edge.q);\n};\n\n/**\n * Test if this Triangle contains the two Point objects given as parameters among its vertices.\n * Only point references are compared, not values.\n * @param {XY} p1 - point object with {x,y}\n * @param {XY} p2 - point object with {x,y}\n * @return {boolean}\n */\nTriangle.prototype.containsPoints = function(p1, p2) {\n    return this.containsPoint(p1) && this.containsPoint(p2);\n};\n\n/**\n * Has this triangle been marked as an interior triangle?\n * @returns {boolean}\n */\nTriangle.prototype.isInterior = function() {\n    return this.interior_;\n};\n\n/**\n * Mark this triangle as an interior triangle\n * @private\n * @param {boolean} interior\n * @returns {Triangle} this\n */\nTriangle.prototype.setInterior = function(interior) {\n    this.interior_ = interior;\n    return this;\n};\n\n/**\n * Update neighbor pointers.\n * @private\n * @param {XY} p1 - point object with {x,y}\n * @param {XY} p2 - point object with {x,y}\n * @param {Triangle} t Triangle object.\n * @throws {Error} if can't find objects\n */\nTriangle.prototype.markNeighborPointers = function(p1, p2, t) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if ((p1 === points[2] && p2 === points[1]) || (p1 === points[1] && p2 === points[2])) {\n        this.neighbors_[0] = t;\n    } else if ((p1 === points[0] && p2 === points[2]) || (p1 === points[2] && p2 === points[0])) {\n        this.neighbors_[1] = t;\n    } else if ((p1 === points[0] && p2 === points[1]) || (p1 === points[1] && p2 === points[0])) {\n        this.neighbors_[2] = t;\n    } else {\n        throw new Error('poly2tri Invalid Triangle.markNeighborPointers() call');\n    }\n};\n\n/**\n * Exhaustive search to update neighbor pointers\n * @private\n * @param {!Triangle} t\n */\nTriangle.prototype.markNeighbor = function(t) {\n    var points = this.points_;\n    if (t.containsPoints(points[1], points[2])) {\n        this.neighbors_[0] = t;\n        t.markNeighborPointers(points[1], points[2], this);\n    } else if (t.containsPoints(points[0], points[2])) {\n        this.neighbors_[1] = t;\n        t.markNeighborPointers(points[0], points[2], this);\n    } else if (t.containsPoints(points[0], points[1])) {\n        this.neighbors_[2] = t;\n        t.markNeighborPointers(points[0], points[1], this);\n    }\n};\n\n\nTriangle.prototype.clearNeighbors = function() {\n    this.neighbors_[0] = null;\n    this.neighbors_[1] = null;\n    this.neighbors_[2] = null;\n};\n\nTriangle.prototype.clearDelaunayEdges = function() {\n    this.delaunay_edge[0] = false;\n    this.delaunay_edge[1] = false;\n    this.delaunay_edge[2] = false;\n};\n\n/**\n * Returns the point clockwise to the given point.\n * @private\n * @param {XY} p - point object with {x,y}\n */\nTriangle.prototype.pointCW = function(p) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if (p === points[0]) {\n        return points[2];\n    } else if (p === points[1]) {\n        return points[0];\n    } else if (p === points[2]) {\n        return points[1];\n    } else {\n        return null;\n    }\n};\n\n/**\n * Returns the point counter-clockwise to the given point.\n * @private\n * @param {XY} p - point object with {x,y}\n */\nTriangle.prototype.pointCCW = function(p) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if (p === points[0]) {\n        return points[1];\n    } else if (p === points[1]) {\n        return points[2];\n    } else if (p === points[2]) {\n        return points[0];\n    } else {\n        return null;\n    }\n};\n\n/**\n * Returns the neighbor clockwise to given point.\n * @private\n * @param {XY} p - point object with {x,y}\n */\nTriangle.prototype.neighborCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.neighbors_[1];\n    } else if (p === this.points_[1]) {\n        return this.neighbors_[2];\n    } else {\n        return this.neighbors_[0];\n    }\n};\n\n/**\n * Returns the neighbor counter-clockwise to given point.\n * @private\n * @param {XY} p - point object with {x,y}\n */\nTriangle.prototype.neighborCCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.neighbors_[2];\n    } else if (p === this.points_[1]) {\n        return this.neighbors_[0];\n    } else {\n        return this.neighbors_[1];\n    }\n};\n\nTriangle.prototype.getConstrainedEdgeCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.constrained_edge[1];\n    } else if (p === this.points_[1]) {\n        return this.constrained_edge[2];\n    } else {\n        return this.constrained_edge[0];\n    }\n};\n\nTriangle.prototype.getConstrainedEdgeCCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.constrained_edge[2];\n    } else if (p === this.points_[1]) {\n        return this.constrained_edge[0];\n    } else {\n        return this.constrained_edge[1];\n    }\n};\n\n// Additional check from Java version (see issue #88)\nTriangle.prototype.getConstrainedEdgeAcross = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.constrained_edge[0];\n    } else if (p === this.points_[1]) {\n        return this.constrained_edge[1];\n    } else {\n        return this.constrained_edge[2];\n    }\n};\n\nTriangle.prototype.setConstrainedEdgeCW = function(p, ce) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        this.constrained_edge[1] = ce;\n    } else if (p === this.points_[1]) {\n        this.constrained_edge[2] = ce;\n    } else {\n        this.constrained_edge[0] = ce;\n    }\n};\n\nTriangle.prototype.setConstrainedEdgeCCW = function(p, ce) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        this.constrained_edge[2] = ce;\n    } else if (p === this.points_[1]) {\n        this.constrained_edge[0] = ce;\n    } else {\n        this.constrained_edge[1] = ce;\n    }\n};\n\nTriangle.prototype.getDelaunayEdgeCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.delaunay_edge[1];\n    } else if (p === this.points_[1]) {\n        return this.delaunay_edge[2];\n    } else {\n        return this.delaunay_edge[0];\n    }\n};\n\nTriangle.prototype.getDelaunayEdgeCCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.delaunay_edge[2];\n    } else if (p === this.points_[1]) {\n        return this.delaunay_edge[0];\n    } else {\n        return this.delaunay_edge[1];\n    }\n};\n\nTriangle.prototype.setDelaunayEdgeCW = function(p, e) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        this.delaunay_edge[1] = e;\n    } else if (p === this.points_[1]) {\n        this.delaunay_edge[2] = e;\n    } else {\n        this.delaunay_edge[0] = e;\n    }\n};\n\nTriangle.prototype.setDelaunayEdgeCCW = function(p, e) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        this.delaunay_edge[2] = e;\n    } else if (p === this.points_[1]) {\n        this.delaunay_edge[0] = e;\n    } else {\n        this.delaunay_edge[1] = e;\n    }\n};\n\n/**\n * The neighbor across to given point.\n * @private\n * @param {XY} p - point object with {x,y}\n * @returns {Triangle}\n */\nTriangle.prototype.neighborAcross = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.neighbors_[0];\n    } else if (p === this.points_[1]) {\n        return this.neighbors_[1];\n    } else {\n        return this.neighbors_[2];\n    }\n};\n\n/**\n * @private\n * @param {!Triangle} t Triangle object.\n * @param {XY} p - point object with {x,y}\n */\nTriangle.prototype.oppositePoint = function(t, p) {\n    var cw = t.pointCW(p);\n    return this.pointCW(cw);\n};\n\n/**\n * Legalize triangle by rotating clockwise around oPoint\n * @private\n * @param {XY} opoint - point object with {x,y}\n * @param {XY} npoint - point object with {x,y}\n * @throws {Error} if oPoint can not be found\n */\nTriangle.prototype.legalize = function(opoint, npoint) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if (opoint === points[0]) {\n        points[1] = points[0];\n        points[0] = points[2];\n        points[2] = npoint;\n    } else if (opoint === points[1]) {\n        points[2] = points[1];\n        points[1] = points[0];\n        points[0] = npoint;\n    } else if (opoint === points[2]) {\n        points[0] = points[2];\n        points[2] = points[1];\n        points[1] = npoint;\n    } else {\n        throw new Error('poly2tri Invalid Triangle.legalize() call');\n    }\n};\n\n/**\n * Returns the index of a point in the triangle. \n * The point *must* be a reference to one of the triangle's vertices.\n * @private\n * @param {XY} p - point object with {x,y}\n * @returns {number} index 0, 1 or 2\n * @throws {Error} if p can not be found\n */\nTriangle.prototype.index = function(p) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if (p === points[0]) {\n        return 0;\n    } else if (p === points[1]) {\n        return 1;\n    } else if (p === points[2]) {\n        return 2;\n    } else {\n        throw new Error('poly2tri Invalid Triangle.index() call');\n    }\n};\n\n/**\n * @private\n * @param {XY} p1 - point object with {x,y}\n * @param {XY} p2 - point object with {x,y}\n * @return {number} index 0, 1 or 2, or -1 if errror\n */\nTriangle.prototype.edgeIndex = function(p1, p2) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if (p1 === points[0]) {\n        if (p2 === points[1]) {\n            return 2;\n        } else if (p2 === points[2]) {\n            return 1;\n        }\n    } else if (p1 === points[1]) {\n        if (p2 === points[2]) {\n            return 0;\n        } else if (p2 === points[0]) {\n            return 2;\n        }\n    } else if (p1 === points[2]) {\n        if (p2 === points[0]) {\n            return 1;\n        } else if (p2 === points[1]) {\n            return 0;\n        }\n    }\n    return -1;\n};\n\n/**\n * Mark an edge of this triangle as constrained.\n * @private\n * @param {number} index - edge index\n */\nTriangle.prototype.markConstrainedEdgeByIndex = function(index) {\n    this.constrained_edge[index] = true;\n};\n/**\n * Mark an edge of this triangle as constrained.\n * @private\n * @param {Edge} edge instance\n */\nTriangle.prototype.markConstrainedEdgeByEdge = function(edge) {\n    this.markConstrainedEdgeByPoints(edge.p, edge.q);\n};\n/**\n * Mark an edge of this triangle as constrained.\n * This method takes two Point instances defining the edge of the triangle.\n * @private\n * @param {XY} p - point object with {x,y}\n * @param {XY} q - point object with {x,y}\n */\nTriangle.prototype.markConstrainedEdgeByPoints = function(p, q) {\n    var points = this.points_;\n    // Here we are comparing point references, not values        \n    if ((q === points[0] && p === points[1]) || (q === points[1] && p === points[0])) {\n        this.constrained_edge[2] = true;\n    } else if ((q === points[0] && p === points[2]) || (q === points[2] && p === points[0])) {\n        this.constrained_edge[1] = true;\n    } else if ((q === points[1] && p === points[2]) || (q === points[2] && p === points[1])) {\n        this.constrained_edge[0] = true;\n    }\n};\n\n\n// ---------------------------------------------------------Exports (public API)\n\nmodule.exports = Triangle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/poly2tri/src/triangle.js\n// module id = 19\n// module chunks = 0","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n/* jshint latedef:nofunc, maxcomplexity:9 */\n\n\"use strict\";\n\n/**\n * This 'Sweep' module is present in order to keep this JavaScript version\n * as close as possible to the reference C++ version, even though almost all\n * functions could be declared as methods on the {@linkcode module:sweepcontext~SweepContext} object.\n * @module\n * @private\n */\n\n/*\n * Note\n * ====\n * the structure of this JavaScript version of poly2tri intentionally follows\n * as closely as possible the structure of the reference C++ version, to make it \n * easier to keep the 2 versions in sync.\n */\n\nvar assert = require('./assert');\nvar PointError = require('./pointerror');\nvar Triangle = require('./triangle');\nvar Node = require('./advancingfront').Node;\n\n\n// ------------------------------------------------------------------------utils\n\nvar utils = require('./utils');\n\n/** @const */\nvar EPSILON = utils.EPSILON;\n\n/** @const */\nvar Orientation = utils.Orientation;\n/** @const */\nvar orient2d = utils.orient2d;\n/** @const */\nvar inScanArea = utils.inScanArea;\n/** @const */\nvar isAngleObtuse = utils.isAngleObtuse;\n\n\n// ------------------------------------------------------------------------Sweep\n\n/**\n * Triangulate the polygon with holes and Steiner points.\n * Do this AFTER you've added the polyline, holes, and Steiner points\n * @private\n * @param {!SweepContext} tcx - SweepContext object\n */\nfunction triangulate(tcx) {\n    tcx.initTriangulation();\n    tcx.createAdvancingFront();\n    // Sweep points; build mesh\n    sweepPoints(tcx);\n    // Clean up\n    finalizationPolygon(tcx);\n}\n\n/**\n * Start sweeping the Y-sorted point set from bottom to top\n * @param {!SweepContext} tcx - SweepContext object\n */\nfunction sweepPoints(tcx) {\n    var i, len = tcx.pointCount();\n    for (i = 1; i < len; ++i) {\n        var point = tcx.getPoint(i);\n        var node = pointEvent(tcx, point);\n        var edges = point._p2t_edge_list;\n        for (var j = 0; edges && j < edges.length; ++j) {\n            edgeEventByEdge(tcx, edges[j], node);\n        }\n    }\n}\n\n/**\n * @param {!SweepContext} tcx - SweepContext object\n */\nfunction finalizationPolygon(tcx) {\n    // Get an Internal triangle to start with\n    var t = tcx.front().head().next.triangle;\n    var p = tcx.front().head().next.point;\n    while (!t.getConstrainedEdgeCW(p)) {\n        t = t.neighborCCW(p);\n    }\n\n    // Collect interior triangles constrained by edges\n    tcx.meshClean(t);\n}\n\n/**\n * Find closes node to the left of the new point and\n * create a new triangle. If needed new holes and basins\n * will be filled to.\n * @param {!SweepContext} tcx - SweepContext object\n * @param {!XY} point   Point\n */\nfunction pointEvent(tcx, point) {\n    var node = tcx.locateNode(point);\n    var new_node = newFrontTriangle(tcx, point, node);\n\n    // Only need to check +epsilon since point never have smaller\n    // x value than node due to how we fetch nodes from the front\n    if (point.x <= node.point.x + (EPSILON)) {\n        fill(tcx, node);\n    }\n\n    //tcx.AddNode(new_node);\n\n    fillAdvancingFront(tcx, new_node);\n    return new_node;\n}\n\nfunction edgeEventByEdge(tcx, edge, node) {\n    tcx.edge_event.constrained_edge = edge;\n    tcx.edge_event.right = (edge.p.x > edge.q.x);\n\n    if (isEdgeSideOfTriangle(node.triangle, edge.p, edge.q)) {\n        return;\n    }\n\n    // For now we will do all needed filling\n    // TODO: integrate with flip process might give some better performance\n    //       but for now this avoid the issue with cases that needs both flips and fills\n    fillEdgeEvent(tcx, edge, node);\n    edgeEventByPoints(tcx, edge.p, edge.q, node.triangle, edge.q);\n}\n\nfunction edgeEventByPoints(tcx, ep, eq, triangle, point) {\n    if (isEdgeSideOfTriangle(triangle, ep, eq)) {\n        return;\n    }\n\n    var p1 = triangle.pointCCW(point);\n    var o1 = orient2d(eq, p1, ep);\n    if (o1 === Orientation.COLLINEAR) {\n        // TODO integrate here changes from C++ version\n        // (C++ repo revision 09880a869095 dated March 8, 2011)\n        throw new PointError('poly2tri EdgeEvent: Collinear not supported!', [eq, p1, ep]);\n    }\n\n    var p2 = triangle.pointCW(point);\n    var o2 = orient2d(eq, p2, ep);\n    if (o2 === Orientation.COLLINEAR) {\n        // TODO integrate here changes from C++ version\n        // (C++ repo revision 09880a869095 dated March 8, 2011)\n        throw new PointError('poly2tri EdgeEvent: Collinear not supported!', [eq, p2, ep]);\n    }\n\n    if (o1 === o2) {\n        // Need to decide if we are rotating CW or CCW to get to a triangle\n        // that will cross edge\n        if (o1 === Orientation.CW) {\n            triangle = triangle.neighborCCW(point);\n        } else {\n            triangle = triangle.neighborCW(point);\n        }\n        edgeEventByPoints(tcx, ep, eq, triangle, point);\n    } else {\n        // This triangle crosses constraint so lets flippin start!\n        flipEdgeEvent(tcx, ep, eq, triangle, point);\n    }\n}\n\nfunction isEdgeSideOfTriangle(triangle, ep, eq) {\n    var index = triangle.edgeIndex(ep, eq);\n    if (index !== -1) {\n        triangle.markConstrainedEdgeByIndex(index);\n        var t = triangle.getNeighbor(index);\n        if (t) {\n            t.markConstrainedEdgeByPoints(ep, eq);\n        }\n        return true;\n    }\n    return false;\n}\n\n/**\n * Creates a new front triangle and legalize it\n * @param {!SweepContext} tcx - SweepContext object\n */\nfunction newFrontTriangle(tcx, point, node) {\n    var triangle = new Triangle(point, node.point, node.next.point);\n\n    triangle.markNeighbor(node.triangle);\n    tcx.addToMap(triangle);\n\n    var new_node = new Node(point);\n    new_node.next = node.next;\n    new_node.prev = node;\n    node.next.prev = new_node;\n    node.next = new_node;\n\n    if (!legalize(tcx, triangle)) {\n        tcx.mapTriangleToNodes(triangle);\n    }\n\n    return new_node;\n}\n\n/**\n * Adds a triangle to the advancing front to fill a hole.\n * @param {!SweepContext} tcx - SweepContext object\n * @param node - middle node, that is the bottom of the hole\n */\nfunction fill(tcx, node) {\n    var triangle = new Triangle(node.prev.point, node.point, node.next.point);\n\n    // TODO: should copy the constrained_edge value from neighbor triangles\n    //       for now constrained_edge values are copied during the legalize\n    triangle.markNeighbor(node.prev.triangle);\n    triangle.markNeighbor(node.triangle);\n\n    tcx.addToMap(triangle);\n\n    // Update the advancing front\n    node.prev.next = node.next;\n    node.next.prev = node.prev;\n\n\n    // If it was legalized the triangle has already been mapped\n    if (!legalize(tcx, triangle)) {\n        tcx.mapTriangleToNodes(triangle);\n    }\n\n    //tcx.removeNode(node);\n}\n\n/**\n * Fills holes in the Advancing Front\n * @param {!SweepContext} tcx - SweepContext object\n */\nfunction fillAdvancingFront(tcx, n) {\n    // Fill right holes\n    var node = n.next;\n    while (node.next) {\n        // TODO integrate here changes from C++ version\n        // (C++ repo revision acf81f1f1764 dated April 7, 2012)\n        if (isAngleObtuse(node.point, node.next.point, node.prev.point)) {\n            break;\n        }\n        fill(tcx, node);\n        node = node.next;\n    }\n\n    // Fill left holes\n    node = n.prev;\n    while (node.prev) {\n        // TODO integrate here changes from C++ version\n        // (C++ repo revision acf81f1f1764 dated April 7, 2012)\n        if (isAngleObtuse(node.point, node.next.point, node.prev.point)) {\n            break;\n        }\n        fill(tcx, node);\n        node = node.prev;\n    }\n\n    // Fill right basins\n    if (n.next && n.next.next) {\n        if (isBasinAngleRight(n)) {\n            fillBasin(tcx, n);\n        }\n    }\n}\n\n/**\n * The basin angle is decided against the horizontal line [1,0].\n * @param {Node} node\n * @return {boolean} true if angle < 3*π/4\n */\nfunction isBasinAngleRight(node) {\n    var ax = node.point.x - node.next.next.point.x;\n    var ay = node.point.y - node.next.next.point.y;\n    assert(ay >= 0, \"unordered y\");\n    return (ax >= 0 || Math.abs(ax) < ay);\n}\n\n/**\n * Returns true if triangle was legalized\n * @param {!SweepContext} tcx - SweepContext object\n * @return {boolean}\n */\nfunction legalize(tcx, t) {\n    // To legalize a triangle we start by finding if any of the three edges\n    // violate the Delaunay condition\n    for (var i = 0; i < 3; ++i) {\n        if (t.delaunay_edge[i]) {\n            continue;\n        }\n        var ot = t.getNeighbor(i);\n        if (ot) {\n            var p = t.getPoint(i);\n            var op = ot.oppositePoint(t, p);\n            var oi = ot.index(op);\n\n            // If this is a Constrained Edge or a Delaunay Edge(only during recursive legalization)\n            // then we should not try to legalize\n            if (ot.constrained_edge[oi] || ot.delaunay_edge[oi]) {\n                t.constrained_edge[i] = ot.constrained_edge[oi];\n                continue;\n            }\n\n            var inside = inCircle(p, t.pointCCW(p), t.pointCW(p), op);\n            if (inside) {\n                // Lets mark this shared edge as Delaunay\n                t.delaunay_edge[i] = true;\n                ot.delaunay_edge[oi] = true;\n\n                // Lets rotate shared edge one vertex CW to legalize it\n                rotateTrianglePair(t, p, ot, op);\n\n                // We now got one valid Delaunay Edge shared by two triangles\n                // This gives us 4 new edges to check for Delaunay\n\n                // Make sure that triangle to node mapping is done only one time for a specific triangle\n                var not_legalized = !legalize(tcx, t);\n                if (not_legalized) {\n                    tcx.mapTriangleToNodes(t);\n                }\n\n                not_legalized = !legalize(tcx, ot);\n                if (not_legalized) {\n                    tcx.mapTriangleToNodes(ot);\n                }\n                // Reset the Delaunay edges, since they only are valid Delaunay edges\n                // until we add a new triangle or point.\n                // XXX: need to think about this. Can these edges be tried after we\n                //      return to previous recursive level?\n                t.delaunay_edge[i] = false;\n                ot.delaunay_edge[oi] = false;\n\n                // If triangle have been legalized no need to check the other edges since\n                // the recursive legalization will handles those so we can end here.\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * <b>Requirement</b>:<br>\n * 1. a,b and c form a triangle.<br>\n * 2. a and d is know to be on opposite side of bc<br>\n * <pre>\n *                a\n *                +\n *               / \\\n *              /   \\\n *            b/     \\c\n *            +-------+\n *           /    d    \\\n *          /           \\\n * </pre>\n * <b>Fact</b>: d has to be in area B to have a chance to be inside the circle formed by\n *  a,b and c<br>\n *  d is outside B if orient2d(a,b,d) or orient2d(c,a,d) is CW<br>\n *  This preknowledge gives us a way to optimize the incircle test\n * @param pa - triangle point, opposite d\n * @param pb - triangle point\n * @param pc - triangle point\n * @param pd - point opposite a\n * @return {boolean} true if d is inside circle, false if on circle edge\n */\nfunction inCircle(pa, pb, pc, pd) {\n    var adx = pa.x - pd.x;\n    var ady = pa.y - pd.y;\n    var bdx = pb.x - pd.x;\n    var bdy = pb.y - pd.y;\n\n    var adxbdy = adx * bdy;\n    var bdxady = bdx * ady;\n    var oabd = adxbdy - bdxady;\n    if (oabd <= 0) {\n        return false;\n    }\n\n    var cdx = pc.x - pd.x;\n    var cdy = pc.y - pd.y;\n\n    var cdxady = cdx * ady;\n    var adxcdy = adx * cdy;\n    var ocad = cdxady - adxcdy;\n    if (ocad <= 0) {\n        return false;\n    }\n\n    var bdxcdy = bdx * cdy;\n    var cdxbdy = cdx * bdy;\n\n    var alift = adx * adx + ady * ady;\n    var blift = bdx * bdx + bdy * bdy;\n    var clift = cdx * cdx + cdy * cdy;\n\n    var det = alift * (bdxcdy - cdxbdy) + blift * ocad + clift * oabd;\n    return det > 0;\n}\n\n/**\n * Rotates a triangle pair one vertex CW\n *<pre>\n *       n2                    n2\n *  P +-----+             P +-----+\n *    | t  /|               |\\  t |\n *    |   / |               | \\   |\n *  n1|  /  |n3           n1|  \\  |n3\n *    | /   |    after CW   |   \\ |\n *    |/ oT |               | oT \\|\n *    +-----+ oP            +-----+\n *       n4                    n4\n * </pre>\n */\nfunction rotateTrianglePair(t, p, ot, op) {\n    var n1, n2, n3, n4;\n    n1 = t.neighborCCW(p);\n    n2 = t.neighborCW(p);\n    n3 = ot.neighborCCW(op);\n    n4 = ot.neighborCW(op);\n\n    var ce1, ce2, ce3, ce4;\n    ce1 = t.getConstrainedEdgeCCW(p);\n    ce2 = t.getConstrainedEdgeCW(p);\n    ce3 = ot.getConstrainedEdgeCCW(op);\n    ce4 = ot.getConstrainedEdgeCW(op);\n\n    var de1, de2, de3, de4;\n    de1 = t.getDelaunayEdgeCCW(p);\n    de2 = t.getDelaunayEdgeCW(p);\n    de3 = ot.getDelaunayEdgeCCW(op);\n    de4 = ot.getDelaunayEdgeCW(op);\n\n    t.legalize(p, op);\n    ot.legalize(op, p);\n\n    // Remap delaunay_edge\n    ot.setDelaunayEdgeCCW(p, de1);\n    t.setDelaunayEdgeCW(p, de2);\n    t.setDelaunayEdgeCCW(op, de3);\n    ot.setDelaunayEdgeCW(op, de4);\n\n    // Remap constrained_edge\n    ot.setConstrainedEdgeCCW(p, ce1);\n    t.setConstrainedEdgeCW(p, ce2);\n    t.setConstrainedEdgeCCW(op, ce3);\n    ot.setConstrainedEdgeCW(op, ce4);\n\n    // Remap neighbors\n    // XXX: might optimize the markNeighbor by keeping track of\n    //      what side should be assigned to what neighbor after the\n    //      rotation. Now mark neighbor does lots of testing to find\n    //      the right side.\n    t.clearNeighbors();\n    ot.clearNeighbors();\n    if (n1) {\n        ot.markNeighbor(n1);\n    }\n    if (n2) {\n        t.markNeighbor(n2);\n    }\n    if (n3) {\n        t.markNeighbor(n3);\n    }\n    if (n4) {\n        ot.markNeighbor(n4);\n    }\n    t.markNeighbor(ot);\n}\n\n/**\n * Fills a basin that has formed on the Advancing Front to the right\n * of given node.<br>\n * First we decide a left,bottom and right node that forms the\n * boundaries of the basin. Then we do a reqursive fill.\n *\n * @param {!SweepContext} tcx - SweepContext object\n * @param node - starting node, this or next node will be left node\n */\nfunction fillBasin(tcx, node) {\n    if (orient2d(node.point, node.next.point, node.next.next.point) === Orientation.CCW) {\n        tcx.basin.left_node = node.next.next;\n    } else {\n        tcx.basin.left_node = node.next;\n    }\n\n    // Find the bottom and right node\n    tcx.basin.bottom_node = tcx.basin.left_node;\n    while (tcx.basin.bottom_node.next && tcx.basin.bottom_node.point.y >= tcx.basin.bottom_node.next.point.y) {\n        tcx.basin.bottom_node = tcx.basin.bottom_node.next;\n    }\n    if (tcx.basin.bottom_node === tcx.basin.left_node) {\n        // No valid basin\n        return;\n    }\n\n    tcx.basin.right_node = tcx.basin.bottom_node;\n    while (tcx.basin.right_node.next && tcx.basin.right_node.point.y < tcx.basin.right_node.next.point.y) {\n        tcx.basin.right_node = tcx.basin.right_node.next;\n    }\n    if (tcx.basin.right_node === tcx.basin.bottom_node) {\n        // No valid basins\n        return;\n    }\n\n    tcx.basin.width = tcx.basin.right_node.point.x - tcx.basin.left_node.point.x;\n    tcx.basin.left_highest = tcx.basin.left_node.point.y > tcx.basin.right_node.point.y;\n\n    fillBasinReq(tcx, tcx.basin.bottom_node);\n}\n\n/**\n * Recursive algorithm to fill a Basin with triangles\n *\n * @param {!SweepContext} tcx - SweepContext object\n * @param node - bottom_node\n */\nfunction fillBasinReq(tcx, node) {\n    // if shallow stop filling\n    if (isShallow(tcx, node)) {\n        return;\n    }\n\n    fill(tcx, node);\n\n    var o;\n    if (node.prev === tcx.basin.left_node && node.next === tcx.basin.right_node) {\n        return;\n    } else if (node.prev === tcx.basin.left_node) {\n        o = orient2d(node.point, node.next.point, node.next.next.point);\n        if (o === Orientation.CW) {\n            return;\n        }\n        node = node.next;\n    } else if (node.next === tcx.basin.right_node) {\n        o = orient2d(node.point, node.prev.point, node.prev.prev.point);\n        if (o === Orientation.CCW) {\n            return;\n        }\n        node = node.prev;\n    } else {\n        // Continue with the neighbor node with lowest Y value\n        if (node.prev.point.y < node.next.point.y) {\n            node = node.prev;\n        } else {\n            node = node.next;\n        }\n    }\n\n    fillBasinReq(tcx, node);\n}\n\nfunction isShallow(tcx, node) {\n    var height;\n    if (tcx.basin.left_highest) {\n        height = tcx.basin.left_node.point.y - node.point.y;\n    } else {\n        height = tcx.basin.right_node.point.y - node.point.y;\n    }\n\n    // if shallow stop filling\n    if (tcx.basin.width > height) {\n        return true;\n    }\n    return false;\n}\n\nfunction fillEdgeEvent(tcx, edge, node) {\n    if (tcx.edge_event.right) {\n        fillRightAboveEdgeEvent(tcx, edge, node);\n    } else {\n        fillLeftAboveEdgeEvent(tcx, edge, node);\n    }\n}\n\nfunction fillRightAboveEdgeEvent(tcx, edge, node) {\n    while (node.next.point.x < edge.p.x) {\n        // Check if next node is below the edge\n        if (orient2d(edge.q, node.next.point, edge.p) === Orientation.CCW) {\n            fillRightBelowEdgeEvent(tcx, edge, node);\n        } else {\n            node = node.next;\n        }\n    }\n}\n\nfunction fillRightBelowEdgeEvent(tcx, edge, node) {\n    if (node.point.x < edge.p.x) {\n        if (orient2d(node.point, node.next.point, node.next.next.point) === Orientation.CCW) {\n            // Concave\n            fillRightConcaveEdgeEvent(tcx, edge, node);\n        } else {\n            // Convex\n            fillRightConvexEdgeEvent(tcx, edge, node);\n            // Retry this one\n            fillRightBelowEdgeEvent(tcx, edge, node);\n        }\n    }\n}\n\nfunction fillRightConcaveEdgeEvent(tcx, edge, node) {\n    fill(tcx, node.next);\n    if (node.next.point !== edge.p) {\n        // Next above or below edge?\n        if (orient2d(edge.q, node.next.point, edge.p) === Orientation.CCW) {\n            // Below\n            if (orient2d(node.point, node.next.point, node.next.next.point) === Orientation.CCW) {\n                // Next is concave\n                fillRightConcaveEdgeEvent(tcx, edge, node);\n            } else {\n                // Next is convex\n                /* jshint noempty:false */\n            }\n        }\n    }\n}\n\nfunction fillRightConvexEdgeEvent(tcx, edge, node) {\n    // Next concave or convex?\n    if (orient2d(node.next.point, node.next.next.point, node.next.next.next.point) === Orientation.CCW) {\n        // Concave\n        fillRightConcaveEdgeEvent(tcx, edge, node.next);\n    } else {\n        // Convex\n        // Next above or below edge?\n        if (orient2d(edge.q, node.next.next.point, edge.p) === Orientation.CCW) {\n            // Below\n            fillRightConvexEdgeEvent(tcx, edge, node.next);\n        } else {\n            // Above\n            /* jshint noempty:false */\n        }\n    }\n}\n\nfunction fillLeftAboveEdgeEvent(tcx, edge, node) {\n    while (node.prev.point.x > edge.p.x) {\n        // Check if next node is below the edge\n        if (orient2d(edge.q, node.prev.point, edge.p) === Orientation.CW) {\n            fillLeftBelowEdgeEvent(tcx, edge, node);\n        } else {\n            node = node.prev;\n        }\n    }\n}\n\nfunction fillLeftBelowEdgeEvent(tcx, edge, node) {\n    if (node.point.x > edge.p.x) {\n        if (orient2d(node.point, node.prev.point, node.prev.prev.point) === Orientation.CW) {\n            // Concave\n            fillLeftConcaveEdgeEvent(tcx, edge, node);\n        } else {\n            // Convex\n            fillLeftConvexEdgeEvent(tcx, edge, node);\n            // Retry this one\n            fillLeftBelowEdgeEvent(tcx, edge, node);\n        }\n    }\n}\n\nfunction fillLeftConvexEdgeEvent(tcx, edge, node) {\n    // Next concave or convex?\n    if (orient2d(node.prev.point, node.prev.prev.point, node.prev.prev.prev.point) === Orientation.CW) {\n        // Concave\n        fillLeftConcaveEdgeEvent(tcx, edge, node.prev);\n    } else {\n        // Convex\n        // Next above or below edge?\n        if (orient2d(edge.q, node.prev.prev.point, edge.p) === Orientation.CW) {\n            // Below\n            fillLeftConvexEdgeEvent(tcx, edge, node.prev);\n        } else {\n            // Above\n            /* jshint noempty:false */\n        }\n    }\n}\n\nfunction fillLeftConcaveEdgeEvent(tcx, edge, node) {\n    fill(tcx, node.prev);\n    if (node.prev.point !== edge.p) {\n        // Next above or below edge?\n        if (orient2d(edge.q, node.prev.point, edge.p) === Orientation.CW) {\n            // Below\n            if (orient2d(node.point, node.prev.point, node.prev.prev.point) === Orientation.CW) {\n                // Next is concave\n                fillLeftConcaveEdgeEvent(tcx, edge, node);\n            } else {\n                // Next is convex\n                /* jshint noempty:false */\n            }\n        }\n    }\n}\n\nfunction flipEdgeEvent(tcx, ep, eq, t, p) {\n    var ot = t.neighborAcross(p);\n    assert(ot, \"FLIP failed due to missing triangle!\");\n\n    var op = ot.oppositePoint(t, p);\n\n    // Additional check from Java version (see issue #88)\n    if (t.getConstrainedEdgeAcross(p)) {\n        var index = t.index(p);\n        throw new PointError(\"poly2tri Intersecting Constraints\",\n                [p, op, t.getPoint((index + 1) % 3), t.getPoint((index + 2) % 3)]);\n    }\n\n    if (inScanArea(p, t.pointCCW(p), t.pointCW(p), op)) {\n        // Lets rotate shared edge one vertex CW\n        rotateTrianglePair(t, p, ot, op);\n        tcx.mapTriangleToNodes(t);\n        tcx.mapTriangleToNodes(ot);\n\n        // XXX: in the original C++ code for the next 2 lines, we are\n        // comparing point values (and not pointers). In this JavaScript\n        // code, we are comparing point references (pointers). This works\n        // because we can't have 2 different points with the same values.\n        // But to be really equivalent, we should use \"Point.equals\" here.\n        if (p === eq && op === ep) {\n            if (eq === tcx.edge_event.constrained_edge.q && ep === tcx.edge_event.constrained_edge.p) {\n                t.markConstrainedEdgeByPoints(ep, eq);\n                ot.markConstrainedEdgeByPoints(ep, eq);\n                legalize(tcx, t);\n                legalize(tcx, ot);\n            } else {\n                // XXX: I think one of the triangles should be legalized here?\n                /* jshint noempty:false */\n            }\n        } else {\n            var o = orient2d(eq, op, ep);\n            t = nextFlipTriangle(tcx, o, t, ot, p, op);\n            flipEdgeEvent(tcx, ep, eq, t, p);\n        }\n    } else {\n        var newP = nextFlipPoint(ep, eq, ot, op);\n        flipScanEdgeEvent(tcx, ep, eq, t, ot, newP);\n        edgeEventByPoints(tcx, ep, eq, t, p);\n    }\n}\n\n/**\n * After a flip we have two triangles and know that only one will still be\n * intersecting the edge. So decide which to contiune with and legalize the other\n *\n * @param {!SweepContext} tcx - SweepContext object\n * @param o - should be the result of an orient2d( eq, op, ep )\n * @param t - triangle 1\n * @param ot - triangle 2\n * @param p - a point shared by both triangles\n * @param op - another point shared by both triangles\n * @return returns the triangle still intersecting the edge\n */\nfunction nextFlipTriangle(tcx, o, t, ot, p, op) {\n    var edge_index;\n    if (o === Orientation.CCW) {\n        // ot is not crossing edge after flip\n        edge_index = ot.edgeIndex(p, op);\n        ot.delaunay_edge[edge_index] = true;\n        legalize(tcx, ot);\n        ot.clearDelaunayEdges();\n        return t;\n    }\n\n    // t is not crossing edge after flip\n    edge_index = t.edgeIndex(p, op);\n\n    t.delaunay_edge[edge_index] = true;\n    legalize(tcx, t);\n    t.clearDelaunayEdges();\n    return ot;\n}\n\n/**\n * When we need to traverse from one triangle to the next we need\n * the point in current triangle that is the opposite point to the next\n * triangle.\n */\nfunction nextFlipPoint(ep, eq, ot, op) {\n    var o2d = orient2d(eq, op, ep);\n    if (o2d === Orientation.CW) {\n        // Right\n        return ot.pointCCW(op);\n    } else if (o2d === Orientation.CCW) {\n        // Left\n        return ot.pointCW(op);\n    } else {\n        throw new PointError(\"poly2tri [Unsupported] nextFlipPoint: opposing point on constrained edge!\", [eq, op, ep]);\n    }\n}\n\n/**\n * Scan part of the FlipScan algorithm<br>\n * When a triangle pair isn't flippable we will scan for the next\n * point that is inside the flip triangle scan area. When found\n * we generate a new flipEdgeEvent\n *\n * @param {!SweepContext} tcx - SweepContext object\n * @param ep - last point on the edge we are traversing\n * @param eq - first point on the edge we are traversing\n * @param {!Triangle} flip_triangle - the current triangle sharing the point eq with edge\n * @param t\n * @param p\n */\nfunction flipScanEdgeEvent(tcx, ep, eq, flip_triangle, t, p) {\n    var ot = t.neighborAcross(p);\n    assert(ot, \"FLIP failed due to missing triangle\");\n\n    var op = ot.oppositePoint(t, p);\n\n    if (inScanArea(eq, flip_triangle.pointCCW(eq), flip_triangle.pointCW(eq), op)) {\n        // flip with new edge op.eq\n        flipEdgeEvent(tcx, eq, op, ot, op);\n    } else {\n        var newP = nextFlipPoint(ep, eq, ot, op);\n        flipScanEdgeEvent(tcx, ep, eq, flip_triangle, ot, newP);\n    }\n}\n\n\n// ----------------------------------------------------------------------Exports\n\nexports.triangulate = triangulate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/poly2tri/src/sweep.js\n// module id = 20\n// module chunks = 0","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n *\n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n *\n * All rights reserved.\n *\n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n\"use strict\";\n\n/*\n * Function added in the JavaScript version (was not present in the c++ version)\n */\n\n/**\n * assert and throw an exception.\n *\n * @private\n * @param {boolean} condition   the condition which is asserted\n * @param {string} message      the message which is display is condition is falsy\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || \"Assert Failed\");\n    }\n}\nmodule.exports = assert;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/poly2tri/src/assert.js\n// module id = 21\n// module chunks = 0","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n/* jshint maxcomplexity:11 */\n\n\"use strict\";\n\n\n/*\n * Note\n * ====\n * the structure of this JavaScript version of poly2tri intentionally follows\n * as closely as possible the structure of the reference C++ version, to make it \n * easier to keep the 2 versions in sync.\n */\n\n\n// -------------------------------------------------------------------------Node\n\n/**\n * Advancing front node\n * @constructor\n * @private\n * @struct\n * @param {!XY} p - Point\n * @param {Triangle=} t triangle (optional)\n */\nvar Node = function(p, t) {\n    /** @type {XY} */\n    this.point = p;\n\n    /** @type {Triangle|null} */\n    this.triangle = t || null;\n\n    /** @type {Node|null} */\n    this.next = null;\n    /** @type {Node|null} */\n    this.prev = null;\n\n    /** @type {number} */\n    this.value = p.x;\n};\n\n// ---------------------------------------------------------------AdvancingFront\n/**\n * @constructor\n * @private\n * @struct\n * @param {Node} head\n * @param {Node} tail\n */\nvar AdvancingFront = function(head, tail) {\n    /** @type {Node} */\n    this.head_ = head;\n    /** @type {Node} */\n    this.tail_ = tail;\n    /** @type {Node} */\n    this.search_node_ = head;\n};\n\n/** @return {Node} */\nAdvancingFront.prototype.head = function() {\n    return this.head_;\n};\n\n/** @param {Node} node */\nAdvancingFront.prototype.setHead = function(node) {\n    this.head_ = node;\n};\n\n/** @return {Node} */\nAdvancingFront.prototype.tail = function() {\n    return this.tail_;\n};\n\n/** @param {Node} node */\nAdvancingFront.prototype.setTail = function(node) {\n    this.tail_ = node;\n};\n\n/** @return {Node} */\nAdvancingFront.prototype.search = function() {\n    return this.search_node_;\n};\n\n/** @param {Node} node */\nAdvancingFront.prototype.setSearch = function(node) {\n    this.search_node_ = node;\n};\n\n/** @return {Node} */\nAdvancingFront.prototype.findSearchNode = function(/*x*/) {\n    // TODO: implement BST index\n    return this.search_node_;\n};\n\n/**\n * @param {number} x value\n * @return {Node}\n */\nAdvancingFront.prototype.locateNode = function(x) {\n    var node = this.search_node_;\n\n    /* jshint boss:true */\n    if (x < node.value) {\n        while (node = node.prev) {\n            if (x >= node.value) {\n                this.search_node_ = node;\n                return node;\n            }\n        }\n    } else {\n        while (node = node.next) {\n            if (x < node.value) {\n                this.search_node_ = node.prev;\n                return node.prev;\n            }\n        }\n    }\n    return null;\n};\n\n/**\n * @param {!XY} point - Point\n * @return {Node}\n */\nAdvancingFront.prototype.locatePoint = function(point) {\n    var px = point.x;\n    var node = this.findSearchNode(px);\n    var nx = node.point.x;\n\n    if (px === nx) {\n        // Here we are comparing point references, not values\n        if (point !== node.point) {\n            // We might have two nodes with same x value for a short time\n            if (point === node.prev.point) {\n                node = node.prev;\n            } else if (point === node.next.point) {\n                node = node.next;\n            } else {\n                throw new Error('poly2tri Invalid AdvancingFront.locatePoint() call');\n            }\n        }\n    } else if (px < nx) {\n        /* jshint boss:true */\n        while (node = node.prev) {\n            if (point === node.point) {\n                break;\n            }\n        }\n    } else {\n        while (node = node.next) {\n            if (point === node.point) {\n                break;\n            }\n        }\n    }\n\n    if (node) {\n        this.search_node_ = node;\n    }\n    return node;\n};\n\n\n// ----------------------------------------------------------------------Exports\n\nmodule.exports = AdvancingFront;\nmodule.exports.Node = Node;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/poly2tri/src/advancingfront.js\n// module id = 22\n// module chunks = 0","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n\"use strict\";\n\n/**\n * Precision to detect repeated or collinear points\n * @private\n * @const {number}\n * @default\n */\nvar EPSILON = 1e-12;\nexports.EPSILON = EPSILON;\n\n/**\n * @private\n * @enum {number}\n * @readonly\n */\nvar Orientation = {\n    \"CW\": 1,\n    \"CCW\": -1,\n    \"COLLINEAR\": 0\n};\nexports.Orientation = Orientation;\n\n\n/**\n * Formula to calculate signed area<br>\n * Positive if CCW<br>\n * Negative if CW<br>\n * 0 if collinear<br>\n * <pre>\n * A[P1,P2,P3]  =  (x1*y2 - y1*x2) + (x2*y3 - y2*x3) + (x3*y1 - y3*x1)\n *              =  (x1-x3)*(y2-y3) - (y1-y3)*(x2-x3)\n * </pre>\n *\n * @private\n * @param {!XY} pa  point object with {x,y}\n * @param {!XY} pb  point object with {x,y}\n * @param {!XY} pc  point object with {x,y}\n * @return {Orientation}\n */\nfunction orient2d(pa, pb, pc) {\n    var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n    var detright = (pa.y - pc.y) * (pb.x - pc.x);\n    var val = detleft - detright;\n    if (val > -(EPSILON) && val < (EPSILON)) {\n        return Orientation.COLLINEAR;\n    } else if (val > 0) {\n        return Orientation.CCW;\n    } else {\n        return Orientation.CW;\n    }\n}\nexports.orient2d = orient2d;\n\n\n/**\n *\n * @private\n * @param {!XY} pa  point object with {x,y}\n * @param {!XY} pb  point object with {x,y}\n * @param {!XY} pc  point object with {x,y}\n * @param {!XY} pd  point object with {x,y}\n * @return {boolean}\n */\nfunction inScanArea(pa, pb, pc, pd) {\n    var oadb = (pa.x - pb.x) * (pd.y - pb.y) - (pd.x - pb.x) * (pa.y - pb.y);\n    if (oadb >= -EPSILON) {\n        return false;\n    }\n\n    var oadc = (pa.x - pc.x) * (pd.y - pc.y) - (pd.x - pc.x) * (pa.y - pc.y);\n    if (oadc <= EPSILON) {\n        return false;\n    }\n    return true;\n}\nexports.inScanArea = inScanArea;\n\n\n/**\n * Check if the angle between (pa,pb) and (pa,pc) is obtuse i.e. (angle > π/2 || angle < -π/2)\n *\n * @private\n * @param {!XY} pa  point object with {x,y}\n * @param {!XY} pb  point object with {x,y}\n * @param {!XY} pc  point object with {x,y}\n * @return {boolean} true if angle is obtuse\n */\nfunction isAngleObtuse(pa, pb, pc) {\n    var ax = pb.x - pa.x;\n    var ay = pb.y - pa.y;\n    var bx = pc.x - pa.x;\n    var by = pc.y - pa.y;\n    return (ax * bx + ay * by) < 0;\n}\nexports.isAngleObtuse = isAngleObtuse;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/poly2tri/src/utils.js\n// module id = 23\n// module chunks = 0","window.eve = require('eve')\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16);\n                       },\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function () {\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        len && requestAnimFrame(frame);\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in gereal case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && requestAnimFrame(frame);\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < (1 / p)) {\n            l = s * n * n;\n        } else {\n            if (n < (2 / p)) {\n                n -= (1.5 / p);\n                l = s * n * n + .75;\n            } else {\n                if (n < (2.5 / p)) {\n                    n -= (2.25 / p);\n                    l = s * n * n + .9375;\n                } else {\n                    n -= (2.625 / p);\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n// Copyright (c) 2013 - 2015 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.4.0\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            w = glob.doc.querySelector(String(w));\n            return wrap(w);\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    reURLValue = /^url\\(#?([^)]+)\\)$/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  (type == \"null\" && o === null) ||\n            (type == typeof o && o !== null) ||\n            (type == \"object\" && o === Object(o)) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n > Parameters\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan, bestLength = scanLength, bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after, bestLength = afterLength, bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = (h % 360) / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = (h % 360) / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = (C == 0 ? null :\n         V == r ? (g - b) / C :\n         V == g ? (b - r) / C + 2 :\n                  (r - g) / C + 4\n        );\n    H = ((H + 360) % 6) * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = (C == 0 ? null :\n         M == r ? (g - b) / C :\n         M == g ? (b - r) / C + 2 :\n                  (r - g) / C + 4);\n    H = ((H + 360) % 6) * 60 / 360;\n    L = (M + m) / 2;\n    S = (C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L));\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = (el.node.ownerSVGElement && wrap(el.node.ownerSVGElement)) ||\n            (el.node.parentNode && wrap(el.node.parentNode)) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open((postData ? \"POST\" : \"GET\"), url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = URL(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    // animation\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            var out = [[], [], []],\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n                x, y, z, res;\n\n            if (a && a instanceof Matrix) {\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n            }\n\n            for (x = 0; x < 3; x++) {\n                for (y = 0; y < 3; y++) {\n                    res = 0;\n                    for (z = 0; z < 3; z++) {\n                        res += m[x][z] * matrix[z][y];\n                    }\n                    out[x][y] = res;\n                }\n            }\n            this.a = out[0][0];\n            this.b = out[1][0];\n            this.c = out[0][1];\n            this.d = out[1][1];\n            this.e = out[0][2];\n            this.f = out[1][2];\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            return this.add(1, 0, 0, 1, x, y);\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n            this.add(x, 0, 0, y, 0, 0);\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.c], [this.b, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = -row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\(#?([^)]+)\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value.type == \"clipPath\") {\n                var clip = value;\n            } else {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while ((clazz = classes[j++])) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while ((clazz = classes[j++])) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while ((clazz = classes[j++])) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            this.node.appendChild(stop);\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length,\n                start = 0,\n                j = 0;\n            function seed(i, end) {\n                var step = (end - start) / (i - j);\n                for (var k = j; k < i; k++) {\n                    stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n                }\n                j = i;\n                start = end;\n            }\n            len--;\n            for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n                seed(i, stops[i].offset);\n            }\n            stops[len].offset = stops[len].offset || 100;\n            seed(len, stops[len].offset);\n            for (i = 0; i <= len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + (+r), y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + ((j % 2) ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n            bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    Snap.Set = Set;\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n        t1 = Snap.parseTransformString(t1) || [];\n        t2 = Snap.parseTransformString(t2) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if ((tt1[0] != tt2[0]) ||\n                (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n                (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + (k++) + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(parseFloat(obj));\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (b instanceof Snap.Matrix) {\n                b = b.toTransformString();\n            }\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.svgTransform2string(b);\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start,\n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element\n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, 3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (typeof blur == \"string\") {\n            color = blur;\n            opacity = color;\n            blur = 4;\n        }\n        if (typeof color != \"string\") {\n            opacity = color;\n            color = \"#000\";\n        }\n        color = color || \"#000\";\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\nmodule.exports = Snap\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/snapsvg-cjs/dist/snap.svg-cjs.js\n// module id = 24\n// module chunks = 0","// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.4.2\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            name = String(name);\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n        // Undocumented. Debug only.\n        eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    \n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        name = String(name);\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = name.split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = name.split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     > Arguments\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\n        }\n        return current_event;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = name.split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = name.split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.unbind(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/eve/eve.js\n// module id = 25\n// module chunks = 0","require(\"!!C:\\\\Users\\\\cprez\\\\git\\\\LaserWeb\\\\LaserWeb4\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!C:\\\\Users\\\\cprez\\\\git\\\\LaserWeb\\\\LaserWeb4\\\\node_modules\\\\script-loader\\\\node_modules\\\\raw-loader\\\\index.js!C:\\\\Users\\\\cprez\\\\git\\\\LaserWeb\\\\LaserWeb4\\\\node_modules\\\\web-cam-cpp\\\\web-cam-cpp.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/script-loader!../~/web-cam-cpp/web-cam-cpp.js\n// module id = 26\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/script-loader/addScript.js\n// module id = 27\n// module chunks = 0","module.exports = \"var Module;if(!Module)Module=(typeof Module!==\\\"undefined\\\"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=typeof window===\\\"object\\\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\\\"function\\\";var ENVIRONMENT_IS_NODE=typeof process===\\\"object\\\"&&typeof require===\\\"function\\\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(ENVIRONMENT_IS_NODE){if(!Module[\\\"print\\\"])Module[\\\"print\\\"]=function print(x){process[\\\"stdout\\\"].write(x+\\\"\\\\n\\\")};if(!Module[\\\"printErr\\\"])Module[\\\"printErr\\\"]=function printErr(x){process[\\\"stderr\\\"].write(x+\\\"\\\\n\\\")};var nodeFS=require(\\\"fs\\\");var nodePath=require(\\\"path\\\");Module[\\\"read\\\"]=function read(filename,binary){filename=nodePath[\\\"normalize\\\"](filename);var ret=nodeFS[\\\"readFileSync\\\"](filename);if(!ret&&filename!=nodePath[\\\"resolve\\\"](filename)){filename=path.join(__dirname,\\\"..\\\",\\\"src\\\",filename);ret=nodeFS[\\\"readFileSync\\\"](filename)}if(ret&&!binary)ret=ret.toString();return ret};Module[\\\"readBinary\\\"]=function readBinary(filename){var ret=Module[\\\"read\\\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};Module[\\\"load\\\"]=function load(f){globalEval(read(f))};if(!Module[\\\"thisProgram\\\"]){if(process[\\\"argv\\\"].length>1){Module[\\\"thisProgram\\\"]=process[\\\"argv\\\"][1].replace(/\\\\\\\\/g,\\\"/\\\")}else{Module[\\\"thisProgram\\\"]=\\\"unknown-program\\\"}}Module[\\\"arguments\\\"]=process[\\\"argv\\\"].slice(2);if(typeof module!==\\\"undefined\\\"){module[\\\"exports\\\"]=Module}process[\\\"on\\\"](\\\"uncaughtException\\\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));Module[\\\"inspect\\\"]=(function(){return\\\"[Emscripten Module object]\\\"})}else if(ENVIRONMENT_IS_SHELL){if(!Module[\\\"print\\\"])Module[\\\"print\\\"]=print;if(typeof printErr!=\\\"undefined\\\")Module[\\\"printErr\\\"]=printErr;if(typeof read!=\\\"undefined\\\"){Module[\\\"read\\\"]=read}else{Module[\\\"read\\\"]=function read(){throw\\\"no read() available (jsc?)\\\"}}Module[\\\"readBinary\\\"]=function readBinary(f){if(typeof readbuffer===\\\"function\\\"){return new Uint8Array(readbuffer(f))}var data=read(f,\\\"binary\\\");assert(typeof data===\\\"object\\\");return data};if(typeof scriptArgs!=\\\"undefined\\\"){Module[\\\"arguments\\\"]=scriptArgs}else if(typeof arguments!=\\\"undefined\\\"){Module[\\\"arguments\\\"]=arguments}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module[\\\"read\\\"]=function read(url){var xhr=new XMLHttpRequest;xhr.open(\\\"GET\\\",url,false);xhr.send(null);return xhr.responseText};if(typeof arguments!=\\\"undefined\\\"){Module[\\\"arguments\\\"]=arguments}if(typeof console!==\\\"undefined\\\"){if(!Module[\\\"print\\\"])Module[\\\"print\\\"]=function print(x){console.log(x)};if(!Module[\\\"printErr\\\"])Module[\\\"printErr\\\"]=function printErr(x){console.log(x)}}else{var TRY_USE_DUMP=false;if(!Module[\\\"print\\\"])Module[\\\"print\\\"]=TRY_USE_DUMP&&typeof dump!==\\\"undefined\\\"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module[\\\"load\\\"]=importScripts}if(typeof Module[\\\"setWindowTitle\\\"]===\\\"undefined\\\"){Module[\\\"setWindowTitle\\\"]=(function(title){document.title=title})}}else{throw\\\"Unknown runtime environment. Where are we?\\\"}function globalEval(x){eval.call(null,x)}if(!Module[\\\"load\\\"]&&Module[\\\"read\\\"]){Module[\\\"load\\\"]=function load(f){globalEval(Module[\\\"read\\\"](f))}}if(!Module[\\\"print\\\"]){Module[\\\"print\\\"]=(function(){})}if(!Module[\\\"printErr\\\"]){Module[\\\"printErr\\\"]=Module[\\\"print\\\"]}if(!Module[\\\"arguments\\\"]){Module[\\\"arguments\\\"]=[]}if(!Module[\\\"thisProgram\\\"]){Module[\\\"thisProgram\\\"]=\\\"./this.program\\\"}Module.print=Module[\\\"print\\\"];Module.printErr=Module[\\\"printErr\\\"];Module[\\\"preRun\\\"]=[];Module[\\\"postRun\\\"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}var Runtime={setTempRet0:(function(value){tempRet0=value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case\\\"i1\\\":case\\\"i8\\\":return 1;case\\\"i16\\\":return 2;case\\\"i32\\\":return 4;case\\\"i64\\\":return 8;case\\\"float\\\":return 4;case\\\"double\\\":return 8;default:{if(type[type.length-1]===\\\"*\\\"){return Runtime.QUANTUM_SIZE}else if(type[0]===\\\"i\\\"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type===\\\"double\\\"||type===\\\"i64\\\"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type==\\\"i64\\\"||type==\\\"double\\\"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){if(!args.splice)args=Array.prototype.slice.call(args);args.splice(0,0,ptr);return Module[\\\"dynCall_\\\"+sig].apply(null,args)}else{return Module[\\\"dynCall_\\\"+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw\\\"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.\\\"}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,arguments)}}return sigCache[func]}),getCompilerSetting:(function(name){throw\\\"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work\\\"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+size|0;DYNAMICTOP=DYNAMICTOP+15&-16;if(DYNAMICTOP>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){DYNAMICTOP=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};Module[\\\"Runtime\\\"]=Runtime;var __THREW__=0;var ABORT=false;var EXITSTATUS=0;var undef=0;var tempValue,tempInt,tempBigInt,tempInt2,tempBigInt2,tempPair,tempBigIntI,tempBigIntR,tempBigIntS,tempBigIntP,tempBigIntD,tempDouble,tempFloat;var tempI64,tempI64b;var tempRet0,tempRet1,tempRet2,tempRet3,tempRet4,tempRet5,tempRet6,tempRet7,tempRet8,tempRet9;function assert(condition,text){if(!condition){abort(\\\"Assertion failed: \\\"+text)}}var globalScope=this;function getCFunc(ident){var func=Module[\\\"_\\\"+ident];if(!func){try{func=eval(\\\"_\\\"+ident)}catch(e){}}assert(func,\\\"Cannot call unknown function \\\"+ident+\\\" (perhaps LLVM optimizations or closure removed it?)\\\");return func}var cwrap,ccall;((function(){var JSfuncs={\\\"stackSave\\\":(function(){Runtime.stackSave()}),\\\"stackRestore\\\":(function(){Runtime.stackRestore()}),\\\"arrayToC\\\":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),\\\"stringToC\\\":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=Runtime.stackAlloc((str.length<<2)+1);writeStringToMemory(str,ret)}return ret})};var toC={\\\"string\\\":JSfuncs[\\\"stringToC\\\"],\\\"array\\\":JSfuncs[\\\"arrayToC\\\"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType===\\\"string\\\")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return ret};var sourceRegex=/^function\\\\s*\\\\(([^)]*)\\\\)\\\\s*{\\\\s*([^*]*?)[\\\\s;]*(?:return\\\\s*(.*?)[;\\\\s]*)?}$/;function parseJSFunc(jsfunc){var parsed=jsfunc.toString().match(sourceRegex).slice(1);return{arguments:parsed[0],body:parsed[1],returnValue:parsed[2]}}var JSsource={};for(var fun in JSfuncs){if(JSfuncs.hasOwnProperty(fun)){JSsource[fun]=parseJSFunc(JSfuncs[fun])}}cwrap=function cwrap(ident,returnType,argTypes){argTypes=argTypes||[];var cfunc=getCFunc(ident);var numericArgs=argTypes.every((function(type){return type===\\\"number\\\"}));var numericRet=returnType!==\\\"string\\\";if(numericRet&&numericArgs){return cfunc}var argNames=argTypes.map((function(x,i){return\\\"$\\\"+i}));var funcstr=\\\"(function(\\\"+argNames.join(\\\",\\\")+\\\") {\\\";var nargs=argTypes.length;if(!numericArgs){funcstr+=\\\"var stack = \\\"+JSsource[\\\"stackSave\\\"].body+\\\";\\\";for(var i=0;i<nargs;i++){var arg=argNames[i],type=argTypes[i];if(type===\\\"number\\\")continue;var convertCode=JSsource[type+\\\"ToC\\\"];funcstr+=\\\"var \\\"+convertCode.arguments+\\\" = \\\"+arg+\\\";\\\";funcstr+=convertCode.body+\\\";\\\";funcstr+=arg+\\\"=\\\"+convertCode.returnValue+\\\";\\\"}}var cfuncname=parseJSFunc((function(){return cfunc})).returnValue;funcstr+=\\\"var ret = \\\"+cfuncname+\\\"(\\\"+argNames.join(\\\",\\\")+\\\");\\\";if(!numericRet){var strgfy=parseJSFunc((function(){return Pointer_stringify})).returnValue;funcstr+=\\\"ret = \\\"+strgfy+\\\"(ret);\\\"}if(!numericArgs){funcstr+=JSsource[\\\"stackRestore\\\"].body.replace(\\\"()\\\",\\\"(stack)\\\")+\\\";\\\"}funcstr+=\\\"return ret})\\\";return eval(funcstr)}}))();Module[\\\"ccall\\\"]=ccall;Module[\\\"cwrap\\\"]=cwrap;function setValue(ptr,value,type,noSafe){type=type||\\\"i8\\\";if(type.charAt(type.length-1)===\\\"*\\\")type=\\\"i32\\\";switch(type){case\\\"i1\\\":HEAP8[ptr>>0]=value;break;case\\\"i8\\\":HEAP8[ptr>>0]=value;break;case\\\"i16\\\":HEAP16[ptr>>1]=value;break;case\\\"i32\\\":HEAP32[ptr>>2]=value;break;case\\\"i64\\\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\\\"float\\\":HEAPF32[ptr>>2]=value;break;case\\\"double\\\":HEAPF64[ptr>>3]=value;break;default:abort(\\\"invalid type for setValue: \\\"+type)}}Module[\\\"setValue\\\"]=setValue;function getValue(ptr,type,noSafe){type=type||\\\"i8\\\";if(type.charAt(type.length-1)===\\\"*\\\")type=\\\"i32\\\";switch(type){case\\\"i1\\\":return HEAP8[ptr>>0];case\\\"i8\\\":return HEAP8[ptr>>0];case\\\"i16\\\":return HEAP16[ptr>>1];case\\\"i32\\\":return HEAP32[ptr>>2];case\\\"i64\\\":return HEAP32[ptr>>2];case\\\"float\\\":return HEAPF32[ptr>>2];case\\\"double\\\":return HEAPF64[ptr>>3];default:abort(\\\"invalid type for setValue: \\\"+type)}return null}Module[\\\"getValue\\\"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module[\\\"ALLOC_NORMAL\\\"]=ALLOC_NORMAL;Module[\\\"ALLOC_STACK\\\"]=ALLOC_STACK;Module[\\\"ALLOC_STATIC\\\"]=ALLOC_STATIC;Module[\\\"ALLOC_DYNAMIC\\\"]=ALLOC_DYNAMIC;Module[\\\"ALLOC_NONE\\\"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\\\"number\\\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\\\"string\\\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[_malloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\\\"i8\\\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr===\\\"function\\\"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type==\\\"i64\\\")type=\\\"i32\\\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module[\\\"allocate\\\"]=allocate;function getMemory(size){if(!staticSealed)return Runtime.staticAlloc(size);if(typeof _sbrk!==\\\"undefined\\\"&&!_sbrk.called||!runtimeInitialized)return Runtime.dynamicAlloc(size);return _malloc(size)}Module[\\\"getMemory\\\"]=getMemory;function Pointer_stringify(ptr,length){if(length===0||!ptr)return\\\"\\\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\\\"\\\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module[\\\"UTF8ToString\\\"](ptr)}Module[\\\"Pointer_stringify\\\"]=Pointer_stringify;function AsciiToString(ptr){var str=\\\"\\\";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module[\\\"AsciiToString\\\"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module[\\\"stringToAscii\\\"]=stringToAscii;function UTF8ArrayToString(u8Array,idx){var u0,u1,u2,u3,u4,u5;var str=\\\"\\\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}Module[\\\"UTF8ArrayToString\\\"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module[\\\"UTF8ToString\\\"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module[\\\"stringToUTF8Array\\\"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module[\\\"stringToUTF8\\\"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module[\\\"lengthBytesUTF8\\\"]=lengthBytesUTF8;function UTF16ToString(ptr){var i=0;var str=\\\"\\\";while(1){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)return str;++i;str+=String.fromCharCode(codeUnit)}}Module[\\\"UTF16ToString\\\"]=UTF16ToString;function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}Module[\\\"stringToUTF16\\\"]=stringToUTF16;function lengthBytesUTF16(str){return str.length*2}Module[\\\"lengthBytesUTF16\\\"]=lengthBytesUTF16;function UTF32ToString(ptr){var i=0;var str=\\\"\\\";while(1){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)return str;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}}Module[\\\"UTF32ToString\\\"]=UTF32ToString;function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}Module[\\\"stringToUTF32\\\"]=stringToUTF32;function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}Module[\\\"lengthBytesUTF32\\\"]=lengthBytesUTF32;function demangle(func){var hasLibcxxabi=!!Module[\\\"___cxa_demangle\\\"];if(hasLibcxxabi){try{var buf=_malloc(func.length);writeStringToMemory(func.substr(1),buf);var status=_malloc(4);var ret=Module[\\\"___cxa_demangle\\\"](buf,0,0,status);if(getValue(status,\\\"i32\\\")===0&&ret){return Pointer_stringify(ret)}}catch(e){}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}}var i=3;var basicTypes={\\\"v\\\":\\\"void\\\",\\\"b\\\":\\\"bool\\\",\\\"c\\\":\\\"char\\\",\\\"s\\\":\\\"short\\\",\\\"i\\\":\\\"int\\\",\\\"l\\\":\\\"long\\\",\\\"f\\\":\\\"float\\\",\\\"d\\\":\\\"double\\\",\\\"w\\\":\\\"wchar_t\\\",\\\"a\\\":\\\"signed char\\\",\\\"h\\\":\\\"unsigned char\\\",\\\"t\\\":\\\"unsigned short\\\",\\\"j\\\":\\\"unsigned int\\\",\\\"m\\\":\\\"unsigned long\\\",\\\"x\\\":\\\"long long\\\",\\\"y\\\":\\\"unsigned long long\\\",\\\"z\\\":\\\"...\\\"};var subs=[];var first=true;function dump(x){if(x)Module.print(x);Module.print(func);var pre=\\\"\\\";for(var a=0;a<i;a++)pre+=\\\" \\\";Module.print(pre+\\\"^\\\")}function parseNested(){i++;if(func[i]===\\\"K\\\")i++;var parts=[];while(func[i]!==\\\"E\\\"){if(func[i]===\\\"S\\\"){i++;var next=func.indexOf(\\\"_\\\",i);var num=func.substring(i,next)||0;parts.push(subs[num]||\\\"?\\\");i=next+1;continue}if(func[i]===\\\"C\\\"){parts.push(parts[parts.length-1]);i+=2;continue}var size=parseInt(func.substr(i));var pre=size.toString().length;if(!size||!pre){i--;break}var curr=func.substr(i+pre,size);parts.push(curr);subs.push(curr);i+=pre+size}i++;return parts}function parse(rawList,limit,allowVoid){limit=limit||Infinity;var ret=\\\"\\\",list=[];function flushList(){return\\\"(\\\"+list.join(\\\", \\\")+\\\")\\\"}var name;if(func[i]===\\\"N\\\"){name=parseNested().join(\\\"::\\\");limit--;if(limit===0)return rawList?[name]:name}else{if(func[i]===\\\"K\\\"||first&&func[i]===\\\"L\\\")i++;var size=parseInt(func.substr(i));if(size){var pre=size.toString().length;name=func.substr(i+pre,size);i+=pre+size}}first=false;if(func[i]===\\\"I\\\"){i++;var iList=parse(true);var iRet=parse(true,1,true);ret+=iRet[0]+\\\" \\\"+name+\\\"<\\\"+iList.join(\\\", \\\")+\\\">\\\"}else{ret=name}paramLoop:while(i<func.length&&limit-->0){var c=func[i++];if(c in basicTypes){list.push(basicTypes[c])}else{switch(c){case\\\"P\\\":list.push(parse(true,1,true)[0]+\\\"*\\\");break;case\\\"R\\\":list.push(parse(true,1,true)[0]+\\\"&\\\");break;case\\\"L\\\":{i++;var end=func.indexOf(\\\"E\\\",i);var size=end-i;list.push(func.substr(i,size));i+=size+2;break};case\\\"A\\\":{var size=parseInt(func.substr(i));i+=size.toString().length;if(func[i]!==\\\"_\\\")throw\\\"?\\\";i++;list.push(parse(true,1,true)[0]+\\\" [\\\"+size+\\\"]\\\");break};case\\\"E\\\":break paramLoop;default:ret+=\\\"?\\\"+c;break paramLoop}}}if(!allowVoid&&list.length===1&&list[0]===\\\"void\\\")list=[];if(rawList){if(ret){list.push(ret+\\\"?\\\")}return list}else{return ret+flushList()}}var parsed=func;try{if(func==\\\"Object._main\\\"||func==\\\"_main\\\"){return\\\"main()\\\"}if(typeof func===\\\"number\\\")func=Pointer_stringify(func);if(func[0]!==\\\"_\\\")return func;if(func[1]!==\\\"_\\\")return func;if(func[2]!==\\\"Z\\\")return func;switch(func[3]){case\\\"n\\\":return\\\"operator new()\\\";case\\\"d\\\":return\\\"operator delete()\\\"}parsed=parse()}catch(e){parsed+=\\\"?\\\"}if(parsed.indexOf(\\\"?\\\")>=0&&!hasLibcxxabi){Runtime.warnOnce(\\\"warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling\\\")}return parsed}function demangleAll(text){return text.replace(/__Z[\\\\w\\\\d_]+/g,(function(x){var y=demangle(x);return x===y?x:x+\\\" [\\\"+y+\\\"]\\\"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\\\"(no stack trace available)\\\"}}return err.stack.toString()}function stackTrace(){return demangleAll(jsStackTrace())}Module[\\\"stackTrace\\\"]=stackTrace;var PAGE_SIZE=4096;function alignMemoryPage(x){if(x%4096>0){x+=4096-x%4096}return x}var HEAP;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;var STATIC_BASE=0,STATICTOP=0,staticSealed=false;var STACK_BASE=0,STACKTOP=0,STACK_MAX=0;var DYNAMIC_BASE=0,DYNAMICTOP=0;function enlargeMemory(){var OLD_TOTAL_MEMORY=TOTAL_MEMORY;var LIMIT=Math.pow(2,31);if(DYNAMICTOP>=LIMIT)return false;while(TOTAL_MEMORY<=DYNAMICTOP){if(TOTAL_MEMORY<LIMIT/2){TOTAL_MEMORY=alignMemoryPage(2*TOTAL_MEMORY)}else{var last=TOTAL_MEMORY;TOTAL_MEMORY=alignMemoryPage((3*TOTAL_MEMORY+LIMIT)/4);if(TOTAL_MEMORY<=last)return false}}TOTAL_MEMORY=Math.max(TOTAL_MEMORY,16*1024*1024);if(TOTAL_MEMORY>=LIMIT)return false;try{if(ArrayBuffer.transfer){buffer=ArrayBuffer.transfer(buffer,TOTAL_MEMORY)}else{var oldHEAP8=HEAP8;buffer=new ArrayBuffer(TOTAL_MEMORY)}}catch(e){return false}var success=_emscripten_replace_memory(buffer);if(!success)return false;Module[\\\"buffer\\\"]=buffer;Module[\\\"HEAP8\\\"]=HEAP8=new Int8Array(buffer);Module[\\\"HEAP16\\\"]=HEAP16=new Int16Array(buffer);Module[\\\"HEAP32\\\"]=HEAP32=new Int32Array(buffer);Module[\\\"HEAPU8\\\"]=HEAPU8=new Uint8Array(buffer);Module[\\\"HEAPU16\\\"]=HEAPU16=new Uint16Array(buffer);Module[\\\"HEAPU32\\\"]=HEAPU32=new Uint32Array(buffer);Module[\\\"HEAPF32\\\"]=HEAPF32=new Float32Array(buffer);Module[\\\"HEAPF64\\\"]=HEAPF64=new Float64Array(buffer);if(!ArrayBuffer.transfer){HEAP8.set(oldHEAP8)}return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\\\"byteLength\\\").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module[\\\"TOTAL_STACK\\\"]||5242880;var TOTAL_MEMORY=Module[\\\"TOTAL_MEMORY\\\"]||16777216;var totalMemory=64*1024;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}totalMemory=Math.max(totalMemory,16*1024*1024);if(totalMemory!==TOTAL_MEMORY){TOTAL_MEMORY=totalMemory}assert(typeof Int32Array!==\\\"undefined\\\"&&typeof Float64Array!==\\\"undefined\\\"&&!!(new Int32Array(1))[\\\"subarray\\\"]&&!!(new Int32Array(1))[\\\"set\\\"],\\\"JS engine does not provide full typed array support\\\");var buffer;buffer=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(buffer);HEAP16=new Int16Array(buffer);HEAP32=new Int32Array(buffer);HEAPU8=new Uint8Array(buffer);HEAPU16=new Uint16Array(buffer);HEAPU32=new Uint32Array(buffer);HEAPF32=new Float32Array(buffer);HEAPF64=new Float64Array(buffer);HEAP32[0]=255;assert(HEAPU8[0]===255&&HEAPU8[3]===0,\\\"Typed arrays 2 must be run on a little-endian system\\\");Module[\\\"HEAP\\\"]=HEAP;Module[\\\"buffer\\\"]=buffer;Module[\\\"HEAP8\\\"]=HEAP8;Module[\\\"HEAP16\\\"]=HEAP16;Module[\\\"HEAP32\\\"]=HEAP32;Module[\\\"HEAPU8\\\"]=HEAPU8;Module[\\\"HEAPU16\\\"]=HEAPU16;Module[\\\"HEAPU32\\\"]=HEAPU32;Module[\\\"HEAPF32\\\"]=HEAPF32;Module[\\\"HEAPF64\\\"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\\\"function\\\"){callback();continue}var func=callback.func;if(typeof func===\\\"number\\\"){if(callback.arg===undefined){Runtime.dynCall(\\\"v\\\",func)}else{Runtime.dynCall(\\\"vi\\\",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\\\"preRun\\\"]){if(typeof Module[\\\"preRun\\\"]==\\\"function\\\")Module[\\\"preRun\\\"]=[Module[\\\"preRun\\\"]];while(Module[\\\"preRun\\\"].length){addOnPreRun(Module[\\\"preRun\\\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module[\\\"postRun\\\"]){if(typeof Module[\\\"postRun\\\"]==\\\"function\\\")Module[\\\"postRun\\\"]=[Module[\\\"postRun\\\"]];while(Module[\\\"postRun\\\"].length){addOnPostRun(Module[\\\"postRun\\\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module[\\\"addOnPreRun\\\"]=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module[\\\"addOnInit\\\"]=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module[\\\"addOnPreMain\\\"]=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module[\\\"addOnExit\\\"]=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module[\\\"addOnPostRun\\\"]=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module[\\\"intArrayFromString\\\"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\\\"\\\")}Module[\\\"intArrayToString\\\"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){var array=intArrayFromString(string,dontAddNull);var i=0;while(i<array.length){var chr=array[i];HEAP8[buffer+i>>0]=chr;i=i+1}}Module[\\\"writeStringToMemory\\\"]=writeStringToMemory;function writeArrayToMemory(array,buffer){for(var i=0;i<array.length;i++){HEAP8[buffer++>>0]=array[i]}}Module[\\\"writeArrayToMemory\\\"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module[\\\"writeAsciiToMemory\\\"]=writeAsciiToMemory;function unSign(value,bits,ignore){if(value>=0){return value}return bits<=32?2*Math.abs(1<<bits-1)+value:Math.pow(2,bits)+value}function reSign(value,bits,ignore){if(value<=0){return value}var half=bits<=32?Math.abs(1<<bits-1):Math.pow(2,bits-1);if(value>=half&&(bits<=32||value>half)){value=-2*half+value}return value}if(!Math[\\\"imul\\\"]||Math[\\\"imul\\\"](4294967295,5)!==-5)Math[\\\"imul\\\"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math[\\\"imul\\\"];if(!Math[\\\"clz32\\\"])Math[\\\"clz32\\\"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math[\\\"clz32\\\"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\\\"monitorRunDependencies\\\"]){Module[\\\"monitorRunDependencies\\\"](runDependencies)}}Module[\\\"addRunDependency\\\"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module[\\\"monitorRunDependencies\\\"]){Module[\\\"monitorRunDependencies\\\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\\\"removeRunDependency\\\"]=removeRunDependency;Module[\\\"preloadedImages\\\"]={};Module[\\\"preloadedAudios\\\"]={};var memoryInitializer=null;var ASM_CONSTS=[];STATIC_BASE=8;STATICTOP=STATIC_BASE+4928;__ATINIT__.push();allocate([192,0,0,0,103,4,0,0,24,0,0,0,0,0,0,0,152,0,0,0,116,4,0,0,152,0,0,0,129,4,0,0,192,0,0,0,142,4,0,0,32,0,0,0,0,0,0,0,192,0,0,0,175,4,0,0,40,0,0,0,0,0,0,0,192,0,0,0,245,4,0,0,40,0,0,0,0,0,0,0,192,0,0,0,209,4,0,0,72,0,0,0,0,0,0,0,192,0,0,0,23,5,0,0,56,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,104,0,0,0,3,0,0,0,7,0,0,0,5,0,0,0,6,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,46,13,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,97,58,32,37,100,45,62,37,100,10,0,109,98,58,32,37,100,45,62,37,100,10,0,109,32,100,111,110,101,0,97,32,99,117,116,116,101,114,65,110,103,108,101,61,37,102,32,112,97,115,115,68,101,112,116,104,61,37,102,32,109,97,120,68,101,112,116,104,61,37,102,10,0,105,0,106,58,32,101,100,103,101,73,110,100,101,120,101,115,58,32,37,100,10,0,107,0,110,117,109,80,114,111,99,101,115,115,101,100,58,32,37,100,47,37,100,10,0,100,105,118,101,0,114,101,116,114,97,99,116,0,122,32,45,32,100,111,110,101,0,98,0,99,0,100,0,101,0,102,58,32,37,100,32,118,111,114,111,110,111,105,32,101,100,103,101,115,10,0,103,49,58,32,37,100,32,102,105,108,116,101,114,69,100,103,101,115,10,0,103,50,58,32,37,100,32,102,105,108,116,101,114,69,100,103,101,115,10,0,103,51,58,32,37,100,32,102,105,108,116,101,114,69,100,103,101,115,10,0,103,52,0,103,53,58,32,37,100,32,101,100,103,101,115,10,0,83,116,57,98,97,100,95,97,108,108,111,99,0,83,116,57,101,120,99,101,112,116,105,111,110,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,67,58,92,80,114,111,103,114,97,109,32,70,105,108,101,115,92,69,109,115,99,114,105,112,116,101,110,92,101,109,115,99,114,105,112,116,101,110,92,49,46,51,53,46,48,92,115,121,115,116,101,109,92,105,110,99,108,117,100,101,92,108,105,98,99,120,120,92,118,101,99,116,111,114,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,46,0],\\\"i8\\\",ALLOC_NONE,Runtime.GLOBAL_BASE);var tempDoublePtr=Runtime.alignMemory(allocate(12,\\\"i8\\\",ALLOC_STATIC),8);assert(tempDoublePtr%8==0);function copyTempFloat(ptr){HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1]=HEAP8[ptr+1];HEAP8[tempDoublePtr+2]=HEAP8[ptr+2];HEAP8[tempDoublePtr+3]=HEAP8[ptr+3]}function copyTempDouble(ptr){HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1]=HEAP8[ptr+1];HEAP8[tempDoublePtr+2]=HEAP8[ptr+2];HEAP8[tempDoublePtr+3]=HEAP8[ptr+3];HEAP8[tempDoublePtr+4]=HEAP8[ptr+4];HEAP8[tempDoublePtr+5]=HEAP8[ptr+5];HEAP8[tempDoublePtr+6]=HEAP8[ptr+6];HEAP8[tempDoublePtr+7]=HEAP8[ptr+7]}var _BDtoIHigh=true;Module[\\\"_i64Subtract\\\"]=_i64Subtract;function ___setErrNo(value){if(Module[\\\"___errno_location\\\"])HEAP32[Module[\\\"___errno_location\\\"]()>>2]=value;return value}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:return totalMemory/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\\\"object\\\")return navigator[\\\"hardwareConcurrency\\\"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}var _SItoD=true;function _pthread_cleanup_push(routine,arg){__ATEXIT__.push((function(){Runtime.dynCall(\\\"vi\\\",routine,[arg])}));_pthread_cleanup_push.level=__ATEXIT__.length}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var ptr in EXCEPTIONS.infos){var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0){if(info.destructor){Runtime.dynCall(\\\"vi\\\",info.destructor,[ptr])}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));throw ptr+\\\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\\\"}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(asm[\\\"setTempRet0\\\"](0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(asm[\\\"setTempRet0\\\"](0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module[\\\"___cxa_is_pointer_type\\\"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module[\\\"___cxa_can_catch\\\"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(asm[\\\"setTempRet0\\\"](typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(asm[\\\"setTempRet0\\\"](throwntype),thrown)|0}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:ptr,type:type,destructor:destructor,refcount:0};EXCEPTIONS.last=ptr;if(!(\\\"uncaught_exception\\\"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+\\\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\\\"}Module[\\\"_memset\\\"]=_memset;var _BDtoILow=true;Module[\\\"_bitshift64Lshr\\\"]=_bitshift64Lshr;Module[\\\"_bitshift64Shl\\\"]=_bitshift64Shl;function _pthread_cleanup_pop(){assert(_pthread_cleanup_push.level==__ATEXIT__.length,\\\"cannot pop if something else added meanwhile!\\\");__ATEXIT__.pop();_pthread_cleanup_push.level=__ATEXIT__.length}function _abort(){Module[\\\"abort\\\"]()}function ___assert_fail(condition,filename,line,func){ABORT=true;throw\\\"Assertion failed: \\\"+Pointer_stringify(condition)+\\\", at: \\\"+[filename?Pointer_stringify(filename):\\\"unknown filename\\\",line,func?Pointer_stringify(func):\\\"unknown function\\\"]+\\\" at \\\"+stackTrace()}var _tan=Math_tan;function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module[\\\"_memcpy\\\"]=_memcpy;var SYSCALLS={varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\\\"undefined\\\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}Module[\\\"_i64Add\\\"]=_i64Add;function _sbrk(bytes){var self=_sbrk;if(!self.called){DYNAMICTOP=alignMemoryPage(DYNAMICTOP);self.called=true;assert(Runtime.dynamicAlloc);self.alloc=Runtime.dynamicAlloc;Runtime.dynamicAlloc=(function(){abort(\\\"cannot dynamically allocate, sbrk now has control\\\")})}var ret=DYNAMICTOP;if(bytes!=0){var success=self.alloc(bytes);if(!success)return-1>>>0}return ret}Module[\\\"_memmove\\\"]=_memmove;function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;if(!___syscall146.buffer)___syscall146.buffer=[];var buffer=___syscall146.buffer;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){var curr=HEAPU8[ptr+j];if(curr===0||curr===10){Module[\\\"print\\\"](UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}ret+=len}return ret}catch(e){if(typeof FS===\\\"undefined\\\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var _BItoD=true;var _sqrt=Math_sqrt;function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;assert(offset_high===0);FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\\\"undefined\\\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var PATH=undefined;function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setTimeout(){setTimeout(Browser.mainLoop.runner,value)};Browser.mainLoop.method=\\\"timeout\\\"}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_rAF(){Browser.requestAnimationFrame(Browser.mainLoop.runner)};Browser.mainLoop.method=\\\"rAF\\\"}else if(mode==2){if(!window[\\\"setImmediate\\\"]){var setImmediates=[];var emscriptenMainLoopMessageId=\\\"__emcc\\\";function Browser_setImmediate_messageHandler(event){if(event.source===window&&event.data===emscriptenMainLoopMessageId){event.stopPropagation();setImmediates.shift()()}}window.addEventListener(\\\"message\\\",Browser_setImmediate_messageHandler,true);window[\\\"setImmediate\\\"]=function Browser_emulated_setImmediate(func){setImmediates.push(func);window.postMessage(emscriptenMainLoopMessageId,\\\"*\\\")}}Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setImmediate(){window[\\\"setImmediate\\\"](Browser.mainLoop.runner)};Browser.mainLoop.method=\\\"immediate\\\"}return 0}function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg,noSetTiming){Module[\\\"noExitRuntime\\\"]=true;assert(!Browser.mainLoop.func,\\\"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.\\\");Browser.mainLoop.func=func;Browser.mainLoop.arg=arg;var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next}else{next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9}}console.log('main loop blocker \\\"'+blocker.name+'\\\" took '+(Date.now()-start)+\\\" ms\\\");Browser.mainLoop.updateStatus();setTimeout(Browser.mainLoop.runner,0);return}if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return}if(Browser.mainLoop.method===\\\"timeout\\\"&&Module.ctx){Module.printErr(\\\"Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!\\\");Browser.mainLoop.method=\\\"\\\"}Browser.mainLoop.runIter((function(){if(typeof arg!==\\\"undefined\\\"){Runtime.dynCall(\\\"vi\\\",func,[arg])}else{Runtime.dynCall(\\\"v\\\",func)}}));if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;if(typeof SDL===\\\"object\\\"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler()};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler()}if(simulateInfiniteLoop){throw\\\"SimulateInfiniteLoop\\\"}}var Browser={mainLoop:{scheduler:null,method:\\\"\\\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:(function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++}),resume:(function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;_emscripten_set_main_loop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler()}),updateStatus:(function(){if(Module[\\\"setStatus\\\"]){var message=Module[\\\"statusMessage\\\"]||\\\"Please wait...\\\";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module[\\\"setStatus\\\"](message+\\\" (\\\"+(expected-remaining)+\\\"/\\\"+expected+\\\")\\\")}else{Module[\\\"setStatus\\\"](message)}}else{Module[\\\"setStatus\\\"](\\\"\\\")}}}),runIter:(function(func){if(ABORT)return;if(Module[\\\"preMainLoop\\\"]){var preRet=Module[\\\"preMainLoop\\\"]();if(preRet===false){return}}try{func()}catch(e){if(e instanceof ExitStatus){return}else{if(e&&typeof e===\\\"object\\\"&&e.stack)Module.printErr(\\\"exception thrown: \\\"+[e,e.stack]);throw e}}if(Module[\\\"postMainLoop\\\"])Module[\\\"postMainLoop\\\"]()})},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:(function(){if(!Module[\\\"preloadPlugins\\\"])Module[\\\"preloadPlugins\\\"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log(\\\"warning: no blob constructor, cannot create blobs with mimetypes\\\")}Browser.BlobBuilder=typeof MozBlobBuilder!=\\\"undefined\\\"?MozBlobBuilder:typeof WebKitBlobBuilder!=\\\"undefined\\\"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log(\\\"warning: no BlobBuilder\\\"):null;Browser.URLObject=typeof window!=\\\"undefined\\\"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject===\\\"undefined\\\"){console.log(\\\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\\\");Module.noImageDecoding=true}var imagePlugin={};imagePlugin[\\\"canHandle\\\"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\\\\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin[\\\"handle\\\"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([(new Uint8Array(byteArray)).buffer],{type:Browser.getMimetype(name)})}}catch(e){Runtime.warnOnce(\\\"Blob constructor present but fails: \\\"+e+\\\"; falling back to blob builder\\\")}}if(!b){var bb=new Browser.BlobBuilder;bb.append((new Uint8Array(byteArray)).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,\\\"Image \\\"+name+\\\" could not be decoded\\\");var canvas=document.createElement(\\\"canvas\\\");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext(\\\"2d\\\");ctx.drawImage(img,0,0);Module[\\\"preloadedImages\\\"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log(\\\"Image \\\"+url+\\\" could not be decoded\\\");if(onerror)onerror()};img.src=url};Module[\\\"preloadPlugins\\\"].push(imagePlugin);var audioPlugin={};audioPlugin[\\\"canHandle\\\"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{\\\".ogg\\\":1,\\\".wav\\\":1,\\\".mp3\\\":1}};audioPlugin[\\\"handle\\\"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module[\\\"preloadedAudios\\\"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module[\\\"preloadedAudios\\\"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener(\\\"canplaythrough\\\",(function(){finish(audio)}),false);audio.onerror=function audio_onerror(event){if(done)return;console.log(\\\"warning: browser could not fully decode audio \\\"+name+\\\", trying slower base64 approach\\\");function encode64(data){var BASE=\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";var PAD=\\\"=\\\";var ret=\\\"\\\";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src=\\\"data:audio/x-\\\"+name.substr(-3)+\\\";base64,\\\"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout((function(){finish(audio)}),1e4)}else{return fail()}};Module[\\\"preloadPlugins\\\"].push(audioPlugin);var canvas=Module[\\\"canvas\\\"];function pointerLockChange(){Browser.pointerLock=document[\\\"pointerLockElement\\\"]===canvas||document[\\\"mozPointerLockElement\\\"]===canvas||document[\\\"webkitPointerLockElement\\\"]===canvas||document[\\\"msPointerLockElement\\\"]===canvas}if(canvas){canvas.requestPointerLock=canvas[\\\"requestPointerLock\\\"]||canvas[\\\"mozRequestPointerLock\\\"]||canvas[\\\"webkitRequestPointerLock\\\"]||canvas[\\\"msRequestPointerLock\\\"]||(function(){});canvas.exitPointerLock=document[\\\"exitPointerLock\\\"]||document[\\\"mozExitPointerLock\\\"]||document[\\\"webkitExitPointerLock\\\"]||document[\\\"msExitPointerLock\\\"]||(function(){});canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener(\\\"pointerlockchange\\\",pointerLockChange,false);document.addEventListener(\\\"mozpointerlockchange\\\",pointerLockChange,false);document.addEventListener(\\\"webkitpointerlockchange\\\",pointerLockChange,false);document.addEventListener(\\\"mspointerlockchange\\\",pointerLockChange,false);if(Module[\\\"elementPointerLock\\\"]){canvas.addEventListener(\\\"click\\\",(function(ev){if(!Browser.pointerLock&&canvas.requestPointerLock){canvas.requestPointerLock();ev.preventDefault()}}),false)}}}),createContext:(function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx}canvas.style.backgroundColor=\\\"black\\\"}else{ctx=canvas.getContext(\\\"2d\\\")}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx===\\\"undefined\\\",\\\"cannot set in module if GLctx is used, but we are a non-GL context that would replace it\\\");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach((function(callback){callback()}));Browser.init()}return ctx}),destroyContext:(function(canvas,useWebGL,setInModule){}),fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:(function(lockPointer,resizeCanvas,vrDevice){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;Browser.vrDevice=vrDevice;if(typeof Browser.lockPointer===\\\"undefined\\\")Browser.lockPointer=true;if(typeof Browser.resizeCanvas===\\\"undefined\\\")Browser.resizeCanvas=false;if(typeof Browser.vrDevice===\\\"undefined\\\")Browser.vrDevice=null;var canvas=Module[\\\"canvas\\\"];function fullScreenChange(){Browser.isFullScreen=false;var canvasContainer=canvas.parentNode;if((document[\\\"webkitFullScreenElement\\\"]||document[\\\"webkitFullscreenElement\\\"]||document[\\\"mozFullScreenElement\\\"]||document[\\\"mozFullscreenElement\\\"]||document[\\\"fullScreenElement\\\"]||document[\\\"fullscreenElement\\\"]||document[\\\"msFullScreenElement\\\"]||document[\\\"msFullscreenElement\\\"]||document[\\\"webkitCurrentFullScreenElement\\\"])===canvasContainer){canvas.cancelFullScreen=document[\\\"cancelFullScreen\\\"]||document[\\\"mozCancelFullScreen\\\"]||document[\\\"webkitCancelFullScreen\\\"]||document[\\\"msExitFullscreen\\\"]||document[\\\"exitFullscreen\\\"]||(function(){});canvas.cancelFullScreen=canvas.cancelFullScreen.bind(document);if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullScreen=true;if(Browser.resizeCanvas)Browser.setFullScreenCanvasSize()}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas)Browser.setWindowedCanvasSize()}if(Module[\\\"onFullScreen\\\"])Module[\\\"onFullScreen\\\"](Browser.isFullScreen);Browser.updateCanvasDimensions(canvas)}if(!Browser.fullScreenHandlersInstalled){Browser.fullScreenHandlersInstalled=true;document.addEventListener(\\\"fullscreenchange\\\",fullScreenChange,false);document.addEventListener(\\\"mozfullscreenchange\\\",fullScreenChange,false);document.addEventListener(\\\"webkitfullscreenchange\\\",fullScreenChange,false);document.addEventListener(\\\"MSFullscreenChange\\\",fullScreenChange,false)}var canvasContainer=document.createElement(\\\"div\\\");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullScreen=canvasContainer[\\\"requestFullScreen\\\"]||canvasContainer[\\\"mozRequestFullScreen\\\"]||canvasContainer[\\\"msRequestFullscreen\\\"]||(canvasContainer[\\\"webkitRequestFullScreen\\\"]?(function(){canvasContainer[\\\"webkitRequestFullScreen\\\"](Element[\\\"ALLOW_KEYBOARD_INPUT\\\"])}):null);if(vrDevice){canvasContainer.requestFullScreen({vrDisplay:vrDevice})}else{canvasContainer.requestFullScreen()}}),nextRAF:0,fakeRequestAnimationFrame:(function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)}),requestAnimationFrame:function requestAnimationFrame(func){if(typeof window===\\\"undefined\\\"){Browser.fakeRequestAnimationFrame(func)}else{if(!window.requestAnimationFrame){window.requestAnimationFrame=window[\\\"requestAnimationFrame\\\"]||window[\\\"mozRequestAnimationFrame\\\"]||window[\\\"webkitRequestAnimationFrame\\\"]||window[\\\"msRequestAnimationFrame\\\"]||window[\\\"oRequestAnimationFrame\\\"]||Browser.fakeRequestAnimationFrame}window.requestAnimationFrame(func)}},safeCallback:(function(func){return(function(){if(!ABORT)return func.apply(null,arguments)})}),allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=false}),resumeAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=true;if(Browser.queuedAsyncCallbacks.length>0){var callbacks=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[];callbacks.forEach((function(func){func()}))}}),safeRequestAnimationFrame:(function(func){return Browser.requestAnimationFrame((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}))}),safeSetTimeout:(function(func,timeout){Module[\\\"noExitRuntime\\\"]=true;return setTimeout((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}),timeout)}),safeSetInterval:(function(func,timeout){Module[\\\"noExitRuntime\\\"]=true;return setInterval((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}}),timeout)}),getMimetype:(function(name){return{\\\"jpg\\\":\\\"image/jpeg\\\",\\\"jpeg\\\":\\\"image/jpeg\\\",\\\"png\\\":\\\"image/png\\\",\\\"bmp\\\":\\\"image/bmp\\\",\\\"ogg\\\":\\\"audio/ogg\\\",\\\"wav\\\":\\\"audio/wav\\\",\\\"mp3\\\":\\\"audio/mpeg\\\"}[name.substr(name.lastIndexOf(\\\".\\\")+1)]}),getUserMedia:(function(func){if(!window.getUserMedia){window.getUserMedia=navigator[\\\"getUserMedia\\\"]||navigator[\\\"mozGetUserMedia\\\"]}window.getUserMedia(func)}),getMovementX:(function(event){return event[\\\"movementX\\\"]||event[\\\"mozMovementX\\\"]||event[\\\"webkitMovementX\\\"]||0}),getMovementY:(function(event){return event[\\\"movementY\\\"]||event[\\\"mozMovementY\\\"]||event[\\\"webkitMovementY\\\"]||0}),getMouseWheelDelta:(function(event){var delta=0;switch(event.type){case\\\"DOMMouseScroll\\\":delta=event.detail;break;case\\\"mousewheel\\\":delta=event.wheelDelta;break;case\\\"wheel\\\":delta=event[\\\"deltaY\\\"];break;default:throw\\\"unrecognized mouse wheel event: \\\"+event.type}return delta}),mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:(function(event){if(Browser.pointerLock){if(event.type!=\\\"mousemove\\\"&&\\\"mozMovementX\\\"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!=\\\"undefined\\\"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module[\\\"canvas\\\"].getBoundingClientRect();var cw=Module[\\\"canvas\\\"].width;var ch=Module[\\\"canvas\\\"].height;var scrollX=typeof window.scrollX!==\\\"undefined\\\"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!==\\\"undefined\\\"?window.scrollY:window.pageYOffset;if(event.type===\\\"touchstart\\\"||event.type===\\\"touchend\\\"||event.type===\\\"touchmove\\\"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type===\\\"touchstart\\\"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type===\\\"touchend\\\"||event.type===\\\"touchmove\\\"){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}}),xhrLoad:(function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\\\"GET\\\",url,true);xhr.responseType=\\\"arraybuffer\\\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)}),asyncLoad:(function(url,onload,onerror,noRunDep){Browser.xhrLoad(url,(function(arrayBuffer){assert(arrayBuffer,'Loading data file \\\"'+url+'\\\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(!noRunDep)removeRunDependency(\\\"al \\\"+url)}),(function(event){if(onerror){onerror()}else{throw'Loading data file \\\"'+url+'\\\" failed.'}}));if(!noRunDep)addRunDependency(\\\"al \\\"+url)}),resizeListeners:[],updateResizeListeners:(function(){var canvas=Module[\\\"canvas\\\"];Browser.resizeListeners.forEach((function(listener){listener(canvas.width,canvas.height)}))}),setCanvasSize:(function(width,height,noUpdates){var canvas=Module[\\\"canvas\\\"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()}),windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:(function(){if(typeof SDL!=\\\"undefined\\\"){var flags=HEAPU32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2];flags=flags|8388608;HEAP32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2]=flags}Browser.updateResizeListeners()}),setWindowedCanvasSize:(function(){if(typeof SDL!=\\\"undefined\\\"){var flags=HEAPU32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2];flags=flags&~8388608;HEAP32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2]=flags}Browser.updateResizeListeners()}),updateCanvasDimensions:(function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module[\\\"forcedAspectRatio\\\"]&&Module[\\\"forcedAspectRatio\\\"]>0){if(w/h<Module[\\\"forcedAspectRatio\\\"]){w=Math.round(h*Module[\\\"forcedAspectRatio\\\"])}else{h=Math.round(w/Module[\\\"forcedAspectRatio\\\"])}}if((document[\\\"webkitFullScreenElement\\\"]||document[\\\"webkitFullscreenElement\\\"]||document[\\\"mozFullScreenElement\\\"]||document[\\\"mozFullscreenElement\\\"]||document[\\\"fullScreenElement\\\"]||document[\\\"fullscreenElement\\\"]||document[\\\"msFullScreenElement\\\"]||document[\\\"msFullscreenElement\\\"]||document[\\\"webkitCurrentFullScreenElement\\\"])===canvas.parentNode&&typeof screen!=\\\"undefined\\\"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!=\\\"undefined\\\"){canvas.style.removeProperty(\\\"width\\\");canvas.style.removeProperty(\\\"height\\\")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!=\\\"undefined\\\"){if(w!=wNative||h!=hNative){canvas.style.setProperty(\\\"width\\\",w+\\\"px\\\",\\\"important\\\");canvas.style.setProperty(\\\"height\\\",h+\\\"px\\\",\\\"important\\\")}else{canvas.style.removeProperty(\\\"width\\\");canvas.style.removeProperty(\\\"height\\\")}}}}),wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:(function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle})};function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}function _pthread_self(){return 0}var _UItoD=true;function _malloc(bytes){var ptr=Runtime.dynamicAlloc(bytes+8);return ptr+8&4294967288}Module[\\\"_malloc\\\"]=_malloc;function ___cxa_allocate_exception(size){return _malloc(size)}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\\\"undefined\\\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}Module[\\\"requestFullScreen\\\"]=function Module_requestFullScreen(lockPointer,resizeCanvas,vrDevice){Browser.requestFullScreen(lockPointer,resizeCanvas,vrDevice)};Module[\\\"requestAnimationFrame\\\"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module[\\\"setCanvasSize\\\"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module[\\\"pauseMainLoop\\\"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module[\\\"resumeMainLoop\\\"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module[\\\"getUserMedia\\\"]=function Module_getUserMedia(){Browser.getUserMedia()};Module[\\\"createContext\\\"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes)};STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=true;STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);assert(DYNAMIC_BASE<TOTAL_MEMORY,\\\"TOTAL_MEMORY not big enough for stack\\\");var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],\\\"i8\\\",ALLOC_DYNAMIC);function invoke_iiii(index,a1,a2,a3){try{return Module[\\\"dynCall_iiii\\\"](index,a1,a2,a3)}catch(e){if(typeof e!==\\\"number\\\"&&e!==\\\"longjmp\\\")throw e;asm[\\\"setThrew\\\"](1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module[\\\"dynCall_viiiii\\\"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!==\\\"number\\\"&&e!==\\\"longjmp\\\")throw e;asm[\\\"setThrew\\\"](1,0)}}function invoke_vi(index,a1){try{Module[\\\"dynCall_vi\\\"](index,a1)}catch(e){if(typeof e!==\\\"number\\\"&&e!==\\\"longjmp\\\")throw e;asm[\\\"setThrew\\\"](1,0)}}function invoke_ii(index,a1){try{return Module[\\\"dynCall_ii\\\"](index,a1)}catch(e){if(typeof e!==\\\"number\\\"&&e!==\\\"longjmp\\\")throw e;asm[\\\"setThrew\\\"](1,0)}}function invoke_v(index){try{Module[\\\"dynCall_v\\\"](index)}catch(e){if(typeof e!==\\\"number\\\"&&e!==\\\"longjmp\\\")throw e;asm[\\\"setThrew\\\"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module[\\\"dynCall_viiiiii\\\"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!==\\\"number\\\"&&e!==\\\"longjmp\\\")throw e;asm[\\\"setThrew\\\"](1,0)}}function invoke_iii(index,a1,a2){try{return Module[\\\"dynCall_iii\\\"](index,a1,a2)}catch(e){if(typeof e!==\\\"number\\\"&&e!==\\\"longjmp\\\")throw e;asm[\\\"setThrew\\\"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){try{Module[\\\"dynCall_viiii\\\"](index,a1,a2,a3,a4)}catch(e){if(typeof e!==\\\"number\\\"&&e!==\\\"longjmp\\\")throw e;asm[\\\"setThrew\\\"](1,0)}}Module.asmGlobalArg={\\\"Math\\\":Math,\\\"Int8Array\\\":Int8Array,\\\"Int16Array\\\":Int16Array,\\\"Int32Array\\\":Int32Array,\\\"Uint8Array\\\":Uint8Array,\\\"Uint16Array\\\":Uint16Array,\\\"Uint32Array\\\":Uint32Array,\\\"Float32Array\\\":Float32Array,\\\"Float64Array\\\":Float64Array,\\\"NaN\\\":NaN,\\\"Infinity\\\":Infinity,\\\"byteLength\\\":byteLength};Module.asmLibraryArg={\\\"abort\\\":abort,\\\"assert\\\":assert,\\\"invoke_iiii\\\":invoke_iiii,\\\"invoke_viiiii\\\":invoke_viiiii,\\\"invoke_vi\\\":invoke_vi,\\\"invoke_ii\\\":invoke_ii,\\\"invoke_v\\\":invoke_v,\\\"invoke_viiiiii\\\":invoke_viiiiii,\\\"invoke_iii\\\":invoke_iii,\\\"invoke_viiii\\\":invoke_viiii,\\\"_pthread_cleanup_pop\\\":_pthread_cleanup_pop,\\\"___syscall6\\\":___syscall6,\\\"___setErrNo\\\":___setErrNo,\\\"___assert_fail\\\":___assert_fail,\\\"___cxa_allocate_exception\\\":___cxa_allocate_exception,\\\"___cxa_find_matching_catch\\\":___cxa_find_matching_catch,\\\"_emscripten_set_main_loop_timing\\\":_emscripten_set_main_loop_timing,\\\"_sbrk\\\":_sbrk,\\\"_emscripten_memcpy_big\\\":_emscripten_memcpy_big,\\\"___resumeException\\\":___resumeException,\\\"__ZSt18uncaught_exceptionv\\\":__ZSt18uncaught_exceptionv,\\\"_sysconf\\\":_sysconf,\\\"_pthread_self\\\":_pthread_self,\\\"___syscall140\\\":___syscall140,\\\"___syscall54\\\":___syscall54,\\\"_emscripten_set_main_loop\\\":_emscripten_set_main_loop,\\\"_tan\\\":_tan,\\\"___cxa_throw\\\":___cxa_throw,\\\"_abort\\\":_abort,\\\"_pthread_cleanup_push\\\":_pthread_cleanup_push,\\\"_time\\\":_time,\\\"_sqrt\\\":_sqrt,\\\"___syscall146\\\":___syscall146,\\\"STACKTOP\\\":STACKTOP,\\\"STACK_MAX\\\":STACK_MAX,\\\"tempDoublePtr\\\":tempDoublePtr,\\\"ABORT\\\":ABORT,\\\"cttz_i8\\\":cttz_i8};// EMSCRIPTEN_START_ASM\\r\\nvar asm=(function(global,env,buffer) {\\r\\n\\\"use asm\\\";var a=global.Int8Array;var b=global.Int16Array;var c=global.Int32Array;var d=global.Uint8Array;var e=global.Uint16Array;var f=global.Uint32Array;var g=global.Float32Array;var h=global.Float64Array;var i=new a(buffer);var j=new b(buffer);var k=new c(buffer);var l=new d(buffer);var m=new e(buffer);var n=new f(buffer);var o=new g(buffer);var p=new h(buffer);var q=global.byteLength;var r=env.STACKTOP|0;var s=env.STACK_MAX|0;var t=env.tempDoublePtr|0;var u=env.ABORT|0;var v=env.cttz_i8|0;var w=0;var x=0;var y=0;var z=0;var A=global.NaN,B=global.Infinity;var C=0,D=0,E=0,F=0,G=0.0,H=0,I=0,J=0,K=0.0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=0;var U=0;var V=global.Math.floor;var W=global.Math.abs;var X=global.Math.sqrt;var Y=global.Math.pow;var Z=global.Math.cos;var _=global.Math.sin;var $=global.Math.tan;var aa=global.Math.acos;var ba=global.Math.asin;var ca=global.Math.atan;var da=global.Math.atan2;var ea=global.Math.exp;var fa=global.Math.log;var ga=global.Math.ceil;var ha=global.Math.imul;var ia=global.Math.min;var ja=global.Math.clz32;var ka=env.abort;var la=env.assert;var ma=env.invoke_iiii;var na=env.invoke_viiiii;var oa=env.invoke_vi;var pa=env.invoke_ii;var qa=env.invoke_v;var ra=env.invoke_viiiiii;var sa=env.invoke_iii;var ta=env.invoke_viiii;var ua=env._pthread_cleanup_pop;var va=env.___syscall6;var wa=env.___setErrNo;var xa=env.___assert_fail;var ya=env.___cxa_allocate_exception;var za=env.___cxa_find_matching_catch;var Aa=env._emscripten_set_main_loop_timing;var Ba=env._sbrk;var Ca=env._emscripten_memcpy_big;var Da=env.___resumeException;var Ea=env.__ZSt18uncaught_exceptionv;var Fa=env._sysconf;var Ga=env._pthread_self;var Ha=env.___syscall140;var Ia=env.___syscall54;var Ja=env._emscripten_set_main_loop;var Ka=env._tan;var La=env.___cxa_throw;var Ma=env._abort;var Na=env._pthread_cleanup_push;var Oa=env._time;var Pa=env._sqrt;var Qa=env.___syscall146;var Ra=0.0;function Sa(newBuffer){if(q(newBuffer)&16777215||q(newBuffer)<=16777215||q(newBuffer)>2147483648)return false;i=new a(newBuffer);j=new b(newBuffer);k=new c(newBuffer);l=new d(newBuffer);m=new e(newBuffer);n=new f(newBuffer);o=new g(newBuffer);p=new h(newBuffer);buffer=newBuffer;return true}\\r\\n// EMSCRIPTEN_START_FUNCS\\r\\nfunction mc(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0,f=0,g=0,h=0.0,l=0.0,m=0.0,n=0,o=0,q=0,s=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0.0,S=0,T=0,U=0,V=0,W=0,Y=0,Z=0,_=0,aa=0.0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,za=0,Aa=0;Aa=r;r=r+2992|0;oa=Aa+192|0;ua=Aa+184|0;ma=Aa+168|0;la=Aa+160|0;ea=Aa+136|0;ja=Aa+120|0;fa=Aa+64|0;_=Aa+32|0;Q=Aa;wa=Aa+2964|0;va=Aa+2920|0;ra=Aa+220|0;ha=Aa+2960|0;sa=Aa+2976|0;k[wa>>2]=0;za=wa+4|0;k[za>>2]=0;k[wa+8>>2]=0;d=k[b>>2]|0;ba=b+4|0;w=k[ba>>2]|0;if((d|0)!=(w|0)){x=wa+8|0;do{v=d+4|0;f=k[d>>2]|0;e=(k[v>>2]|0)-f>>3;if(e){q=0;do{u=q;q=q+1|0;o=f+(u<<3)|0;do if(q>>>0<e>>>0){e=f+(q<<3)|0;n=k[za>>2]|0;if(n>>>0<(k[x>>2]|0)>>>0){k[n>>2]=0;k[n+4>>2]=0;k[n+8>>2]=0;k[n+12>>2]=0;k[n>>2]=k[o>>2];k[n+4>>2]=k[f+(u<<3)+4>>2];k[n+8>>2]=k[e>>2];k[n+12>>2]=k[f+(q<<3)+4>>2];k[za>>2]=n+16;break}else{yc(wa,o,e);break}}else{e=k[za>>2]|0;if(e>>>0<(k[x>>2]|0)>>>0){k[e>>2]=0;k[e+4>>2]=0;k[e+8>>2]=0;k[e+12>>2]=0;k[e>>2]=k[o>>2];k[e+4>>2]=k[f+(u<<3)+4>>2];k[e+8>>2]=k[f>>2];k[e+12>>2]=k[f+4>>2];k[za>>2]=e+16;break}else{yc(wa,o,f);break}}while(0);f=k[d>>2]|0;e=(k[v>>2]|0)-f>>3}while(q>>>0<e>>>0)}d=d+12|0}while((d|0)!=(w|0))}n=(k[87]|0)>-1;a:do if(!1){d=1021;na=16}else{e=1021;d=1021;while(1){if(!(i[e>>0]|0))break a;e=e+1|0;d=e;if(!(d&3)){d=e;na=16;break}}}while(0);if((na|0)==16){while(1){e=k[d>>2]|0;if(!((e&-2139062144^-2139062144)&e+-16843009))d=d+4|0;else break}if((e&255)<<24>>24)do d=d+1|0;while((i[d>>0]|0)!=0)}f=d-1021|0;d=k[72]|0;e=(d|0)==0;b:do if(n){do if(e){d=i[346]|0;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;d=e+(k[80]|0)|0;k[72]=d;break}else{k[68]=d|32;d=0;na=38;break b}}else e=k[73]|0;while(0);if((d-e|0)>>>0<f>>>0){d=Ta[k[308>>2]&7](272,1021,f)|0;na=38;break}else{fe(e|0,1021,f|0)|0;k[73]=(k[73]|0)+f;na=40;break}}else{do if(e){d=i[346]|0;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;d=e+(k[80]|0)|0;k[72]=d;break}else{k[68]=d|32;d=0;na=38;break b}}else e=k[73]|0;while(0);if((d-e|0)>>>0<f>>>0){d=Ta[k[308>>2]&7](272,1021,f)|0;na=38;break}else{fe(e|0,1021,f|0)|0;k[73]=(k[73]|0)+f;na=40;break}}while(0);if((na|0)==38)if(!((d|0)!=(f|0)?((d>>>0)/(f>>>0)|0|0)<1:0))na=40;do if((na|0)==40){f=i[347]|0;if(f<<24>>24!=10){d=k[73]|0;e=k[72]|0;if(d>>>0<e>>>0){k[73]=d+1;i[d>>0]=10;break}}else e=k[72]|0;i[oa>>0]=10;do if(!e){f=j[173]|0;d=(f&65535)<<24>>24;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;n=k[79]|0;k[75]=n;k[73]=n;e=n+(k[80]|0)|0;k[72]=e;d=(f&65535)>>>8&255;na=49;break}else{k[68]=d|32;break}}else{n=k[73]|0;d=f;na=49}while(0);do if((na|0)==49)if(n>>>0>=e>>>0|d<<24>>24==10){Ta[k[308>>2]&7](272,oa,1)|0;break}else{k[73]=n+1;i[n>>0]=10;break}while(0)}while(0);o=va;q=o+36|0;do{k[o>>2]=0;o=o+4|0}while((o|0)<(q|0));S=ra+4|0;k[S>>2]=0;U=ra+8|0;k[U>>2]=0;k[ra+12>>2]=0;V=ra+20|0;k[V>>2]=0;k[V+4>>2]=0;k[V+8>>2]=0;i[V+12>>0]=0;V=ra+36|0;k[V>>2]=0;k[V+4>>2]=0;k[V+8>>2]=0;j[V+12>>1]=0;V=ra+52|0;k[V>>2]=V;k[ra+56>>2]=V;V=ra+60|0;k[V>>2]=0;W=ra+64|0;i[oa>>0]=0;i[oa+1>>0]=0;i[oa+2>>0]=0;T=ra+68|0;k[T>>2]=0;Y=ra+72|0;k[Y>>2]=0;Z=ra+76|0;i[Z>>0]=i[oa>>0]|0;i[Z+1>>0]=i[oa+1>>0]|0;i[Z+2>>0]=i[oa+2>>0]|0;Z=ra+68|0;k[W>>2]=Z;v=ra+2696|0;k[v>>2]=0;d=k[wa>>2]|0;w=k[za>>2]|0;c:do if((d|0)!=(w|0)){x=ra+4|0;y=oa+8|0;z=oa+16|0;A=oa+24|0;B=ra+12|0;C=fa+8|0;D=fa+16|0;E=fa+24|0;F=_+8|0;G=_+16|0;H=_+24|0;I=Q+8|0;J=Q+16|0;K=Q+24|0;e=0;f=0;while(1){n=k[d>>2]|0;o=k[d+4>>2]|0;q=k[d+8>>2]|0;u=k[d+12>>2]|0;na=oa;k[na>>2]=n;k[na+4>>2]=o;na=y;k[na>>2]=n;k[na+4>>2]=o;k[z>>2]=0;k[A>>2]=0;if(e>>>0<f>>>0){k[e>>2]=k[oa>>2];k[e+4>>2]=k[oa+4>>2];k[e+8>>2]=k[oa+8>>2];k[e+12>>2]=k[oa+12>>2];k[e+16>>2]=k[oa+16>>2];k[e+20>>2]=k[oa+20>>2];k[e+24>>2]=k[oa+24>>2];e=(k[U>>2]|0)+28|0;k[U>>2]=e}else{pd(x,oa);e=k[U>>2]|0}k[e+-8>>2]=k[v>>2];na=e+-4|0;k[na>>2]=k[na>>2]|1;na=fa;k[na>>2]=q;k[na+4>>2]=u;na=C;k[na>>2]=q;k[na+4>>2]=u;k[D>>2]=0;k[E>>2]=0;if(e>>>0<(k[B>>2]|0)>>>0){k[e>>2]=k[fa>>2];k[e+4>>2]=k[fa+4>>2];k[e+8>>2]=k[fa+8>>2];k[e+12>>2]=k[fa+12>>2];k[e+16>>2]=k[fa+16>>2];k[e+20>>2]=k[fa+20>>2];k[e+24>>2]=k[fa+24>>2];e=(k[U>>2]|0)+28|0;k[U>>2]=e}else{pd(x,fa);e=k[U>>2]|0}k[e+-8>>2]=k[v>>2];na=e+-4|0;k[na>>2]=k[na>>2]|2;if((n|0)==(q|0))if((o|0)<(u|0))na=64;else na=68;else if((n|0)<(q|0))na=64;else na=68;if((na|0)==64){na=0;f=_;k[f>>2]=n;k[f+4>>2]=o;o=F;k[o>>2]=q;k[o+4>>2]=u;k[G>>2]=0;k[H>>2]=0;if(e>>>0<(k[B>>2]|0)>>>0){k[e>>2]=k[_>>2];k[e+4>>2]=k[_+4>>2];k[e+8>>2]=k[_+8>>2];k[e+12>>2]=k[_+12>>2];k[e+16>>2]=k[_+16>>2];k[e+20>>2]=k[_+20>>2];k[e+24>>2]=k[_+24>>2];e=(k[U>>2]|0)+28|0;k[U>>2]=e}else{pd(x,_);e=k[U>>2]|0}u=e+-4|0;k[u>>2]=k[u>>2]|8}else if((na|0)==68){na=0;f=Q;k[f>>2]=q;k[f+4>>2]=u;u=I;k[u>>2]=n;k[u+4>>2]=o;k[J>>2]=0;k[K>>2]=0;if(e>>>0<(k[B>>2]|0)>>>0){k[e>>2]=k[Q>>2];k[e+4>>2]=k[Q+4>>2];k[e+8>>2]=k[Q+8>>2];k[e+12>>2]=k[Q+12>>2];k[e+16>>2]=k[Q+16>>2];k[e+20>>2]=k[Q+20>>2];k[e+24>>2]=k[Q+24>>2];e=(k[U>>2]|0)+28|0;k[U>>2]=e}else{pd(x,Q);e=k[U>>2]|0}u=e+-4|0;k[u>>2]=k[u>>2]|9}u=k[v>>2]|0;k[e+-8>>2]=u;k[v>>2]=u+1;d=d+16|0;if((d|0)==(w|0))break c;f=k[B>>2]|0}}while(0);n=(k[87]|0)>-1;d:do if(!3){d=1023;na=77}else{e=1023;d=1023;while(1){if(!(i[e>>0]|0))break d;e=e+1|0;d=e;if(!(d&3)){d=e;na=77;break}}}while(0);if((na|0)==77){while(1){e=k[d>>2]|0;if(!((e&-2139062144^-2139062144)&e+-16843009))d=d+4|0;else break}if((e&255)<<24>>24)do d=d+1|0;while((i[d>>0]|0)!=0)}f=d-1023|0;d=k[72]|0;e=(d|0)==0;e:do if(n){do if(e){d=i[346]|0;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;d=e+(k[80]|0)|0;k[72]=d;break}else{k[68]=d|32;d=0;na=99;break e}}else e=k[73]|0;while(0);if((d-e|0)>>>0<f>>>0){d=Ta[k[308>>2]&7](272,1023,f)|0;na=99;break}else{fe(e|0,1023,f|0)|0;k[73]=(k[73]|0)+f;na=101;break}}else{do if(e){d=i[346]|0;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;d=e+(k[80]|0)|0;k[72]=d;break}else{k[68]=d|32;d=0;na=99;break e}}else e=k[73]|0;while(0);if((d-e|0)>>>0<f>>>0){d=Ta[k[308>>2]&7](272,1023,f)|0;na=99;break}else{fe(e|0,1023,f|0)|0;k[73]=(k[73]|0)+f;na=101;break}}while(0);if((na|0)==99)if(!((d|0)!=(f|0)?((d>>>0)/(f>>>0)|0|0)<1:0))na=101;do if((na|0)==101){f=i[347]|0;if(f<<24>>24!=10){d=k[73]|0;e=k[72]|0;if(d>>>0<e>>>0){k[73]=d+1;i[d>>0]=10;break}}else e=k[72]|0;i[oa>>0]=10;do if(!e){f=j[173]|0;d=(f&65535)<<24>>24;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;n=k[79]|0;k[75]=n;k[73]=n;e=n+(k[80]|0)|0;k[72]=e;d=(f&65535)>>>8&255;na=110;break}else{k[68]=d|32;break}}else{n=k[73]|0;d=f;na=110}while(0);do if((na|0)==110)if(n>>>0>=e>>>0|d<<24>>24==10){Ta[k[308>>2]&7](272,oa,1)|0;break}else{k[73]=n+1;i[n>>0]=10;break}while(0)}while(0);x=k[U>>2]|0;y=k[S>>2]|0;z=(x-y|0)/28|0;A=va+8|0;o=k[va>>2]|0;d=o;if((((k[A>>2]|0)-d|0)/12|0)>>>0<z>>>0){q=va+4|0;f=(k[q>>2]|0)-d|0;n=(f|0)/12|0;if((x|0)==(y|0))d=0;else{e=z*12|0;d=_d(e)|0;f:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break f}Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}while(0)}Q=d+((((f|0)/-12|0)+n|0)*12|0)|0;fe(Q|0,o|0,f|0)|0;k[va>>2]=Q;k[q>>2]=d+(n*12|0);k[A>>2]=d+(z*12|0);if(o)$d(o)}o=va+12|0;q=z<<1;u=va+20|0;v=k[o>>2]|0;d=v;if((((k[u>>2]|0)-d|0)/24|0)>>>0<q>>>0){w=va+16|0;f=(k[w>>2]|0)-d|0;n=(f|0)/24|0;if((x|0)==(y|0))d=0;else{e=z*48|0;e=(e|0)==0?1:e;d=_d(e)|0;g:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break g}Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}while(0)}Q=d+((((f|0)/-24|0)+n|0)*24|0)|0;fe(Q|0,v|0,f|0)|0;k[o>>2]=Q;k[w>>2]=d+(n*24|0);k[u>>2]=d+(q*24|0);if(v)$d(v)}o=va+24|0;q=z*6|0;u=va+32|0;v=k[o>>2]|0;d=v;if((((k[u>>2]|0)-d|0)/24|0)>>>0<q>>>0){w=va+28|0;f=(k[w>>2]|0)-d|0;n=(f|0)/24|0;if((x|0)==(y|0))d=0;else{e=z*144|0;e=(e|0)==0?1:e;d=_d(e)|0;h:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break h}Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}while(0)}Q=d+((((f|0)/-24|0)+n|0)*24|0)|0;fe(Q|0,v|0,f|0)|0;k[o>>2]=Q;k[w>>2]=d+(n*24|0);k[u>>2]=d+(q*24|0);if(v)$d(v)}kd(k[S>>2]|0,k[U>>2]|0);n=k[S>>2]|0;d=k[U>>2]|0;i:do if((n|0)!=(d|0)){e=n+28|0;if((e|0)!=(d|0)){f=n;while(1){if((((k[f>>2]|0)==(k[f+28>>2]|0)?(k[f+4>>2]|0)==(k[f+32>>2]|0):0)?(k[f+8>>2]|0)==(k[f+36>>2]|0):0)?(k[f+12>>2]|0)==(k[f+40>>2]|0):0){na=148;break i}f=e+28|0;if((f|0)==(d|0))break;else{Q=e;e=f;f=Q}}}}else{f=n;na=148}while(0);if((na|0)==148)if((f|0)!=(d|0)){e=f+56|0;if((e|0)==(d|0))e=n;else{n=f;f=f+28|0;while(1){if((((k[n>>2]|0)==(k[e>>2]|0)?(k[n+4>>2]|0)==(k[f+32>>2]|0):0)?(k[n+8>>2]|0)==(k[f+36>>2]|0):0)?(k[n+12>>2]|0)==(k[f+40>>2]|0):0)f=n;else{f=n+28|0;k[f>>2]=k[e>>2];k[f+4>>2]=k[e+4>>2];k[f+8>>2]=k[e+8>>2];k[f+12>>2]=k[e+12>>2];k[f+16>>2]=k[e+16>>2];k[f+20>>2]=k[e+20>>2];k[f+24>>2]=k[e+24>>2]}n=e+28|0;if((n|0)==(d|0))break;else{Q=e;e=n;n=f;f=Q}}d=k[U>>2]|0;e=k[S>>2]|0}n=f+28|0;o=n;if((n|0)!=(d|0)){e=e+((((d-o|0)/28|0)+((o-e|0)/28|0)|0)*28|0)|0;d=d-e|0;he(n|0,e|0,d|0)|0;d=f+((((d|0)/28|0)+1|0)*28|0)|0;e=k[U>>2]|0;if((e|0)!=(d|0)){d=e+(~(((e+-28-d|0)>>>0)/28|0)*28|0)|0;k[U>>2]=d}}}o=k[S>>2]|0;e=o;if((d|0)!=(o|0)){f=(d-e|0)/28|0;n=0;do{k[o+(n*28|0)+16>>2]=n;n=n+1|0}while(n>>>0<f>>>0)}k[ra+16>>2]=e;do if((o|0)==(d|0)){u=ra+16|0;d=o}else{if((d-e|0)==28){d=k[o+24>>2]&31;k[oa>>2]=k[o+20>>2];k[oa+4>>2]=0;k[oa+8>>2]=d;d=va+4|0;e=k[d>>2]|0;if(e>>>0<(k[A>>2]|0)>>>0){k[e>>2]=k[oa>>2];k[e+4>>2]=k[oa+4>>2];k[e+8>>2]=k[oa+8>>2];k[d>>2]=(k[d>>2]|0)+12}else gd(va,oa);u=ra+16|0;d=(k[u>>2]|0)+28|0;k[u>>2]=d;break}x=ra+16|0;if((o|0)!=(d|0)){f=k[o>>2]|0;n=o;e=0;do{if((k[n>>2]|0)!=(f|0)){d=n;break}if((f|0)!=(k[n+8>>2]|0)){d=n;break}n=n+28|0;k[x>>2]=n;e=e+1|0}while((n|0)!=(d|0));if((e|0)==1){k[fa>>2]=Z;k[oa>>2]=k[fa>>2];dd(ra,o,o,o+28|0,oa,va)|0;d=(k[x>>2]|0)+28|0;k[x>>2]=d;u=x;break}else e=d}else e=d;d=o+28|0;j:do if((d|0)==(e|0))d=e;else{w=fa+28|0;v=o;k:while(1){k[fa>>2]=k[v>>2];k[fa+4>>2]=k[v+4>>2];k[fa+8>>2]=k[v+8>>2];k[fa+12>>2]=k[v+12>>2];k[fa+16>>2]=k[v+16>>2];k[fa+20>>2]=k[v+20>>2];k[fa+24>>2]=k[v+24>>2];k[w>>2]=k[d>>2];k[w+4>>2]=k[d+4>>2];k[w+8>>2]=k[d+8>>2];k[w+12>>2]=k[d+12>>2];k[w+16>>2]=k[d+16>>2];k[w+20>>2]=k[d+20>>2];k[w+24>>2]=k[d+24>>2];ed(_,va,v,d);u=k[_>>2]|0;e=_d(80)|0;if(!e)do{e=k[35]|0;k[35]=e+0;if(!e)break k;Xa[e&0]();e=_d(80)|0}while((e|0)==0);f=e+16|0;o=f;n=fa;q=o+56|0;do{k[o>>2]=k[n>>2];o=o+4|0;n=n+4|0}while((o|0)<(q|0));n=e+72|0;k[n>>2]=0;k[n+4>>2]=u;n=fd(W,Z,oa,f)|0;f=k[n>>2]|0;do if(!f){f=k[oa>>2]|0;k[e>>2]=0;k[e+4>>2]=0;k[e+8>>2]=f;k[n>>2]=e;f=k[k[W>>2]>>2]|0;if(f){k[W>>2]=f;e=k[n>>2]|0}Nb(k[T>>2]|0,e);k[Y>>2]=(k[Y>>2]|0)+1}else{if((f|0)==(e|0))break;$d(e)}while(0);d=d+28|0;if((d|0)==(k[x>>2]|0))break j;else v=v+28|0}Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}while(0);u=x}while(0);o=ra+36|0;q=ra+40|0;n=k[o>>2]|0;e=k[q>>2]|0;l:while(1){f=(d|0)==(k[U>>2]|0);do if((n|0)!=(e|0)){if(f){Kc(ra,va);break}I=(k[n>>2]|0)+24|0;K=k[I>>2]|0;I=k[I+4>>2]|0;p[t>>3]=+(k[d>>2]|0);J=k[t>>2]|0;H=k[t+4>>2]|0;S=(H|0)>-1|(H|0)==-1&J>>>0>4294967295;Q=be(0,-2147483648,J|0,H|0)|0;J=S?Q:J;H=S?L:H;S=(I|0)>-1|(I|0)==-1&K>>>0>4294967295;Q=be(0,-2147483648,K|0,I|0)|0;K=S?Q:K;I=S?L:I;S=be(J|0,H|0,K|0,I|0)|0;Q=L;_=be(K|0,I|0,J|0,H|0)|0;T=L;if(((H>>>0>I>>>0|(H|0)==(I|0)&J>>>0>K>>>0?(Q>>>0>0|(Q|0)==0&S>>>0>64)<<31>>31:(T>>>0>0|(T|0)==0&_>>>0>64)&1)|0)==-1){Jc(ra,va);break}else{Kc(ra,va);break}}else{if(f)break l;Jc(ra,va)}while(0);d=k[o>>2]|0;e=k[q>>2]|0;m:do if((d|0)==(e|0))e=d;else while(1){n=k[d>>2]|0;if(i[n+32>>0]|0)break m;f=e-d|0;if((f|0)>4){_=e+-4|0;k[d>>2]=k[_>>2];k[_>>2]=n;Lc(d,(f>>2)+-1|0,d);d=k[q>>2]|0}else d=e;k[q>>2]=d+-4;d=n+4|0;e=k[n>>2]|0;k[e+4>>2]=k[d>>2];k[k[d>>2]>>2]=e;k[V>>2]=(k[V>>2]|0)+-1;$d(n);d=k[o>>2]|0;e=k[q>>2]|0;if((d|0)==(e|0)){e=d;break}}while(0);n=d;d=k[u>>2]|0}Cc(k[Z>>2]|0);k[Y>>2]=0;k[W>>2]=Z;k[Z>>2]=0;Y=va+24|0;e=k[Y>>2]|0;f=e;Z=va+28|0;d=k[Z>>2]|0;if((e|0)==(d|0)){n=f;d=e;f=e}else{n=f;v=f;while(1){f=k[e+4>>2]|0;u=k[e+8>>2]|0;o=k[u+4>>2]|0;q=f;if(((f|0)!=0&(o|0)!=0?(K=f,S=k[K>>2]|0,K=k[K+4>>2]|0,Q=o,T=k[Q>>2]|0,Q=k[Q+4>>2]|0,V=(K|0)>-1|(K|0)==-1&S>>>0>4294967295,U=be(0,-2147483648,S|0,K|0)|0,S=V?U:S,K=V?L:K,V=(Q|0)>-1|(Q|0)==-1&T>>>0>4294967295,U=be(0,-2147483648,T|0,Q|0)|0,T=V?U:T,Q=V?L:Q,V=be(S|0,K|0,T|0,Q|0)|0,U=L,_=be(T|0,Q|0,S|0,K|0)|0,W=L,((K>>>0>Q>>>0|(K|0)==(Q|0)&S>>>0>T>>>0?(U>>>0>0|(U|0)==0&V>>>0>128)<<31>>31:(W>>>0>0|(W|0)==0&_>>>0>128)&1)|0)==0):0)?(K=f+8|0,S=k[K>>2]|0,K=k[K+4>>2]|0,Q=o+8|0,T=k[Q>>2]|0,Q=k[Q+4>>2]|0,V=(K|0)>-1|(K|0)==-1&S>>>0>4294967295,U=be(0,-2147483648,S|0,K|0)|0,S=V?U:S,K=V?L:K,V=(Q|0)>-1|(Q|0)==-1&T>>>0>4294967295,U=be(0,-2147483648,T|0,Q|0)|0,T=V?U:T,Q=V?L:Q,V=be(S|0,K|0,T|0,Q|0)|0,U=L,_=be(T|0,Q|0,S|0,K|0)|0,W=L,((K>>>0>Q>>>0|(K|0)==(Q|0)&S>>>0>T>>>0?(U>>>0>0|(U|0)==0&V>>>0>128)<<31>>31:(W>>>0>0|(W|0)==0&_>>>0>128)&1)|0)==0):0){f=k[(k[u+16>>2]|0)+8>>2]|0;if((f|0)==(u|0))f=u;else{o=f;do{k[o+4>>2]=q;o=k[(k[o+16>>2]|0)+8>>2]|0}while((o|0)!=(u|0))}W=k[u+12>>2]|0;_=k[(k[u+8>>2]|0)+12>>2]|0;V=k[(k[(k[e+16>>2]|0)+8>>2]|0)+8>>2]|0;k[V+12>>2]=_;k[_+16>>2]=V;_=k[f+8>>2]|0;k[W+16>>2]=_;k[_+12>>2]=W}else{o=n;do if((e|0)!=(o|0)){f=n;d=v;k[f>>2]=k[d>>2];k[f+4>>2]=k[d+4>>2];k[f+8>>2]=k[d+8>>2];k[f+12>>2]=k[d+12>>2];k[f+16>>2]=k[d+16>>2];k[f+20>>2]=k[d+20>>2];f=o+24|0;d=e+24|0;k[f>>2]=k[d>>2];k[f+4>>2]=k[d+4>>2];k[f+8>>2]=k[d+8>>2];k[f+12>>2]=k[d+12>>2];k[f+16>>2]=k[d+16>>2];k[f+20>>2]=k[d+20>>2];k[o+8>>2]=f;k[o+32>>2]=o;d=k[o+16>>2]|0;if(d){k[d+12>>2]=o;k[(k[o+36>>2]|0)+16>>2]=f}d=o+40|0;if(!(k[d>>2]|0))break;k[(k[o+12>>2]|0)+16>>2]=o;k[(k[d>>2]|0)+12>>2]=f}while(0);n=o+48|0;d=k[Z>>2]|0}f=v+48|0;if((f|0)==(d|0))break;else{e=f;v=f}}f=k[Y>>2]|0}e=n;if((e|0)!=(d|0)){_=f+((((d-n|0)/24|0)+((n-f|0)/24|0)|0)*24|0)|0;d=d-_|0;he(n|0,_|0,d|0)|0;d=e+(((d|0)/24|0)*24|0)|0;e=k[Z>>2]|0;if((e|0)!=(d|0)){d=e+(~(((e+-24-d|0)>>>0)/24|0)*24|0)|0;k[Z>>2]=d}}e=k[Y>>2]|0;if((e|0)!=(d|0))do{k[(k[e>>2]|0)+4>>2]=e;f=k[e+4>>2]|0;if(f)k[f+16>>2]=e;e=e+24|0}while((e|0)!=(d|0));V=va+12|0;f=k[V>>2]|0;e=f;W=va+16|0;d=k[W>>2]|0;if((f|0)==(d|0)){d=f;n=f}else{n=f;do{if(k[n+16>>2]|0){f=e;if((n|0)!=(f|0)){d=e;k[d>>2]=k[n>>2];k[d+4>>2]=k[n+4>>2];k[d+8>>2]=k[n+8>>2];k[d+12>>2]=k[n+12>>2];k[d+16>>2]=k[n+16>>2];k[d+20>>2]=k[n+20>>2];d=k[f+16>>2]|0;e=d;do{k[e+4>>2]=f;e=k[(k[e+16>>2]|0)+8>>2]|0}while((e|0)!=(d|0))}e=f+24|0;d=k[W>>2]|0}n=n+24|0}while((n|0)!=(d|0));n=k[V>>2]|0}f=e;if((f|0)!=(d|0)){_=n+((((d-e|0)/24|0)+((e-n|0)/24|0)|0)*24|0)|0;d=d-_|0;he(e|0,_|0,d|0)|0;d=f+(((d|0)/24|0)*24|0)|0;e=k[W>>2]|0;if((e|0)!=(d|0)){d=e+(~(((e+-24-d|0)>>>0)/24|0)*24|0)|0;k[W>>2]=d}}if((k[V>>2]|0)==(d|0)){w=k[Y>>2]|0;e=w;q=k[Z>>2]|0;if((w|0)!=(q|0)){k[w+12>>2]=w;k[w+16>>2]=w;d=w+24|0;n=w+48|0;f=w+36|0;if((n|0)==(q|0))e=w;else{u=(((q+-96-e|0)>>>0)/48|0)<<1;v=u+3|0;o=w+(v*24|0)+12|0;e=w;while(1){k[f>>2]=n;k[e+40>>2]=n;k[e+60>>2]=d;k[e+64>>2]=d;d=n+48|0;if((d|0)==(q|0))break;else{_=n;n=d;f=e+84|0;d=e+72|0;e=_}}f=o;e=w+((u+2|0)*24|0)|0;d=w+(v*24|0)|0}k[f>>2]=d;k[e+40>>2]=d}}else{d=k[va>>2]|0;q=k[va+4>>2]|0;if((d|0)!=(q|0))do{n=k[d+4>>2]|0;do if(n){e=n;while(1){f=e;e=k[e+16>>2]|0;if(!e)break;if((e|0)==(n|0)){na=251;break}}if((na|0)==251){na=0;if(!(k[n+16>>2]|0))f=n;else break}while(1){e=n+12|0;o=k[e>>2]|0;if(!o)break;else n=o}k[f+16>>2]=n;k[e>>2]=f}while(0);d=d+12|0}while((d|0)!=(q|0))}k[ha>>2]=0;n=(k[87]|0)>-1;n:do if(!1){d=1025;na=259}else{e=1025;d=1025;while(1){if(!(i[e>>0]|0))break n;e=e+1|0;d=e;if(!(d&3)){d=e;na=259;break}}}while(0);if((na|0)==259){while(1){e=k[d>>2]|0;if(!((e&-2139062144^-2139062144)&e+-16843009))d=d+4|0;else break}if((e&255)<<24>>24)do d=d+1|0;while((i[d>>0]|0)!=0)}f=d-1025|0;d=k[72]|0;e=(d|0)==0;o:do if(n){do if(e){d=i[346]|0;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;d=e+(k[80]|0)|0;k[72]=d;break}else{k[68]=d|32;d=0;na=281;break o}}else e=k[73]|0;while(0);if((d-e|0)>>>0<f>>>0){d=Ta[k[308>>2]&7](272,1025,f)|0;na=281;break}else{fe(e|0,1025,f|0)|0;k[73]=(k[73]|0)+f;na=283;break}}else{do if(e){d=i[346]|0;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;d=e+(k[80]|0)|0;k[72]=d;break}else{k[68]=d|32;d=0;na=281;break o}}else e=k[73]|0;while(0);if((d-e|0)>>>0<f>>>0){d=Ta[k[308>>2]&7](272,1025,f)|0;na=281;break}else{fe(e|0,1025,f|0)|0;k[73]=(k[73]|0)+f;na=283;break}}while(0);do if((na|0)==281){if((d|0)==(f|0)){na=283;break}if(((d>>>0)/(f>>>0)|0|0)>=1)na=283}while(0);p:do if((na|0)==283){f=i[347]|0;do if(f<<24>>24==10)e=k[72]|0;else{d=k[73]|0;e=k[72]|0;if(d>>>0>=e>>>0)break;k[73]=d+1;i[d>>0]=10;break p}while(0);i[oa>>0]=10;do if(!e){f=j[173]|0;d=(f&65535)<<24>>24;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;n=k[79]|0;k[75]=n;k[73]=n;e=n+(k[80]|0)|0;k[72]=e;d=(f&65535)>>>8&255;na=292;break}else{k[68]=d|32;break}}else{n=k[73]|0;d=f;na=292}while(0);do if((na|0)==292)if(n>>>0>=e>>>0|d<<24>>24==10){Ta[k[308>>2]&7](272,oa,1)|0;break}else{k[73]=n+1;i[n>>0]=10;break}while(0)}while(0);d=k[b>>2]|0;G=k[ba>>2]|0;q:do if(d>>>0<G>>>0){f=0;e=0;r:while(1){F=k[d>>2]|0;E=F;F=(k[d+4>>2]|0)-F>>3;if(F){D=0;do{q=D;D=D+1|0;C=D>>>0<F>>>0;v=C?E+(D<<3)|0:E;o=k[E+(q<<3)>>2]|0;q=k[E+(q<<3)+4>>2]|0;n=k[v>>2]|0;v=k[v+4>>2]|0;do if((o|0)!=(n|0)|(q|0)!=(v|0)){do if((o|0)<=(n|0)){if((o|0)!=(n|0)){u=o;w=q;o=v;v=1;na=302;break}if((q|0)<=(v|0)){u=o;n=o;o=v;v=1;na=303}else{u=n;w=v;n=o;o=q;v=-1;na=302}}else{u=n;w=v;n=o;o=q;v=-1;na=302}while(0);if((na|0)==302){na=0;if((u|0)==(n|0)){q=w;na=303}else{q=w;B=o}}if((na|0)==303){na=0;B=o;v=0-v|0}o=e;w=k[ha>>2]|0;if(o>>>0<w>>>0){i[o>>0]=0;i[o+1>>0]=0;i[o+2>>0]=0;k[o+4>>2]=0;k[o+8>>2]=0;k[o+12>>2]=0;k[o+16>>2]=u;k[o+20>>2]=q;k[o+24>>2]=0;k[o+28>>2]=n;k[o+32>>2]=B;k[o+36>>2]=0;k[o+40>>2]=v;e=o+44|0;break}A=f;z=e-f|0;y=(z|0)/44|0;x=y+1|0;if(x>>>0>97612893){na=308;break r}e=(w-f|0)/44|0;if(e>>>0<48806446){e=e<<1;e=e>>>0<x>>>0?x:e;if(!e){w=0;o=0}else na=311}else{e=97612893;na=311}if((na|0)==311){na=0;w=e*44|0;w=(w|0)==0?1:w;o=_d(w)|0;if(!o)do{o=k[35]|0;k[35]=o+0;if(!o){na=314;break r}Xa[o&0]();o=_d(w)|0}while((o|0)==0);w=e}e=o+(y*44|0)|0;i[e>>0]=0;i[e+1>>0]=0;i[e+2>>0]=0;k[e+4>>2]=0;k[e+8>>2]=0;k[e+12>>2]=0;k[e+16>>2]=u;k[e+20>>2]=q;k[e+24>>2]=0;k[e+28>>2]=n;k[e+32>>2]=B;k[e+36>>2]=0;k[e+40>>2]=v;e=o+(x*44|0)|0;ba=o+((((z|0)/-44|0)+y|0)*44|0)|0;n=ba;fe(ba|0,A|0,z|0)|0;k[ha>>2]=o+(w*44|0);if(!f){f=n;break}$d(A);f=n}while(0)}while(C)}d=d+12|0;if(d>>>0>=G>>>0){g=f;ca=e;break q}}if((na|0)==308)xa(1340,1363,303,1438);else if((na|0)==314){Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}}else{g=0;ca=0}while(0);n=(k[87]|0)>-1;s:do if(!3){d=1027;na=322}else{e=1027;d=1027;while(1){if(!(i[e>>0]|0))break s;e=e+1|0;d=e;if(!(d&3)){d=e;na=322;break}}}while(0);if((na|0)==322){while(1){e=k[d>>2]|0;if(!((e&-2139062144^-2139062144)&e+-16843009))d=d+4|0;else break}if((e&255)<<24>>24)do d=d+1|0;while((i[d>>0]|0)!=0)}f=d-1027|0;d=k[72]|0;e=(d|0)==0;t:do if(n){do if(e){d=i[346]|0;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;d=e+(k[80]|0)|0;k[72]=d;break}else{k[68]=d|32;d=0;na=344;break t}}else e=k[73]|0;while(0);if((d-e|0)>>>0<f>>>0){d=Ta[k[308>>2]&7](272,1027,f)|0;na=344;break}else{fe(e|0,1027,f|0)|0;k[73]=(k[73]|0)+f;na=346;break}}else{do if(e){d=i[346]|0;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;d=e+(k[80]|0)|0;k[72]=d;break}else{k[68]=d|32;d=0;na=344;break t}}else e=k[73]|0;while(0);if((d-e|0)>>>0<f>>>0){d=Ta[k[308>>2]&7](272,1027,f)|0;na=344;break}else{fe(e|0,1027,f|0)|0;k[73]=(k[73]|0)+f;na=346;break}}while(0);do if((na|0)==344){if((d|0)==(f|0)){na=346;break}if(((d>>>0)/(f>>>0)|0|0)>=1)na=346}while(0);u:do if((na|0)==346){f=i[347]|0;do if(f<<24>>24==10)e=k[72]|0;else{d=k[73]|0;e=k[72]|0;if(d>>>0>=e>>>0)break;k[73]=d+1;i[d>>0]=10;break u}while(0);i[oa>>0]=10;do if(!e){f=j[173]|0;d=(f&65535)<<24>>24;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;n=k[79]|0;k[75]=n;k[73]=n;e=n+(k[80]|0)|0;k[72]=e;d=(f&65535)>>>8&255;na=355;break}else{k[68]=d|32;break}}else{n=k[73]|0;d=f;na=355}while(0);do if((na|0)==355)if(n>>>0>=e>>>0|d<<24>>24==10){Ta[k[308>>2]&7](272,oa,1)|0;break}else{k[73]=n+1;i[n>>0]=10;break}while(0)}while(0);d=g;if((ca|0)!=(d|0)){e=(ca-g|0)/44|0;f=0;do{i[d+(f*44|0)>>0]=1;f=f+1|0}while(f>>>0<e>>>0)}d=k[Y>>2]|0;e=k[Z>>2]|0;if((d|0)!=(e|0)){f=d;do{ba=f+20|0;k[ba>>2]=k[ba>>2]&31;f=f+24|0}while((f|0)!=(e|0))}k[ja>>2]=(e-d|0)/24|0;Nd(1029,ja);e=k[Z>>2]|0;d=k[Y>>2]|0;v:do if((e|0)!=(d|0)){f=ca;D=0;w:while(1){n=d+(D*24|0)+20|0;o=k[n>>2]|0;do if(o&2){u=k[d+(D*24|0)+4>>2]|0;if(!u)break;q=k[d+(D*24|0)+8>>2]|0;v=k[q+4>>2]|0;if(!((v|0)!=0&(o&32|0)==0))break;k[n>>2]=o&31|32;d=q+20|0;k[d>>2]=k[d>>2]&31|32;h=+p[u>>3];p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);C=~~h;h=+p[u+8>>3];p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);B=~~h;h=+p[v>>3];p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);e=~~h;h=+p[v+8>>3];p[t>>3]=h;d=k[t+4>>2]|0;n=de(k[t>>2]|0,d|0,52)|0;n=n&2047;do if(n>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(n>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);y=~~h;u=f;d=k[ha>>2]|0;do if(u>>>0<d>>>0){i[u>>0]=0;i[u+1>>0]=0;i[u+2>>0]=0;k[u+4>>2]=0;k[u+8>>2]=0;k[u+12>>2]=0;d=u+16|0;f=u+16|0;k[f>>2]=C;k[u+20>>2]=B;k[u+24>>2]=0;n=u+28|0;o=u+28|0;k[o>>2]=e;k[u+32>>2]=y;k[u+36>>2]=0;q=u+40|0;k[q>>2]=1;do if((C|0)<=(e|0)){if((C|0)!=(e|0)){f=C;d=1;na=406;break}if((B|0)<=(y|0)){d=1;na=407}else na=405}else na=405;while(0);if((na|0)==405){k[oa>>2]=k[d>>2];k[oa+4>>2]=k[d+4>>2];k[oa+8>>2]=k[d+8>>2];k[d>>2]=k[n>>2];k[d+4>>2]=k[n+4>>2];k[d+8>>2]=k[n+8>>2];k[n>>2]=k[oa>>2];k[n+4>>2]=k[oa+4>>2];k[n+8>>2]=k[oa+8>>2];k[q>>2]=-1;f=k[f>>2]|0;e=k[o>>2]|0;d=-1;na=406}if((na|0)==406?(na=0,(f|0)==(e|0)):0)na=407;if((na|0)==407){na=0;k[q>>2]=0-d}f=u+44|0}else{A=g;z=f-g|0;x=(z|0)/44|0;w=x+1|0;if(w>>>0>97612893){na=410;break w}d=(d-g|0)/44|0;if(d>>>0<48806446){n=d<<1;n=n>>>0<w>>>0?w:n}else n=97612893;f=n*44|0;f=(f|0)==0?1:f;d=_d(f)|0;if(!d)while(1){d=k[35]|0;k[35]=d+0;if(!d){na=416;break w}Xa[d&0]();d=_d(f)|0;if(d){u=d;break}}else u=d;v=u+(n*44|0)|0;i[u+(x*44|0)>>0]=0;i[u+(x*44|0)+1>>0]=0;i[u+(x*44|0)+2>>0]=0;k[u+(x*44|0)+4>>2]=0;k[u+(x*44|0)+8>>2]=0;k[u+(x*44|0)+12>>2]=0;d=u+(x*44|0)+16|0;f=u+(x*44|0)+16|0;k[f>>2]=C;k[u+(x*44|0)+20>>2]=B;k[u+(x*44|0)+24>>2]=0;n=u+(x*44|0)+28|0;o=u+(x*44|0)+28|0;k[o>>2]=e;k[u+(x*44|0)+32>>2]=y;k[u+(x*44|0)+36>>2]=0;q=u+(x*44|0)+40|0;k[q>>2]=1;do if((C|0)<=(e|0)){if((C|0)!=(e|0)){f=C;d=1;na=421;break}if((B|0)<=(y|0)){d=1;na=422}else na=420}else na=420;while(0);if((na|0)==420){k[oa>>2]=k[d>>2];k[oa+4>>2]=k[d+4>>2];k[oa+8>>2]=k[d+8>>2];k[d>>2]=k[n>>2];k[d+4>>2]=k[n+4>>2];k[d+8>>2]=k[n+8>>2];k[n>>2]=k[oa>>2];k[n+4>>2]=k[oa+4>>2];k[n+8>>2]=k[oa+8>>2];k[q>>2]=-1;f=k[f>>2]|0;e=k[o>>2]|0;d=-1;na=421}if((na|0)==421?(na=0,(f|0)==(e|0)):0)na=422;if((na|0)==422){na=0;k[q>>2]=0-d}f=u+(w*44|0)|0;ca=u+((((z|0)/-44|0)+x|0)*44|0)|0;d=ca;fe(ca|0,A|0,z|0)|0;k[ha>>2]=v;if(!g){g=d;break}$d(A);g=d}while(0);k[f+-32>>2]=D;e=k[Z>>2]|0;d=k[Y>>2]|0}while(0);D=D+1|0;if(D>>>0>=((e-d|0)/24|0)>>>0){ga=g;da=f;break v}}if((na|0)==410)xa(1340,1363,303,1438);else if((na|0)==416){Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}}else{ga=g;da=ca}while(0);f=da;F=ga;z=(da-ga|0)/44|0;k[ea>>2]=z;Nd(1050,ea);k[oa>>2]=0;G=oa+4|0;k[G>>2]=0;k[oa+8>>2]=0;x=oa+8|0;y=(f|0)!=(F|0);if(y){e=z*24|0;d=_d(e)|0;x:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break x}Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}while(0);da=d;g=d+(z*24|0)|0;k[oa>>2]=da;k[G>>2]=da;k[x>>2]=g}else{g=0;d=0}y:do if((f|0)!=(F|0)){n=ea+4|0;o=ea+8|0;q=ea+12|0;u=ea+16|0;v=ea+16|0;w=ea+20|0;e=0;while(1){f=k[F+(e*44|0)+16>>2]|0;b=k[F+(e*44|0)+20>>2]|0;ba=k[F+(e*44|0)+28>>2]|0;da=k[F+(e*44|0)+32>>2]|0;ca=k[F+(e*44|0)+40>>2]|0;k[ea>>2]=f;k[n>>2]=b;k[o>>2]=ba;k[q>>2]=da;da=u;k[da>>2]=e;k[da+4>>2]=ca;if(d>>>0<g>>>0){k[d>>2]=f;k[d+4>>2]=k[n>>2];k[d+8>>2]=k[o>>2];k[d+12>>2]=k[q>>2];k[d+16>>2]=k[v>>2];k[d+20>>2]=k[w>>2];k[G>>2]=d+24}else Db(oa,ea);e=e+1|0;if(e>>>0>=z>>>0)break y;d=k[G>>2]|0;g=k[x>>2]|0}}while(0);k[ja>>2]=0;E=ja+4|0;k[E>>2]=0;k[ja+8>>2]=0;f=ja+8|0;if(y){e=z*24|0;d=_d(e)|0;z:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break z}Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}while(0);ea=d;k[ja>>2]=ea;k[E>>2]=ea;k[f>>2]=d+(z*24|0)}Eb(ja,k[oa>>2]|0,k[G>>2]|0);D=k[E>>2]|0;o=k[ja>>2]|0;f=(D-o|0)/24|0;n=(D|0)==(o|0);A:do if(!n){e=f*44|0;e=(e|0)==0?1:e;d=_d(e)|0;do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d){na=451;break}Xa[d&0]();d=_d(e)|0;if(d){na=452;break}}if((na|0)==451){Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}else if((na|0)==452){g=d;f=d+(f*44|0)|0;e=f;if(n){ta=g;ia=e;ka=g;break A}else break}}else{f=d+(f*44|0)|0;e=f;g=d}while(0);n=g;B:while(1){w=F+((k[o+16>>2]|0)*44|0)|0;k[fa>>2]=k[w>>2];k[fa+4>>2]=k[w+4>>2];k[fa+8>>2]=k[w+8>>2];k[fa+12>>2]=k[w+12>>2];v=k[w+24>>2]|0;w=k[w+36>>2]|0;x=k[o>>2]|0;y=k[o+4>>2]|0;z=k[o+8>>2]|0;A=k[o+12>>2]|0;B=k[o+20>>2]|0;do if((d|0)==(f|0)){C=n;u=g-n|0;q=(u|0)/44|0;g=q+1|0;if(g>>>0>97612893){na=457;break B}d=(e-n|0)/44|0;if(d>>>0<48806446){d=d<<1;d=d>>>0<g>>>0?g:d;if(!d){d=0;f=0}else na=460}else{d=97612893;na=460}if((na|0)==460){na=0;f=d*44|0;f=(f|0)==0?1:f;e=_d(f)|0;if(!e)do{e=k[35]|0;k[35]=e+0;if(!e){na=463;break B}Xa[e&0]();e=_d(f)|0}while((e|0)==0);f=e}e=f+(d*44|0)|0;ea=f+(q*44|0)|0;k[ea>>2]=k[fa>>2];k[ea+4>>2]=k[fa+4>>2];k[ea+8>>2]=k[fa+8>>2];k[ea+12>>2]=k[fa+12>>2];k[ea+16>>2]=x;k[ea+20>>2]=y;k[ea+24>>2]=v;k[ea+28>>2]=z;k[ea+32>>2]=A;k[ea+36>>2]=w;k[ea+40>>2]=B;g=f+(g*44|0)|0;ea=f+((((u|0)/-44|0)+q|0)*44|0)|0;d=ea;fe(ea|0,C|0,u|0)|0;if(!n){n=d;break}$d(C);n=d}else{k[d>>2]=k[fa>>2];k[d+4>>2]=k[fa+4>>2];k[d+8>>2]=k[fa+8>>2];k[d+12>>2]=k[fa+12>>2];k[d+16>>2]=x;k[d+20>>2]=y;k[d+24>>2]=v;k[d+28>>2]=z;k[d+32>>2]=A;k[d+36>>2]=w;k[d+40>>2]=B;g=d+44|0}while(0);d=o+24|0;if((d|0)==(D|0)){ta=n;ia=e;ka=g;break A}o=d;d=g;f=e}if((na|0)==457)xa(1340,1363,303,1438);else if((na|0)==463){Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}}else{ta=0;ia=0;ka=0}while(0);if(ga){$d(F);k[ha>>2]=0}k[ha>>2]=ia;d=k[ja>>2]|0;e=d;if(d){f=k[E>>2]|0;if((f|0)!=(d|0))k[E>>2]=f+(~(((f+-24-e|0)>>>0)/24|0)*24|0);$d(d)}d=k[oa>>2]|0;e=d;if(d){f=k[G>>2]|0;if((f|0)!=(d|0))k[G>>2]=f+(~(((f+-24-e|0)>>>0)/24|0)*24|0);$d(d)}T=ka;U=ta;J=(ka-ta|0)/44|0;k[la>>2]=J;Nd(1070,la);k[oa>>2]=3;Ac(U,T,oa);k[ma>>2]=J;Nd(1090,ma);J=(U|0)==(T|0);do if(!J){I=ma+4|0;d=ta;z=0;y=0;g=U;q=0;o=0;e=k[U+16>>2]|0;f=0;n=0;u=0;C:while(1){D:do if((g|0)==(T|0))if((q|0)==(o|0)){na=575;break C}else H=u;else{w=g;v=f;g=u;while(1){if((k[w+16>>2]|0)!=(e|0)){f=v;H=g;break D};k[I>>2]=0;k[I+4>>2]=0;i[I+8>>0]=0;i[la>>0]=0;d=n;do if((d|0)==(g|0)){u=n-v|0;n=u>>5;o=n+1|0;if(o>>>0>134217727){na=487;break C}if(n>>>0<67108863){g=u>>4;g=g>>>0<o>>>0?o:g}else g=134217727;f=g<<5;f=(f|0)==0?1:f;d=_d(f)|0;if(!d)do{d=k[35]|0;k[35]=d+0;if(!d){na=493;break C}Xa[d&0]();d=_d(f)|0}while((d|0)==0);q=d+(g<<5)|0;k[d+(n<<5)>>2]=0;k[d+(n<<5)+4>>2]=0;k[d+(n<<5)+8>>2]=w;f=d+(n<<5)+12|0;k[f>>2]=k[ma>>2];k[f+4>>2]=k[ma+4>>2];k[f+8>>2]=k[ma+8>>2];i[f+12>>0]=i[ma+12>>0]|0;i[d+(n<<5)+25>>0]=1;n=d+(n<<5)+26|0;j[n>>1]=j[la>>1]|0;j[n+2>>1]=j[la+2>>1]|0;j[n+4>>1]=j[la+4>>1]|0;n=d+(o<<5)|0;f=d;g=v;fe(d|0,g|0,u|0)|0;if(!v){g=q;break}$d(g);g=q}else{k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=w;f=d+12|0;k[f>>2]=k[ma>>2];k[f+4>>2]=k[ma+4>>2];k[f+8>>2]=k[ma+8>>2];i[f+12>>0]=i[ma+12>>0]|0;i[d+25>>0]=1;f=d+26|0;j[f>>1]=j[la>>1]|0;j[f+2>>1]=j[la+2>>1]|0;j[f+4>>1]=j[la+4>>1]|0;f=v;n=d+32|0}while(0);w=w+44|0;d=w;if((w|0)==(T|0)){H=g;break}else v=f}}while(0);G=f;F=n;w=(G|0)==(F|0);E:do if(w){k[oa>>2]=4;Ec(G,F,oa);u=z;q=y;o=G}else{s=+(e|0);x=G;do{g=k[x+8>>2]|0;o=k[g+20>>2]|0;v=g+28|0;q=k[v>>2]|0;u=k[g+32>>2]|0;do if((o|0)==(u|0)){h=+(o|0);g=g+16|0}else{g=g+16|0;m=+(k[g>>2]|0);h=+(o|0);l=s-m;if(l==0.0)break;h=h+(+(u|0)-h)*l/(+(q|0)-m)}while(0);p[x+16>>3]=h;if((e|0)==(k[g>>2]|0))g=1;else g=(e|0)==(k[v>>2]|0);i[x+24>>0]=g&1;x=x+32|0}while((x|0)!=(F|0));k[oa>>2]=4;Ec(G,F,oa);if(w){u=z;q=y;o=G;break}else{x=z;E=G;g=f}while(1){q=E+32|0;o=q;F:do if(!((i[E+24>>0]|0)==0|(q|0)==(F|0))){v=E+16|0;u=E;while(1){if(!(i[u+56>>0]|0))break F;if(!(+p[u+48>>3]==+p[v>>3]))break F;u=q+32|0;o=u;if((u|0)==(F|0))break;else{ka=q;q=u;u=ka}}}while(0);q=g;D=q>>>0<o>>>0;if(D){u=q;do{w=k[u+8>>2]|0;v=k[w+16>>2]|0;w=w+28|0;if((v|0)!=(k[w>>2]|0)){i[u+25>>0]=(e|0)==(v|0)&1;i[u+26>>0]=(e|0)==(k[w>>2]|0)&1}u=u+32|0}while(u>>>0<o>>>0)}G:do if((q|0)==(o|0))w=x;else{C=o+25|0;u=q;w=x;v=y;while(1){x=u;H:do if((u|0)==(o|0)){u=x;na=521}else while(1){y=k[u+8>>2]|0;z=i[u+25>>0]|0;if((k[y+16>>2]|0)==(k[y+28>>2]|0))break H;x=z<<24>>24==0;if(!x)k[u>>2]=w;do if(i[y>>0]|0){if(x)v=v+(k[y+40>>2]|0)|0;if(i[u+26>>0]|0)break;w=w+(k[y+40>>2]|0)|0}while(0);if(!x)k[u+4>>2]=w;u=u+32|0;x=u;if((u|0)==(o|0)){u=x;na=521;break}}while(0);if((na|0)==521){na=0;x=u;z=i[C>>0]|0;u=o}B=(x|0)==(o|0);I:do if(!B){A=x;do{y=k[A+8>>2]|0;if((k[y+16>>2]|0)!=(k[y+28>>2]|0))break;if((i[A+25>>0]|0)!=z<<24>>24)break;k[A>>2]=v;if(i[y>>0]|0)v=v+(k[y+40>>2]|0)|0;k[A+4>>2]=v;A=A+32|0}while((A|0)!=(o|0));if(B)break;else y=x;do{x=k[y+8>>2]|0;if((k[x+16>>2]|0)!=(k[x+28>>2]|0))break I;if((i[y+25>>0]|0)!=z<<24>>24)break I;if(i[x>>0]|0)v=v-(k[x+40>>2]|0)|0;y=y+32|0}while((y|0)!=(o|0))}while(0);if((u|0)==(o|0)){y=v;break G}while(1){ka=k[u+8>>2]|0;if((k[ka+16>>2]|0)!=(k[ka+28>>2]|0))break;if((i[u+25>>0]|0)!=z<<24>>24)break;u=u+32|0;if((u|0)==(o|0)){y=v;break G}}if((u|0)==(o|0)){y=v;break}}}while(0);if((E|0)!=(o|0)){u=E;do{if(!(k[u>>2]|0))v=0;else v=(k[u+4>>2]|0)!=0;i[(k[u+8>>2]|0)+1>>0]=v&1;u=u+32|0}while((u|0)!=(o|0))}J:do if(D)while(1){ka=k[q+8>>2]|0;if((k[ka+16>>2]|0)==(k[ka+28>>2]|0)?(i[q+26>>0]|0)==0:0){u=g;break J}q=q+32|0;g=q;if(q>>>0>=o>>>0){u=g;break}}else u=g;while(0);E=u;if(E>>>0<o>>>0){g=E;do{p[g+16>>3]=+(k[(k[g+8>>2]|0)+32>>2]|0);i[g+25>>0]=0;i[g+26>>0]=1;g=g+32|0}while(g>>>0<o>>>0)}if((E|0)==(F|0)){e=G;break}else{x=w;g=u}}while(1){if(i[e+26>>0]|0)break;e=e+32|0;if((e|0)==(F|0)){u=w;q=y;o=F;break E}}if((e|0)==(F|0)){u=w;q=y;o=F;break}g=e+32|0;if((g|0)!=(F|0)){o=e;q=e;while(1){if(!(i[o+58>>0]|0)){k[q>>2]=k[g>>2];k[q+4>>2]=k[g+4>>2];k[q+8>>2]=k[g+8>>2];k[q+12>>2]=k[g+12>>2];k[q+16>>2]=k[g+16>>2];k[q+20>>2]=k[g+20>>2];j[q+24>>1]=j[g+24>>1]|0;i[q+26>>0]=i[g+26>>0]|0;q=e+32|0;e=q}o=g+32|0;if((o|0)==(F|0))break;else{ka=g;g=o;o=ka}}}g=e;if((e|0)==(F|0)){u=w;q=y;o=F;break}ja=G+((g-f>>5)+(u-g>>5)<<5)|0;ka=u-ja|0;he(e|0,ja|0,ka|0)|0;e=e+(ka>>5<<5)|0;if((F|0)==(e|0)){u=w;q=y;o=F;break}n=F+(~((F+-32-e|0)>>>5)<<5)|0;u=w;q=y;o=n}while(0);if((G|0)==(o|0))e=2147483647;else{g=G;e=2147483647;do{ka=k[(k[g+8>>2]|0)+28>>2]|0;e=(ka|0)<(e|0)?ka:e;g=g+32|0}while((g|0)!=(o|0))}g=d;if((g|0)==(T|0)){z=u;y=q;q=G;u=H;continue}ka=k[g+16>>2]|0;z=u;y=q;q=G;e=(ka|0)<(e|0)?ka:e;u=H}if((na|0)==487)xa(1340,1363,303,1438);else if((na|0)==493){Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}else if((na|0)==575){if(!o)break;$d(o);break}}while(0);g=(k[87]|0)>-1;K:do if(!2){d=1110;na=580}else{e=1110;d=1110;while(1){if(!(i[e>>0]|0))break K;e=e+1|0;d=e;if(!(d&3)){d=e;na=580;break}}}while(0);if((na|0)==580){while(1){e=k[d>>2]|0;if(!((e&-2139062144^-2139062144)&e+-16843009))d=d+4|0;else break}if((e&255)<<24>>24)do d=d+1|0;while((i[d>>0]|0)!=0)}f=d-1110|0;d=k[72]|0;e=(d|0)==0;L:do if(g){do if(e){d=i[346]|0;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;d=e+(k[80]|0)|0;k[72]=d;break}else{k[68]=d|32;d=0;na=602;break L}}else e=k[73]|0;while(0);if((d-e|0)>>>0<f>>>0){d=Ta[k[308>>2]&7](272,1110,f)|0;na=602;break}else{fe(e|0,1110,f|0)|0;k[73]=(k[73]|0)+f;na=604;break}}else{do if(e){d=i[346]|0;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;d=e+(k[80]|0)|0;k[72]=d;break}else{k[68]=d|32;d=0;na=602;break L}}else e=k[73]|0;while(0);if((d-e|0)>>>0<f>>>0){d=Ta[k[308>>2]&7](272,1110,f)|0;na=602;break}else{fe(e|0,1110,f|0)|0;k[73]=(k[73]|0)+f;na=604;break}}while(0);do if((na|0)==602){if((d|0)==(f|0)){na=604;break}if(((d>>>0)/(f>>>0)|0|0)>=1)na=604}while(0);M:do if((na|0)==604){f=i[347]|0;do if(f<<24>>24==10)e=k[72]|0;else{d=k[73]|0;e=k[72]|0;if(d>>>0>=e>>>0)break;k[73]=d+1;i[d>>0]=10;break M}while(0);i[oa>>0]=10;do if(!e){f=j[173]|0;d=(f&65535)<<24>>24;i[346]=d+255|d;d=k[68]|0;if(!(d&8)){k[70]=0;k[69]=0;g=k[79]|0;k[75]=g;k[73]=g;e=g+(k[80]|0)|0;k[72]=e;d=(f&65535)>>>8&255;na=613;break}else{k[68]=d|32;break}}else{g=k[73]|0;d=f;na=613}while(0);do if((na|0)==613)if(g>>>0>=e>>>0|d<<24>>24==10){Ta[k[308>>2]&7](272,oa,1)|0;break}else{k[73]=g+1;i[g>>0]=10;break}while(0)}while(0);k[a>>2]=0;S=a+4|0;k[S>>2]=0;k[a+8>>2]=0;do if(!J){aa=c*.5;K=a+8|0;Q=U;N:while(1){O:do if(!(i[Q>>0]|0)){if(!(i[Q+1>>0]|0))break;n=k[Q+12>>2]|0;o=k[Y>>2]|0;A=k[o+(n*24|0)>>2]|0;g=k[o+(n*24|0)+8>>2]|0;z=k[g>>2]|0;f=k[o+(n*24|0)+4>>2]|0;h=+p[f>>3];p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);C=~~h;h=+p[f+8>>3];p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);B=~~h;f=k[g+4>>2]|0;h=+p[f>>3];p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);J=~~h;h=+p[f+8>>3];p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);I=~~h;if(!(k[o+(n*24|0)+20>>2]&1)){d=k[A+8>>2]|0;f=k[A>>2]|0;if(!(d&24)){ma=(d&31|0)==1;d=k[wa>>2]|0;g=k[z>>2]|0;o=d+(g<<4)+12|0;q=d+(g<<4)+8|0;n=d+(g<<4)+4|0;g=d+(g<<4)|0;e=ma?d+(f<<4)+4|0:d+(f<<4)+12|0;d=ma?d+(f<<4)|0:d+(f<<4)+8|0}else{la=(k[z+8>>2]&31|0)==1;d=k[z>>2]|0;ma=k[wa>>2]|0;o=ma+(f<<4)+12|0;q=ma+(f<<4)+8|0;n=ma+(f<<4)+4|0;g=ma+(f<<4)|0;e=la?ma+(d<<4)+4|0:ma+(d<<4)+12|0;d=la?ma+(d<<4)|0:ma+(d<<4)+8|0}H=k[d>>2]|0;G=k[e>>2]|0;F=k[g>>2]|0;E=k[n>>2]|0;n=(k[q>>2]|0)-F|0;e=(k[o>>2]|0)-E|0;ma=C-F|0;ka=B-E|0;D=((n|0)<0)<<31>>31;ma=ne(ma|0,((ma|0)<0)<<31>>31|0,n|0,D|0)|0;la=L;d=((e|0)<0)<<31>>31;ka=ne(ka|0,((ka|0)<0)<<31>>31|0,e|0,d|0)|0;la=ge(ka|0,L|0,ma|0,la|0)|0;M=+(n|0);N=+(e|0);P=M*M+N*N;O=(+(la>>>0)+4294967296.0*+(L|0))/P;la=J-F|0;ma=I-E|0;D=ne(la|0,((la|0)<0)<<31>>31|0,n|0,D|0)|0;n=L;d=ne(ma|0,((ma|0)<0)<<31>>31|0,e|0,d|0)|0;n=ge(d|0,L|0,D|0,n|0)|0;P=(+(n>>>0)+4294967296.0*+(L|0))/P-O;R=+$(+aa);n=C;D=B;d=0;e=0;while(1){u=e;while(1){s=O+P*+(d>>>0)/20.0;h=M*s;p[t>>3]=h;e=k[t+4>>2]|0;f=de(k[t>>2]|0,e|0,52)|0;f=f&2047;do if(f>>>0<=1074){e=(e|0)<0;m=e?-h:h;if(f>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=e?-h:h}while(0);g=~~h+F|0;h=N*s;p[t>>3]=h;e=k[t+4>>2]|0;f=de(k[t>>2]|0,e|0,52)|0;f=f&2047;do if(f>>>0<=1074){e=(e|0)<0;m=e?-h:h;if(f>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=e?-h:h}while(0);o=~~h+E|0;h=+(H-g|0);c=+(G-o|0);s=h*h+c*c;c=(N*h-M*c)*2.0;h=N*s/c;p[t>>3]=h;e=k[t+4>>2]|0;f=de(k[t>>2]|0,e|0,52)|0;f=f&2047;do if(f>>>0<=1074){e=(e|0)<0;m=e?-h:h;if(f>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=e?-h:h}while(0);g=~~h+g|0;h=M*s/c;p[t>>3]=h;e=k[t+4>>2]|0;f=de(k[t>>2]|0,e|0,52)|0;f=f&2047;do if(f>>>0<=1074){e=(e|0)<0;m=e?-h:h;if(f>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=e?-h:h}while(0);B=(d|0)==20;C=B?J:g;B=B?I:o-~~h|0;c=+(C-H|0);h=+(B-G|0);h=+X(+(c*c+h*h))/R;p[t>>3]=h;e=k[t+4>>2]|0;f=de(k[t>>2]|0,e|0,52)|0;f=f&2047;do if(f>>>0<=1074){e=(e|0)<0;m=e?-h:h;if(f>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=e?-h:h}while(0);e=0-~~h|0;if(!d){d=1;u=e}else break}v=k[S>>2]|0;f=k[K>>2]|0;do if(v>>>0<f>>>0){i[v>>0]=0;i[v+1>>0]=0;i[v+2>>0]=0;k[v+4>>2]=0;k[v+8>>2]=0;k[v+12>>2]=0;g=v+16|0;o=v+16|0;k[o>>2]=n;k[v+20>>2]=D;k[v+24>>2]=u;f=v+28|0;q=v+28|0;k[q>>2]=C;k[v+32>>2]=B;k[v+36>>2]=e;u=v+40|0;k[u>>2]=1;do if((n|0)<=(C|0)){if((n|0)!=(C|0)){g=C;f=1;na=805;break}if((D|0)<=(B|0)){f=1;na=806}else na=804}else na=804;while(0);if((na|0)==804){k[oa>>2]=k[g>>2];k[oa+4>>2]=k[g+4>>2];k[oa+8>>2]=k[g+8>>2];k[g>>2]=k[f>>2];k[g+4>>2]=k[f+4>>2];k[g+8>>2]=k[f+8>>2];k[f>>2]=k[oa>>2];k[f+4>>2]=k[oa+4>>2];k[f+8>>2]=k[oa+8>>2];k[u>>2]=-1;n=k[o>>2]|0;g=k[q>>2]|0;f=-1;na=805}if((na|0)==805?(na=0,(n|0)==(g|0)):0)na=806;if((na|0)==806){na=0;k[u>>2]=0-f}k[S>>2]=v+44}else{A=k[a>>2]|0;g=A;x=v-g|0;y=(x|0)/44|0;z=y+1|0;if(z>>>0>97612893){na=809;break N}f=(f-g|0)/44|0;if(f>>>0<48806446){f=f<<1;f=f>>>0<z>>>0?z:f;if(!f){f=0;g=0}else na=812}else{f=97612893;na=812}if((na|0)==812){o=f*44|0;o=(o|0)==0?1:o;g=_d(o)|0;if(!g)do{g=k[35]|0;k[35]=g+0;if(!g){na=815;break N}Xa[g&0]();g=_d(o)|0}while((g|0)==0)}w=g+(f*44|0)|0;i[g+(y*44|0)>>0]=0;i[g+(y*44|0)+1>>0]=0;i[g+(y*44|0)+2>>0]=0;k[g+(y*44|0)+4>>2]=0;k[g+(y*44|0)+8>>2]=0;k[g+(y*44|0)+12>>2]=0;q=g+(y*44|0)+16|0;k[q>>2]=n;k[g+(y*44|0)+20>>2]=D;k[g+(y*44|0)+24>>2]=u;f=g+(y*44|0)+28|0;k[f>>2]=C;k[g+(y*44|0)+32>>2]=B;k[g+(y*44|0)+36>>2]=e;v=g+(y*44|0)+40|0;k[v>>2]=1;o=g+(y*44|0)+16|0;u=g+(y*44|0)+28|0;do if((n|0)<=(C|0)){if((n|0)!=(C|0)){o=C;f=1;na=821;break}if((D|0)<=(B|0)){f=1;na=822}else na=820}else na=820;while(0);if((na|0)==820){k[oa>>2]=k[q>>2];k[oa+4>>2]=k[q+4>>2];k[oa+8>>2]=k[q+8>>2];k[q>>2]=k[f>>2];k[q+4>>2]=k[f+4>>2];k[q+8>>2]=k[f+8>>2];k[f>>2]=k[oa>>2];k[f+4>>2]=k[oa+4>>2];k[f+8>>2]=k[oa+8>>2];k[v>>2]=-1;n=k[o>>2]|0;o=k[u>>2]|0;f=-1;na=821}if((na|0)==821?(na=0,(n|0)==(o|0)):0)na=822;if((na|0)==822){na=0;k[v>>2]=0-f}ma=g+((((x|0)/-44|0)+y|0)*44|0)|0;fe(ma|0,A|0,x|0)|0;k[a>>2]=ma;k[S>>2]=g+(z*44|0);k[K>>2]=w;if(!A)break;$d(A)}while(0);d=d+1|0;if((d|0)==21)break O;else{n=C;D=B}}}y=k[A>>2]|0;ma=k[wa>>2]|0;n=ma+(y<<4)|0;o=k[n>>2]|0;x=ma+(y<<4)+4|0;q=k[x>>2]|0;u=ma+(y<<4)+8|0;v=k[u>>2]|0;y=ma+(y<<4)+12|0;w=k[y>>2]|0;g=k[z>>2]|0;d=k[ma+(g<<4)>>2]|0;e=k[ma+(g<<4)+4>>2]|0;f=k[ma+(g<<4)+8>>2]|0;g=k[ma+(g<<4)+12>>2]|0;i[sa>>0]=1;do if((d|0)==(o|0)&(e|0)==(q|0)){ia=v-o|0;fa=w-q|0;ma=f-o|0;ja=g-q|0;ha=((ia|0)<0)<<31>>31;la=((ma|0)<0)<<31>>31;da=ne(ma|0,la|0,ia|0,ha|0)|0;ea=L;ga=((fa|0)<0)<<31>>31;ka=((ja|0)<0)<<31>>31;ca=ne(ja|0,ka|0,fa|0,ga|0)|0;ea=ge(ca|0,L|0,da|0,ea|0)|0;R=+(ea>>>0)+4294967296.0*+(L|0);ea=(ia|0)<0;da=be(0,0,ia|0,ha|0)|0;ia=ea?da:ia;ha=ea?L:ha;ea=(fa|0)<0;da=be(0,0,fa|0,ga|0)|0;fa=ea?da:fa;ga=ea?L:ga;ha=ne(ia|0,ha|0,ia|0,ha|0)|0;ia=L;ga=ne(fa|0,ga|0,fa|0,ga|0)|0;ia=ge(ga|0,L|0,ha|0,ia|0)|0;R=R/+X(+(+(ia>>>0)+4294967296.0*+(L|0)));ia=(ma|0)<0;ha=be(0,0,ma|0,la|0)|0;ma=ia?ha:ma;la=ia?L:la;ia=(ja|0)<0;ha=be(0,0,ja|0,ka|0)|0;ja=ia?ha:ja;ka=ia?L:ka;la=ne(ma|0,la|0,ma|0,la|0)|0;ma=L;ka=ne(ja|0,ka|0,ja|0,ka|0)|0;ma=ge(ka|0,L|0,la|0,ma|0)|0;if(!(R/+X(+(+(ma>>>0)+4294967296.0*+(L|0)))<=-.733459594406401))break;i[sa>>0]=0;break O}else{if((f|0)==(o|0)&(g|0)==(q|0)){ia=v-o|0;fa=w-q|0;ma=d-o|0;ja=e-q|0;ha=((ia|0)<0)<<31>>31;la=((ma|0)<0)<<31>>31;da=ne(ma|0,la|0,ia|0,ha|0)|0;ea=L;ga=((fa|0)<0)<<31>>31;ka=((ja|0)<0)<<31>>31;ca=ne(ja|0,ka|0,fa|0,ga|0)|0;ea=ge(ca|0,L|0,da|0,ea|0)|0;R=+(ea>>>0)+4294967296.0*+(L|0);ea=(ia|0)<0;da=be(0,0,ia|0,ha|0)|0;ia=ea?da:ia;ha=ea?L:ha;ea=(fa|0)<0;da=be(0,0,fa|0,ga|0)|0;fa=ea?da:fa;ga=ea?L:ga;ha=ne(ia|0,ha|0,ia|0,ha|0)|0;ia=L;ga=ne(fa|0,ga|0,fa|0,ga|0)|0;ia=ge(ga|0,L|0,ha|0,ia|0)|0;R=R/+X(+(+(ia>>>0)+4294967296.0*+(L|0)));ia=(ma|0)<0;ha=be(0,0,ma|0,la|0)|0;ma=ia?ha:ma;la=ia?L:la;ia=(ja|0)<0;ha=be(0,0,ja|0,ka|0)|0;ja=ia?ha:ja;ka=ia?L:ka;la=ne(ma|0,la|0,ma|0,la|0)|0;ma=L;ka=ne(ja|0,ka|0,ja|0,ka|0)|0;ma=ge(ka|0,L|0,la|0,ma|0)|0;if(!(R/+X(+(+(ma>>>0)+4294967296.0*+(L|0)))<=-.733459594406401))break;i[sa>>0]=0;break O}if((d|0)==(v|0)&(e|0)==(w|0)){ia=o-v|0;fa=q-w|0;ma=f-v|0;ja=g-w|0;ha=((ia|0)<0)<<31>>31;la=((ma|0)<0)<<31>>31;da=ne(ma|0,la|0,ia|0,ha|0)|0;ea=L;ga=((fa|0)<0)<<31>>31;ka=((ja|0)<0)<<31>>31;ca=ne(ja|0,ka|0,fa|0,ga|0)|0;ea=ge(ca|0,L|0,da|0,ea|0)|0;R=+(ea>>>0)+4294967296.0*+(L|0);ea=(ia|0)<0;da=be(0,0,ia|0,ha|0)|0;ia=ea?da:ia;ha=ea?L:ha;ea=(fa|0)<0;da=be(0,0,fa|0,ga|0)|0;fa=ea?da:fa;ga=ea?L:ga;ha=ne(ia|0,ha|0,ia|0,ha|0)|0;ia=L;ga=ne(fa|0,ga|0,fa|0,ga|0)|0;ia=ge(ga|0,L|0,ha|0,ia|0)|0;R=R/+X(+(+(ia>>>0)+4294967296.0*+(L|0)));ia=(ma|0)<0;ha=be(0,0,ma|0,la|0)|0;ma=ia?ha:ma;la=ia?L:la;ia=(ja|0)<0;ha=be(0,0,ja|0,ka|0)|0;ja=ia?ha:ja;ka=ia?L:ka;la=ne(ma|0,la|0,ma|0,la|0)|0;ma=L;ka=ne(ja|0,ka|0,ja|0,ka|0)|0;ma=ge(ka|0,L|0,la|0,ma|0)|0;if(!(R/+X(+(+(ma>>>0)+4294967296.0*+(L|0)))<=-.733459594406401))break;i[sa>>0]=0;break O}if(!((f|0)==(v|0)&(g|0)==(w|0)))break;ia=o-v|0;fa=q-w|0;ma=d-v|0;ja=e-w|0;ha=((ia|0)<0)<<31>>31;la=((ma|0)<0)<<31>>31;da=ne(ma|0,la|0,ia|0,ha|0)|0;ea=L;ga=((fa|0)<0)<<31>>31;ka=((ja|0)<0)<<31>>31;ca=ne(ja|0,ka|0,fa|0,ga|0)|0;ea=ge(ca|0,L|0,da|0,ea|0)|0;R=+(ea>>>0)+4294967296.0*+(L|0);ea=(ia|0)<0;da=be(0,0,ia|0,ha|0)|0;ia=ea?da:ia;ha=ea?L:ha;ea=(fa|0)<0;da=be(0,0,fa|0,ga|0)|0;fa=ea?da:fa;ga=ea?L:ga;ha=ne(ia|0,ha|0,ia|0,ha|0)|0;ia=L;ga=ne(fa|0,ga|0,fa|0,ga|0)|0;ia=ge(ga|0,L|0,ha|0,ia|0)|0;R=R/+X(+(+(ia>>>0)+4294967296.0*+(L|0)));ia=(ma|0)<0;ha=be(0,0,ma|0,la|0)|0;ma=ia?ha:ma;la=ia?L:la;ia=(ja|0)<0;ha=be(0,0,ja|0,ka|0)|0;ja=ia?ha:ja;ka=ia?L:ka;la=ne(ma|0,la|0,ma|0,la|0)|0;ma=L;ka=ne(ja|0,ka|0,ja|0,ka|0)|0;ma=ge(ka|0,L|0,la|0,ma|0)|0;if(!(R/+X(+(+(ma>>>0)+4294967296.0*+(L|0)))<=-.733459594406401))break;i[sa>>0]=0;break O}while(0);if(!(i[sa>>0]|0))break;d=k[A+8>>2]&31;if((d+-1|0)>>>0>=2){c=+(v-o|0);R=+(w-q|0);P=+X(+(c*c+R*R));c=c/P;P=R/P;R=+(o-C|0);N=+(q-B|0);h=R*c+N*P;R=R-c*h;h=N-P*h;N=+(o-J|0);O=+(q-I|0);s=N*c+O*P;c=N-c*s;s=O-P*s;s=+X(+(c*c+s*s));c=+$(+aa);h=+X(+(R*R+h*h))/c;p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);g=0-~~h|0;h=s/c;p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);f=0-~~h|0;do if((J|0)>=(C|0)){if((J|0)!=(C|0)){e=J;n=I;u=f;d=1;q=C;o=B;na=739;break}if((I|0)>=(B|0)){e=C;n=I;q=C;o=B;d=1;na=740}else{e=C;n=B;u=g;d=-1;q=J;o=I;g=f;na=739}}else{e=C;n=B;u=g;d=-1;q=J;o=I;g=f;na=739}while(0);if((na|0)==739){na=0;if((q|0)==(e|0)){f=u;na=740}else{A=e;z=n;f=u;x=g}}if((na|0)==740){na=0;A=e;z=n;d=0-d|0;x=g}e=k[S>>2]|0;g=k[K>>2]|0;if(e>>>0<g>>>0){i[e>>0]=0;i[e+1>>0]=0;i[e+2>>0]=0;k[e+4>>2]=0;k[e+8>>2]=0;k[e+12>>2]=0;k[e+16>>2]=q;k[e+20>>2]=o;k[e+24>>2]=x;k[e+28>>2]=A;k[e+32>>2]=z;k[e+36>>2]=f;k[e+40>>2]=d;k[S>>2]=e+44;break}y=k[a>>2]|0;n=y;u=e-n|0;v=(u|0)/44|0;w=v+1|0;if(w>>>0>97612893){na=744;break N}e=(g-n|0)/44|0;if(e>>>0<48806446){e=e<<1;e=e>>>0<w>>>0?w:e;if(!e){e=0;g=0}else na=747}else{e=97612893;na=747}if((na|0)==747){na=0;n=e*44|0;n=(n|0)==0?1:n;g=_d(n)|0;if(!g)do{g=k[35]|0;k[35]=g+0;if(!g){na=750;break N}Xa[g&0]();g=_d(n)|0}while((g|0)==0)}ma=g+(v*44|0)|0;i[ma>>0]=0;i[ma+1>>0]=0;i[ma+2>>0]=0;k[ma+4>>2]=0;k[ma+8>>2]=0;k[ma+12>>2]=0;k[ma+16>>2]=q;k[ma+20>>2]=o;k[ma+24>>2]=x;k[ma+28>>2]=A;k[ma+32>>2]=z;k[ma+36>>2]=f;k[ma+40>>2]=d;ma=g+((((u|0)/-44|0)+v|0)*44|0)|0;fe(ma|0,y|0,u|0)|0;k[a>>2]=ma;k[S>>2]=g+(w*44|0);k[K>>2]=g+(e*44|0);if(!y)break;$d(y);break}E=(d|0)==1;F=k[(E?n:u)>>2]|0;E=k[(E?x:y)>>2]|0;P=+(C|0);N=+(J-C|0);O=+(B|0);c=+(I-B|0);M=+$(+aa);A=0;B=0;C=0;D=0;while(1){s=+(C|0);h=P+N*s/20.0;p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);f=A;A=~~h;h=O+c*s/20.0;p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);z=B;B=~~h;R=+(A-F|0);h=+(B-E|0);h=+X(+(R*R+h*h))/M;p[t>>3]=h;d=k[t+4>>2]|0;e=de(k[t>>2]|0,d|0,52)|0;e=e&2047;do if(e>>>0<=1074){d=(d|0)<0;m=d?-h:h;if(e>>>0<1022){h=h*0.0;break}l=m+4503599627370496.0+-4503599627370496.0-m;do if(l>.5)h=m+l+-1.0;else{h=m+l;if(!(l<=-.5))break;h=h+1.0}while(0);h=d?-h:h}while(0);o=D;D=0-~~h|0;if(!C){C=1;continue}q=k[S>>2]|0;d=k[K>>2]|0;do if(q>>>0<d>>>0){i[q>>0]=0;i[q+1>>0]=0;i[q+2>>0]=0;k[q+4>>2]=0;k[q+8>>2]=0;k[q+12>>2]=0;e=q+16|0;g=q+16|0;k[g>>2]=f;k[q+20>>2]=z;k[q+24>>2]=o;d=q+28|0;n=q+28|0;k[n>>2]=A;k[q+32>>2]=B;k[q+36>>2]=D;o=q+40|0;k[o>>2]=1;do if((f|0)<=(A|0)){if((f|0)!=(A|0)){e=A;d=1;na=699;break}if((z|0)<=(B|0)){d=1;na=700}else na=698}else na=698;while(0);if((na|0)==698){k[oa>>2]=k[e>>2];k[oa+4>>2]=k[e+4>>2];k[oa+8>>2]=k[e+8>>2];k[e>>2]=k[d>>2];k[e+4>>2]=k[d+4>>2];k[e+8>>2]=k[d+8>>2];k[d>>2]=k[oa>>2];k[d+4>>2]=k[oa+4>>2];k[d+8>>2]=k[oa+8>>2];k[o>>2]=-1;f=k[g>>2]|0;e=k[n>>2]|0;d=-1;na=699}if((na|0)==699?(na=0,(f|0)==(e|0)):0)na=700;if((na|0)==700){na=0;k[o>>2]=0-d}k[S>>2]=q+44}else{y=k[a>>2]|0;e=y;v=q-e|0;w=(v|0)/44|0;x=w+1|0;if(x>>>0>97612893){na=703;break N}d=(d-e|0)/44|0;if(d>>>0<48806446){d=d<<1;d=d>>>0<x>>>0?x:d;if(!d){d=0;e=0}else na=706}else{d=97612893;na=706}if((na|0)==706){g=d*44|0;g=(g|0)==0?1:g;e=_d(g)|0;if(!e)do{e=k[35]|0;k[35]=e+0;if(!e){na=709;break N}Xa[e&0]();e=_d(g)|0}while((e|0)==0)}u=e+(d*44|0)|0;i[e+(w*44|0)>>0]=0;i[e+(w*44|0)+1>>0]=0;i[e+(w*44|0)+2>>0]=0;k[e+(w*44|0)+4>>2]=0;k[e+(w*44|0)+8>>2]=0;k[e+(w*44|0)+12>>2]=0;n=e+(w*44|0)+16|0;k[n>>2]=f;k[e+(w*44|0)+20>>2]=z;k[e+(w*44|0)+24>>2]=o;d=e+(w*44|0)+28|0;k[d>>2]=A;k[e+(w*44|0)+32>>2]=B;k[e+(w*44|0)+36>>2]=D;q=e+(w*44|0)+40|0;k[q>>2]=1;g=e+(w*44|0)+16|0;o=e+(w*44|0)+28|0;do if((f|0)<=(A|0)){if((f|0)!=(A|0)){g=A;d=1;na=715;break}if((z|0)<=(B|0)){d=1;na=716}else na=714}else na=714;while(0);if((na|0)==714){k[oa>>2]=k[n>>2];k[oa+4>>2]=k[n+4>>2];k[oa+8>>2]=k[n+8>>2];k[n>>2]=k[d>>2];k[n+4>>2]=k[d+4>>2];k[n+8>>2]=k[d+8>>2];k[d>>2]=k[oa>>2];k[d+4>>2]=k[oa+4>>2];k[d+8>>2]=k[oa+8>>2];k[q>>2]=-1;f=k[g>>2]|0;g=k[o>>2]|0;d=-1;na=715}if((na|0)==715?(na=0,(f|0)==(g|0)):0)na=716;if((na|0)==716){na=0;k[q>>2]=0-d}ma=e+((((v|0)/-44|0)+w|0)*44|0)|0;fe(ma|0,y|0,v|0)|0;k[a>>2]=ma;k[S>>2]=e+(x*44|0);k[K>>2]=u;if(!y)break;$d(y)}while(0);C=C+1|0;if((C|0)>=21)break}}while(0);Q=Q+44|0;if((Q|0)==(T|0)){na=827;break}}if((na|0)==703)xa(1340,1363,303,1438);else if((na|0)==709){Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}else if((na|0)==744)xa(1340,1363,303,1438);else if((na|0)==750){Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}else if((na|0)==809)xa(1340,1363,303,1438);else if((na|0)==815){Aa=ya(4)|0;k[Aa>>2]=128;La(Aa|0,8,1)}else if((na|0)==827){pa=k[S>>2]|0;qa=k[a>>2]|0;break}}else{pa=0;qa=0}while(0);k[ua>>2]=(pa-qa|0)/44|0;Nd(1113,ua);if(ta)$d(U);Bc(ra);d=k[Y>>2]|0;e=d;if(d){f=k[Z>>2]|0;if((f|0)!=(d|0))k[Z>>2]=f+(~(((f+-24-e|0)>>>0)/24|0)*24|0);$d(d)}d=k[V>>2]|0;e=d;if(d){f=k[W>>2]|0;if((f|0)!=(d|0))k[W>>2]=f+(~(((f+-24-e|0)>>>0)/24|0)*24|0);$d(d)}f=k[va>>2]|0;g=f;if(f){d=va+4|0;e=k[d>>2]|0;if((e|0)!=(f|0))k[d>>2]=e+(~(((e+-12-g|0)>>>0)/12|0)*12|0);$d(f)}d=k[wa>>2]|0;if(!d){r=Aa;return}e=k[za>>2]|0;if((e|0)!=(d|0))k[za>>2]=e+(~((e+-16-d|0)>>>4)<<4);$d(d);r=Aa;return}function nc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0;t=r;r=r+32|0;j=t+12|0;l=t;n=a+4|0;o=k[a>>2]|0;f=o;p=(k[n>>2]|0)-f|0;q=p>>5;s=q+1|0;if(s>>>0>134217727)xa(1340,1363,303,1438);m=a+8|0;f=(k[m>>2]|0)-f|0;if(f>>5>>>0<67108863){f=f>>4;f=f>>>0<s>>>0?s:f;if(!f){f=0;g=0}else h=5}else{f=134217727;h=5}if((h|0)==5){h=f<<5;h=(h|0)==0?1:h;g=_d(h)|0;a:do if(!g){while(1){g=k[35]|0;k[35]=g+0;if(!g)break;Xa[g&0]();g=_d(h)|0;if(g)break a}t=ya(4)|0;k[t>>2]=128;La(t|0,8,1)}while(0)}h=g+(q<<5)|0;k[j>>2]=k[b>>2];k[j+4>>2]=k[b+4>>2];k[j+8>>2]=k[b+8>>2];k[l>>2]=k[c>>2];k[l+4>>2]=k[c+4>>2];k[l+8>>2]=k[c+8>>2];d=i[d>>0]|0;e=k[e>>2]|0;k[h>>2]=k[j>>2];k[h+4>>2]=k[j+4>>2];k[h+8>>2]=k[j+8>>2];c=g+(q<<5)+12|0;k[c>>2]=k[l>>2];k[c+4>>2]=k[l+4>>2];k[c+8>>2]=k[l+8>>2];k[g+(q<<5)+24>>2]=e;i[g+(q<<5)+28>>0]=d;i[g+(q<<5)+29>>0]=0;fe(g|0,o|0,p|0)|0;k[a>>2]=g;k[n>>2]=g+(s<<5);k[m>>2]=g+(f<<5);if(!o){r=t;return}$d(o);r=t;return}function oc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0;w=r;r=r+64|0;v=w+24|0;u=w;a:while(1){n=b;p=b+-32|0;o=b+-64|0;q=b+-28|0;s=a;b:while(1){m=s;a=n-m|0;c=a>>5;switch(c|0){case 2:{h=4;break a}case 3:{h=8;break a}case 4:{h=26;break a}case 5:{h=27;break a}case 1:case 0:{h=136;break a}default:{}}if((a|0)<992){h=29;break a}e=(c|0)/2|0;f=s+(e<<5)|0;do if((a|0)>31968){a=(c|0)/4|0;c=f;l=s;a=wc(s,s+(a<<5)|0,f,s+(a+e<<5)|0,p)|0}else{c=k[f>>2]|0;a=k[s>>2]|0;if((c|0)>=(a|0))if((c|0)==(a|0))d=(k[s+(e<<5)+4>>2]|0)<(k[s+4>>2]|0);else d=0;else d=1;a=k[p>>2]|0;if((a|0)>=(c|0))if((a|0)==(c|0))a=(k[q>>2]|0)<(k[s+(e<<5)+4>>2]|0);else a=0;else a=1;if(!d){if(!a){c=f;l=s;a=0;break};k[v>>2]=k[f>>2];k[v+4>>2]=k[f+4>>2];k[v+8>>2]=k[f+8>>2];k[v+12>>2]=k[f+12>>2];k[v+16>>2]=k[f+16>>2];k[v+20>>2]=k[f+20>>2];k[v+24>>2]=k[f+24>>2];k[v+28>>2]=k[f+28>>2];k[f>>2]=k[p>>2];k[f+4>>2]=k[p+4>>2];k[f+8>>2]=k[p+8>>2];k[f+12>>2]=k[p+12>>2];k[f+16>>2]=k[p+16>>2];k[f+20>>2]=k[p+20>>2];k[f+24>>2]=k[p+24>>2];j[f+28>>1]=j[p+28>>1]|0;k[p>>2]=k[v>>2];k[p+4>>2]=k[v+4>>2];k[p+8>>2]=k[v+8>>2];k[p+12>>2]=k[v+12>>2];k[p+16>>2]=k[v+16>>2];k[p+20>>2]=k[v+20>>2];k[p+24>>2]=k[v+24>>2];j[p+28>>1]=j[v+28>>1]|0;a=k[f>>2]|0;c=k[s>>2]|0;if((a|0)>=(c|0)){if((a|0)!=(c|0)){c=f;l=s;a=1;break}if((k[s+(e<<5)+4>>2]|0)>=(k[s+4>>2]|0)){c=f;l=s;a=1;break}};k[v>>2]=k[s>>2];k[v+4>>2]=k[s+4>>2];k[v+8>>2]=k[s+8>>2];k[v+12>>2]=k[s+12>>2];k[v+16>>2]=k[s+16>>2];k[v+20>>2]=k[s+20>>2];k[v+24>>2]=k[s+24>>2];k[v+28>>2]=k[s+28>>2];k[s>>2]=k[f>>2];k[s+4>>2]=k[f+4>>2];k[s+8>>2]=k[f+8>>2];k[s+12>>2]=k[f+12>>2];k[s+16>>2]=k[f+16>>2];k[s+20>>2]=k[f+20>>2];k[s+24>>2]=k[f+24>>2];j[s+28>>1]=j[f+28>>1]|0;k[f>>2]=k[v>>2];k[f+4>>2]=k[v+4>>2];k[f+8>>2]=k[v+8>>2];k[f+12>>2]=k[v+12>>2];k[f+16>>2]=k[v+16>>2];k[f+20>>2]=k[v+20>>2];k[f+24>>2]=k[v+24>>2];j[f+28>>1]=j[v+28>>1]|0;c=f;l=s;a=2;break};k[v>>2]=k[s>>2];k[v+4>>2]=k[s+4>>2];k[v+8>>2]=k[s+8>>2];k[v+12>>2]=k[s+12>>2];k[v+16>>2]=k[s+16>>2];k[v+20>>2]=k[s+20>>2];k[v+24>>2]=k[s+24>>2];k[v+28>>2]=k[s+28>>2];if(a){k[s>>2]=k[p>>2];k[s+4>>2]=k[p+4>>2];k[s+8>>2]=k[p+8>>2];k[s+12>>2]=k[p+12>>2];k[s+16>>2]=k[p+16>>2];k[s+20>>2]=k[p+20>>2];k[s+24>>2]=k[p+24>>2];j[s+28>>1]=j[p+28>>1]|0;k[p>>2]=k[v>>2];k[p+4>>2]=k[v+4>>2];k[p+8>>2]=k[v+8>>2];k[p+12>>2]=k[v+12>>2];k[p+16>>2]=k[v+16>>2];k[p+20>>2]=k[v+20>>2];k[p+24>>2]=k[v+24>>2];j[p+28>>1]=j[v+28>>1]|0;c=f;l=s;a=1;break};k[s>>2]=k[f>>2];k[s+4>>2]=k[f+4>>2];k[s+8>>2]=k[f+8>>2];k[s+12>>2]=k[f+12>>2];k[s+16>>2]=k[f+16>>2];k[s+20>>2]=k[f+20>>2];k[s+24>>2]=k[f+24>>2];j[s+28>>1]=j[f+28>>1]|0;k[f>>2]=k[v>>2];k[f+4>>2]=k[v+4>>2];k[f+8>>2]=k[v+8>>2];k[f+12>>2]=k[v+12>>2];k[f+16>>2]=k[v+16>>2];k[f+20>>2]=k[v+20>>2];k[f+24>>2]=k[v+24>>2];j[f+28>>1]=j[v+28>>1]|0;a=k[p>>2]|0;c=k[f>>2]|0;if((a|0)>=(c|0)){if((a|0)!=(c|0)){c=f;l=s;a=1;break}if((k[q>>2]|0)>=(k[s+(e<<5)+4>>2]|0)){c=f;l=s;a=1;break}};k[v>>2]=k[f>>2];k[v+4>>2]=k[f+4>>2];k[v+8>>2]=k[f+8>>2];k[v+12>>2]=k[f+12>>2];k[v+16>>2]=k[f+16>>2];k[v+20>>2]=k[f+20>>2];k[v+24>>2]=k[f+24>>2];k[v+28>>2]=k[f+28>>2];k[f>>2]=k[p>>2];k[f+4>>2]=k[p+4>>2];k[f+8>>2]=k[p+8>>2];k[f+12>>2]=k[p+12>>2];k[f+16>>2]=k[p+16>>2];k[f+20>>2]=k[p+20>>2];k[f+24>>2]=k[p+24>>2];j[f+28>>1]=j[p+28>>1]|0;k[p>>2]=k[v>>2];k[p+4>>2]=k[v+4>>2];k[p+8>>2]=k[v+8>>2];k[p+12>>2]=k[v+12>>2];k[p+16>>2]=k[v+16>>2];k[p+20>>2]=k[v+20>>2];k[p+24>>2]=k[v+24>>2];j[p+28>>1]=j[v+28>>1]|0;c=f;l=s;a=2}while(0);i=k[l>>2]|0;h=k[c>>2]|0;c:do if((i|0)<(h|0))d=p;else{if((i|0)==(h|0)?(k[s+4>>2]|0)<(k[s+(e<<5)+4>>2]|0):0){d=p;break}d:do if((s|0)!=(o|0)){g=s+(e<<5)+4|0;d=o;e=p;while(1){c=k[d>>2]|0;if((c|0)<(h|0))break;if((c|0)==(h|0)?(k[e+-28>>2]|0)<(k[g>>2]|0):0)break;c=d+-32|0;if((s|0)==(c|0))break d;else{e=d;d=c}}k[v>>2]=k[s>>2];k[v+4>>2]=k[s+4>>2];k[v+8>>2]=k[s+8>>2];k[v+12>>2]=k[s+12>>2];k[v+16>>2]=k[s+16>>2];k[v+20>>2]=k[s+20>>2];k[v+24>>2]=k[s+24>>2];k[v+28>>2]=k[s+28>>2];k[s>>2]=k[d>>2];k[s+4>>2]=k[d+4>>2];k[s+8>>2]=k[d+8>>2];k[s+12>>2]=k[d+12>>2];k[s+16>>2]=k[d+16>>2];k[s+20>>2]=k[d+20>>2];k[s+24>>2]=k[d+24>>2];j[s+28>>1]=j[d+28>>1]|0;k[d>>2]=k[v>>2];k[d+4>>2]=k[v+4>>2];k[d+8>>2]=k[v+8>>2];k[d+12>>2]=k[v+12>>2];k[d+16>>2]=k[v+16>>2];k[d+20>>2]=k[v+20>>2];k[d+24>>2]=k[v+24>>2];j[d+28>>1]=j[v+28>>1]|0;a=a+1|0;break c}while(0);a=s+32|0;c=k[p>>2]|0;do if((i|0)>=(c|0)){if((i|0)==(c|0)?(k[s+4>>2]|0)<(k[q>>2]|0):0)break;if((a|0)==(p|0)){h=136;break a}e=s+4|0;d=s;while(1){c=k[d+32>>2]|0;if((i|0)<(c|0))break;if((i|0)==(c|0)?(k[e>>2]|0)<(k[d+36>>2]|0):0)break;c=a+32|0;if((c|0)==(p|0)){h=136;break a}else{d=a;a=c}}k[v>>2]=k[a>>2];k[v+4>>2]=k[a+4>>2];k[v+8>>2]=k[a+8>>2];k[v+12>>2]=k[a+12>>2];k[v+16>>2]=k[a+16>>2];k[v+20>>2]=k[a+20>>2];k[v+24>>2]=k[a+24>>2];k[v+28>>2]=k[a+28>>2];k[a>>2]=k[p>>2];k[a+4>>2]=k[p+4>>2];k[a+8>>2]=k[p+8>>2];k[a+12>>2]=k[p+12>>2];k[a+16>>2]=k[p+16>>2];k[a+20>>2]=k[p+20>>2];k[a+24>>2]=k[p+24>>2];j[a+28>>1]=j[p+28>>1]|0;k[p>>2]=k[v>>2];k[p+4>>2]=k[v+4>>2];k[p+8>>2]=k[v+8>>2];k[p+12>>2]=k[v+12>>2];k[p+16>>2]=k[v+16>>2];k[p+20>>2]=k[v+20>>2];k[p+24>>2]=k[v+24>>2];j[p+28>>1]=j[v+28>>1]|0;a=d+64|0}while(0);if((a|0)==(p|0)){h=136;break a}g=s+4|0;e=p;while(1){f=k[l>>2]|0;c=k[a>>2]|0;e:do if((f|0)>=(c|0))do{if((f|0)==(c|0)?(k[g>>2]|0)<(k[a+4>>2]|0):0)break e;a=a+32|0;c=k[a>>2]|0}while((f|0)>=(c|0));while(0);while(1){d=e;e=e+-32|0;c=k[e>>2]|0;if((f|0)<(c|0))continue;if((f|0)!=(c|0))break;if((k[g>>2]|0)>=(k[d+-28>>2]|0))break}if(a>>>0>=e>>>0){s=a;continue b};k[v>>2]=k[a>>2];k[v+4>>2]=k[a+4>>2];k[v+8>>2]=k[a+8>>2];k[v+12>>2]=k[a+12>>2];k[v+16>>2]=k[a+16>>2];k[v+20>>2]=k[a+20>>2];k[v+24>>2]=k[a+24>>2];k[v+28>>2]=k[a+28>>2];k[a>>2]=k[e>>2];k[a+4>>2]=k[e+4>>2];k[a+8>>2]=k[e+8>>2];k[a+12>>2]=k[e+12>>2];k[a+16>>2]=k[e+16>>2];k[a+20>>2]=k[e+20>>2];k[a+24>>2]=k[e+24>>2];j[a+28>>1]=j[e+28>>1]|0;k[e>>2]=k[v>>2];k[e+4>>2]=k[v+4>>2];k[e+8>>2]=k[v+8>>2];k[e+12>>2]=k[v+12>>2];k[e+16>>2]=k[v+16>>2];k[e+20>>2]=k[v+20>>2];k[e+24>>2]=k[v+24>>2];j[e+28>>1]=j[v+28>>1]|0;a=a+32|0}}while(0);c=s+32|0;f:do if(c>>>0<d>>>0){e=d;while(1){g=k[f>>2]|0;h=f+4|0;i=c;while(1){c=k[i>>2]|0;if((c|0)>=(g|0)){if((c|0)!=(g|0))break;if((k[i+4>>2]|0)>=(k[h>>2]|0))break}i=i+32|0}d=e+-32|0;c=k[d>>2]|0;g:do if((c|0)>=(g|0))while(1){if((c|0)==(g|0)?(k[e+-28>>2]|0)<(k[h>>2]|0):0)break g;e=d+-32|0;c=k[e>>2]|0;if((c|0)<(g|0)){d=e;break}else{l=d;d=e;e=l}}while(0);if(i>>>0>d>>>0){c=i;break f};k[v>>2]=k[i>>2];k[v+4>>2]=k[i+4>>2];k[v+8>>2]=k[i+8>>2];k[v+12>>2]=k[i+12>>2];k[v+16>>2]=k[i+16>>2];k[v+20>>2]=k[i+20>>2];k[v+24>>2]=k[i+24>>2];k[v+28>>2]=k[i+28>>2];k[i>>2]=k[d>>2];k[i+4>>2]=k[d+4>>2];k[i+8>>2]=k[d+8>>2];k[i+12>>2]=k[d+12>>2];k[i+16>>2]=k[d+16>>2];k[i+20>>2]=k[d+20>>2];k[i+24>>2]=k[d+24>>2];j[i+28>>1]=j[d+28>>1]|0;k[d>>2]=k[v>>2];k[d+4>>2]=k[v+4>>2];k[d+8>>2]=k[v+8>>2];k[d+12>>2]=k[v+12>>2];k[d+16>>2]=k[v+16>>2];k[d+20>>2]=k[v+20>>2];k[d+24>>2]=k[v+24>>2];j[d+28>>1]=j[v+28>>1]|0;c=i+32|0;e=d;f=(f|0)==(i|0)?d:f;a=a+1|0}}while(0);do if((c|0)!=(f|0)){d=k[f>>2]|0;e=k[c>>2]|0;if((d|0)>=(e|0)){if((d|0)!=(e|0))break;if((k[f+4>>2]|0)>=(k[c+4>>2]|0))break};k[v>>2]=k[c>>2];k[v+4>>2]=k[c+4>>2];k[v+8>>2]=k[c+8>>2];k[v+12>>2]=k[c+12>>2];k[v+16>>2]=k[c+16>>2];k[v+20>>2]=k[c+20>>2];k[v+24>>2]=k[c+24>>2];k[v+28>>2]=k[c+28>>2];k[c>>2]=k[f>>2];k[c+4>>2]=k[f+4>>2];k[c+8>>2]=k[f+8>>2];k[c+12>>2]=k[f+12>>2];k[c+16>>2]=k[f+16>>2];k[c+20>>2]=k[f+20>>2];k[c+24>>2]=k[f+24>>2];j[c+28>>1]=j[f+28>>1]|0;k[f>>2]=k[v>>2];k[f+4>>2]=k[v+4>>2];k[f+8>>2]=k[v+8>>2];k[f+12>>2]=k[v+12>>2];k[f+16>>2]=k[v+16>>2];k[f+20>>2]=k[v+20>>2];k[f+24>>2]=k[v+24>>2];j[f+28>>1]=j[v+28>>1]|0;a=a+1|0}while(0);if(!a){d=xc(s,c)|0;a=c+32|0;if(xc(a,b)|0){h=131;break}if(d){s=a;continue}}l=c;if((l-m|0)>=(n-l|0)){h=135;break}oc(s,c);s=c+32|0}if((h|0)==131)if(d){h=136;break}else{a=s;b=c;continue}else if((h|0)==135){oc(c+32|0,b);a=s;b=c;continue}}if((h|0)==4){a=k[p>>2]|0;b=k[s>>2]|0;if((a|0)>=(b|0)){if((a|0)!=(b|0)){r=w;return}if((k[q>>2]|0)>=(k[s+4>>2]|0)){r=w;return}};k[v>>2]=k[s>>2];k[v+4>>2]=k[s+4>>2];k[v+8>>2]=k[s+8>>2];k[v+12>>2]=k[s+12>>2];k[v+16>>2]=k[s+16>>2];k[v+20>>2]=k[s+20>>2];k[v+24>>2]=k[s+24>>2];k[v+28>>2]=k[s+28>>2];k[s>>2]=k[p>>2];k[s+4>>2]=k[p+4>>2];k[s+8>>2]=k[p+8>>2];k[s+12>>2]=k[p+12>>2];k[s+16>>2]=k[p+16>>2];k[s+20>>2]=k[p+20>>2];k[s+24>>2]=k[p+24>>2];j[s+28>>1]=j[p+28>>1]|0;k[p>>2]=k[v>>2];k[p+4>>2]=k[v+4>>2];k[p+8>>2]=k[v+8>>2];k[p+12>>2]=k[v+12>>2];k[p+16>>2]=k[v+16>>2];k[p+20>>2]=k[v+20>>2];k[p+24>>2]=k[v+24>>2];j[p+28>>1]=j[v+28>>1]|0;r=w;return}else if((h|0)==8){d=s+32|0;b=k[d>>2]|0;a=k[s>>2]|0;if((b|0)>=(a|0))if((b|0)==(a|0))c=(k[s+36>>2]|0)<(k[s+4>>2]|0);else c=0;else c=1;a=k[p>>2]|0;if((a|0)>=(b|0))if((a|0)==(b|0))a=(k[q>>2]|0)<(k[s+36>>2]|0);else a=0;else a=1;if(!c){if(!a){r=w;return};k[v>>2]=k[d>>2];k[v+4>>2]=k[d+4>>2];k[v+8>>2]=k[d+8>>2];k[v+12>>2]=k[d+12>>2];k[v+16>>2]=k[d+16>>2];k[v+20>>2]=k[d+20>>2];k[v+24>>2]=k[d+24>>2];k[v+28>>2]=k[d+28>>2];k[d>>2]=k[p>>2];k[d+4>>2]=k[p+4>>2];k[d+8>>2]=k[p+8>>2];k[d+12>>2]=k[p+12>>2];k[d+16>>2]=k[p+16>>2];k[d+20>>2]=k[p+20>>2];k[d+24>>2]=k[p+24>>2];j[d+28>>1]=j[p+28>>1]|0;k[p>>2]=k[v>>2];k[p+4>>2]=k[v+4>>2];k[p+8>>2]=k[v+8>>2];k[p+12>>2]=k[v+12>>2];k[p+16>>2]=k[v+16>>2];k[p+20>>2]=k[v+20>>2];k[p+24>>2]=k[v+24>>2];j[p+28>>1]=j[v+28>>1]|0;a=k[d>>2]|0;b=k[s>>2]|0;if((a|0)>=(b|0)){if((a|0)!=(b|0)){r=w;return}if((k[s+36>>2]|0)>=(k[s+4>>2]|0)){r=w;return}};k[v>>2]=k[s>>2];k[v+4>>2]=k[s+4>>2];k[v+8>>2]=k[s+8>>2];k[v+12>>2]=k[s+12>>2];k[v+16>>2]=k[s+16>>2];k[v+20>>2]=k[s+20>>2];k[v+24>>2]=k[s+24>>2];k[v+28>>2]=k[s+28>>2];k[s>>2]=k[d>>2];k[s+4>>2]=k[d+4>>2];k[s+8>>2]=k[d+8>>2];k[s+12>>2]=k[d+12>>2];k[s+16>>2]=k[d+16>>2];k[s+20>>2]=k[d+20>>2];k[s+24>>2]=k[d+24>>2];j[s+28>>1]=j[d+28>>1]|0;k[d>>2]=k[v>>2];k[d+4>>2]=k[v+4>>2];k[d+8>>2]=k[v+8>>2];k[d+12>>2]=k[v+12>>2];k[d+16>>2]=k[v+16>>2];k[d+20>>2]=k[v+20>>2];k[d+24>>2]=k[v+24>>2];j[d+28>>1]=j[v+28>>1]|0;r=w;return};k[v>>2]=k[s>>2];k[v+4>>2]=k[s+4>>2];k[v+8>>2]=k[s+8>>2];k[v+12>>2]=k[s+12>>2];k[v+16>>2]=k[s+16>>2];k[v+20>>2]=k[s+20>>2];k[v+24>>2]=k[s+24>>2];k[v+28>>2]=k[s+28>>2];if(a){k[s>>2]=k[p>>2];k[s+4>>2]=k[p+4>>2];k[s+8>>2]=k[p+8>>2];k[s+12>>2]=k[p+12>>2];k[s+16>>2]=k[p+16>>2];k[s+20>>2]=k[p+20>>2];k[s+24>>2]=k[p+24>>2];j[s+28>>1]=j[p+28>>1]|0;k[p>>2]=k[v>>2];k[p+4>>2]=k[v+4>>2];k[p+8>>2]=k[v+8>>2];k[p+12>>2]=k[v+12>>2];k[p+16>>2]=k[v+16>>2];k[p+20>>2]=k[v+20>>2];k[p+24>>2]=k[v+24>>2];j[p+28>>1]=j[v+28>>1]|0;r=w;return};k[s>>2]=k[d>>2];k[s+4>>2]=k[d+4>>2];k[s+8>>2]=k[d+8>>2];k[s+12>>2]=k[d+12>>2];k[s+16>>2]=k[d+16>>2];k[s+20>>2]=k[d+20>>2];k[s+24>>2]=k[d+24>>2];j[s+28>>1]=j[d+28>>1]|0;k[d>>2]=k[v>>2];k[d+4>>2]=k[v+4>>2];k[d+8>>2]=k[v+8>>2];k[d+12>>2]=k[v+12>>2];k[d+16>>2]=k[v+16>>2];k[d+20>>2]=k[v+20>>2];k[d+24>>2]=k[v+24>>2];j[d+28>>1]=j[v+28>>1]|0;a=k[p>>2]|0;b=k[d>>2]|0;if((a|0)>=(b|0)){if((a|0)!=(b|0)){r=w;return}if((k[q>>2]|0)>=(k[s+36>>2]|0)){r=w;return}};k[v>>2]=k[d>>2];k[v+4>>2]=k[d+4>>2];k[v+8>>2]=k[d+8>>2];k[v+12>>2]=k[d+12>>2];k[v+16>>2]=k[d+16>>2];k[v+20>>2]=k[d+20>>2];k[v+24>>2]=k[d+24>>2];k[v+28>>2]=k[d+28>>2];k[d>>2]=k[p>>2];k[d+4>>2]=k[p+4>>2];k[d+8>>2]=k[p+8>>2];k[d+12>>2]=k[p+12>>2];k[d+16>>2]=k[p+16>>2];k[d+20>>2]=k[p+20>>2];k[d+24>>2]=k[p+24>>2];j[d+28>>1]=j[p+28>>1]|0;k[p>>2]=k[v>>2];k[p+4>>2]=k[v+4>>2];k[p+8>>2]=k[v+8>>2];k[p+12>>2]=k[v+12>>2];k[p+16>>2]=k[v+16>>2];k[p+20>>2]=k[v+20>>2];k[p+24>>2]=k[v+24>>2];j[p+28>>1]=j[v+28>>1]|0;r=w;return}else if((h|0)==26){vc(s,s+32|0,s+64|0,p)|0;r=w;return}else if((h|0)==27){wc(s,s+32|0,s+64|0,s+96|0,p)|0;r=w;return}else if((h|0)==29){c=s+64|0;g=s+32|0;a=k[g>>2]|0;e=k[s>>2]|0;if((a|0)>=(e|0))if((a|0)==(e|0))d=(k[s+36>>2]|0)<(k[s+4>>2]|0);else d=0;else d=1;f=k[c>>2]|0;if((f|0)>=(a|0))if((f|0)==(a|0))a=(k[s+68>>2]|0)<(k[s+36>>2]|0);else a=0;else a=1;do if(!d){if(a){k[v>>2]=k[g>>2];k[v+4>>2]=k[g+4>>2];k[v+8>>2]=k[g+8>>2];k[v+12>>2]=k[g+12>>2];k[v+16>>2]=k[g+16>>2];k[v+20>>2]=k[g+20>>2];k[v+24>>2]=k[g+24>>2];k[v+28>>2]=k[g+28>>2];k[g>>2]=k[c>>2];k[g+4>>2]=k[c+4>>2];k[g+8>>2]=k[c+8>>2];k[g+12>>2]=k[c+12>>2];k[g+16>>2]=k[c+16>>2];k[g+20>>2]=k[c+20>>2];k[g+24>>2]=k[c+24>>2];j[g+28>>1]=j[c+28>>1]|0;k[c>>2]=k[v>>2];k[c+4>>2]=k[v+4>>2];k[c+8>>2]=k[v+8>>2];k[c+12>>2]=k[v+12>>2];k[c+16>>2]=k[v+16>>2];k[c+20>>2]=k[v+20>>2];k[c+24>>2]=k[v+24>>2];j[c+28>>1]=j[v+28>>1]|0;a=k[g>>2]|0;if((a|0)>=(e|0)){if((a|0)!=(e|0))break;if((k[s+36>>2]|0)>=(k[s+4>>2]|0))break};k[v>>2]=k[s>>2];k[v+4>>2]=k[s+4>>2];k[v+8>>2]=k[s+8>>2];k[v+12>>2]=k[s+12>>2];k[v+16>>2]=k[s+16>>2];k[v+20>>2]=k[s+20>>2];k[v+24>>2]=k[s+24>>2];k[v+28>>2]=k[s+28>>2];k[s>>2]=k[g>>2];k[s+4>>2]=k[g+4>>2];k[s+8>>2]=k[g+8>>2];k[s+12>>2]=k[g+12>>2];k[s+16>>2]=k[g+16>>2];k[s+20>>2]=k[g+20>>2];k[s+24>>2]=k[g+24>>2];j[s+28>>1]=j[g+28>>1]|0;k[g>>2]=k[v>>2];k[g+4>>2]=k[v+4>>2];k[g+8>>2]=k[v+8>>2];k[g+12>>2]=k[v+12>>2];k[g+16>>2]=k[v+16>>2];k[g+20>>2]=k[v+20>>2];k[g+24>>2]=k[v+24>>2];j[g+28>>1]=j[v+28>>1]|0}}else{k[v>>2]=k[s>>2];k[v+4>>2]=k[s+4>>2];k[v+8>>2]=k[s+8>>2];k[v+12>>2]=k[s+12>>2];k[v+16>>2]=k[s+16>>2];k[v+20>>2]=k[s+20>>2];k[v+24>>2]=k[s+24>>2];k[v+28>>2]=k[s+28>>2];if(a){k[s>>2]=k[c>>2];k[s+4>>2]=k[c+4>>2];k[s+8>>2]=k[c+8>>2];k[s+12>>2]=k[c+12>>2];k[s+16>>2]=k[c+16>>2];k[s+20>>2]=k[c+20>>2];k[s+24>>2]=k[c+24>>2];j[s+28>>1]=j[c+28>>1]|0;k[c>>2]=k[v>>2];k[c+4>>2]=k[v+4>>2];k[c+8>>2]=k[v+8>>2];k[c+12>>2]=k[v+12>>2];k[c+16>>2]=k[v+16>>2];k[c+20>>2]=k[v+20>>2];k[c+24>>2]=k[v+24>>2];j[c+28>>1]=j[v+28>>1]|0;break};k[s>>2]=k[g>>2];k[s+4>>2]=k[g+4>>2];k[s+8>>2]=k[g+8>>2];k[s+12>>2]=k[g+12>>2];k[s+16>>2]=k[g+16>>2];k[s+20>>2]=k[g+20>>2];k[s+24>>2]=k[g+24>>2];j[s+28>>1]=j[g+28>>1]|0;k[g>>2]=k[v>>2];k[g+4>>2]=k[v+4>>2];k[g+8>>2]=k[v+8>>2];k[g+12>>2]=k[v+12>>2];k[g+16>>2]=k[v+16>>2];k[g+20>>2]=k[v+20>>2];k[g+24>>2]=k[v+24>>2];j[g+28>>1]=j[v+28>>1]|0;a=k[g>>2]|0;if((f|0)>=(a|0)){if((f|0)!=(a|0))break;if((k[s+68>>2]|0)>=(k[s+36>>2]|0))break};k[v>>2]=k[g>>2];k[v+4>>2]=k[g+4>>2];k[v+8>>2]=k[g+8>>2];k[v+12>>2]=k[g+12>>2];k[v+16>>2]=k[g+16>>2];k[v+20>>2]=k[g+20>>2];k[v+24>>2]=k[g+24>>2];k[v+28>>2]=k[g+28>>2];k[g>>2]=k[c>>2];k[g+4>>2]=k[c+4>>2];k[g+8>>2]=k[c+8>>2];k[g+12>>2]=k[c+12>>2];k[g+16>>2]=k[c+16>>2];k[g+20>>2]=k[c+20>>2];k[g+24>>2]=k[c+24>>2];j[g+28>>1]=j[c+28>>1]|0;k[c>>2]=k[v>>2];k[c+4>>2]=k[v+4>>2];k[c+8>>2]=k[v+8>>2];k[c+12>>2]=k[v+12>>2];k[c+16>>2]=k[v+16>>2];k[c+20>>2]=k[v+20>>2];k[c+24>>2]=k[v+24>>2];j[c+28>>1]=j[v+28>>1]|0}while(0);a=s+96|0;if((a|0)!=(b|0)){g=a;while(1){f=k[g>>2]|0;a=k[c>>2]|0;if((f|0)>=(a|0)){if((f|0)==(a|0)?(t=k[g+4>>2]|0,(t|0)<(k[c+4>>2]|0)):0){e=t;h=52}}else{e=k[g+4>>2]|0;h=52}if((h|0)==52){h=0;v=g+8|0;k[u>>2]=k[v>>2];k[u+4>>2]=k[v+4>>2];k[u+8>>2]=k[v+8>>2];k[u+12>>2]=k[v+12>>2];k[u+16>>2]=k[v+16>>2];k[u+20>>2]=k[v+20>>2];k[g>>2]=k[c>>2];k[g+4>>2]=k[c+4>>2];k[g+8>>2]=k[c+8>>2];k[g+12>>2]=k[c+12>>2];k[g+16>>2]=k[c+16>>2];k[g+20>>2]=k[c+20>>2];k[g+24>>2]=k[c+24>>2];j[g+28>>1]=j[c+28>>1]|0;h:do if((c|0)==(s|0))a=s;else while(1){a=c;c=c+-32|0;d=k[c>>2]|0;if((f|0)>=(d|0)){if((f|0)!=(d|0))break h;if((e|0)>=(k[a+-28>>2]|0))break h};k[a>>2]=k[c>>2];k[a+4>>2]=k[c+4>>2];k[a+8>>2]=k[c+8>>2];k[a+12>>2]=k[c+12>>2];k[a+16>>2]=k[c+16>>2];k[a+20>>2]=k[c+20>>2];k[a+24>>2]=k[c+24>>2];j[a+28>>1]=j[c+28>>1]|0;if((c|0)==(s|0)){a=s;break}}while(0);k[a>>2]=f;k[a+4>>2]=e;v=a+8|0;k[v>>2]=k[u>>2];k[v+4>>2]=k[u+4>>2];k[v+8>>2]=k[u+8>>2];k[v+12>>2]=k[u+12>>2];k[v+16>>2]=k[u+16>>2];j[v+20>>1]=j[u+20>>1]|0}a=g+32|0;if((a|0)==(b|0))break;else{c=g;g=a}}}r=w;return}else if((h|0)==136){r=w;return}}function pc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;s=b+16|0;e=k[s>>2]|0;f=k[e>>2]|0;g=k[e+4>>2]|0;do if((f|0)!=(g|0)){if((k[c+16>>2]|0)==(k[g+-16>>2]|0)?(k[c+20>>2]|0)==(k[g+-12>>2]|0):0){f=g;break}rc(+p[b>>3],k[b+20>>2]|0,e);e=k[s>>2]|0;f=k[e>>2]|0;g=e+4|0;h=k[g>>2]|0;if((h|0)!=(f|0)){k[g>>2]=h+(~(((h+-44-f|0)>>>0)/44|0)*44|0);f=k[s>>2]|0;e=f;f=k[f+4>>2]|0}}while(0);o=e+4|0;q=e+8|0;g=k[q>>2]|0;if(f>>>0>=g>>>0){r=k[e>>2]|0;h=r;l=f-h|0;m=(l|0)/44|0;n=m+1|0;if(n>>>0>97612893)xa(1340,1363,303,1438);f=(g-h|0)/44|0;if(f>>>0<48806446){f=f<<1;f=f>>>0<n>>>0?n:f;if(!f){f=0;g=0}else w=12}else{f=97612893;w=12}if((w|0)==12){h=f*44|0;h=(h|0)==0?1:h;g=_d(h)|0;a:do if(!g){while(1){g=k[35]|0;k[35]=g+0;if(!g)break;Xa[g&0]();g=_d(h)|0;if(g)break a}b=ya(4)|0;k[b>>2]=128;La(b|0,8,1)}while(0)}h=g+(f*44|0)|0;f=g+(m*44|0)|0;i=c;j=f+44|0;do{k[f>>2]=k[i>>2];f=f+4|0;i=i+4|0}while((f|0)<(j|0));m=g+((((l|0)/-44|0)+m|0)*44|0)|0;fe(m|0,r|0,l|0)|0;k[e>>2]=m;k[o>>2]=g+(n*44|0);k[q>>2]=h;if(r)$d(r)}else{i=c;j=f+44|0;do{k[f>>2]=k[i>>2];f=f+4|0;i=i+4|0}while((f|0)<(j|0));k[o>>2]=(k[o>>2]|0)+44}if(!(!d?(k[c+36>>2]|0)!=0:0))w=21;if((w|0)==21?(rc(+p[b>>3],k[b+20>>2]|0,k[s>>2]|0),u=k[s>>2]|0,t=k[u>>2]|0,u=u+4|0,v=k[u>>2]|0,(v|0)!=(t|0)):0)k[u>>2]=v+(~(((v+-44-t|0)>>>0)/44|0)*44|0);w=k[s>>2]|0;e=k[w+4>>2]|0;if((k[w>>2]|0)==(e|0)){b=(k[(k[(k[b+20>>2]|0)+4>>2]|0)+-8>>2]|0)+-12|0;k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];return}else{b=e+-16|0;k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];return}}function qc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0,h=0,j=0,l=0,m=0,n=0,o=0.0,q=0;n=b;if(i[b+29>>0]|0){a=1;return a|0}c=k[k[a>>2]>>2]|0;h=k[b+8>>2]|0;e=(h|0)==0;d=(k[c+8>>2]|0)==0;m=k[b>>2]|0;if((!(e^d)?(m|0)==(k[c>>2]|0):0)?(f=k[b+4>>2]|0,(f|0)==(k[c+4>>2]|0)):0){c=k[b+20>>2]|0;l=d^(c|0)==0?2:3}else{l=e&1;c=k[b+20>>2]|0;f=k[b+4>>2]|0}e=k[a+4>>2]|0;d=k[e+8>>2]|0;j=d-h|0;j=(j|0)>-1?j:0-j|0;c=d-c|0;c=(c|0)>-1?c:0-c|0;d=k[e>>2]|0;e=k[e+4>>2]|0;o=+(d-m|0);g=+(e-f|0);g=o*o+g*g;b=a+8|0;h=k[k[b>>2]>>2]|0;if((h|0)>0?(q=m-d|0,+(((q|0)>-1?q:0-q|0)|0)>+p[k[a+12>>2]>>3]):0){q=0;return q|0}do if((l|0)<=(h|0)){if((l|0)!=(h|0)){q=1;return q|0}if((m|0)==(d|0)&(e|0)==(f|0)){if((j|0)<(k[k[a+16>>2]>>2]|0))break;if((j|0)!=(k[k[a+16>>2]>>2]|0)){q=1;return q|0}if((c|0)<(k[k[a+20>>2]>>2]|0))break;if((c|0)!=(k[k[a+20>>2]>>2]|0)){q=1;return q|0}}if(!(g<+p[k[a+12>>2]>>3])){q=1;return q|0}}while(0);k[k[a+24>>2]>>2]=n;k[k[a+16>>2]>>2]=j;k[k[a+20>>2]>>2]=c;p[k[a+12>>2]>>3]=g;k[k[b>>2]>>2]=l;q=1;return q|0}function rc(a,b,c){a=+a;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0.0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;V=r;r=r+160|0;U=V+144|0;g=V+24|0;h=V+16|0;L=V+100|0;M=V+56|0;N=V+8|0;O=V;Q=V+44|0;R=V+32|0;d=k[c>>2]|0;P=c+4|0;f=k[P>>2]|0;if((d|0)==(f|0))l=0.0;else{e=0;do{K=k[d+36>>2]|0;T=k[d+24>>2]|0;T=(K|0)<(T|0)?K:T;e=(T|0)<(e|0)?T:e;d=d+44|0}while((d|0)!=(f|0));l=+(e|0)}k[U>>2]=0;T=U+4|0;k[T>>2]=0;k[U+8>>2]=0;p[g>>3]=0.0;l=-a-l;p[h>>3]=l;j=L+1|0;m=L+2|0;n=L+4|0;o=L+8|0;q=L+12|0;s=L+16|0;t=L+20|0;u=L+24|0;v=L+28|0;w=L+32|0;x=L+36|0;y=L+40|0;z=M+1|0;A=M+2|0;B=M+4|0;C=M+8|0;D=M+12|0;E=M+16|0;F=M+20|0;G=M+24|0;H=M+28|0;I=M+32|0;J=M+36|0;K=M+40|0;d=l>0.0?h:g;g=0;while(1){f=~~+p[d>>3];a:do if(!g){d=k[c>>2]|0;e=k[P>>2]|0;if((d|0)!=(e|0))do{_=k[d+16>>2]|0;Z=k[d+20>>2]|0;Y=(k[d+24>>2]|0)+f|0;X=k[d+28>>2]|0;W=k[d+32>>2]|0;h=(k[d+36>>2]|0)+f|0;i[M>>0]=0;i[z>>0]=0;i[A>>0]=0;k[B>>2]=0;k[C>>2]=0;k[D>>2]=0;k[E>>2]=_;k[F>>2]=Z;k[G>>2]=Y;k[H>>2]=X;k[I>>2]=W;k[J>>2]=h;k[K>>2]=1;sc(U,M);d=d+44|0}while((d|0)!=(e|0))}else{d=k[P>>2]|0;while(1){if((d|0)==(k[c>>2]|0))break a;h=k[d+-16>>2]|0;W=k[d+-12>>2]|0;X=(k[d+-8>>2]|0)+f|0;Y=k[d+-28>>2]|0;Z=k[d+-24>>2]|0;_=(k[d+-20>>2]|0)+f|0;i[L>>0]=0;i[j>>0]=0;i[m>>0]=0;k[n>>2]=0;k[o>>2]=0;k[q>>2]=0;k[s>>2]=h;k[t>>2]=W;k[u>>2]=X;k[v>>2]=Y;k[w>>2]=Z;k[x>>2]=_;k[y>>2]=1;sc(U,L);d=d+-44|0}}while(0);if(!f)break;p[N>>3]=0.0;l=+(f|0)-a;p[O>>3]=l;d=l>0.0?O:N;g=g^1}d=k[U>>2]|0;if(k[d+8>>2]|0){_=k[d+4>>2]|0;k[Q>>2]=k[d>>2];k[Q+4>>2]=_;k[Q+8>>2]=0;tc(U,d,Q)}d=k[T>>2]|0;if(k[d+-4>>2]|0){_=k[d+-8>>2]|0;k[R>>2]=k[d+-12>>2];k[R+4>>2]=_;k[R+8>>2]=0;tc(U,d,R)}o=b+4|0;d=k[o>>2]|0;q=b+8|0;e=k[q>>2]|0;if(d>>>0<e>>>0){k[d>>2]=k[U>>2];k[d+4>>2]=k[T>>2];_=U+8|0;k[d+8>>2]=k[_>>2];k[_>>2]=0;k[T>>2]=0;k[U>>2]=0;k[o>>2]=(k[o>>2]|0)+12;r=V;return}f=k[b>>2]|0;g=(d-f|0)/12|0;j=g+1|0;if(j>>>0>357913941)xa(1340,1363,303,1438);d=(e-f|0)/12|0;if(d>>>0<178956970){d=d<<1;d=d>>>0<j>>>0?j:d;if(!d){d=0;e=0}else S=23}else{d=357913941;S=23}if((S|0)==23){f=d*12|0;f=(f|0)==0?1:f;e=_d(f)|0;b:do if(!e){while(1){e=k[35]|0;k[35]=e+0;if(!e)break;Xa[e&0]();e=_d(f)|0;if(e)break b}_=ya(4)|0;k[_>>2]=128;La(_|0,8,1)}while(0)}h=e+(g*12|0)|0;f=h;n=e+(d*12|0)|0;k[e+(g*12|0)+8>>2]=0;k[h>>2]=k[U>>2];k[e+(g*12|0)+4>>2]=k[T>>2];d=U+8|0;k[e+(g*12|0)+8>>2]=k[d>>2];k[d>>2]=0;k[T>>2]=0;k[U>>2]=0;j=e+(j*12|0)|0;g=k[b>>2]|0;d=k[o>>2]|0;if((d|0)==(g|0)){d=g;g=b;h=o;e=f;m=d}else{e=h;do{_=e+-12|0;Z=d;d=d+-12|0;k[_>>2]=0;Y=e+-8|0;k[Y>>2]=0;k[e+-4>>2]=0;k[_>>2]=k[d>>2];_=Z+-8|0;k[Y>>2]=k[_>>2];Z=Z+-4|0;k[e+-4>>2]=k[Z>>2];k[Z>>2]=0;k[_>>2]=0;k[d>>2]=0;e=f+-12|0;f=e}while((d|0)!=(g|0));g=b;h=o;e=f;m=k[b>>2]|0;d=k[o>>2]|0}k[g>>2]=e;k[h>>2]=j;k[q>>2]=n;j=m;if((d|0)!=(j|0))do{e=d;d=d+-12|0;g=k[d>>2]|0;h=g;if(g){e=e+-8|0;f=k[e>>2]|0;if((f|0)!=(g|0))k[e>>2]=f+(~(((f+-12-h|0)>>>0)/12|0)*12|0);$d(g)}}while((d|0)!=(j|0));if(m)$d(m);d=k[U>>2]|0;if(!d){r=V;return}e=k[T>>2]|0;if((e|0)!=(d|0))k[T>>2]=e+(~(((e+-12-d|0)>>>0)/12|0)*12|0);$d(d);r=V;return}function sc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+4|0;d=k[e>>2]|0;if(!((((k[a>>2]|0)!=(d|0)?(k[d+-12>>2]|0)==(k[b+16>>2]|0):0)?(k[d+-8>>2]|0)==(k[b+20>>2]|0):0)?(k[d+-4>>2]|0)==(k[b+24>>2]|0):0))c=5;do if((c|0)==5){c=b+16|0;if((d|0)==(k[a+8>>2]|0)){uc(a,c);d=k[e>>2]|0;break}else{k[d>>2]=k[c>>2];k[d+4>>2]=k[c+4>>2];k[d+8>>2]=k[c+8>>2];d=(k[e>>2]|0)+12|0;k[e>>2]=d;break}}while(0);if((((k[a>>2]|0)!=(d|0)?(k[d+-12>>2]|0)==(k[b+28>>2]|0):0)?(k[d+-8>>2]|0)==(k[b+32>>2]|0):0)?(k[d+-4>>2]|0)==(k[b+36>>2]|0):0)return;c=b+28|0;if((d|0)==(k[a+8>>2]|0)){uc(a,c);return}else{k[d>>2]=k[c>>2];k[d+4>>2]=k[c+4>>2];k[d+8>>2]=k[c+8>>2];k[e>>2]=(k[e>>2]|0)+12;return}}function tc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;m=k[a>>2]|0;n=b;d=m;j=n-d|0;l=(j|0)/12|0;p=a+4|0;g=k[p>>2]|0;o=a+8|0;f=k[o>>2]|0;if(g>>>0<f>>>0){if((g|0)==(b|0)){k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[p>>2]=(k[p>>2]|0)+12;return}f=g-(m+((l+1|0)*12|0))|0;d=b+(((f|0)/12|0)*12|0)|0;if(d>>>0<g>>>0){e=g;do{k[e>>2]=k[d>>2];k[e+4>>2]=k[d+4>>2];k[e+8>>2]=k[d+8>>2];d=d+12|0;e=(k[p>>2]|0)+12|0;k[p>>2]=e}while(d>>>0<g>>>0)}he(g+(((f|0)/-12|0)*12|0)|0,b|0,f|0)|0;k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];return}e=((g-d|0)/12|0)+1|0;if(e>>>0>357913941)xa(1340,1363,303,1438);d=(f-d|0)/12|0;if(d>>>0<178956970){d=d<<1;d=d>>>0<e>>>0?e:d;if(!d){d=0;i=0}else h=11}else{d=357913941;h=11}if((h|0)==11){f=d*12|0;f=(f|0)==0?1:f;e=_d(f)|0;a:do if(!e){while(1){e=k[35]|0;k[35]=e+0;if(!e)break;Xa[e&0]();e=_d(f)|0;if(e)break a}p=ya(4)|0;k[p>>2]=128;La(p|0,8,1)}while(0);i=e}f=i+(l*12|0)|0;g=f;e=i+(d*12|0)|0;do if((l|0)==(d|0)){if((j|0)>0){g=i+((((l+1|0)/-2|0)+l|0)*12|0)|0;f=g;d=m;break}h=(m|0)==(b|0)?1:l<<1;f=h>>>2;if(!h)d=0;else{e=h*12|0;e=(e|0)==0?1:e;d=_d(e)|0;b:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break b}p=ya(4)|0;k[p>>2]=128;La(p|0,8,1)}while(0)}f=d+(f*12|0)|0;g=f;e=d+(h*12|0)|0;if(!i)d=m;else{$d(i);d=k[a>>2]|0}}else d=m;while(0);k[f>>2]=k[c>>2];k[f+4>>2]=k[c+4>>2];k[f+8>>2]=k[c+8>>2];m=g;c=n-d|0;l=m+(((c|0)/-12|0)*12|0)|0;fe(l|0,d|0,c|0)|0;c=(k[p>>2]|0)-n|0;fe(m+12|0,b|0,c|0)|0;d=k[a>>2]|0;k[a>>2]=l;k[p>>2]=m+((((c|0)/12|0)+1|0)*12|0);k[o>>2]=e;if(!d)return;$d(d);return}function uc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;f=a+4|0;g=k[a>>2]|0;c=g;h=(k[f>>2]|0)-c|0;i=(h|0)/12|0;j=i+1|0;if(j>>>0>357913941)xa(1340,1363,303,1438);l=a+8|0;c=((k[l>>2]|0)-c|0)/12|0;if(c>>>0<178956970){c=c<<1;c=c>>>0<j>>>0?j:c;if(!c){c=0;d=0}else e=5}else{c=357913941;e=5}if((e|0)==5){e=c*12|0;e=(e|0)==0?1:e;d=_d(e)|0;a:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break a}a=ya(4)|0;k[a>>2]=128;La(a|0,8,1)}while(0)}e=d+(i*12|0)|0;k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];b=d+((((h|0)/-12|0)+i|0)*12|0)|0;fe(b|0,g|0,h|0)|0;k[a>>2]=b;k[f>>2]=d+(j*12|0);k[l>>2]=d+(c*12|0);if(!g)return;$d(g);return}function vc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,l=0;l=r;r=r+32|0;i=l;f=k[b>>2]|0;e=k[a>>2]|0;if((f|0)>=(e|0))if((f|0)==(e|0))g=(k[b+4>>2]|0)<(k[a+4>>2]|0);else g=0;else g=1;e=k[c>>2]|0;if((e|0)>=(f|0))if((e|0)==(f|0))e=(k[c+4>>2]|0)<(k[b+4>>2]|0);else e=0;else e=1;do if(!g)if(e){k[i>>2]=k[b>>2];k[i+4>>2]=k[b+4>>2];k[i+8>>2]=k[b+8>>2];k[i+12>>2]=k[b+12>>2];k[i+16>>2]=k[b+16>>2];k[i+20>>2]=k[b+20>>2];k[i+24>>2]=k[b+24>>2];k[i+28>>2]=k[b+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];k[b+24>>2]=k[c+24>>2];j[b+28>>1]=j[c+28>>1]|0;k[c>>2]=k[i>>2];k[c+4>>2]=k[i+4>>2];k[c+8>>2]=k[i+8>>2];k[c+12>>2]=k[i+12>>2];k[c+16>>2]=k[i+16>>2];k[c+20>>2]=k[i+20>>2];k[c+24>>2]=k[i+24>>2];j[c+28>>1]=j[i+28>>1]|0;e=k[b>>2]|0;f=k[a>>2]|0;if((e|0)>=(f|0)){if((e|0)!=(f|0)){h=1;break}if((k[b+4>>2]|0)>=(k[a+4>>2]|0)){h=1;break}};k[i>>2]=k[a>>2];k[i+4>>2]=k[a+4>>2];k[i+8>>2]=k[a+8>>2];k[i+12>>2]=k[a+12>>2];k[i+16>>2]=k[a+16>>2];k[i+20>>2]=k[a+20>>2];k[i+24>>2]=k[a+24>>2];k[i+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];j[a+28>>1]=j[b+28>>1]|0;k[b>>2]=k[i>>2];k[b+4>>2]=k[i+4>>2];k[b+8>>2]=k[i+8>>2];k[b+12>>2]=k[i+12>>2];k[b+16>>2]=k[i+16>>2];k[b+20>>2]=k[i+20>>2];k[b+24>>2]=k[i+24>>2];j[b+28>>1]=j[i+28>>1]|0;h=2}else h=0;else{k[i>>2]=k[a>>2];k[i+4>>2]=k[a+4>>2];k[i+8>>2]=k[a+8>>2];k[i+12>>2]=k[a+12>>2];k[i+16>>2]=k[a+16>>2];k[i+20>>2]=k[a+20>>2];k[i+24>>2]=k[a+24>>2];k[i+28>>2]=k[a+28>>2];if(e){k[a>>2]=k[c>>2];k[a+4>>2]=k[c+4>>2];k[a+8>>2]=k[c+8>>2];k[a+12>>2]=k[c+12>>2];k[a+16>>2]=k[c+16>>2];k[a+20>>2]=k[c+20>>2];k[a+24>>2]=k[c+24>>2];j[a+28>>1]=j[c+28>>1]|0;k[c>>2]=k[i>>2];k[c+4>>2]=k[i+4>>2];k[c+8>>2]=k[i+8>>2];k[c+12>>2]=k[i+12>>2];k[c+16>>2]=k[i+16>>2];k[c+20>>2]=k[i+20>>2];k[c+24>>2]=k[i+24>>2];j[c+28>>1]=j[i+28>>1]|0;h=1;break};k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];j[a+28>>1]=j[b+28>>1]|0;k[b>>2]=k[i>>2];k[b+4>>2]=k[i+4>>2];k[b+8>>2]=k[i+8>>2];k[b+12>>2]=k[i+12>>2];k[b+16>>2]=k[i+16>>2];k[b+20>>2]=k[i+20>>2];k[b+24>>2]=k[i+24>>2];j[b+28>>1]=j[i+28>>1]|0;e=k[c>>2]|0;f=k[b>>2]|0;if((e|0)>=(f|0)){if((e|0)!=(f|0)){h=1;break}if((k[c+4>>2]|0)>=(k[b+4>>2]|0)){h=1;break}};k[i>>2]=k[b>>2];k[i+4>>2]=k[b+4>>2];k[i+8>>2]=k[b+8>>2];k[i+12>>2]=k[b+12>>2];k[i+16>>2]=k[b+16>>2];k[i+20>>2]=k[b+20>>2];k[i+24>>2]=k[b+24>>2];k[i+28>>2]=k[b+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];k[b+24>>2]=k[c+24>>2];j[b+28>>1]=j[c+28>>1]|0;k[c>>2]=k[i>>2];k[c+4>>2]=k[i+4>>2];k[c+8>>2]=k[i+8>>2];k[c+12>>2]=k[i+12>>2];k[c+16>>2]=k[i+16>>2];k[c+20>>2]=k[i+20>>2];k[c+24>>2]=k[i+24>>2];j[c+28>>1]=j[i+28>>1]|0;h=2}while(0);e=k[d>>2]|0;f=k[c>>2]|0;if((e|0)>=(f|0)){if((e|0)!=(f|0)){b=h;r=l;return b|0}if((k[d+4>>2]|0)>=(k[c+4>>2]|0)){b=h;r=l;return b|0}};k[i>>2]=k[c>>2];k[i+4>>2]=k[c+4>>2];k[i+8>>2]=k[c+8>>2];k[i+12>>2]=k[c+12>>2];k[i+16>>2]=k[c+16>>2];k[i+20>>2]=k[c+20>>2];k[i+24>>2]=k[c+24>>2];k[i+28>>2]=k[c+28>>2];k[c>>2]=k[d>>2];k[c+4>>2]=k[d+4>>2];k[c+8>>2]=k[d+8>>2];k[c+12>>2]=k[d+12>>2];k[c+16>>2]=k[d+16>>2];k[c+20>>2]=k[d+20>>2];k[c+24>>2]=k[d+24>>2];j[c+28>>1]=j[d+28>>1]|0;k[d>>2]=k[i>>2];k[d+4>>2]=k[i+4>>2];k[d+8>>2]=k[i+8>>2];k[d+12>>2]=k[i+12>>2];k[d+16>>2]=k[i+16>>2];k[d+20>>2]=k[i+20>>2];k[d+24>>2]=k[i+24>>2];j[d+28>>1]=j[i+28>>1]|0;e=h+1|0;f=k[c>>2]|0;g=k[b>>2]|0;if((f|0)>=(g|0)){if((f|0)!=(g|0)){b=e;r=l;return b|0}if((k[c+4>>2]|0)>=(k[b+4>>2]|0)){b=e;r=l;return b|0}};k[i>>2]=k[b>>2];k[i+4>>2]=k[b+4>>2];k[i+8>>2]=k[b+8>>2];k[i+12>>2]=k[b+12>>2];k[i+16>>2]=k[b+16>>2];k[i+20>>2]=k[b+20>>2];k[i+24>>2]=k[b+24>>2];k[i+28>>2]=k[b+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];k[b+24>>2]=k[c+24>>2];j[b+28>>1]=j[c+28>>1]|0;k[c>>2]=k[i>>2];k[c+4>>2]=k[i+4>>2];k[c+8>>2]=k[i+8>>2];k[c+12>>2]=k[i+12>>2];k[c+16>>2]=k[i+16>>2];k[c+20>>2]=k[i+20>>2];k[c+24>>2]=k[i+24>>2];j[c+28>>1]=j[i+28>>1]|0;e=h+2|0;f=k[b>>2]|0;g=k[a>>2]|0;if((f|0)>=(g|0)){if((f|0)!=(g|0)){b=e;r=l;return b|0}if((k[b+4>>2]|0)>=(k[a+4>>2]|0)){b=e;r=l;return b|0}};k[i>>2]=k[a>>2];k[i+4>>2]=k[a+4>>2];k[i+8>>2]=k[a+8>>2];k[i+12>>2]=k[a+12>>2];k[i+16>>2]=k[a+16>>2];k[i+20>>2]=k[a+20>>2];k[i+24>>2]=k[a+24>>2];k[i+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];j[a+28>>1]=j[b+28>>1]|0;k[b>>2]=k[i>>2];k[b+4>>2]=k[i+4>>2];k[b+8>>2]=k[i+8>>2];k[b+12>>2]=k[i+12>>2];k[b+16>>2]=k[i+16>>2];k[b+20>>2]=k[i+20>>2];k[b+24>>2]=k[i+24>>2];j[b+28>>1]=j[i+28>>1]|0;b=h+3|0;r=l;return b|0}function wc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,l=0;l=r;r=r+32|0;i=l;h=vc(a,b,c,d)|0;f=k[e>>2]|0;g=k[d>>2]|0;if((f|0)>=(g|0)){if((f|0)!=(g|0)){b=h;r=l;return b|0}if((k[e+4>>2]|0)>=(k[d+4>>2]|0)){b=h;r=l;return b|0}};k[i>>2]=k[d>>2];k[i+4>>2]=k[d+4>>2];k[i+8>>2]=k[d+8>>2];k[i+12>>2]=k[d+12>>2];k[i+16>>2]=k[d+16>>2];k[i+20>>2]=k[d+20>>2];k[i+24>>2]=k[d+24>>2];k[i+28>>2]=k[d+28>>2];k[d>>2]=k[e>>2];k[d+4>>2]=k[e+4>>2];k[d+8>>2]=k[e+8>>2];k[d+12>>2]=k[e+12>>2];k[d+16>>2]=k[e+16>>2];k[d+20>>2]=k[e+20>>2];k[d+24>>2]=k[e+24>>2];j[d+28>>1]=j[e+28>>1]|0;k[e>>2]=k[i>>2];k[e+4>>2]=k[i+4>>2];k[e+8>>2]=k[i+8>>2];k[e+12>>2]=k[i+12>>2];k[e+16>>2]=k[i+16>>2];k[e+20>>2]=k[i+20>>2];k[e+24>>2]=k[i+24>>2];j[e+28>>1]=j[i+28>>1]|0;f=h+1|0;g=k[d>>2]|0;e=k[c>>2]|0;if((g|0)>=(e|0)){if((g|0)!=(e|0)){b=f;r=l;return b|0}if((k[d+4>>2]|0)>=(k[c+4>>2]|0)){b=f;r=l;return b|0}};k[i>>2]=k[c>>2];k[i+4>>2]=k[c+4>>2];k[i+8>>2]=k[c+8>>2];k[i+12>>2]=k[c+12>>2];k[i+16>>2]=k[c+16>>2];k[i+20>>2]=k[c+20>>2];k[i+24>>2]=k[c+24>>2];k[i+28>>2]=k[c+28>>2];k[c>>2]=k[d>>2];k[c+4>>2]=k[d+4>>2];k[c+8>>2]=k[d+8>>2];k[c+12>>2]=k[d+12>>2];k[c+16>>2]=k[d+16>>2];k[c+20>>2]=k[d+20>>2];k[c+24>>2]=k[d+24>>2];j[c+28>>1]=j[d+28>>1]|0;k[d>>2]=k[i>>2];k[d+4>>2]=k[i+4>>2];k[d+8>>2]=k[i+8>>2];k[d+12>>2]=k[i+12>>2];k[d+16>>2]=k[i+16>>2];k[d+20>>2]=k[i+20>>2];k[d+24>>2]=k[i+24>>2];j[d+28>>1]=j[i+28>>1]|0;f=h+2|0;g=k[c>>2]|0;e=k[b>>2]|0;if((g|0)>=(e|0)){if((g|0)!=(e|0)){b=f;r=l;return b|0}if((k[c+4>>2]|0)>=(k[b+4>>2]|0)){b=f;r=l;return b|0}};k[i>>2]=k[b>>2];k[i+4>>2]=k[b+4>>2];k[i+8>>2]=k[b+8>>2];k[i+12>>2]=k[b+12>>2];k[i+16>>2]=k[b+16>>2];k[i+20>>2]=k[b+20>>2];k[i+24>>2]=k[b+24>>2];k[i+28>>2]=k[b+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];k[b+24>>2]=k[c+24>>2];j[b+28>>1]=j[c+28>>1]|0;k[c>>2]=k[i>>2];k[c+4>>2]=k[i+4>>2];k[c+8>>2]=k[i+8>>2];k[c+12>>2]=k[i+12>>2];k[c+16>>2]=k[i+16>>2];k[c+20>>2]=k[i+20>>2];k[c+24>>2]=k[i+24>>2];j[c+28>>1]=j[i+28>>1]|0;f=h+3|0;g=k[b>>2]|0;e=k[a>>2]|0;if((g|0)>=(e|0)){if((g|0)!=(e|0)){b=f;r=l;return b|0}if((k[b+4>>2]|0)>=(k[a+4>>2]|0)){b=f;r=l;return b|0}};k[i>>2]=k[a>>2];k[i+4>>2]=k[a+4>>2];k[i+8>>2]=k[a+8>>2];k[i+12>>2]=k[a+12>>2];k[i+16>>2]=k[a+16>>2];k[i+20>>2]=k[a+20>>2];k[i+24>>2]=k[a+24>>2];k[i+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];j[a+28>>1]=j[b+28>>1]|0;k[b>>2]=k[i>>2];k[b+4>>2]=k[i+4>>2];k[b+8>>2]=k[i+8>>2];k[b+12>>2]=k[i+12>>2];k[b+16>>2]=k[i+16>>2];k[b+20>>2]=k[i+20>>2];k[b+24>>2]=k[i+24>>2];j[b+28>>1]=j[i+28>>1]|0;b=h+4|0;r=l;return b|0}function xc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,l=0,m=0,n=0,o=0;o=r;r=r+64|0;i=o+24|0;m=o;switch(b-a>>5|0){case 2:{c=b+-32|0;d=k[c>>2]|0;e=k[a>>2]|0;if((d|0)>=(e|0)){if((d|0)!=(e|0)){a=1;r=o;return a|0}if((k[b+-28>>2]|0)>=(k[a+4>>2]|0)){a=1;r=o;return a|0}};k[i>>2]=k[a>>2];k[i+4>>2]=k[a+4>>2];k[i+8>>2]=k[a+8>>2];k[i+12>>2]=k[a+12>>2];k[i+16>>2]=k[a+16>>2];k[i+20>>2]=k[a+20>>2];k[i+24>>2]=k[a+24>>2];k[i+28>>2]=k[a+28>>2];k[a>>2]=k[c>>2];k[a+4>>2]=k[c+4>>2];k[a+8>>2]=k[c+8>>2];k[a+12>>2]=k[c+12>>2];k[a+16>>2]=k[c+16>>2];k[a+20>>2]=k[c+20>>2];k[a+24>>2]=k[c+24>>2];j[a+28>>1]=j[c+28>>1]|0;k[c>>2]=k[i>>2];k[c+4>>2]=k[i+4>>2];k[c+8>>2]=k[i+8>>2];k[c+12>>2]=k[i+12>>2];k[c+16>>2]=k[i+16>>2];k[c+20>>2]=k[i+20>>2];k[c+24>>2]=k[i+24>>2];j[c+28>>1]=j[i+28>>1]|0;a=1;r=o;return a|0}case 3:{g=a+32|0;f=b+-32|0;e=k[g>>2]|0;c=k[a>>2]|0;if((e|0)>=(c|0))if((e|0)==(c|0))d=(k[a+36>>2]|0)<(k[a+4>>2]|0);else d=0;else d=1;c=k[f>>2]|0;if((c|0)>=(e|0))if((c|0)==(e|0))c=(k[b+-28>>2]|0)<(k[a+36>>2]|0);else c=0;else c=1;if(!d){if(!c){a=1;r=o;return a|0};k[i>>2]=k[g>>2];k[i+4>>2]=k[g+4>>2];k[i+8>>2]=k[g+8>>2];k[i+12>>2]=k[g+12>>2];k[i+16>>2]=k[g+16>>2];k[i+20>>2]=k[g+20>>2];k[i+24>>2]=k[g+24>>2];k[i+28>>2]=k[g+28>>2];k[g>>2]=k[f>>2];k[g+4>>2]=k[f+4>>2];k[g+8>>2]=k[f+8>>2];k[g+12>>2]=k[f+12>>2];k[g+16>>2]=k[f+16>>2];k[g+20>>2]=k[f+20>>2];k[g+24>>2]=k[f+24>>2];j[g+28>>1]=j[f+28>>1]|0;k[f>>2]=k[i>>2];k[f+4>>2]=k[i+4>>2];k[f+8>>2]=k[i+8>>2];k[f+12>>2]=k[i+12>>2];k[f+16>>2]=k[i+16>>2];k[f+20>>2]=k[i+20>>2];k[f+24>>2]=k[i+24>>2];j[f+28>>1]=j[i+28>>1]|0;c=k[g>>2]|0;d=k[a>>2]|0;if((c|0)>=(d|0)){if((c|0)!=(d|0)){a=1;r=o;return a|0}if((k[a+36>>2]|0)>=(k[a+4>>2]|0)){a=1;r=o;return a|0}};k[i>>2]=k[a>>2];k[i+4>>2]=k[a+4>>2];k[i+8>>2]=k[a+8>>2];k[i+12>>2]=k[a+12>>2];k[i+16>>2]=k[a+16>>2];k[i+20>>2]=k[a+20>>2];k[i+24>>2]=k[a+24>>2];k[i+28>>2]=k[a+28>>2];k[a>>2]=k[g>>2];k[a+4>>2]=k[g+4>>2];k[a+8>>2]=k[g+8>>2];k[a+12>>2]=k[g+12>>2];k[a+16>>2]=k[g+16>>2];k[a+20>>2]=k[g+20>>2];k[a+24>>2]=k[g+24>>2];j[a+28>>1]=j[g+28>>1]|0;k[g>>2]=k[i>>2];k[g+4>>2]=k[i+4>>2];k[g+8>>2]=k[i+8>>2];k[g+12>>2]=k[i+12>>2];k[g+16>>2]=k[i+16>>2];k[g+20>>2]=k[i+20>>2];k[g+24>>2]=k[i+24>>2];j[g+28>>1]=j[i+28>>1]|0;a=1;r=o;return a|0};k[i>>2]=k[a>>2];k[i+4>>2]=k[a+4>>2];k[i+8>>2]=k[a+8>>2];k[i+12>>2]=k[a+12>>2];k[i+16>>2]=k[a+16>>2];k[i+20>>2]=k[a+20>>2];k[i+24>>2]=k[a+24>>2];k[i+28>>2]=k[a+28>>2];if(c){k[a>>2]=k[f>>2];k[a+4>>2]=k[f+4>>2];k[a+8>>2]=k[f+8>>2];k[a+12>>2]=k[f+12>>2];k[a+16>>2]=k[f+16>>2];k[a+20>>2]=k[f+20>>2];k[a+24>>2]=k[f+24>>2];j[a+28>>1]=j[f+28>>1]|0;k[f>>2]=k[i>>2];k[f+4>>2]=k[i+4>>2];k[f+8>>2]=k[i+8>>2];k[f+12>>2]=k[i+12>>2];k[f+16>>2]=k[i+16>>2];k[f+20>>2]=k[i+20>>2];k[f+24>>2]=k[i+24>>2];j[f+28>>1]=j[i+28>>1]|0;a=1;r=o;return a|0};k[a>>2]=k[g>>2];k[a+4>>2]=k[g+4>>2];k[a+8>>2]=k[g+8>>2];k[a+12>>2]=k[g+12>>2];k[a+16>>2]=k[g+16>>2];k[a+20>>2]=k[g+20>>2];k[a+24>>2]=k[g+24>>2];j[a+28>>1]=j[g+28>>1]|0;k[g>>2]=k[i>>2];k[g+4>>2]=k[i+4>>2];k[g+8>>2]=k[i+8>>2];k[g+12>>2]=k[i+12>>2];k[g+16>>2]=k[i+16>>2];k[g+20>>2]=k[i+20>>2];k[g+24>>2]=k[i+24>>2];j[g+28>>1]=j[i+28>>1]|0;c=k[f>>2]|0;d=k[g>>2]|0;if((c|0)>=(d|0)){if((c|0)!=(d|0)){a=1;r=o;return a|0}if((k[b+-28>>2]|0)>=(k[a+36>>2]|0)){a=1;r=o;return a|0}};k[i>>2]=k[g>>2];k[i+4>>2]=k[g+4>>2];k[i+8>>2]=k[g+8>>2];k[i+12>>2]=k[g+12>>2];k[i+16>>2]=k[g+16>>2];k[i+20>>2]=k[g+20>>2];k[i+24>>2]=k[g+24>>2];k[i+28>>2]=k[g+28>>2];k[g>>2]=k[f>>2];k[g+4>>2]=k[f+4>>2];k[g+8>>2]=k[f+8>>2];k[g+12>>2]=k[f+12>>2];k[g+16>>2]=k[f+16>>2];k[g+20>>2]=k[f+20>>2];k[g+24>>2]=k[f+24>>2];j[g+28>>1]=j[f+28>>1]|0;k[f>>2]=k[i>>2];k[f+4>>2]=k[i+4>>2];k[f+8>>2]=k[i+8>>2];k[f+12>>2]=k[i+12>>2];k[f+16>>2]=k[i+16>>2];k[f+20>>2]=k[i+20>>2];k[f+24>>2]=k[i+24>>2];j[f+28>>1]=j[i+28>>1]|0;a=1;r=o;return a|0}case 4:{vc(a,a+32|0,a+64|0,b+-32|0)|0;a=1;r=o;return a|0}case 5:{wc(a,a+32|0,a+64|0,a+96|0,b+-32|0)|0;a=1;r=o;return a|0}case 1:case 0:{a=1;r=o;return a|0}default:{f=a+64|0;h=a+32|0;c=k[h>>2]|0;e=k[a>>2]|0;if((c|0)>=(e|0))if((c|0)==(e|0))d=(k[a+36>>2]|0)<(k[a+4>>2]|0);else d=0;else d=1;g=k[f>>2]|0;if((g|0)>=(c|0))if((g|0)==(c|0))c=(k[a+68>>2]|0)<(k[a+36>>2]|0);else c=0;else c=1;do if(!d){if(c){k[i>>2]=k[h>>2];k[i+4>>2]=k[h+4>>2];k[i+8>>2]=k[h+8>>2];k[i+12>>2]=k[h+12>>2];k[i+16>>2]=k[h+16>>2];k[i+20>>2]=k[h+20>>2];k[i+24>>2]=k[h+24>>2];k[i+28>>2]=k[h+28>>2];k[h>>2]=k[f>>2];k[h+4>>2]=k[f+4>>2];k[h+8>>2]=k[f+8>>2];k[h+12>>2]=k[f+12>>2];k[h+16>>2]=k[f+16>>2];k[h+20>>2]=k[f+20>>2];k[h+24>>2]=k[f+24>>2];j[h+28>>1]=j[f+28>>1]|0;k[f>>2]=k[i>>2];k[f+4>>2]=k[i+4>>2];k[f+8>>2]=k[i+8>>2];k[f+12>>2]=k[i+12>>2];k[f+16>>2]=k[i+16>>2];k[f+20>>2]=k[i+20>>2];k[f+24>>2]=k[i+24>>2];j[f+28>>1]=j[i+28>>1]|0;c=k[h>>2]|0;if((c|0)>=(e|0)){if((c|0)!=(e|0))break;if((k[a+36>>2]|0)>=(k[a+4>>2]|0))break};k[i>>2]=k[a>>2];k[i+4>>2]=k[a+4>>2];k[i+8>>2]=k[a+8>>2];k[i+12>>2]=k[a+12>>2];k[i+16>>2]=k[a+16>>2];k[i+20>>2]=k[a+20>>2];k[i+24>>2]=k[a+24>>2];k[i+28>>2]=k[a+28>>2];k[a>>2]=k[h>>2];k[a+4>>2]=k[h+4>>2];k[a+8>>2]=k[h+8>>2];k[a+12>>2]=k[h+12>>2];k[a+16>>2]=k[h+16>>2];k[a+20>>2]=k[h+20>>2];k[a+24>>2]=k[h+24>>2];j[a+28>>1]=j[h+28>>1]|0;k[h>>2]=k[i>>2];k[h+4>>2]=k[i+4>>2];k[h+8>>2]=k[i+8>>2];k[h+12>>2]=k[i+12>>2];k[h+16>>2]=k[i+16>>2];k[h+20>>2]=k[i+20>>2];k[h+24>>2]=k[i+24>>2];j[h+28>>1]=j[i+28>>1]|0}}else{k[i>>2]=k[a>>2];k[i+4>>2]=k[a+4>>2];k[i+8>>2]=k[a+8>>2];k[i+12>>2]=k[a+12>>2];k[i+16>>2]=k[a+16>>2];k[i+20>>2]=k[a+20>>2];k[i+24>>2]=k[a+24>>2];k[i+28>>2]=k[a+28>>2];if(c){k[a>>2]=k[f>>2];k[a+4>>2]=k[f+4>>2];k[a+8>>2]=k[f+8>>2];k[a+12>>2]=k[f+12>>2];k[a+16>>2]=k[f+16>>2];k[a+20>>2]=k[f+20>>2];k[a+24>>2]=k[f+24>>2];j[a+28>>1]=j[f+28>>1]|0;k[f>>2]=k[i>>2];k[f+4>>2]=k[i+4>>2];k[f+8>>2]=k[i+8>>2];k[f+12>>2]=k[i+12>>2];k[f+16>>2]=k[i+16>>2];k[f+20>>2]=k[i+20>>2];k[f+24>>2]=k[i+24>>2];j[f+28>>1]=j[i+28>>1]|0;break};k[a>>2]=k[h>>2];k[a+4>>2]=k[h+4>>2];k[a+8>>2]=k[h+8>>2];k[a+12>>2]=k[h+12>>2];k[a+16>>2]=k[h+16>>2];k[a+20>>2]=k[h+20>>2];k[a+24>>2]=k[h+24>>2];j[a+28>>1]=j[h+28>>1]|0;k[h>>2]=k[i>>2];k[h+4>>2]=k[i+4>>2];k[h+8>>2]=k[i+8>>2];k[h+12>>2]=k[i+12>>2];k[h+16>>2]=k[i+16>>2];k[h+20>>2]=k[i+20>>2];k[h+24>>2]=k[i+24>>2];j[h+28>>1]=j[i+28>>1]|0;c=k[h>>2]|0;if((g|0)>=(c|0)){if((g|0)!=(c|0))break;if((k[a+68>>2]|0)>=(k[a+36>>2]|0))break};k[i>>2]=k[h>>2];k[i+4>>2]=k[h+4>>2];k[i+8>>2]=k[h+8>>2];k[i+12>>2]=k[h+12>>2];k[i+16>>2]=k[h+16>>2];k[i+20>>2]=k[h+20>>2];k[i+24>>2]=k[h+24>>2];k[i+28>>2]=k[h+28>>2];k[h>>2]=k[f>>2];k[h+4>>2]=k[f+4>>2];k[h+8>>2]=k[f+8>>2];k[h+12>>2]=k[f+12>>2];k[h+16>>2]=k[f+16>>2];k[h+20>>2]=k[f+20>>2];k[h+24>>2]=k[f+24>>2];j[h+28>>1]=j[f+28>>1]|0;k[f>>2]=k[i>>2];k[f+4>>2]=k[i+4>>2];k[f+8>>2]=k[i+8>>2];k[f+12>>2]=k[i+12>>2];k[f+16>>2]=k[i+16>>2];k[f+20>>2]=k[i+20>>2];k[f+24>>2]=k[i+24>>2];j[f+28>>1]=j[i+28>>1]|0}while(0);d=a+96|0;if((d|0)==(b|0)){a=1;r=o;return a|0}c=0;while(1){i=k[d>>2]|0;e=k[f>>2]|0;if((i|0)>=(e|0)){if((i|0)==(e|0)?(l=k[d+4>>2]|0,(l|0)<(k[f+4>>2]|0)):0){h=l;n=50}}else{h=k[d+4>>2]|0;n=50}if((n|0)==50){n=0;g=d+8|0;k[m>>2]=k[g>>2];k[m+4>>2]=k[g+4>>2];k[m+8>>2]=k[g+8>>2];k[m+12>>2]=k[g+12>>2];k[m+16>>2]=k[g+16>>2];k[m+20>>2]=k[g+20>>2];k[d>>2]=k[f>>2];k[d+4>>2]=k[f+4>>2];k[d+8>>2]=k[f+8>>2];k[d+12>>2]=k[f+12>>2];k[d+16>>2]=k[f+16>>2];k[d+20>>2]=k[f+20>>2];k[d+24>>2]=k[f+24>>2];j[d+28>>1]=j[f+28>>1]|0;a:do if((f|0)==(a|0))e=a;else while(1){e=f;f=f+-32|0;g=k[f>>2]|0;if((i|0)>=(g|0)){if((i|0)!=(g|0))break a;if((h|0)>=(k[e+-28>>2]|0))break a};k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];k[e+16>>2]=k[f+16>>2];k[e+20>>2]=k[f+20>>2];k[e+24>>2]=k[f+24>>2];j[e+28>>1]=j[f+28>>1]|0;if((f|0)==(a|0)){e=a;break}}while(0);k[e>>2]=i;k[e+4>>2]=h;i=e+8|0;k[i>>2]=k[m>>2];k[i+4>>2]=k[m+4>>2];k[i+8>>2]=k[m+8>>2];k[i+12>>2]=k[m+12>>2];k[i+16>>2]=k[m+16>>2];j[i+20>>1]=j[m+20>>1]|0;c=c+1|0;if((c|0)==8)break}e=d+32|0;if((e|0)==(b|0)){c=1;n=58;break}else{f=d;d=e}}if((n|0)==58){r=o;return c|0}a=(d+32|0)==(b|0);r=o;return a|0}}return 0}function yc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;n=a+4|0;f=k[n>>2]|0;m=k[a>>2]|0;d=m;j=f-d>>4;l=j+1|0;if(l>>>0>268435455)xa(1340,1363,303,1438);o=a+8|0;e=(k[o>>2]|0)-d|0;if(e>>4>>>0<134217727){e=e>>3;e=e>>>0<l>>>0?l:e;if(!e){h=0;g=0}else i=5}else{e=268435455;i=5}if((i|0)==5){h=e<<4;h=(h|0)==0?1:h;g=_d(h)|0;a:do if(!g){while(1){g=k[35]|0;k[35]=g+0;if(!g)break;Xa[g&0]();g=_d(h)|0;if(g)break a}o=ya(4)|0;k[o>>2]=128;La(o|0,8,1)}while(0);h=e}i=g+(j<<4)|0;e=i;h=g+(h<<4)|0;k[i>>2]=0;k[i+4>>2]=0;k[i+8>>2]=0;k[i+12>>2]=0;k[i>>2]=k[b>>2];k[g+(j<<4)+4>>2]=k[b+4>>2];k[g+(j<<4)+8>>2]=k[c>>2];k[g+(j<<4)+12>>2]=k[c+4>>2];g=g+(l<<4)|0;if((f|0)==(m|0))f=a;else{d=i;do{b=d+-16|0;c=f;f=f+-16|0;k[b>>2]=0;k[b+4>>2]=0;k[b+8>>2]=0;k[b+12>>2]=0;k[b>>2]=k[f>>2];k[d+-12>>2]=k[c+-12>>2];k[d+-8>>2]=k[c+-8>>2];k[d+-4>>2]=k[c+-4>>2];d=e+-16|0;e=d}while((f|0)!=(m|0));f=a;d=k[a>>2]|0}k[f>>2]=e;k[n>>2]=g;k[o>>2]=h;if(!d)return;$d(d);return}function zc(a,b){a=a|0;b=b|0;return (k[a+16>>2]|0)<(k[b+16>>2]|0)|0}function Ac(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0;t=r;r=r+48|0;s=t;q=b;a:while(1){n=q;p=q+-44|0;b:while(1){j=a;b=n-j|0;switch((b|0)/44|0|0){case 2:{o=4;break a}case 3:{o=6;break a}case 4:{o=14;break a}case 5:{o=15;break a}case 1:case 0:{o=82;break a}default:{}}if((b|0)<1364){o=21;break a}d=(b|0)/88|0;i=a+(d*44|0)|0;do if((b|0)>43956){e=(b|0)/176|0;f=a+(e*44|0)|0;e=a+((e+d|0)*44|0)|0;b=Hc(a,f,i,e,c)|0;if(Za[k[c>>2]&7](p,e)|0){d=s;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=p;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=p;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=b+1|0;if(Za[k[c>>2]&7](e,i)|0){d=s;l=i;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=i;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=b+2|0;if(Za[k[c>>2]&7](i,f)|0){d=s;l=f;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=f;l=i;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=i;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=b+3|0;if(Za[k[c>>2]&7](f,a)|0){d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=f;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=f;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));b=b+4|0}else b=d}else b=d}else b=d}}else{m=Za[k[c>>2]&7](i,a)|0;b=Za[k[c>>2]&7](p,i)|0;if(!m){if(!b){b=0;break}d=s;l=i;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=i;l=p;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=p;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));if(!(Za[k[c>>2]&7](i,a)|0)){b=1;break}d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=i;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=i;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));b=2;break}if(b){d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=p;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=p;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));b=1;break}d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=i;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=i;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));if(Za[k[c>>2]&7](p,i)|0){d=s;l=i;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=i;l=p;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=p;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));b=2}else b=1}while(0);do if(Za[k[c>>2]&7](a,i)|0)e=p;else{e=p;while(1){e=e+-44|0;if((a|0)==(e|0))break;if(Za[k[c>>2]&7](e,i)|0){o=65;break}}if((o|0)==65){o=0;d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));b=b+1|0;break}b=a+44|0;if(!(Za[k[c>>2]&7](a,p)|0)){if((b|0)==(p|0)){o=82;break a}else e=a;while(1){d=b+44|0;if(Za[k[c>>2]&7](a,b)|0)break;if((d|0)==(p|0)){o=82;break a}else{e=b;b=d}}b=e+44|0;d=s;l=b;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=b;l=p;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=p;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));b=e+88|0}if((b|0)==(p|0)){o=82;break a}else d=p;while(1){e=b;while(1){b=e+44|0;if(Za[k[c>>2]&7](a,e)|0){f=d;break}else e=b}do f=f+-44|0;while(Za[k[c>>2]&7](a,f)|0);if(e>>>0>=f>>>0){a=e;continue b}d=s;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=f;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=f;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=f}}while(0);d=a+44|0;c:do if(d>>>0<e>>>0)while(1){g=d;while(1){f=g+44|0;if(Za[k[c>>2]&7](g,i)|0)g=f;else{h=e;break}}do h=h+-44|0;while(!(Za[k[c>>2]&7](h,i)|0));if(g>>>0>h>>>0){e=i;break c}d=s;l=g;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=g;l=h;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=h;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=f;e=h;i=(i|0)==(g|0)?h:i;b=b+1|0}else{g=d;e=i}while(0);if((g|0)!=(e|0)?Za[k[c>>2]&7](e,g)|0:0){d=s;l=g;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=g;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));b=b+1|0}if(!b){b=Ic(a,g,c)|0;d=g+44|0;if(Ic(d,q,c)|0){o=77;break}if(b){a=d;continue}}m=g;if((m-j|0)>=(n-m|0)){o=81;break}Ac(a,g,c);a=g+44|0}if((o|0)==77){o=0;if(b){o=82;break}else{q=g;continue}}else if((o|0)==81){o=0;Ac(g+44|0,q,c);q=g;continue}}if((o|0)==4){if(!(Za[k[c>>2]&7](p,a)|0)){r=t;return}d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=p;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=p;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));r=t;return}else if((o|0)==6){e=a+44|0;q=Za[k[c>>2]&7](e,a)|0;b=Za[k[c>>2]&7](p,e)|0;if(!q){if(!b){r=t;return}d=s;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=p;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=p;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));if(!(Za[k[c>>2]&7](e,a)|0)){r=t;return}d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));r=t;return}if(b){d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=p;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=p;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));r=t;return}d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));if(!(Za[k[c>>2]&7](p,e)|0)){r=t;return}d=s;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=p;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=p;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));r=t;return}else if((o|0)==14){Hc(a,a+44|0,a+88|0,p,c)|0;r=t;return}else if((o|0)==15){b=a+44|0;e=a+88|0;f=a+132|0;Hc(a,b,e,f,c)|0;if(!(Za[k[c>>2]&7](p,f)|0)){r=t;return}d=s;l=f;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=f;l=p;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=p;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));if(!(Za[k[c>>2]&7](f,e)|0)){r=t;return}d=s;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=f;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=f;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));if(!(Za[k[c>>2]&7](e,b)|0)){r=t;return}d=s;l=b;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=b;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));if(!(Za[k[c>>2]&7](b,a)|0)){r=t;return}d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=b;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=b;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));r=t;return}else if((o|0)==21){f=a+88|0;e=a+44|0;p=Za[k[c>>2]&7](e,a)|0;b=Za[k[c>>2]&7](f,e)|0;do if(p){if(b){d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=f;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=f;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));break}d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));if(Za[k[c>>2]&7](f,e)|0){d=s;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=f;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=f;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0))}}else if(b){d=s;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=f;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=f;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));if(Za[k[c>>2]&7](e,a)|0){d=s;l=a;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=a;l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=e;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0))}}while(0);b=a+132|0;if((b|0)==(q|0)){r=t;return}e=f;while(1){if(Za[k[c>>2]&7](b,e)|0){d=s;l=b;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));d=b;while(1){l=e;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0));if((e|0)==(a|0))break;d=e+-44|0;if(Za[k[c>>2]&7](s,d)|0){p=e;e=d;d=p}else break}d=e;l=s;m=d+44|0;do{k[d>>2]=k[l>>2];d=d+4|0;l=l+4|0}while((d|0)<(m|0))}d=b+44|0;if((d|0)==(q|0))break;else{e=b;b=d}}r=t;return}else if((o|0)==82){r=t;return}}function Bc(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;Cc(k[a+68>>2]|0);d=a+52|0;c=a+60|0;if((k[c>>2]|0)!=0?(b=k[a+56>>2]|0,e=(k[d>>2]|0)+4|0,f=k[b>>2]|0,k[f+4>>2]=k[e>>2],k[k[e>>2]>>2]=f,k[c>>2]=0,(b|0)!=(d|0)):0)do{f=b;b=k[b+4>>2]|0;$d(f)}while((b|0)!=(d|0));b=k[a+36>>2]|0;c=b;if(b){d=a+40|0;e=k[d>>2]|0;if((e|0)!=(b|0))k[d>>2]=e+(~((e+-4-c|0)>>>2)<<2);$d(b)}b=k[a+20>>2]|0;c=b;if(b){d=a+24|0;e=k[d>>2]|0;if((e|0)!=(b|0))k[d>>2]=e+(~(((e+-12-c|0)>>>0)/12|0)*12|0);$d(b)}d=k[a+4>>2]|0;if(!d)return;b=a+8|0;c=k[b>>2]|0;if((c|0)!=(d|0))k[b>>2]=c+(~(((c+-28-d|0)>>>0)/28|0)*28|0);$d(d);return}function Cc(a){a=a|0;if(!a)return;else{Cc(k[a>>2]|0);Cc(k[a+4>>2]|0);$d(a);return}}function Dc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;c=+p[a+16>>3];d=+p[b+16>>3];if(c<d){m=1;return m|0}if(d<c){m=0;return m|0}e=i[a+24>>0]|0;f=i[b+24>>0]|0;if((e&255)<(f&255)){m=1;return m|0}if((f&255)<(e&255)){m=0;return m|0}g=k[a+8>>2]|0;b=k[b+8>>2]|0;e=k[g+28>>2]|0;f=k[g+16>>2]|0;a=e-f|0;g=(k[g+32>>2]|0)-(k[g+20>>2]|0)|0;h=k[b+28>>2]|0;j=k[b+16>>2]|0;l=h-j|0;b=(k[b+32>>2]|0)-(k[b+20>>2]|0)|0;if((a|0)>=0){if((e|0)==(f|0)){m=0;return m|0}}else{a=0-a|0;g=0-g|0}if((l|0)>=0)if((h|0)==(j|0)){m=(a|0)!=0;return m|0}else e=l;else{e=0-l|0;b=0-b|0}j=(e|0)<0?0-e|0:e;h=(g|0)<0?0-g|0:g;h=ne(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;l=(a|0)<0?0-a|0:a;m=(b|0)<0?0-b|0:b;l=ne(m|0,((m|0)<0)<<31>>31|0,l|0,((l|0)<0)<<31>>31|0)|0;m=L;f=ha(e>>31|1,g>>31|1)|0;e=ha(b>>31|1,a>>31|1)|0;if((f|0)<(e|0)){m=1;return m|0}if((e|0)<(f|0)){m=0;return m|0}if((f|0)==-1){m=m>>>0<j>>>0|(m|0)==(j|0)&l>>>0<h>>>0;return m|0}else{m=j>>>0<m>>>0|(j|0)==(m|0)&h>>>0<l>>>0;return m|0}return 0}function Ec(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0;t=r;r=r+64|0;q=t+32|0;p=t;o=b;a:while(1){l=o;n=o+-32|0;s=a;b:while(1){h=s;a=l-h|0;b=a>>5;switch(b|0){case 2:{m=4;break a}case 3:{m=6;break a}case 4:{m=14;break a}case 5:{m=15;break a}case 1:case 0:{m=82;break a}default:{}}if((a|0)<992){m=21;break a}d=(b|0)/2|0;g=s+(d<<5)|0;do if((a|0)>31968){b=(b|0)/4|0;e=s+(b<<5)|0;b=s+(b+d<<5)|0;a=Fc(s,e,g,b,c)|0;if(Za[k[c>>2]&7](n,b)|0){k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[p+28>>2]=k[b+28>>2];k[b>>2]=k[n>>2];k[b+4>>2]=k[n+4>>2];k[b+8>>2]=k[n+8>>2];k[b+12>>2]=k[n+12>>2];k[b+16>>2]=k[n+16>>2];k[b+20>>2]=k[n+20>>2];j[b+24>>1]=j[n+24>>1]|0;i[b+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;d=a+1|0;if(Za[k[c>>2]&7](b,g)|0){k[p>>2]=k[g>>2];k[p+4>>2]=k[g+4>>2];k[p+8>>2]=k[g+8>>2];k[p+12>>2]=k[g+12>>2];k[p+16>>2]=k[g+16>>2];k[p+20>>2]=k[g+20>>2];k[p+24>>2]=k[g+24>>2];k[p+28>>2]=k[g+28>>2];k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];k[g+16>>2]=k[b+16>>2];k[g+20>>2]=k[b+20>>2];j[g+24>>1]=j[b+24>>1]|0;i[g+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;b=a+2|0;if(Za[k[c>>2]&7](g,e)|0){k[p>>2]=k[e>>2];k[p+4>>2]=k[e+4>>2];k[p+8>>2]=k[e+8>>2];k[p+12>>2]=k[e+12>>2];k[p+16>>2]=k[e+16>>2];k[p+20>>2]=k[e+20>>2];k[p+24>>2]=k[e+24>>2];k[p+28>>2]=k[e+28>>2];k[e>>2]=k[g>>2];k[e+4>>2]=k[g+4>>2];k[e+8>>2]=k[g+8>>2];k[e+12>>2]=k[g+12>>2];k[e+16>>2]=k[g+16>>2];k[e+20>>2]=k[g+20>>2];j[e+24>>1]=j[g+24>>1]|0;i[e+26>>0]=i[g+26>>0]|0;k[g>>2]=k[p>>2];k[g+4>>2]=k[p+4>>2];k[g+8>>2]=k[p+8>>2];k[g+12>>2]=k[p+12>>2];k[g+16>>2]=k[p+16>>2];k[g+20>>2]=k[p+20>>2];j[g+24>>1]=j[p+24>>1]|0;i[g+26>>0]=i[p+26>>0]|0;if(Za[k[c>>2]&7](e,s)|0){k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[e>>2];k[s+4>>2]=k[e+4>>2];k[s+8>>2]=k[e+8>>2];k[s+12>>2]=k[e+12>>2];k[s+16>>2]=k[e+16>>2];k[s+20>>2]=k[e+20>>2];j[s+24>>1]=j[e+24>>1]|0;i[s+26>>0]=i[e+26>>0]|0;k[e>>2]=k[p>>2];k[e+4>>2]=k[p+4>>2];k[e+8>>2]=k[p+8>>2];k[e+12>>2]=k[p+12>>2];k[e+16>>2]=k[p+16>>2];k[e+20>>2]=k[p+20>>2];j[e+24>>1]=j[p+24>>1]|0;i[e+26>>0]=i[p+26>>0]|0;a=a+4|0}else a=a+3|0}else a=b}else a=d}}else{f=Za[k[c>>2]&7](g,s)|0;a=Za[k[c>>2]&7](n,g)|0;if(!f){if(!a){a=0;break};k[p>>2]=k[g>>2];k[p+4>>2]=k[g+4>>2];k[p+8>>2]=k[g+8>>2];k[p+12>>2]=k[g+12>>2];k[p+16>>2]=k[g+16>>2];k[p+20>>2]=k[g+20>>2];k[p+24>>2]=k[g+24>>2];k[p+28>>2]=k[g+28>>2];k[g>>2]=k[n>>2];k[g+4>>2]=k[n+4>>2];k[g+8>>2]=k[n+8>>2];k[g+12>>2]=k[n+12>>2];k[g+16>>2]=k[n+16>>2];k[g+20>>2]=k[n+20>>2];j[g+24>>1]=j[n+24>>1]|0;i[g+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](g,s)|0)){a=1;break};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[g>>2];k[s+4>>2]=k[g+4>>2];k[s+8>>2]=k[g+8>>2];k[s+12>>2]=k[g+12>>2];k[s+16>>2]=k[g+16>>2];k[s+20>>2]=k[g+20>>2];j[s+24>>1]=j[g+24>>1]|0;i[s+26>>0]=i[g+26>>0]|0;k[g>>2]=k[p>>2];k[g+4>>2]=k[p+4>>2];k[g+8>>2]=k[p+8>>2];k[g+12>>2]=k[p+12>>2];k[g+16>>2]=k[p+16>>2];k[g+20>>2]=k[p+20>>2];j[g+24>>1]=j[p+24>>1]|0;i[g+26>>0]=i[p+26>>0]|0;a=2;break};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];if(a){k[s>>2]=k[n>>2];k[s+4>>2]=k[n+4>>2];k[s+8>>2]=k[n+8>>2];k[s+12>>2]=k[n+12>>2];k[s+16>>2]=k[n+16>>2];k[s+20>>2]=k[n+20>>2];j[s+24>>1]=j[n+24>>1]|0;i[s+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;a=1;break};k[s>>2]=k[g>>2];k[s+4>>2]=k[g+4>>2];k[s+8>>2]=k[g+8>>2];k[s+12>>2]=k[g+12>>2];k[s+16>>2]=k[g+16>>2];k[s+20>>2]=k[g+20>>2];j[s+24>>1]=j[g+24>>1]|0;i[s+26>>0]=i[g+26>>0]|0;k[g>>2]=k[p>>2];k[g+4>>2]=k[p+4>>2];k[g+8>>2]=k[p+8>>2];k[g+12>>2]=k[p+12>>2];k[g+16>>2]=k[p+16>>2];k[g+20>>2]=k[p+20>>2];j[g+24>>1]=j[p+24>>1]|0;i[g+26>>0]=i[p+26>>0]|0;if(Za[k[c>>2]&7](n,g)|0){k[p>>2]=k[g>>2];k[p+4>>2]=k[g+4>>2];k[p+8>>2]=k[g+8>>2];k[p+12>>2]=k[g+12>>2];k[p+16>>2]=k[g+16>>2];k[p+20>>2]=k[g+20>>2];k[p+24>>2]=k[g+24>>2];k[p+28>>2]=k[g+28>>2];k[g>>2]=k[n>>2];k[g+4>>2]=k[n+4>>2];k[g+8>>2]=k[n+8>>2];k[g+12>>2]=k[n+12>>2];k[g+16>>2]=k[n+16>>2];k[g+20>>2]=k[n+20>>2];j[g+24>>1]=j[n+24>>1]|0;i[g+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;a=2}else a=1}while(0);do if(Za[k[c>>2]&7](s,g)|0)b=n;else{b=n;while(1){b=b+-32|0;if((s|0)==(b|0))break;if(Za[k[c>>2]&7](b,g)|0){m=65;break}}if((m|0)==65){m=0;k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[b>>2];k[s+4>>2]=k[b+4>>2];k[s+8>>2]=k[b+8>>2];k[s+12>>2]=k[b+12>>2];k[s+16>>2]=k[b+16>>2];k[s+20>>2]=k[b+20>>2];j[s+24>>1]=j[b+24>>1]|0;i[s+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;a=a+1|0;break}a=s+32|0;if(!(Za[k[c>>2]&7](s,n)|0)){if((a|0)==(n|0)){m=82;break a}else b=s;while(1){if(Za[k[c>>2]&7](s,a)|0)break;b=a+32|0;if((b|0)==(n|0)){m=82;break a}else{h=a;a=b;b=h}}k[p>>2]=k[a>>2];k[p+4>>2]=k[a+4>>2];k[p+8>>2]=k[a+8>>2];k[p+12>>2]=k[a+12>>2];k[p+16>>2]=k[a+16>>2];k[p+20>>2]=k[a+20>>2];k[p+24>>2]=k[a+24>>2];k[p+28>>2]=k[a+28>>2];k[a>>2]=k[n>>2];k[a+4>>2]=k[n+4>>2];k[a+8>>2]=k[n+8>>2];k[a+12>>2]=k[n+12>>2];k[a+16>>2]=k[n+16>>2];k[a+20>>2]=k[n+20>>2];j[a+24>>1]=j[n+24>>1]|0;i[a+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;a=b+64|0}if((a|0)==(n|0)){m=82;break a}else d=n;while(1){b=a;while(1){a=b+32|0;if(Za[k[c>>2]&7](s,b)|0)break;else b=a}do d=d+-32|0;while(Za[k[c>>2]&7](s,d)|0);if(b>>>0>=d>>>0){s=b;continue b};k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[p+28>>2]=k[b+28>>2];k[b>>2]=k[d>>2];k[b+4>>2]=k[d+4>>2];k[b+8>>2]=k[d+8>>2];k[b+12>>2]=k[d+12>>2];k[b+16>>2]=k[d+16>>2];k[b+20>>2]=k[d+20>>2];j[b+24>>1]=j[d+24>>1]|0;i[b+26>>0]=i[d+26>>0]|0;k[d>>2]=k[p>>2];k[d+4>>2]=k[p+4>>2];k[d+8>>2]=k[p+8>>2];k[d+12>>2]=k[p+12>>2];k[d+16>>2]=k[p+16>>2];k[d+20>>2]=k[p+20>>2];j[d+24>>1]=j[p+24>>1]|0;i[d+26>>0]=i[p+26>>0]|0}}while(0);d=s+32|0;c:do if(d>>>0<b>>>0)while(1){e=d;while(1){d=e+32|0;if(Za[k[c>>2]&7](e,g)|0)e=d;else{f=b;break}}do f=f+-32|0;while(!(Za[k[c>>2]&7](f,g)|0));if(e>>>0>f>>>0){d=e;b=g;break c};k[p>>2]=k[e>>2];k[p+4>>2]=k[e+4>>2];k[p+8>>2]=k[e+8>>2];k[p+12>>2]=k[e+12>>2];k[p+16>>2]=k[e+16>>2];k[p+20>>2]=k[e+20>>2];k[p+24>>2]=k[e+24>>2];k[p+28>>2]=k[e+28>>2];k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];k[e+16>>2]=k[f+16>>2];k[e+20>>2]=k[f+20>>2];j[e+24>>1]=j[f+24>>1]|0;i[e+26>>0]=i[f+26>>0]|0;k[f>>2]=k[p>>2];k[f+4>>2]=k[p+4>>2];k[f+8>>2]=k[p+8>>2];k[f+12>>2]=k[p+12>>2];k[f+16>>2]=k[p+16>>2];k[f+20>>2]=k[p+20>>2];j[f+24>>1]=j[p+24>>1]|0;i[f+26>>0]=i[p+26>>0]|0;b=f;g=(g|0)==(e|0)?f:g;a=a+1|0}else b=g;while(0);if((d|0)!=(b|0)?Za[k[c>>2]&7](b,d)|0:0){k[p>>2]=k[d>>2];k[p+4>>2]=k[d+4>>2];k[p+8>>2]=k[d+8>>2];k[p+12>>2]=k[d+12>>2];k[p+16>>2]=k[d+16>>2];k[p+20>>2]=k[d+20>>2];k[p+24>>2]=k[d+24>>2];k[p+28>>2]=k[d+28>>2];k[d>>2]=k[b>>2];k[d+4>>2]=k[b+4>>2];k[d+8>>2]=k[b+8>>2];k[d+12>>2]=k[b+12>>2];k[d+16>>2]=k[b+16>>2];k[d+20>>2]=k[b+20>>2];j[d+24>>1]=j[b+24>>1]|0;i[d+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;a=a+1|0}if(!a){a=Gc(s,d,c)|0;b=d+32|0;if(Gc(b,o,c)|0){m=77;break}if(a){s=b;continue}}g=d;if((g-h|0)>=(l-g|0)){m=81;break}Ec(s,d,c);s=d+32|0}if((m|0)==77){m=0;if(a){m=82;break}else{a=s;o=d;continue}}else if((m|0)==81){m=0;Ec(d+32|0,o,c);a=s;o=d;continue}}if((m|0)==4){if(!(Za[k[c>>2]&7](n,s)|0)){r=t;return};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[n>>2];k[s+4>>2]=k[n+4>>2];k[s+8>>2]=k[n+8>>2];k[s+12>>2]=k[n+12>>2];k[s+16>>2]=k[n+16>>2];k[s+20>>2]=k[n+20>>2];j[s+24>>1]=j[n+24>>1]|0;i[s+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;r=t;return}else if((m|0)==6){b=s+32|0;q=Za[k[c>>2]&7](b,s)|0;a=Za[k[c>>2]&7](n,b)|0;if(!q){if(!a){r=t;return};k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[p+28>>2]=k[b+28>>2];k[b>>2]=k[n>>2];k[b+4>>2]=k[n+4>>2];k[b+8>>2]=k[n+8>>2];k[b+12>>2]=k[n+12>>2];k[b+16>>2]=k[n+16>>2];k[b+20>>2]=k[n+20>>2];j[b+24>>1]=j[n+24>>1]|0;i[b+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](b,s)|0)){r=t;return};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[b>>2];k[s+4>>2]=k[b+4>>2];k[s+8>>2]=k[b+8>>2];k[s+12>>2]=k[b+12>>2];k[s+16>>2]=k[b+16>>2];k[s+20>>2]=k[b+20>>2];j[s+24>>1]=j[b+24>>1]|0;i[s+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;r=t;return};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];if(a){k[s>>2]=k[n>>2];k[s+4>>2]=k[n+4>>2];k[s+8>>2]=k[n+8>>2];k[s+12>>2]=k[n+12>>2];k[s+16>>2]=k[n+16>>2];k[s+20>>2]=k[n+20>>2];j[s+24>>1]=j[n+24>>1]|0;i[s+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;r=t;return};k[s>>2]=k[b>>2];k[s+4>>2]=k[b+4>>2];k[s+8>>2]=k[b+8>>2];k[s+12>>2]=k[b+12>>2];k[s+16>>2]=k[b+16>>2];k[s+20>>2]=k[b+20>>2];j[s+24>>1]=j[b+24>>1]|0;i[s+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](n,b)|0)){r=t;return};k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[p+28>>2]=k[b+28>>2];k[b>>2]=k[n>>2];k[b+4>>2]=k[n+4>>2];k[b+8>>2]=k[n+8>>2];k[b+12>>2]=k[n+12>>2];k[b+16>>2]=k[n+16>>2];k[b+20>>2]=k[n+20>>2];j[b+24>>1]=j[n+24>>1]|0;i[b+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;r=t;return}else if((m|0)==14){Fc(s,s+32|0,s+64|0,n,c)|0;r=t;return}else if((m|0)==15){a=s+32|0;b=s+64|0;d=s+96|0;Fc(s,a,b,d,c)|0;if(!(Za[k[c>>2]&7](n,d)|0)){r=t;return};k[p>>2]=k[d>>2];k[p+4>>2]=k[d+4>>2];k[p+8>>2]=k[d+8>>2];k[p+12>>2]=k[d+12>>2];k[p+16>>2]=k[d+16>>2];k[p+20>>2]=k[d+20>>2];k[p+24>>2]=k[d+24>>2];k[p+28>>2]=k[d+28>>2];k[d>>2]=k[n>>2];k[d+4>>2]=k[n+4>>2];k[d+8>>2]=k[n+8>>2];k[d+12>>2]=k[n+12>>2];k[d+16>>2]=k[n+16>>2];k[d+20>>2]=k[n+20>>2];j[d+24>>1]=j[n+24>>1]|0;i[d+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](d,b)|0)){r=t;return};k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[p+28>>2]=k[b+28>>2];k[b>>2]=k[d>>2];k[b+4>>2]=k[d+4>>2];k[b+8>>2]=k[d+8>>2];k[b+12>>2]=k[d+12>>2];k[b+16>>2]=k[d+16>>2];k[b+20>>2]=k[d+20>>2];j[b+24>>1]=j[d+24>>1]|0;i[b+26>>0]=i[d+26>>0]|0;k[d>>2]=k[p>>2];k[d+4>>2]=k[p+4>>2];k[d+8>>2]=k[p+8>>2];k[d+12>>2]=k[p+12>>2];k[d+16>>2]=k[p+16>>2];k[d+20>>2]=k[p+20>>2];j[d+24>>1]=j[p+24>>1]|0;i[d+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](b,a)|0)){r=t;return};k[p>>2]=k[a>>2];k[p+4>>2]=k[a+4>>2];k[p+8>>2]=k[a+8>>2];k[p+12>>2]=k[a+12>>2];k[p+16>>2]=k[a+16>>2];k[p+20>>2]=k[a+20>>2];k[p+24>>2]=k[a+24>>2];k[p+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];j[a+24>>1]=j[b+24>>1]|0;i[a+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](a,s)|0)){r=t;return};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[a>>2];k[s+4>>2]=k[a+4>>2];k[s+8>>2]=k[a+8>>2];k[s+12>>2]=k[a+12>>2];k[s+16>>2]=k[a+16>>2];k[s+20>>2]=k[a+20>>2];j[s+24>>1]=j[a+24>>1]|0;i[s+26>>0]=i[a+26>>0]|0;k[a>>2]=k[p>>2];k[a+4>>2]=k[p+4>>2];k[a+8>>2]=k[p+8>>2];k[a+12>>2]=k[p+12>>2];k[a+16>>2]=k[p+16>>2];k[a+20>>2]=k[p+20>>2];j[a+24>>1]=j[p+24>>1]|0;i[a+26>>0]=i[p+26>>0]|0;r=t;return}else if((m|0)==21){b=s+64|0;a=s+32|0;n=Za[k[c>>2]&7](a,s)|0;d=Za[k[c>>2]&7](b,a)|0;do if(n){k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];if(d){k[s>>2]=k[b>>2];k[s+4>>2]=k[b+4>>2];k[s+8>>2]=k[b+8>>2];k[s+12>>2]=k[b+12>>2];k[s+16>>2]=k[b+16>>2];k[s+20>>2]=k[b+20>>2];j[s+24>>1]=j[b+24>>1]|0;i[s+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;break};k[s>>2]=k[a>>2];k[s+4>>2]=k[a+4>>2];k[s+8>>2]=k[a+8>>2];k[s+12>>2]=k[a+12>>2];k[s+16>>2]=k[a+16>>2];k[s+20>>2]=k[a+20>>2];j[s+24>>1]=j[a+24>>1]|0;i[s+26>>0]=i[a+26>>0]|0;k[a>>2]=k[p>>2];k[a+4>>2]=k[p+4>>2];k[a+8>>2]=k[p+8>>2];k[a+12>>2]=k[p+12>>2];k[a+16>>2]=k[p+16>>2];k[a+20>>2]=k[p+20>>2];j[a+24>>1]=j[p+24>>1]|0;i[a+26>>0]=i[p+26>>0]|0;if(Za[k[c>>2]&7](b,a)|0){k[p>>2]=k[a>>2];k[p+4>>2]=k[a+4>>2];k[p+8>>2]=k[a+8>>2];k[p+12>>2]=k[a+12>>2];k[p+16>>2]=k[a+16>>2];k[p+20>>2]=k[a+20>>2];k[p+24>>2]=k[a+24>>2];k[p+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];j[a+24>>1]=j[b+24>>1]|0;i[a+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0}}else if(d?(k[p>>2]=k[a>>2],k[p+4>>2]=k[a+4>>2],k[p+8>>2]=k[a+8>>2],k[p+12>>2]=k[a+12>>2],k[p+16>>2]=k[a+16>>2],k[p+20>>2]=k[a+20>>2],k[p+24>>2]=k[a+24>>2],k[p+28>>2]=k[a+28>>2],k[a>>2]=k[b>>2],k[a+4>>2]=k[b+4>>2],k[a+8>>2]=k[b+8>>2],k[a+12>>2]=k[b+12>>2],k[a+16>>2]=k[b+16>>2],k[a+20>>2]=k[b+20>>2],j[a+24>>1]=j[b+24>>1]|0,i[a+26>>0]=i[b+26>>0]|0,k[b>>2]=k[p>>2],k[b+4>>2]=k[p+4>>2],k[b+8>>2]=k[p+8>>2],k[b+12>>2]=k[p+12>>2],k[b+16>>2]=k[p+16>>2],k[b+20>>2]=k[p+20>>2],j[b+24>>1]=j[p+24>>1]|0,i[b+26>>0]=i[p+26>>0]|0,Za[k[c>>2]&7](a,s)|0):0){k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[a>>2];k[s+4>>2]=k[a+4>>2];k[s+8>>2]=k[a+8>>2];k[s+12>>2]=k[a+12>>2];k[s+16>>2]=k[a+16>>2];k[s+20>>2]=k[a+20>>2];j[s+24>>1]=j[a+24>>1]|0;i[s+26>>0]=i[a+26>>0]|0;k[a>>2]=k[p>>2];k[a+4>>2]=k[p+4>>2];k[a+8>>2]=k[p+8>>2];k[a+12>>2]=k[p+12>>2];k[a+16>>2]=k[p+16>>2];k[a+20>>2]=k[p+20>>2];j[a+24>>1]=j[p+24>>1]|0;i[a+26>>0]=i[p+26>>0]|0}while(0);a=s+96|0;if((a|0)!=(o|0))while(1){if(Za[k[c>>2]&7](a,b)|0){k[q>>2]=k[a>>2];k[q+4>>2]=k[a+4>>2];k[q+8>>2]=k[a+8>>2];k[q+12>>2]=k[a+12>>2];k[q+16>>2]=k[a+16>>2];k[q+20>>2]=k[a+20>>2];k[q+24>>2]=k[a+24>>2];k[q+28>>2]=k[a+28>>2];d=a;e=b;while(1){k[d>>2]=k[e>>2];k[d+4>>2]=k[e+4>>2];k[d+8>>2]=k[e+8>>2];k[d+12>>2]=k[e+12>>2];k[d+16>>2]=k[e+16>>2];k[d+20>>2]=k[e+20>>2];j[d+24>>1]=j[e+24>>1]|0;i[d+26>>0]=i[e+26>>0]|0;if((e|0)==(s|0))break;b=e+-32|0;if(Za[k[c>>2]&7](q,b)|0){d=e;e=b}else break}k[e>>2]=k[q>>2];k[e+4>>2]=k[q+4>>2];k[e+8>>2]=k[q+8>>2];k[e+12>>2]=k[q+12>>2];k[e+16>>2]=k[q+16>>2];k[e+20>>2]=k[q+20>>2];j[e+24>>1]=j[q+24>>1]|0;i[e+26>>0]=i[q+26>>0]|0}b=a+32|0;if((b|0)==(o|0))break;else{p=a;a=b;b=p}}r=t;return}else if((m|0)==82){r=t;return}}function Fc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,l=0;h=r;r=r+32|0;g=h;l=Za[k[e>>2]&7](b,a)|0;f=Za[k[e>>2]&7](c,b)|0;do if(l){k[g>>2]=k[a>>2];k[g+4>>2]=k[a+4>>2];k[g+8>>2]=k[a+8>>2];k[g+12>>2]=k[a+12>>2];k[g+16>>2]=k[a+16>>2];k[g+20>>2]=k[a+20>>2];k[g+24>>2]=k[a+24>>2];k[g+28>>2]=k[a+28>>2];if(f){k[a>>2]=k[c>>2];k[a+4>>2]=k[c+4>>2];k[a+8>>2]=k[c+8>>2];k[a+12>>2]=k[c+12>>2];k[a+16>>2]=k[c+16>>2];k[a+20>>2]=k[c+20>>2];j[a+24>>1]=j[c+24>>1]|0;i[a+26>>0]=i[c+26>>0]|0;k[c>>2]=k[g>>2];k[c+4>>2]=k[g+4>>2];k[c+8>>2]=k[g+8>>2];k[c+12>>2]=k[g+12>>2];k[c+16>>2]=k[g+16>>2];k[c+20>>2]=k[g+20>>2];j[c+24>>1]=j[g+24>>1]|0;i[c+26>>0]=i[g+26>>0]|0;f=1;break};k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];j[a+24>>1]=j[b+24>>1]|0;i[a+26>>0]=i[b+26>>0]|0;k[b>>2]=k[g>>2];k[b+4>>2]=k[g+4>>2];k[b+8>>2]=k[g+8>>2];k[b+12>>2]=k[g+12>>2];k[b+16>>2]=k[g+16>>2];k[b+20>>2]=k[g+20>>2];j[b+24>>1]=j[g+24>>1]|0;i[b+26>>0]=i[g+26>>0]|0;if(Za[k[e>>2]&7](c,b)|0){k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];k[g+16>>2]=k[b+16>>2];k[g+20>>2]=k[b+20>>2];k[g+24>>2]=k[b+24>>2];k[g+28>>2]=k[b+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];j[b+24>>1]=j[c+24>>1]|0;i[b+26>>0]=i[c+26>>0]|0;k[c>>2]=k[g>>2];k[c+4>>2]=k[g+4>>2];k[c+8>>2]=k[g+8>>2];k[c+12>>2]=k[g+12>>2];k[c+16>>2]=k[g+16>>2];k[c+20>>2]=k[g+20>>2];j[c+24>>1]=j[g+24>>1]|0;i[c+26>>0]=i[g+26>>0]|0;f=2}else f=1}else if(f){k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];k[g+16>>2]=k[b+16>>2];k[g+20>>2]=k[b+20>>2];k[g+24>>2]=k[b+24>>2];k[g+28>>2]=k[b+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];j[b+24>>1]=j[c+24>>1]|0;i[b+26>>0]=i[c+26>>0]|0;k[c>>2]=k[g>>2];k[c+4>>2]=k[g+4>>2];k[c+8>>2]=k[g+8>>2];k[c+12>>2]=k[g+12>>2];k[c+16>>2]=k[g+16>>2];k[c+20>>2]=k[g+20>>2];j[c+24>>1]=j[g+24>>1]|0;i[c+26>>0]=i[g+26>>0]|0;if(Za[k[e>>2]&7](b,a)|0){k[g>>2]=k[a>>2];k[g+4>>2]=k[a+4>>2];k[g+8>>2]=k[a+8>>2];k[g+12>>2]=k[a+12>>2];k[g+16>>2]=k[a+16>>2];k[g+20>>2]=k[a+20>>2];k[g+24>>2]=k[a+24>>2];k[g+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];j[a+24>>1]=j[b+24>>1]|0;i[a+26>>0]=i[b+26>>0]|0;k[b>>2]=k[g>>2];k[b+4>>2]=k[g+4>>2];k[b+8>>2]=k[g+8>>2];k[b+12>>2]=k[g+12>>2];k[b+16>>2]=k[g+16>>2];k[b+20>>2]=k[g+20>>2];j[b+24>>1]=j[g+24>>1]|0;i[b+26>>0]=i[g+26>>0]|0;f=2}else f=1}else f=0;while(0);if(!(Za[k[e>>2]&7](d,c)|0)){l=f;r=h;return l|0};k[g>>2]=k[c>>2];k[g+4>>2]=k[c+4>>2];k[g+8>>2]=k[c+8>>2];k[g+12>>2]=k[c+12>>2];k[g+16>>2]=k[c+16>>2];k[g+20>>2]=k[c+20>>2];k[g+24>>2]=k[c+24>>2];k[g+28>>2]=k[c+28>>2];k[c>>2]=k[d>>2];k[c+4>>2]=k[d+4>>2];k[c+8>>2]=k[d+8>>2];k[c+12>>2]=k[d+12>>2];k[c+16>>2]=k[d+16>>2];k[c+20>>2]=k[d+20>>2];j[c+24>>1]=j[d+24>>1]|0;i[c+26>>0]=i[d+26>>0]|0;k[d>>2]=k[g>>2];k[d+4>>2]=k[g+4>>2];k[d+8>>2]=k[g+8>>2];k[d+12>>2]=k[g+12>>2];k[d+16>>2]=k[g+16>>2];k[d+20>>2]=k[g+20>>2];j[d+24>>1]=j[g+24>>1]|0;i[d+26>>0]=i[g+26>>0]|0;if(!(Za[k[e>>2]&7](c,b)|0)){l=f+1|0;r=h;return l|0};k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];k[g+16>>2]=k[b+16>>2];k[g+20>>2]=k[b+20>>2];k[g+24>>2]=k[b+24>>2];k[g+28>>2]=k[b+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];j[b+24>>1]=j[c+24>>1]|0;i[b+26>>0]=i[c+26>>0]|0;k[c>>2]=k[g>>2];k[c+4>>2]=k[g+4>>2];k[c+8>>2]=k[g+8>>2];k[c+12>>2]=k[g+12>>2];k[c+16>>2]=k[g+16>>2];k[c+20>>2]=k[g+20>>2];j[c+24>>1]=j[g+24>>1]|0;i[c+26>>0]=i[g+26>>0]|0;if(!(Za[k[e>>2]&7](b,a)|0)){l=f+2|0;r=h;return l|0};k[g>>2]=k[a>>2];k[g+4>>2]=k[a+4>>2];k[g+8>>2]=k[a+8>>2];k[g+12>>2]=k[a+12>>2];k[g+16>>2]=k[a+16>>2];k[g+20>>2]=k[a+20>>2];k[g+24>>2]=k[a+24>>2];k[g+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];j[a+24>>1]=j[b+24>>1]|0;i[a+26>>0]=i[b+26>>0]|0;k[b>>2]=k[g>>2];k[b+4>>2]=k[g+4>>2];k[b+8>>2]=k[g+8>>2];k[b+12>>2]=k[g+12>>2];k[b+16>>2]=k[g+16>>2];k[b+20>>2]=k[g+20>>2];j[b+24>>1]=j[g+24>>1]|0;i[b+26>>0]=i[g+26>>0]|0;l=f+3|0;r=h;return l|0}function Gc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0;n=r;r=r+64|0;h=n+32|0;l=n;switch(b-a>>5|0){case 2:{d=b+-32|0;if(!(Za[k[c>>2]&7](d,a)|0)){a=1;r=n;return a|0};k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];k[a>>2]=k[d>>2];k[a+4>>2]=k[d+4>>2];k[a+8>>2]=k[d+8>>2];k[a+12>>2]=k[d+12>>2];k[a+16>>2]=k[d+16>>2];k[a+20>>2]=k[d+20>>2];j[a+24>>1]=j[d+24>>1]|0;i[a+26>>0]=i[d+26>>0]|0;k[d>>2]=k[h>>2];k[d+4>>2]=k[h+4>>2];k[d+8>>2]=k[h+8>>2];k[d+12>>2]=k[h+12>>2];k[d+16>>2]=k[h+16>>2];k[d+20>>2]=k[h+20>>2];j[d+24>>1]=j[h+24>>1]|0;i[d+26>>0]=i[h+26>>0]|0;a=1;r=n;return a|0}case 3:{f=a+32|0;e=b+-32|0;b=Za[k[c>>2]&7](f,a)|0;d=Za[k[c>>2]&7](e,f)|0;if(!b){if(!d){a=1;r=n;return a|0};k[h>>2]=k[f>>2];k[h+4>>2]=k[f+4>>2];k[h+8>>2]=k[f+8>>2];k[h+12>>2]=k[f+12>>2];k[h+16>>2]=k[f+16>>2];k[h+20>>2]=k[f+20>>2];k[h+24>>2]=k[f+24>>2];k[h+28>>2]=k[f+28>>2];k[f>>2]=k[e>>2];k[f+4>>2]=k[e+4>>2];k[f+8>>2]=k[e+8>>2];k[f+12>>2]=k[e+12>>2];k[f+16>>2]=k[e+16>>2];k[f+20>>2]=k[e+20>>2];j[f+24>>1]=j[e+24>>1]|0;i[f+26>>0]=i[e+26>>0]|0;k[e>>2]=k[h>>2];k[e+4>>2]=k[h+4>>2];k[e+8>>2]=k[h+8>>2];k[e+12>>2]=k[h+12>>2];k[e+16>>2]=k[h+16>>2];k[e+20>>2]=k[h+20>>2];j[e+24>>1]=j[h+24>>1]|0;i[e+26>>0]=i[h+26>>0]|0;if(!(Za[k[c>>2]&7](f,a)|0)){a=1;r=n;return a|0};k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];k[a>>2]=k[f>>2];k[a+4>>2]=k[f+4>>2];k[a+8>>2]=k[f+8>>2];k[a+12>>2]=k[f+12>>2];k[a+16>>2]=k[f+16>>2];k[a+20>>2]=k[f+20>>2];j[a+24>>1]=j[f+24>>1]|0;i[a+26>>0]=i[f+26>>0]|0;k[f>>2]=k[h>>2];k[f+4>>2]=k[h+4>>2];k[f+8>>2]=k[h+8>>2];k[f+12>>2]=k[h+12>>2];k[f+16>>2]=k[h+16>>2];k[f+20>>2]=k[h+20>>2];j[f+24>>1]=j[h+24>>1]|0;i[f+26>>0]=i[h+26>>0]|0;a=1;r=n;return a|0};k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];if(d){k[a>>2]=k[e>>2];k[a+4>>2]=k[e+4>>2];k[a+8>>2]=k[e+8>>2];k[a+12>>2]=k[e+12>>2];k[a+16>>2]=k[e+16>>2];k[a+20>>2]=k[e+20>>2];j[a+24>>1]=j[e+24>>1]|0;i[a+26>>0]=i[e+26>>0]|0;k[e>>2]=k[h>>2];k[e+4>>2]=k[h+4>>2];k[e+8>>2]=k[h+8>>2];k[e+12>>2]=k[h+12>>2];k[e+16>>2]=k[h+16>>2];k[e+20>>2]=k[h+20>>2];j[e+24>>1]=j[h+24>>1]|0;i[e+26>>0]=i[h+26>>0]|0;a=1;r=n;return a|0};k[a>>2]=k[f>>2];k[a+4>>2]=k[f+4>>2];k[a+8>>2]=k[f+8>>2];k[a+12>>2]=k[f+12>>2];k[a+16>>2]=k[f+16>>2];k[a+20>>2]=k[f+20>>2];j[a+24>>1]=j[f+24>>1]|0;i[a+26>>0]=i[f+26>>0]|0;k[f>>2]=k[h>>2];k[f+4>>2]=k[h+4>>2];k[f+8>>2]=k[h+8>>2];k[f+12>>2]=k[h+12>>2];k[f+16>>2]=k[h+16>>2];k[f+20>>2]=k[h+20>>2];j[f+24>>1]=j[h+24>>1]|0;i[f+26>>0]=i[h+26>>0]|0;if(!(Za[k[c>>2]&7](e,f)|0)){a=1;r=n;return a|0};k[h>>2]=k[f>>2];k[h+4>>2]=k[f+4>>2];k[h+8>>2]=k[f+8>>2];k[h+12>>2]=k[f+12>>2];k[h+16>>2]=k[f+16>>2];k[h+20>>2]=k[f+20>>2];k[h+24>>2]=k[f+24>>2];k[h+28>>2]=k[f+28>>2];k[f>>2]=k[e>>2];k[f+4>>2]=k[e+4>>2];k[f+8>>2]=k[e+8>>2];k[f+12>>2]=k[e+12>>2];k[f+16>>2]=k[e+16>>2];k[f+20>>2]=k[e+20>>2];j[f+24>>1]=j[e+24>>1]|0;i[f+26>>0]=i[e+26>>0]|0;k[e>>2]=k[h>>2];k[e+4>>2]=k[h+4>>2];k[e+8>>2]=k[h+8>>2];k[e+12>>2]=k[h+12>>2];k[e+16>>2]=k[h+16>>2];k[e+20>>2]=k[h+20>>2];j[e+24>>1]=j[h+24>>1]|0;i[e+26>>0]=i[h+26>>0]|0;a=1;r=n;return a|0}case 4:{Fc(a,a+32|0,a+64|0,b+-32|0,c)|0;a=1;r=n;return a|0}case 5:{e=a+32|0;f=a+64|0;g=a+96|0;d=b+-32|0;Fc(a,e,f,g,c)|0;if(!(Za[k[c>>2]&7](d,g)|0)){a=1;r=n;return a|0};k[h>>2]=k[g>>2];k[h+4>>2]=k[g+4>>2];k[h+8>>2]=k[g+8>>2];k[h+12>>2]=k[g+12>>2];k[h+16>>2]=k[g+16>>2];k[h+20>>2]=k[g+20>>2];k[h+24>>2]=k[g+24>>2];k[h+28>>2]=k[g+28>>2];k[g>>2]=k[d>>2];k[g+4>>2]=k[d+4>>2];k[g+8>>2]=k[d+8>>2];k[g+12>>2]=k[d+12>>2];k[g+16>>2]=k[d+16>>2];k[g+20>>2]=k[d+20>>2];j[g+24>>1]=j[d+24>>1]|0;i[g+26>>0]=i[d+26>>0]|0;k[d>>2]=k[h>>2];k[d+4>>2]=k[h+4>>2];k[d+8>>2]=k[h+8>>2];k[d+12>>2]=k[h+12>>2];k[d+16>>2]=k[h+16>>2];k[d+20>>2]=k[h+20>>2];j[d+24>>1]=j[h+24>>1]|0;i[d+26>>0]=i[h+26>>0]|0;if(!(Za[k[c>>2]&7](g,f)|0)){a=1;r=n;return a|0};k[h>>2]=k[f>>2];k[h+4>>2]=k[f+4>>2];k[h+8>>2]=k[f+8>>2];k[h+12>>2]=k[f+12>>2];k[h+16>>2]=k[f+16>>2];k[h+20>>2]=k[f+20>>2];k[h+24>>2]=k[f+24>>2];k[h+28>>2]=k[f+28>>2];k[f>>2]=k[g>>2];k[f+4>>2]=k[g+4>>2];k[f+8>>2]=k[g+8>>2];k[f+12>>2]=k[g+12>>2];k[f+16>>2]=k[g+16>>2];k[f+20>>2]=k[g+20>>2];j[f+24>>1]=j[g+24>>1]|0;i[f+26>>0]=i[g+26>>0]|0;k[g>>2]=k[h>>2];k[g+4>>2]=k[h+4>>2];k[g+8>>2]=k[h+8>>2];k[g+12>>2]=k[h+12>>2];k[g+16>>2]=k[h+16>>2];k[g+20>>2]=k[h+20>>2];j[g+24>>1]=j[h+24>>1]|0;i[g+26>>0]=i[h+26>>0]|0;if(!(Za[k[c>>2]&7](f,e)|0)){a=1;r=n;return a|0};k[h>>2]=k[e>>2];k[h+4>>2]=k[e+4>>2];k[h+8>>2]=k[e+8>>2];k[h+12>>2]=k[e+12>>2];k[h+16>>2]=k[e+16>>2];k[h+20>>2]=k[e+20>>2];k[h+24>>2]=k[e+24>>2];k[h+28>>2]=k[e+28>>2];k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];k[e+16>>2]=k[f+16>>2];k[e+20>>2]=k[f+20>>2];j[e+24>>1]=j[f+24>>1]|0;i[e+26>>0]=i[f+26>>0]|0;k[f>>2]=k[h>>2];k[f+4>>2]=k[h+4>>2];k[f+8>>2]=k[h+8>>2];k[f+12>>2]=k[h+12>>2];k[f+16>>2]=k[h+16>>2];k[f+20>>2]=k[h+20>>2];j[f+24>>1]=j[h+24>>1]|0;i[f+26>>0]=i[h+26>>0]|0;if(!(Za[k[c>>2]&7](e,a)|0)){a=1;r=n;return a|0};k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];k[a>>2]=k[e>>2];k[a+4>>2]=k[e+4>>2];k[a+8>>2]=k[e+8>>2];k[a+12>>2]=k[e+12>>2];k[a+16>>2]=k[e+16>>2];k[a+20>>2]=k[e+20>>2];j[a+24>>1]=j[e+24>>1]|0;i[a+26>>0]=i[e+26>>0]|0;k[e>>2]=k[h>>2];k[e+4>>2]=k[h+4>>2];k[e+8>>2]=k[h+8>>2];k[e+12>>2]=k[h+12>>2];k[e+16>>2]=k[h+16>>2];k[e+20>>2]=k[h+20>>2];j[e+24>>1]=j[h+24>>1]|0;i[e+26>>0]=i[h+26>>0]|0;a=1;r=n;return a|0}case 1:case 0:{a=1;r=n;return a|0}default:{f=a+64|0;d=a+32|0;g=Za[k[c>>2]&7](d,a)|0;e=Za[k[c>>2]&7](f,d)|0;do if(g){k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];if(e){k[a>>2]=k[f>>2];k[a+4>>2]=k[f+4>>2];k[a+8>>2]=k[f+8>>2];k[a+12>>2]=k[f+12>>2];k[a+16>>2]=k[f+16>>2];k[a+20>>2]=k[f+20>>2];j[a+24>>1]=j[f+24>>1]|0;i[a+26>>0]=i[f+26>>0]|0;k[f>>2]=k[h>>2];k[f+4>>2]=k[h+4>>2];k[f+8>>2]=k[h+8>>2];k[f+12>>2]=k[h+12>>2];k[f+16>>2]=k[h+16>>2];k[f+20>>2]=k[h+20>>2];j[f+24>>1]=j[h+24>>1]|0;i[f+26>>0]=i[h+26>>0]|0;break};k[a>>2]=k[d>>2];k[a+4>>2]=k[d+4>>2];k[a+8>>2]=k[d+8>>2];k[a+12>>2]=k[d+12>>2];k[a+16>>2]=k[d+16>>2];k[a+20>>2]=k[d+20>>2];j[a+24>>1]=j[d+24>>1]|0;i[a+26>>0]=i[d+26>>0]|0;k[d>>2]=k[h>>2];k[d+4>>2]=k[h+4>>2];k[d+8>>2]=k[h+8>>2];k[d+12>>2]=k[h+12>>2];k[d+16>>2]=k[h+16>>2];k[d+20>>2]=k[h+20>>2];j[d+24>>1]=j[h+24>>1]|0;i[d+26>>0]=i[h+26>>0]|0;if(Za[k[c>>2]&7](f,d)|0){k[h>>2]=k[d>>2];k[h+4>>2]=k[d+4>>2];k[h+8>>2]=k[d+8>>2];k[h+12>>2]=k[d+12>>2];k[h+16>>2]=k[d+16>>2];k[h+20>>2]=k[d+20>>2];k[h+24>>2]=k[d+24>>2];k[h+28>>2]=k[d+28>>2];k[d>>2]=k[f>>2];k[d+4>>2]=k[f+4>>2];k[d+8>>2]=k[f+8>>2];k[d+12>>2]=k[f+12>>2];k[d+16>>2]=k[f+16>>2];k[d+20>>2]=k[f+20>>2];j[d+24>>1]=j[f+24>>1]|0;i[d+26>>0]=i[f+26>>0]|0;k[f>>2]=k[h>>2];k[f+4>>2]=k[h+4>>2];k[f+8>>2]=k[h+8>>2];k[f+12>>2]=k[h+12>>2];k[f+16>>2]=k[h+16>>2];k[f+20>>2]=k[h+20>>2];j[f+24>>1]=j[h+24>>1]|0;i[f+26>>0]=i[h+26>>0]|0}}else if(e?(k[h>>2]=k[d>>2],k[h+4>>2]=k[d+4>>2],k[h+8>>2]=k[d+8>>2],k[h+12>>2]=k[d+12>>2],k[h+16>>2]=k[d+16>>2],k[h+20>>2]=k[d+20>>2],k[h+24>>2]=k[d+24>>2],k[h+28>>2]=k[d+28>>2],k[d>>2]=k[f>>2],k[d+4>>2]=k[f+4>>2],k[d+8>>2]=k[f+8>>2],k[d+12>>2]=k[f+12>>2],k[d+16>>2]=k[f+16>>2],k[d+20>>2]=k[f+20>>2],j[d+24>>1]=j[f+24>>1]|0,i[d+26>>0]=i[f+26>>0]|0,k[f>>2]=k[h>>2],k[f+4>>2]=k[h+4>>2],k[f+8>>2]=k[h+8>>2],k[f+12>>2]=k[h+12>>2],k[f+16>>2]=k[h+16>>2],k[f+20>>2]=k[h+20>>2],j[f+24>>1]=j[h+24>>1]|0,i[f+26>>0]=i[h+26>>0]|0,Za[k[c>>2]&7](d,a)|0):0){k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];k[a>>2]=k[d>>2];k[a+4>>2]=k[d+4>>2];k[a+8>>2]=k[d+8>>2];k[a+12>>2]=k[d+12>>2];k[a+16>>2]=k[d+16>>2];k[a+20>>2]=k[d+20>>2];j[a+24>>1]=j[d+24>>1]|0;i[a+26>>0]=i[d+26>>0]|0;k[d>>2]=k[h>>2];k[d+4>>2]=k[h+4>>2];k[d+8>>2]=k[h+8>>2];k[d+12>>2]=k[h+12>>2];k[d+16>>2]=k[h+16>>2];k[d+20>>2]=k[h+20>>2];j[d+24>>1]=j[h+24>>1]|0;i[d+26>>0]=i[h+26>>0]|0}while(0);e=a+96|0;if((e|0)==(b|0)){a=1;r=n;return a|0}d=0;while(1){if(Za[k[c>>2]&7](e,f)|0){k[l>>2]=k[e>>2];k[l+4>>2]=k[e+4>>2];k[l+8>>2]=k[e+8>>2];k[l+12>>2]=k[e+12>>2];k[l+16>>2]=k[e+16>>2];k[l+20>>2]=k[e+20>>2];k[l+24>>2]=k[e+24>>2];k[l+28>>2]=k[e+28>>2];g=e;h=f;while(1){k[g>>2]=k[h>>2];k[g+4>>2]=k[h+4>>2];k[g+8>>2]=k[h+8>>2];k[g+12>>2]=k[h+12>>2];k[g+16>>2]=k[h+16>>2];k[g+20>>2]=k[h+20>>2];j[g+24>>1]=j[h+24>>1]|0;i[g+26>>0]=i[h+26>>0]|0;if((h|0)==(a|0))break;f=h+-32|0;if(Za[k[c>>2]&7](l,f)|0){g=h;h=f}else break}k[h>>2]=k[l>>2];k[h+4>>2]=k[l+4>>2];k[h+8>>2]=k[l+8>>2];k[h+12>>2]=k[l+12>>2];k[h+16>>2]=k[l+16>>2];k[h+20>>2]=k[l+20>>2];j[h+24>>1]=j[l+24>>1]|0;i[h+26>>0]=i[l+26>>0]|0;d=d+1|0;if((d|0)==8)break}f=e+32|0;if((f|0)==(b|0)){d=1;m=35;break}else{h=e;e=f;f=h}}if((m|0)==35){r=n;return d|0}a=(e+32|0)==(b|0);r=n;return a|0}}return 0}function Hc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0;l=r;r=r+48|0;j=l;i=Za[k[e>>2]&7](b,a)|0;f=Za[k[e>>2]&7](c,b)|0;do if(i){if(f){g=j;h=a;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=a;h=c;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=c;h=j;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));f=1;break}g=j;h=a;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=a;h=b;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=b;h=j;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));if(Za[k[e>>2]&7](c,b)|0){g=j;h=b;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=b;h=c;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=c;h=j;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));f=2}else f=1}else if(f){g=j;h=b;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=b;h=c;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=c;h=j;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));if(Za[k[e>>2]&7](b,a)|0){g=j;h=a;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=a;h=b;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=b;h=j;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));f=2}else f=1}else f=0;while(0);if(!(Za[k[e>>2]&7](d,c)|0)){d=f;r=l;return d|0}g=j;h=c;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=c;h=d;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=d;h=j;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));if(!(Za[k[e>>2]&7](c,b)|0)){d=f+1|0;r=l;return d|0}g=j;h=b;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=b;h=c;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=c;h=j;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));if(!(Za[k[e>>2]&7](b,a)|0)){d=f+2|0;r=l;return d|0}g=j;h=a;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=a;h=b;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=b;h=j;i=g+44|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));d=f+3|0;r=l;return d|0}function Ic(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;n=r;r=r+48|0;m=n;switch((b-a|0)/44|0|0){case 2:{d=b+-44|0;if(!(Za[k[c>>2]&7](d,a)|0)){m=1;r=n;return m|0}g=m;j=a;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=a;j=d;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=d;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));m=1;r=n;return m|0}case 3:{f=a+44|0;e=b+-44|0;b=Za[k[c>>2]&7](f,a)|0;d=Za[k[c>>2]&7](e,f)|0;if(!b){if(!d){m=1;r=n;return m|0}g=m;j=f;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=f;j=e;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=e;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));if(!(Za[k[c>>2]&7](f,a)|0)){m=1;r=n;return m|0}g=m;j=a;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=a;j=f;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=f;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));m=1;r=n;return m|0}if(d){g=m;j=a;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=a;j=e;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=e;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));m=1;r=n;return m|0}g=m;j=a;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=a;j=f;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=f;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));if(!(Za[k[c>>2]&7](e,f)|0)){m=1;r=n;return m|0}g=m;j=f;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=f;j=e;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=e;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));m=1;r=n;return m|0}case 4:{Hc(a,a+44|0,a+88|0,b+-44|0,c)|0;m=1;r=n;return m|0}case 5:{e=a+44|0;f=a+88|0;h=a+132|0;d=b+-44|0;Hc(a,e,f,h,c)|0;if(!(Za[k[c>>2]&7](d,h)|0)){m=1;r=n;return m|0}g=m;j=h;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=h;j=d;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=d;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));if(!(Za[k[c>>2]&7](h,f)|0)){m=1;r=n;return m|0}g=m;j=f;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=f;j=h;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=h;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));if(!(Za[k[c>>2]&7](f,e)|0)){m=1;r=n;return m|0}g=m;j=e;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=e;j=f;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=f;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));if(!(Za[k[c>>2]&7](e,a)|0)){m=1;r=n;return m|0}g=m;j=a;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=a;j=e;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=e;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));m=1;r=n;return m|0}case 1:case 0:{m=1;r=n;return m|0}default:{f=a+88|0;e=a+44|0;l=Za[k[c>>2]&7](e,a)|0;d=Za[k[c>>2]&7](f,e)|0;do if(l){if(d){g=m;j=a;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=a;j=f;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=f;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));break}g=m;j=a;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=a;j=e;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=e;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));if(Za[k[c>>2]&7](f,e)|0){g=m;j=e;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=e;j=f;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=f;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0))}}else if(d){g=m;j=e;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=e;j=f;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=f;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));if(Za[k[c>>2]&7](e,a)|0){g=m;j=a;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=a;j=e;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=e;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0))}}while(0);e=a+132|0;if((e|0)==(b|0)){m=1;r=n;return m|0}d=0;i=0;while(1){if(Za[k[c>>2]&7](e,f)|0){g=m;j=e;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));g=e;h=f;while(1){j=h;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));if((h|0)==(a|0))break;f=h+-44|0;if(Za[k[c>>2]&7](m,f)|0){g=h;h=f}else break}g=h;j=m;l=g+44|0;do{k[g>>2]=k[j>>2];g=g+4|0;j=j+4|0}while((g|0)<(l|0));f=i+1|0;h=(f|0)==8;i=e+44|0;d=h?(i|0)==(b|0):d;if(h){e=34;break}else{g=f;f=h?i:e}}else{g=i;f=e}e=f+44|0;if((e|0)==(b|0)){d=1;e=34;break}else i=g}if((e|0)==34){r=n;return d|0}}}return 0}\\r\\nfunction $a(a){a=a|0;var b=0;b=r;r=r+a|0;r=r+15&-16;return b|0}function ab(){return r|0}function bb(a){a=a|0;r=a}function cb(a,b){a=a|0;b=b|0;r=a;s=b}function db(a,b){a=a|0;b=b|0;if(!w){w=a;x=b}}function eb(a){a=a|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0]}function fb(a){a=a|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0];i[t+4>>0]=i[a+4>>0];i[t+5>>0]=i[a+5>>0];i[t+6>>0]=i[a+6>>0];i[t+7>>0]=i[a+7>>0]}function gb(a){a=a|0;L=a}function hb(){return L|0}function ib(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;i=d+4|0;e=_d((((k[i>>2]|0)-(k[d>>2]|0)|0)/12|0)<<2)|0;k[a>>2]=e;e=((k[i>>2]|0)-(k[d>>2]|0)|0)/12|0;k[b>>2]=e;e=_d(e<<2)|0;k[c>>2]=e;b=k[d>>2]|0;if((k[i>>2]|0)==(b|0))return;f=0;while(1){j=b+(f*12|0)+4|0;h=b+(f*12|0)|0;g=(k[j>>2]|0)-(k[h>>2]|0)|0;k[e+(f<<2)>>2]=g>>3;g=_d(g<<1|4)|0;k[(k[a>>2]|0)+(f<<2)>>2]=g;g=(g&4|0)==0?g:g+4|0;b=k[j>>2]|0;h=k[h>>2]|0;if((b|0)!=(h|0)){b=b-h>>3;e=0;do{j=e<<1;p[g+(j<<3)>>3]=+(k[h+(e<<3)>>2]|0);p[g+((j|1)<<3)>>3]=+(k[h+(e<<3)+4>>2]|0);e=e+1|0}while(e>>>0<b>>>0)}f=f+1|0;b=k[d>>2]|0;if(f>>>0>=(((k[i>>2]|0)-b|0)/12|0)>>>0)break;e=k[c>>2]|0}return}function jb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,q=0,s=0;q=r;r=r+16|0;n=q+8|0;e=q;l=d+4|0;h=((k[l>>2]|0)-(k[d>>2]|0)|0)/12|0;k[e>>2]=h;k[e+4>>2]=h<<2;Nd(880,e);e=_d((((k[l>>2]|0)-(k[d>>2]|0)|0)/12|0)<<2)|0;k[a>>2]=e;e=((k[l>>2]|0)-(k[d>>2]|0)|0)/12|0;k[b>>2]=e;k[n>>2]=e;k[n+4>>2]=e<<2;Nd(892,n);e=_d((((k[l>>2]|0)-(k[d>>2]|0)|0)/12|0)<<2)|0;k[c>>2]=e;b=k[d>>2]|0;a:do if((k[l>>2]|0)!=(b|0)){f=0;while(1){s=b+(f*12|0)+4|0;h=b+(f*12|0)|0;g=((k[s>>2]|0)-(k[h>>2]|0)|0)/12|0;k[e+(f<<2)>>2]=g;g=_d(g*24|4)|0;k[(k[a>>2]|0)+(f<<2)>>2]=g;g=(g&4|0)==0?g:g+4|0;b=k[s>>2]|0;h=k[h>>2]|0;if((b|0)!=(h|0)){b=(b-h|0)/12|0;e=0;do{s=e*3|0;p[g+(s<<3)>>3]=+(k[h+(e*12|0)>>2]|0);p[g+(s+1<<3)>>3]=+(k[h+(e*12|0)+4>>2]|0);p[g+(s+2<<3)>>3]=+(k[h+(e*12|0)+8>>2]|0);e=e+1|0}while(e>>>0<b>>>0)}f=f+1|0;b=k[d>>2]|0;if(f>>>0>=(((k[l>>2]|0)-b|0)/12|0)>>>0)break a;e=k[c>>2]|0}}while(0);g=(k[87]|0)>-1;b:do if(!0){b=904;o=11}else{b=904;e=904;while(1){if(!(i[b>>0]|0)){b=e;break b}b=b+1|0;e=b;if(!(e&3)){o=11;break}}}while(0);if((o|0)==11){while(1){e=k[b>>2]|0;if(!((e&-2139062144^-2139062144)&e+-16843009))b=b+4|0;else break}if((e&255)<<24>>24)do b=b+1|0;while((i[b>>0]|0)!=0)}f=b-904|0;b=k[72]|0;e=(b|0)==0;c:do if(g){do if(e){b=i[346]|0;i[346]=b+255|b;b=k[68]|0;if(!(b&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;b=e+(k[80]|0)|0;k[72]=b;break}else{k[68]=b|32;m=0;o=33;break c}}else e=k[73]|0;while(0);if((b-e|0)>>>0<f>>>0){m=Ta[k[308>>2]&7](272,904,f)|0;o=33;break}else{fe(e|0,904,f|0)|0;k[73]=(k[73]|0)+f;break}}else{do if(e){b=i[346]|0;i[346]=b+255|b;b=k[68]|0;if(!(b&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;b=e+(k[80]|0)|0;k[72]=b;break}else{k[68]=b|32;m=0;o=33;break c}}else e=k[73]|0;while(0);if((b-e|0)>>>0<f>>>0){m=Ta[k[308>>2]&7](272,904,f)|0;o=33;break}else{fe(e|0,904,f|0)|0;k[73]=(k[73]|0)+f;break}}while(0);if(((o|0)==33?(m|0)!=(f|0):0)?(((m>>>0)/(f>>>0)|0)+-1|0)<0:0){r=q;return}f=i[347]|0;if(f<<24>>24!=10){b=k[73]|0;e=k[72]|0;if(b>>>0<e>>>0){k[73]=b+1;i[b>>0]=10;r=q;return}}else e=k[72]|0;i[n>>0]=10;do if(!e){f=j[173]|0;b=(f&65535)<<24>>24;i[346]=b+255|b;b=k[68]|0;if(!(b&8)){k[70]=0;k[69]=0;g=k[79]|0;k[75]=g;k[73]=g;e=g+(k[80]|0)|0;k[72]=e;b=(f&65535)>>>8&255;o=44;break}else{k[68]=b|32;break}}else{g=k[73]|0;b=f;o=44}while(0);do if((o|0)==44)if(g>>>0>=e>>>0|b<<24>>24==10){Ta[k[308>>2]&7](272,n,1)|0;break}else{k[73]=g+1;i[g>>0]=10;break}while(0);r=q;return}function kb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0.0,i=0,j=0,l=0,m=0,n=0.0,o=0,q=0.0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;k[a>>2]=0;C=a+4|0;k[C>>2]=0;k[a+8>>2]=0;if((c|0)<=0)return;D=a+8|0;i=0;g=0;e=0;a:while(1){if(i>>>0>=g>>>0){l=k[a>>2]|0;f=l;m=(i-f|0)/12|0;o=m+1|0;if(o>>>0>357913941){E=6;break}f=(g-f|0)/12|0;if(f>>>0<178956970){f=f<<1;f=f>>>0<o>>>0?o:f;if(!f){f=0;g=0;j=l}else E=9}else{f=357913941;E=9}if((E|0)==9){E=0;j=f*12|0;j=(j|0)==0?1:j;g=_d(j)|0;if(!g){do{g=k[35]|0;k[35]=g+0;if(!g){E=12;break a}Xa[g&0]();g=_d(j)|0}while((g|0)==0);j=k[a>>2]|0;i=k[C>>2]|0}else j=l}l=g+(m*12|0)|0;m=l;r=g+(f*12|0)|0;s=g+(o*12|0)|0;o=s;k[l>>2]=0;k[l+4>>2]=0;k[l+8>>2]=0;if((i|0)==(j|0)){f=i;g=m;i=f}else{f=l;g=m;do{B=f+-12|0;A=i;i=i+-12|0;k[B>>2]=0;z=f+-8|0;k[z>>2]=0;k[f+-4>>2]=0;k[B>>2]=k[i>>2];B=A+-8|0;k[z>>2]=k[B>>2];A=A+-4|0;k[f+-4>>2]=k[A>>2];k[A>>2]=0;k[B>>2]=0;k[i>>2]=0;f=g+-12|0;g=f}while((i|0)!=(j|0));i=k[a>>2]|0;f=k[C>>2]|0}k[a>>2]=g;k[C>>2]=o;k[D>>2]=r;o=i;if((f|0)!=(o|0))do{g=f;f=f+-12|0;l=k[f>>2]|0;m=l;if(l){g=g+-8|0;j=k[g>>2]|0;if((j|0)!=(l|0))k[g>>2]=j+(~((j+-8-m|0)>>>3)<<3);$d(l)}}while((f|0)!=(o|0));if(!i)f=s;else{$d(i);f=s}}else{k[i>>2]=0;k[i+4>>2]=0;k[i+8>>2]=0;f=i+12|0;k[C>>2]=f}y=f+-12|0;z=k[b+(e<<2)>>2]|0;A=k[d+(e<<2)>>2]|0;if((A|0)>0){B=f+-8|0;w=f+-4|0;x=0;do{i=x<<1;h=+p[z+(i<<3)>>3];p[t>>3]=h;f=k[t+4>>2]|0;g=de(k[t>>2]|0,f|0,52)|0;g=g&2047;do if(g>>>0<=1074){f=(f|0)<0;q=f?-h:h;if(g>>>0<1022){h=h*0.0;break}n=q+4503599627370496.0+-4503599627370496.0-q;if(!(n>.5)){h=q+n;if(n<=-.5)h=h+1.0}else h=q+n+-1.0;h=f?-h:h}while(0);v=~~h;h=+p[z+((i|1)<<3)>>3];p[t>>3]=h;f=k[t+4>>2]|0;g=de(k[t>>2]|0,f|0,52)|0;g=g&2047;do if(g>>>0<=1074){f=(f|0)<0;q=f?-h:h;if(g>>>0<1022){h=h*0.0;break}n=q+4503599627370496.0+-4503599627370496.0-q;if(!(n>.5)){h=q+n;if(n<=-.5)h=h+1.0}else h=q+n+-1.0;h=f?-h:h}while(0);l=~~h;g=k[B>>2]|0;f=k[w>>2]|0;if(g>>>0>=f>>>0){u=k[y>>2]|0;r=u;s=g-r>>3;o=s+1|0;if(o>>>0>536870911){E=48;break a}f=f-r|0;if(f>>3>>>0<268435455){f=f>>2;f=f>>>0<o>>>0?o:f;if(!f){j=0;i=0}else E=51}else{f=536870911;E=51}if((E|0)==51){E=0;j=f<<3;j=(j|0)==0?1:j;i=_d(j)|0;if(!i)do{i=k[35]|0;k[35]=i+0;if(!i){E=54;break a}Xa[i&0]();i=_d(j)|0}while((i|0)==0);j=f}f=i+(s<<3)|0;m=i+(j<<3)|0;k[f>>2]=v;k[i+(s<<3)+4>>2]=l;l=i+(o<<3)|0;if((g|0)!=(u|0)){j=g+-8|0;while(1){v=g;g=g+-8|0;k[f+-8>>2]=k[g>>2];k[f+-4>>2]=k[v+-4>>2];if((g|0)==(u|0))break;else f=f+-8|0}f=i+(s+~((j-r|0)>>>3)<<3)|0}k[y>>2]=f;k[B>>2]=l;k[w>>2]=m;if(u)$d(u)}else{k[g>>2]=v;k[g+4>>2]=l;k[B>>2]=g+8}x=x+1|0}while((x|0)<(A|0))}e=e+1|0;if((e|0)>=(c|0)){E=65;break}i=k[C>>2]|0;g=k[D>>2]|0}if((E|0)==6)xa(1340,1363,303,1438);else if((E|0)==12){E=ya(4)|0;k[E>>2]=128;La(E|0,8,1)}else if((E|0)==48)xa(1340,1363,303,1438);else if((E|0)==54){E=ya(4)|0;k[E>>2]=128;La(E|0,8,1)}else if((E|0)==65)return}function lb(a,b,c,d,e,f,g,h,m,n){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;m=m|0;n=n|0;var o=0,q=0,s=0,t=0,u=0.0,v=0.0,w=0,x=0.0,y=0,z=0.0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;Y=r;r=r+112|0;P=Y+96|0;N=Y+72|0;O=Y+56|0;W=Y+44|0;V=Y+32|0;T=Y+20|0;R=Y+8|0;Q=Y;kb(W,a,b,c);kb(V,d,e,f);k[g>>2]=0;b=k[W>>2]|0;X=W+4|0;e=k[X>>2]|0;if((b|0)!=(e|0)?(o=k[V>>2]|0,q=k[V+4>>2]|0,(o|0)!=(q|0)):0){k[T>>2]=0;S=T+4|0;k[S>>2]=0;k[T+8>>2]=0;if(b>>>0<e>>>0){do{mb(T,k[b>>2]|0,k[b+4>>2]|0,0);b=b+12|0}while(b>>>0<e>>>0);e=k[T>>2]|0;a=k[S>>2]|0;c=a;if((e|0)==(a|0)){f=e;b=e;e=c}else{b=e;do{i[b+4>>0]=1;b=b+32|0}while((b|0)!=(a|0));f=e;b=a;e=c}}else{f=0;b=0;e=0}if(o>>>0<q>>>0){do{mb(T,k[o>>2]|0,k[o+4>>2]|0,1);o=o+12|0}while(o>>>0<q>>>0);c=k[S>>2]|0;b=c;o=k[T>>2]|0}else{o=f;c=e}if((b|0)!=(o|0)){a=o;b=b-a>>5;e=0;do{k[o+(e<<5)+4+4>>2]=e;e=e+1|0}while(e>>>0<b>>>0);o=a}k[P>>2]=0;J=P+4|0;k[J>>2]=0;k[P+8>>2]=0;I=o;C=c-o>>5;A=P+8|0;B=(C|0)!=0;a:do if(B){b=C*24|0;o=_d(b)|0;b:do if(!o){while(1){o=k[35]|0;k[35]=o+0;if(!o)break;Xa[o&0]();o=_d(b)|0;if(o)break b}Y=ya(4)|0;k[Y>>2]=128;La(Y|0,8,1)}while(0);s=o;q=o+(C*24|0)|0;k[P>>2]=s;k[J>>2]=s;k[A>>2]=q;s=N+4|0;t=N+8|0;w=N+12|0;y=N+16|0;b=0;while(1){e=k[I+(b<<5)+12>>2]|0;a=k[I+(b<<5)+16>>2]|0;c=k[I+(b<<5)+20>>2]|0;f=k[I+(b<<5)+24>>2]|0;d=k[I+(b<<5)+28>>2]|0;k[N>>2]=e;k[s>>2]=a;k[t>>2]=c;k[w>>2]=f;H=y;k[H>>2]=b;k[H+4>>2]=d;if(o>>>0<q>>>0){k[o>>2]=e;k[o+4>>2]=a;k[o+8>>2]=c;k[o+12>>2]=f;k[o+16>>2]=b;k[o+20>>2]=d;k[J>>2]=o+24}else Db(P,N);b=b+1|0;if(b>>>0>=C>>>0){o=0;break a}o=k[J>>2]|0;q=k[A>>2]|0}}else o=1;while(0);k[O>>2]=0;H=O+4|0;k[H>>2]=0;k[O+8>>2]=0;e=O+8|0;if(B){if(o)o=0;else{b=C*24|0;o=_d(b)|0;c:do if(!o){while(1){o=k[35]|0;k[35]=o+0;if(!o)break;Xa[o&0]();o=_d(b)|0;if(o)break c}Y=ya(4)|0;k[Y>>2]=128;La(Y|0,8,1)}while(0)}G=o;k[O>>2]=G;k[H>>2]=G;k[e>>2]=o+(C*24|0)}Eb(O,k[P>>2]|0,k[J>>2]|0);G=k[H>>2]|0;a=k[O>>2]|0;e=(G-a|0)/24|0;c=(G|0)==(a|0);d:do if(!c){b=e<<5;b=(b|0)==0?1:b;o=_d(b)|0;do if(!o){while(1){o=k[35]|0;k[35]=o+0;if(!o){U=39;break}Xa[o&0]();o=_d(b)|0;if(o){U=40;break}}if((U|0)==39){Y=ya(4)|0;k[Y>>2]=128;La(Y|0,8,1)}else if((U|0)==40){f=o;b=o+(e<<5)|0;e=b;if(c){M=f;K=f;L=e;break d}else{F=a;E=f;a=f;break}}}else{D=o;e=o+(e<<5)|0;F=a;b=e;E=D;a=D}while(0);e:while(1){t=k[F+16>>2]|0;q=k[I+(t<<5)>>2]|0;t=I+(t<<5)+4|0;s=k[t>>2]|0;t=k[t+4>>2]|0;w=k[F>>2]|0;y=k[F+4>>2]|0;A=k[F+8>>2]|0;B=k[F+12>>2]|0;C=k[F+20>>2]|0;if((o|0)==(b|0)){c=a;D=E;f=a-E>>5;d=f+1|0;if(d>>>0>134217727){U=44;break}o=e-E|0;if(o>>5>>>0<67108863){o=o>>4;o=o>>>0<d>>>0?d:o;if(!o){e=0;a=0}else U=47}else{o=134217727;U=47}if((U|0)==47){U=0;e=o<<5;e=(e|0)==0?1:e;b=_d(e)|0;if(!b)do{b=k[35]|0;k[35]=b+0;if(!b){U=50;break e}Xa[b&0]();b=_d(e)|0}while((b|0)==0);e=o;a=b}b=a+(f<<5)|0;o=b;e=a+(e<<5)|0;k[b>>2]=q;q=a+(f<<5)+4|0;k[q>>2]=s;k[q+4>>2]=t;k[a+(f<<5)+12>>2]=w;k[a+(f<<5)+16>>2]=y;k[a+(f<<5)+20>>2]=A;k[a+(f<<5)+24>>2]=B;k[a+(f<<5)+28>>2]=C;a=a+(d<<5)|0;if((c|0)!=(D|0))do{C=c;c=c+-32|0;k[b+-32>>2]=k[c>>2];y=C+-28|0;A=k[y+4>>2]|0;B=b+-28|0;k[B>>2]=k[y>>2];k[B+4>>2]=A;k[b+-20>>2]=k[C+-20>>2];k[b+-16>>2]=k[C+-16>>2];k[b+-12>>2]=k[C+-12>>2];k[b+-8>>2]=k[C+-8>>2];k[b+-4>>2]=k[C+-4>>2];b=o+-32|0;o=b}while((c|0)!=(D|0));if(!E)c=o;else{$d(E);c=o}}else{k[o>>2]=q;c=o+4|0;k[c>>2]=s;k[c+4>>2]=t;k[o+12>>2]=w;k[o+16>>2]=y;k[o+20>>2]=A;k[o+24>>2]=B;k[o+28>>2]=C;c=E;a=a+32|0}o=F+24|0;if((o|0)==(G|0)){M=c;K=a;L=e;break d}F=o;o=a;b=e;E=c}if((U|0)==44)xa(1340,1363,303,1438);else if((U|0)==50){Y=ya(4)|0;k[Y>>2]=128;La(Y|0,8,1)}}else{M=0;K=0;L=0}while(0);o=k[T>>2]|0;b=o;if(!o)o=T+8|0;else{e=k[S>>2]|0;if((e|0)!=(o|0))k[S>>2]=e+(~((e+-32-b|0)>>>5)<<5);$d(o);o=T+8|0;k[o>>2]=0;k[S>>2]=0;k[T>>2]=0}k[T>>2]=M;k[S>>2]=K;k[o>>2]=L;b=k[O>>2]|0;e=b;a=M;if(b){o=k[H>>2]|0;if((o|0)!=(b|0))k[H>>2]=o+(~(((o+-24-e|0)>>>0)/24|0)*24|0);$d(b)}o=k[P>>2]|0;b=o;if(o){e=k[J>>2]|0;if((e|0)!=(o|0))k[J>>2]=e+(~(((e+-24-b|0)>>>0)/24|0)*24|0);$d(o)}J=k[S>>2]|0;k[P>>2]=1;ob(a,J,P);do if((a|0)!=(J|0)){K=N+4|0;I=k[a+12>>2]|0;f=0;E=0;d=0;w=0;s=0;o=a;b=0;c=0;e=0;f:while(1){if(d){F=0;t=E;H=J;G=b}else{t=o;q=b;while(1){if((k[t+12>>2]|0)!=(I|0)){o=1;a=t;b=q;break};k[K>>2]=0;k[K+4>>2]=0;i[K+8>>0]=0;i[O>>0]=0;o=e;do if((o|0)==(c|0)){d=e-q|0;a=d>>5;f=a+1|0;if(f>>>0>134217727){U=78;break f}if(a>>>0<67108863){e=d>>4;e=e>>>0<f>>>0?f:e}else e=134217727;b=e<<5;b=(b|0)==0?1:b;o=_d(b)|0;if(!o)do{o=k[35]|0;k[35]=o+0;if(!o){U=84;break f}Xa[o&0]();o=_d(b)|0}while((o|0)==0);c=o+(e<<5)|0;k[o+(a<<5)>>2]=0;k[o+(a<<5)+4>>2]=0;k[o+(a<<5)+8>>2]=t;b=o+(a<<5)+12|0;k[b>>2]=k[N>>2];k[b+4>>2]=k[N+4>>2];k[b+8>>2]=k[N+8>>2];i[b+12>>0]=i[N+12>>0]|0;i[o+(a<<5)+25>>0]=1;a=o+(a<<5)+26|0;j[a>>1]=j[O>>1]|0;j[a+2>>1]=j[O+2>>1]|0;j[a+4>>1]=j[O+4>>1]|0;a=o+(f<<5)|0;b=o;e=q;fe(o|0,e|0,d|0)|0;if(!q){e=a;break}$d(e);e=a}else{k[o>>2]=0;k[o+4>>2]=0;k[o+8>>2]=t;b=o+12|0;k[b>>2]=k[N>>2];k[b+4>>2]=k[N+4>>2];k[b+8>>2]=k[N+8>>2];i[b+12>>0]=i[N+12>>0]|0;i[o+25>>0]=1;b=o+26|0;j[b>>1]=j[O>>1]|0;j[b+2>>1]=j[O+2>>1]|0;j[b+4>>1]=j[O+4>>1]|0;b=q;e=o+32|0}while(0);t=t+32|0;if((t|0)==(J|0)){o=0;a=J;break}else q=b}F=o;t=b;f=e;H=a;G=b}if((t|0)!=(f|0)){z=+(I|0);d=t;do{o=k[d+8>>2]|0;b=k[o+16>>2]|0;q=k[o+20>>2]|0;a=k[o+24>>2]|0;do if((b|0)==(a|0)){u=+(b|0);o=k[o+12>>2]|0}else{o=k[o+12>>2]|0;x=+(o|0);u=+(b|0);v=z-x;if(v==0.0)break;u=u+(+(a|0)-u)*v/(+(q|0)-x)}while(0);p[d+16>>3]=u;i[d+24>>0]=((I|0)==(q|0)|(I|0)==(o|0))&1;d=d+32|0}while((d|0)!=(f|0))}k[P>>2]=2;qb(t,f,P);E=G;D=e;if((E|0)==(D|0)){o=E;q=w}else{C=E;o=G;t=w;while(1){a=C+32|0;b=a;g:do if(!((a|0)==(D|0)|(i[C+24>>0]|0)==0)){d=C+16|0;f=C;while(1){if(!(i[f+56>>0]|0))break g;if(!(+p[f+48>>3]==+p[d>>3]))break g;f=a+32|0;b=f;if((f|0)==(D|0))break;else{M=a;a=f;f=M}}}while(0);a=o;B=a>>>0<b>>>0;if(B){f=a;do{q=k[f+8>>2]|0;d=k[q+12>>2]|0;q=k[q+20>>2]|0;if((d|0)!=(q|0)){i[f+25>>0]=(I|0)==(d|0)&1;i[f+26>>0]=(I|0)==(q|0)&1}f=f+32|0}while(f>>>0<b>>>0)}if((C|0)==(b|0))q=t;else{A=b+25|0;d=o;q=t;while(1){f=d;h:do if((f|0)==(b|0)){f=d;d=q;U=111}else{w=q;while(1){t=k[f+8>>2]|0;q=i[f+25>>0]|0;if((k[t+12>>2]|0)==(k[t+20>>2]|0)){f=d;y=s;d=w;break h}q=q<<24>>24==0;if(!q)k[f>>2]=s;do if(!(i[t+4>>0]|0)){if(q)d=(k[t+28>>2]|0)+w|0;else d=w;if(i[f+26>>0]|0){t=d;break}s=(k[t+28>>2]|0)+s|0;t=d}else t=w;while(0);if(!q)k[f+4>>2]=s;f=f+32|0;d=f;if((f|0)==(b|0)){f=d;d=t;U=111;break}else w=t}}while(0);if((U|0)==111){U=0;q=i[A>>0]|0;y=s}w=f;i:do if((w|0)==(b|0))q=d;else{t=w;while(1){s=k[t+8>>2]|0;if((k[s+12>>2]|0)!=(k[s+20>>2]|0)){t=w;break}if((i[t+25>>0]|0)!=q<<24>>24){t=w;break}k[t>>2]=d;if(!(i[s+4>>0]|0))d=(k[s+28>>2]|0)+d|0;k[t+4>>2]=d;t=t+32|0;if((t|0)==(b|0)){t=w;break}}do{s=k[t+8>>2]|0;if((k[s+12>>2]|0)!=(k[s+20>>2]|0))break;if((i[t+25>>0]|0)!=q<<24>>24)break;if(!(i[s+4>>0]|0))d=d-(k[s+28>>2]|0)|0;t=t+32|0}while((t|0)!=(b|0));s=w;while(1){M=k[s+8>>2]|0;if((k[M+12>>2]|0)!=(k[M+20>>2]|0)){q=d;break i}if((i[s+25>>0]|0)!=q<<24>>24){q=d;break i}s=s+32|0;f=s;if((s|0)==(b|0)){q=d;break}}}while(0);if((f|0)==(b|0)){f=C;break}else{d=f;s=y}}do{if(!(k[f>>2]|0))d=0;else d=(k[f+4>>2]|0)!=0;i[(k[f+8>>2]|0)+5>>0]=d&1;f=f+32|0}while((f|0)!=(b|0));s=y}j:do if(B)do{M=k[a+8>>2]|0;if((k[M+12>>2]|0)==(k[M+20>>2]|0)?(i[a+26>>0]|0)==0:0)break j;a=a+32|0;o=a}while(a>>>0<b>>>0);while(0);C=o;if(C>>>0<b>>>0){a=C;do{p[a+16>>3]=+(k[(k[a+8>>2]|0)+24>>2]|0);i[a+25>>0]=0;i[a+26>>0]=1;a=a+32|0}while(a>>>0<b>>>0)}if((C|0)==(D|0)){o=D;break}else t=q}}k:do if((E|0)==(o|0)){b=E;U=151}else{b=E;do{if(i[b+26>>0]|0){U=151;break k}b=b+32|0}while((b|0)!=(o|0))}while(0);l:do if((U|0)==151){U=0;a=b;if((b|0)==(o|0)){o=a;break}else{d=a;b=a}while(1){do{a=b;f=a+32|0;b=f;if((f|0)==(o|0)){o=d;break l}}while((i[a+58>>0]|0)!=0);M=d;k[M>>2]=k[f>>2];k[M+4>>2]=k[f+4>>2];k[M+8>>2]=k[f+8>>2];k[M+12>>2]=k[f+12>>2];k[M+16>>2]=k[f+16>>2];k[M+20>>2]=k[f+20>>2];j[M+24>>1]=j[f+24>>1]|0;i[M+26>>0]=i[f+26>>0]|0;d=d+32|0}}while(0);b=o;do if((b|0)==(D|0))f=D;else{L=E+((o-G>>5)+(e-o>>5)<<5)|0;M=e-L|0;he(o|0,L|0,M|0)|0;o=b+(M>>5<<5)|0;if((D|0)==(o|0)){f=D;break}e=D+(~((D+-32-o|0)>>>5)<<5)|0;f=e}while(0);a=(E|0)==(f|0);if(a)o=2147483647;else{b=E;o=2147483647;do{M=k[(k[b+8>>2]|0)+20>>2]|0;o=(M|0)<(o|0)?M:o;b=b+32|0}while((b|0)!=(f|0))}if(F){M=k[H+12>>2]|0;o=(M|0)<(o|0)?M:o}d=(H|0)==(J|0);if(a&d){U=164;break}else{I=o;w=q;o=H;b=G}}if((U|0)==78)xa(1340,1363,303,1438);else if((U|0)==84){Y=ya(4)|0;k[Y>>2]=128;La(Y|0,8,1)}else if((U|0)==164){if(!G)break;$d(G);break}}while(0);o=k[T>>2]|0;f=k[S>>2]|0;rb(o,f);if((o|0)!=(f|0))do{P=k[o+28>>2]|0;b=o+12|0;e=k[b>>2]|0;a=o+20|0;c=k[a>>2]|0;if((((e|0)==(c|0)?0-P|0:P)|0)<0){N=o+16|0;O=k[N>>2]|0;k[b>>2]=c;P=o+24|0;k[N>>2]=k[P>>2];k[a>>2]=e;k[P>>2]=O}o=o+32|0}while((o|0)!=(f|0));k[R>>2]=0;K=R+4|0;k[K>>2]=0;k[R+8>>2]=0;o=_d(12)|0;m:do if(!o){while(1){o=k[35]|0;k[35]=o+0;if(!o)break;Xa[o&0]();o=_d(12)|0;if(o)break m}Y=ya(4)|0;k[Y>>2]=128;La(Y|0,8,1)}while(0);k[K>>2]=o;k[R>>2]=o;J=R+8|0;k[J>>2]=o+12;k[o>>2]=0;k[o+4>>2]=0;k[o+8>>2]=0;c=o+12|0;k[K>>2]=c;e=k[k[W>>2]>>2]|0;a=k[e>>2]|0;e=k[e+4>>2]|0;o=k[T>>2]|0;b=k[S>>2]|0;k[Q>>2]=a;I=Q+4|0;k[I>>2]=e;n:do if((o|0)!=(b|0)){f=o;H=o;s=c;t=0;o:while(1){o=f+4|0;if(!(i[o>>0]|0)){U=222;break n}G=H;p:do if((G|0)==(b|0))F=H;else{d=o+4|0;q=G;o=H;while(1){f=q+4|0;if(!(i[f>>0]|0)){F=o;b=q;break p}if((k[f+4>>2]|0)!=(k[d>>2]|0)){F=o;b=q;break p}q=q+32|0;o=q;if((q|0)==(b|0)){F=o;break}}}while(0);if((G|0)==(b|0)){U=218;break}else o=G;q:while(1){f=o+4|0;E=f+2|0;do if(!(i[E>>0]|0)){if((k[o+12>>2]|0)!=(a|0))break;if((k[o+16>>2]|0)==(e|0))break q}while(0);o=o+32|0;if((o|0)==(b|0)){U=218;break o}}D=f+1|0;if((l[D>>0]|0)==(t&1|0))q=t;else{c=s+-12|0;f=s+-8|0;d=k[f>>2]|0;do if((k[c>>2]|0)!=(d|0))if(d>>>0<(k[s+-4>>2]|0)>>>0){k[d>>2]=a;k[d+4>>2]=e;k[f>>2]=d+8;q=s;break}else{sb(c,Q);q=k[K>>2]|0;break}else q=s;while(0);c=k[J>>2]|0;do if(q>>>0<c>>>0){k[q>>2]=0;k[q+4>>2]=0;k[q+8>>2]=0;c=q+12|0;k[K>>2]=c}else{C=k[R>>2]|0;f=q;y=C;A=(f-y|0)/12|0;B=A+1|0;if(B>>>0>357913941){U=194;break o}c=(c-y|0)/12|0;if(c>>>0<178956970){c=c<<1;c=c>>>0<B>>>0?B:c;if(!c){c=0;s=0}else U=197}else{c=357913941;U=197}if((U|0)==197){U=0;s=c*12|0;s=(s|0)==0?1:s;d=_d(s)|0;if(!d)do{d=k[35]|0;k[35]=d+0;if(!d){U=200;break o}Xa[d&0]();d=_d(s)|0}while((d|0)==0);s=d}d=s+(A*12|0)|0;t=d;w=s+(c*12|0)|0;k[d>>2]=0;k[s+(A*12|0)+4>>2]=0;k[s+(A*12|0)+8>>2]=0;c=s+(B*12|0)|0;s=c;if((q|0)==(C|0))d=t;else{f=t;do{P=d+-12|0;O=q;q=q+-12|0;k[P>>2]=0;N=d+-8|0;k[N>>2]=0;k[d+-4>>2]=0;k[P>>2]=k[q>>2];P=O+-8|0;k[N>>2]=k[P>>2];O=O+-4|0;k[d+-4>>2]=k[O>>2];k[O>>2]=0;k[P>>2]=0;k[q>>2]=0;d=f+-12|0;f=d}while((q|0)!=(C|0));d=f;y=k[R>>2]|0;f=k[K>>2]|0}k[R>>2]=d;k[K>>2]=s;k[J>>2]=w;w=y;if((f|0)!=(w|0))do{d=f;f=f+-12|0;s=k[f>>2]|0;t=s;if(s){d=d+-8|0;q=k[d>>2]|0;if((q|0)!=(s|0))k[d>>2]=q+(~((q+-8-t|0)>>>3)<<3);$d(s)}}while((f|0)!=(w|0));if(!y)break;$d(y)}while(0);s=c;q=(i[D>>0]|0)!=0}f=s+-8|0;d=k[f>>2]|0;if(d>>>0<(k[s+-4>>2]|0)>>>0){k[d>>2]=a;k[d+4>>2]=e;k[f>>2]=d+8}else sb(s+-12|0,Q);a=k[o+20>>2]|0;k[Q>>2]=a;e=k[o+24>>2]|0;k[I>>2]=e;i[E>>0]=1;o=G;f=1;do{f=f&(i[o+4+2>>0]|0)!=0;o=o+32|0}while((o|0)!=(b|0));H=f?F:H;b=k[S>>2]|0;f=H;if((f|0)==(b|0)){U=222;break n}else t=q}if((U|0)==194)xa(1340,1363,303,1438);else if((U|0)==200){Y=ya(4)|0;k[Y>>2]=128;La(Y|0,8,1)}else if((U|0)==218){k[g>>2]=1;ib(h,m,n,W);break}}else U=222;while(0);if((U|0)==222){o=c+-8|0;b=k[o>>2]|0;if(b>>>0<(k[c+-4>>2]|0)>>>0){k[b>>2]=a;k[b+4>>2]=e;k[o>>2]=b+8}else sb(c+-12|0,Q);ib(h,m,n,R)}f=k[R>>2]|0;if(f){o=k[K>>2]|0;if((o|0)!=(f|0)){do{b=o;o=o+-12|0;a=k[o>>2]|0;c=a;if(a){b=b+-8|0;e=k[b>>2]|0;if((e|0)!=(a|0))k[b>>2]=e+(~((e+-8-c|0)>>>3)<<3);$d(a)}}while((o|0)!=(f|0));k[K>>2]=f}$d(f)}o=k[T>>2]|0;b=o;if(!o)o=V;else{e=k[S>>2]|0;if((e|0)!=(o|0))k[S>>2]=e+(~((e+-32-b|0)>>>5)<<5);$d(o);o=V}}else{o=V;U=3}if((U|0)==3)ib(h,m,n,W);d=k[o>>2]|0;if(d){f=V+4|0;o=k[f>>2]|0;if((o|0)!=(d|0)){do{b=o;o=o+-12|0;a=k[o>>2]|0;c=a;if(a){b=b+-8|0;e=k[b>>2]|0;if((e|0)!=(a|0))k[b>>2]=e+(~((e+-8-c|0)>>>3)<<3);$d(a)}}while((o|0)!=(d|0));k[f>>2]=d}$d(d)}f=k[W>>2]|0;if(!f){r=Y;return}o=k[X>>2]|0;if((o|0)!=(f|0)){do{b=o;o=o+-12|0;a=k[o>>2]|0;c=a;if(a){b=b+-8|0;e=k[b>>2]|0;if((e|0)!=(a|0))k[b>>2]=e+(~((e+-8-c|0)>>>3)<<3);$d(a)}}while((o|0)!=(f|0));k[X>>2]=f}$d(f);r=Y;return}function mb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;B=r;r=r+32|0;A=B;v=c-b>>3;if(!v){r=B;return}w=A+4|0;x=w+1|0;y=w+2|0;z=w+4|0;n=A+12|0;o=A+16|0;p=A+20|0;q=A+24|0;s=A+28|0;t=a+4|0;u=a+8|0;if(d){l=0;do{d=l;l=l+1|0;g=l>>>0<v>>>0?b+(l<<3)|0:b;f=k[b+(d<<3)>>2]|0;d=k[b+(d<<3)+4>>2]|0;c=k[g>>2]|0;g=k[g+4>>2]|0;do if((f|0)!=(c|0)|(d|0)!=(g|0)){k[A>>2]=0;i[w>>0]=0;i[x>>0]=0;i[y>>0]=0;k[z>>2]=0;k[n>>2]=f;k[o>>2]=d;k[p>>2]=c;k[q>>2]=g;k[s>>2]=1;if((f|0)<=(c|0))if((f|0)==(c|0))if((d|0)>(g|0))m=8;else{e=1;c=f;m=10}else{h=f;f=g;e=1;m=9}else m=8;if((m|0)==8){k[n>>2]=c;k[o>>2]=g;k[p>>2]=f;k[q>>2]=d;k[s>>2]=-1;h=c;c=f;f=d;d=g;e=-1;m=9}if((m|0)==9){m=0;if((h|0)==(c|0)){g=f;m=10}else j=d}if((m|0)==10){e=0-e|0;k[s>>2]=e;h=c;j=d;f=g}d=k[t>>2]|0;if(d>>>0<(k[u>>2]|0)>>>0){k[d>>2]=0;C=w;g=k[C+4>>2]|0;m=d+4|0;k[m>>2]=k[C>>2];k[m+4>>2]=g;k[d+12>>2]=h;k[d+16>>2]=j;k[d+20>>2]=c;k[d+24>>2]=f;k[d+28>>2]=e;k[t>>2]=(k[t>>2]|0)+32;break}else{kc(a,A);break}}while(0)}while((l|0)!=(v|0));r=B;return}if(v>>>0>1){j=1;c=0}else{r=B;return}while(1){h=k[b+(c<<3)>>2]|0;d=k[b+(c<<3)+4>>2]|0;g=k[b+(j<<3)>>2]|0;c=k[b+(j<<3)+4>>2]|0;do if((h|0)!=(g|0)|(d|0)!=(c|0)){k[A>>2]=0;i[w>>0]=0;i[x>>0]=0;i[y>>0]=0;k[z>>2]=0;k[n>>2]=h;k[o>>2]=d;k[p>>2]=g;k[q>>2]=c;k[s>>2]=1;if((h|0)<=(g|0))if((h|0)==(g|0))if((d|0)>(c|0))m=19;else{f=c;g=h;c=1;m=21}else{f=c;c=1;e=h;m=20}else m=19;if((m|0)==19){k[n>>2]=g;k[o>>2]=c;k[p>>2]=h;k[q>>2]=d;k[s>>2]=-1;f=d;d=c;c=-1;e=g;g=h;m=20}if((m|0)==20){m=0;if((e|0)==(g|0))m=21;else h=d}if((m|0)==21){c=0-c|0;k[s>>2]=c;e=g;h=d}d=k[t>>2]|0;if(d>>>0<(k[u>>2]|0)>>>0){k[d>>2]=0;l=w;m=k[l+4>>2]|0;C=d+4|0;k[C>>2]=k[l>>2];k[C+4>>2]=m;k[d+12>>2]=e;k[d+16>>2]=h;k[d+20>>2]=g;k[d+24>>2]=f;k[d+28>>2]=c;k[t>>2]=(k[t>>2]|0)+32;break}else{kc(a,A);break}}while(0);c=j+1|0;if(c>>>0<v>>>0){C=j;j=c;c=C}else break}r=B;return}function nb(a,b){a=a|0;b=b|0;return (k[a+12>>2]|0)<(k[b+12>>2]|0)|0}function ob(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;w=r;r=r+32|0;v=w;a:while(1){l=b;m=b+-32|0;n=b+-28|0;o=b+-20|0;p=b+-16|0;q=b+-12|0;s=b+-8|0;t=b+-4|0;b:while(1){j=a;f=l-j|0;d=f>>5;switch(d|0){case 2:{u=4;break a}case 3:{u=6;break a}case 4:{u=7;break a}case 5:{u=8;break a}case 1:case 0:{u=53;break a}default:{}}if((f|0)<224){u=10;break a}e=(d|0)/2|0;i=a+(e<<5)|0;if((f|0)>31968){d=(d|0)/4|0;d=Bb(a,a+(d<<5)|0,i,a+(d+e<<5)|0,m,c)|0}else d=zb(a,i,m,c)|0;do if(Za[k[c>>2]&7](a,i)|0)f=m;else{f=b;g=m;while(1){e=g+-32|0;if((a|0)==(e|0))break;if(Za[k[c>>2]&7](e,i)|0){u=36;break}else{f=g;g=e}}if((u|0)==36){u=0;H=k[a>>2]|0;C=a+4|0;F=C;G=k[F>>2]|0;F=k[F+4>>2]|0;A=a+12|0;D=k[A>>2]|0;y=a+16|0;B=k[y>>2]|0;g=a+20|0;z=k[g>>2]|0;J=a+24|0;x=k[J>>2]|0;I=a+28|0;h=k[I>>2]|0;k[a>>2]=k[e>>2];E=f+-60|0;L=E;K=k[L+4>>2]|0;k[C>>2]=k[L>>2];k[C+4>>2]=K;C=f+-52|0;k[A>>2]=k[C>>2];A=f+-48|0;k[y>>2]=k[A>>2];y=f+-44|0;k[g>>2]=k[y>>2];g=f+-40|0;k[J>>2]=k[g>>2];f=f+-36|0;k[I>>2]=k[f>>2];k[e>>2]=H;k[E>>2]=G;k[E+4>>2]=F;k[C>>2]=D;k[A>>2]=B;k[y>>2]=z;k[g>>2]=x;k[f>>2]=h;f=e;d=d+1|0;break}d=a+32|0;if(!(Za[k[c>>2]&7](a,m)|0)){if((d|0)==(m|0)){u=53;break a}else e=a;while(1){if(Za[k[c>>2]&7](a,d)|0)break;e=d+32|0;if((e|0)==(m|0)){u=53;break a}else{L=d;d=e;e=L}}E=k[d>>2]|0;j=e+36|0;G=j;F=k[G>>2]|0;G=k[G+4>>2]|0;z=e+44|0;H=k[z>>2]|0;A=e+48|0;I=k[A>>2]|0;B=e+52|0;J=k[B>>2]|0;C=e+56|0;K=k[C>>2]|0;D=e+60|0;L=k[D>>2]|0;k[d>>2]=k[m>>2];x=n;y=k[x+4>>2]|0;d=j;k[d>>2]=k[x>>2];k[d+4>>2]=y;k[z>>2]=k[o>>2];k[A>>2]=k[p>>2];k[B>>2]=k[q>>2];k[C>>2]=k[s>>2];k[D>>2]=k[t>>2];k[m>>2]=E;d=n;k[d>>2]=F;k[d+4>>2]=G;k[o>>2]=H;k[p>>2]=I;k[q>>2]=J;k[s>>2]=K;k[t>>2]=L;d=e+64|0}if((d|0)==(m|0)){u=53;break a}else e=m;while(1){g=d;while(1){d=g+32|0;if(Za[k[c>>2]&7](a,g)|0){f=e;break}else g=d}while(1){e=f+-32|0;if(Za[k[c>>2]&7](a,e)|0)f=e;else break}if(g>>>0>=e>>>0){a=g;continue b}y=k[g>>2]|0;D=g+4|0;A=D;z=k[A>>2]|0;A=k[A+4>>2]|0;F=g+12|0;C=k[F>>2]|0;H=g+16|0;E=k[H>>2]|0;J=g+20|0;G=k[J>>2]|0;L=g+24|0;I=k[L>>2]|0;x=g+28|0;K=k[x>>2]|0;k[g>>2]=k[e>>2];B=f+-28|0;i=B;j=k[i+4>>2]|0;k[D>>2]=k[i>>2];k[D+4>>2]=j;D=f+-20|0;k[F>>2]=k[D>>2];F=f+-16|0;k[H>>2]=k[F>>2];H=f+-12|0;k[J>>2]=k[H>>2];J=f+-8|0;k[L>>2]=k[J>>2];L=f+-4|0;k[x>>2]=k[L>>2];k[e>>2]=y;k[B>>2]=z;k[B+4>>2]=A;k[D>>2]=C;k[F>>2]=E;k[H>>2]=G;k[J>>2]=I;k[L>>2]=K}}while(0);e=a+32|0;c:do if(e>>>0<f>>>0)while(1){h=e;while(1){e=h+32|0;if(Za[k[c>>2]&7](h,i)|0)h=e;else break}while(1){g=f+-32|0;if(Za[k[c>>2]&7](g,i)|0)break;else f=g}if(h>>>0>g>>>0){e=i;break c}z=k[h>>2]|0;E=h+4|0;B=E;A=k[B>>2]|0;B=k[B+4>>2]|0;G=h+12|0;D=k[G>>2]|0;I=h+16|0;F=k[I>>2]|0;K=h+20|0;H=k[K>>2]|0;x=h+24|0;J=k[x>>2]|0;y=h+28|0;L=k[y>>2]|0;k[h>>2]=k[g>>2];C=f+-28|0;N=C;M=k[N+4>>2]|0;k[E>>2]=k[N>>2];k[E+4>>2]=M;E=f+-20|0;k[G>>2]=k[E>>2];G=f+-16|0;k[I>>2]=k[G>>2];I=f+-12|0;k[K>>2]=k[I>>2];K=f+-8|0;k[x>>2]=k[K>>2];f=f+-4|0;k[y>>2]=k[f>>2];k[g>>2]=z;k[C>>2]=A;k[C+4>>2]=B;k[E>>2]=D;k[G>>2]=F;k[I>>2]=H;k[K>>2]=J;k[f>>2]=L;f=g;i=(i|0)==(h|0)?g:i;d=d+1|0}else{h=e;e=i}while(0);if((h|0)!=(e|0)?Za[k[c>>2]&7](e,h)|0:0){A=k[h>>2]|0;F=h+4|0;C=F;B=k[C>>2]|0;C=k[C+4>>2]|0;H=h+12|0;E=k[H>>2]|0;J=h+16|0;G=k[J>>2]|0;L=h+20|0;I=k[L>>2]|0;N=h+24|0;K=k[N>>2]|0;z=h+28|0;M=k[z>>2]|0;k[h>>2]=k[e>>2];D=e+4|0;x=D;y=k[x+4>>2]|0;k[F>>2]=k[x>>2];k[F+4>>2]=y;F=e+12|0;k[H>>2]=k[F>>2];H=e+16|0;k[J>>2]=k[H>>2];J=e+20|0;k[L>>2]=k[J>>2];L=e+24|0;k[N>>2]=k[L>>2];N=e+28|0;k[z>>2]=k[N>>2];k[e>>2]=A;k[D>>2]=B;k[D+4>>2]=C;k[F>>2]=E;k[H>>2]=G;k[J>>2]=I;k[L>>2]=K;k[N>>2]=M;d=d+1|0}if(!d){d=Cb(a,h,c)|0;e=h+32|0;if(Cb(e,b,c)|0){u=48;break}if(d){a=e;continue}}N=h;if((N-j|0)>=(l-N|0)){u=52;break}ob(a,h,c);a=h+32|0}if((u|0)==48){u=0;if(d){u=53;break}else{b=h;continue}}else if((u|0)==52){u=0;ob(h+32|0,b,c);b=h;continue}}if((u|0)==4){if(!(Za[k[c>>2]&7](m,a)|0)){r=w;return}I=k[a>>2]|0;A=a+4|0;H=A;G=k[H>>2]|0;H=k[H+4>>2]|0;B=a+12|0;J=k[B>>2]|0;C=a+16|0;K=k[C>>2]|0;D=a+20|0;L=k[D>>2]|0;E=a+24|0;M=k[E>>2]|0;F=a+28|0;N=k[F>>2]|0;k[a>>2]=k[m>>2];y=n;z=k[y+4>>2]|0;k[A>>2]=k[y>>2];k[A+4>>2]=z;k[B>>2]=k[o>>2];k[C>>2]=k[p>>2];k[D>>2]=k[q>>2];k[E>>2]=k[s>>2];k[F>>2]=k[t>>2];k[m>>2]=I;I=n;k[I>>2]=G;k[I+4>>2]=H;k[o>>2]=J;k[p>>2]=K;k[q>>2]=L;k[s>>2]=M;k[t>>2]=N;r=w;return}else if((u|0)==6){zb(a,a+32|0,m,c)|0;r=w;return}else if((u|0)==7){Ab(a,a+32|0,a+64|0,m,c)|0;r=w;return}else if((u|0)==8){Bb(a,a+32|0,a+64|0,a+96|0,m,c)|0;r=w;return}else if((u|0)==10){e=a+64|0;zb(a,a+32|0,e,c)|0;d=a+96|0;if((d|0)!=(b|0)){n=v+4|0;o=v+12|0;p=v+16|0;q=v+20|0;s=v+24|0;t=v+28|0;m=d;while(1){if(Za[k[c>>2]&7](m,e)|0){k[v>>2]=k[m>>2];M=m+4|0;N=k[M+4>>2]|0;d=n;k[d>>2]=k[M>>2];k[d+4>>2]=N;k[o>>2]=k[m+12>>2];k[p>>2]=k[m+16>>2];k[q>>2]=k[m+20>>2];k[s>>2]=k[m+24>>2];k[t>>2]=k[m+28>>2];d=m;while(1){k[d>>2]=k[e>>2];l=e+4|0;h=l;g=k[h+4>>2]|0;f=d+4|0;k[f>>2]=k[h>>2];k[f+4>>2]=g;f=e+12|0;k[d+12>>2]=k[f>>2];g=e+16|0;k[d+16>>2]=k[g>>2];h=e+20|0;k[d+20>>2]=k[h>>2];i=e+24|0;k[d+24>>2]=k[i>>2];j=e+28|0;k[d+28>>2]=k[j>>2];if((e|0)==(a|0))break;d=e+-32|0;if(Za[k[c>>2]&7](v,d)|0){N=e;e=d;d=N}else break}k[e>>2]=k[v>>2];L=n;M=k[L+4>>2]|0;N=l;k[N>>2]=k[L>>2];k[N+4>>2]=M;k[f>>2]=k[o>>2];k[g>>2]=k[p>>2];k[h>>2]=k[q>>2];k[i>>2]=k[s>>2];k[j>>2]=k[t>>2]}d=m+32|0;if((d|0)==(b|0))break;else{e=m;m=d}}}r=w;return}else if((u|0)==53){r=w;return}}function pb(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;c=+p[a+16>>3];d=+p[b+16>>3];if(c<d){m=1;return m|0}if(d<c){m=0;return m|0}e=i[a+24>>0]|0;f=i[b+24>>0]|0;if((e&255)<(f&255)){m=1;return m|0}if((f&255)<(e&255)){m=0;return m|0}g=k[a+8>>2]|0;b=k[b+8>>2]|0;e=k[g+20>>2]|0;f=k[g+12>>2]|0;a=e-f|0;g=(k[g+24>>2]|0)-(k[g+16>>2]|0)|0;h=k[b+20>>2]|0;j=k[b+12>>2]|0;l=h-j|0;b=(k[b+24>>2]|0)-(k[b+16>>2]|0)|0;if((a|0)>=0){if((e|0)==(f|0)){m=0;return m|0}}else{a=0-a|0;g=0-g|0}if((l|0)>=0)if((h|0)==(j|0)){m=(a|0)!=0;return m|0}else e=l;else{e=0-l|0;b=0-b|0}j=(e|0)<0?0-e|0:e;h=(g|0)<0?0-g|0:g;h=ne(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;l=(a|0)<0?0-a|0:a;m=(b|0)<0?0-b|0:b;l=ne(m|0,((m|0)<0)<<31>>31|0,l|0,((l|0)<0)<<31>>31|0)|0;m=L;f=ha(e>>31|1,g>>31|1)|0;e=ha(b>>31|1,a>>31|1)|0;if((f|0)<(e|0)){m=1;return m|0}if((e|0)<(f|0)){m=0;return m|0}if((f|0)==-1){m=m>>>0<j>>>0|(m|0)==(j|0)&l>>>0<h>>>0;return m|0}else{m=j>>>0<m>>>0|(j|0)==(m|0)&h>>>0<l>>>0;return m|0}return 0}function qb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0;t=r;r=r+64|0;q=t+32|0;p=t;o=b;a:while(1){l=o;n=o+-32|0;s=a;b:while(1){h=s;a=l-h|0;b=a>>5;switch(b|0){case 2:{m=4;break a}case 3:{m=6;break a}case 4:{m=14;break a}case 5:{m=15;break a}case 1:case 0:{m=82;break a}default:{}}if((a|0)<992){m=21;break a}d=(b|0)/2|0;g=s+(d<<5)|0;do if((a|0)>31968){b=(b|0)/4|0;e=s+(b<<5)|0;b=s+(b+d<<5)|0;a=xb(s,e,g,b,c)|0;if(Za[k[c>>2]&7](n,b)|0){k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[p+28>>2]=k[b+28>>2];k[b>>2]=k[n>>2];k[b+4>>2]=k[n+4>>2];k[b+8>>2]=k[n+8>>2];k[b+12>>2]=k[n+12>>2];k[b+16>>2]=k[n+16>>2];k[b+20>>2]=k[n+20>>2];j[b+24>>1]=j[n+24>>1]|0;i[b+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;d=a+1|0;if(Za[k[c>>2]&7](b,g)|0){k[p>>2]=k[g>>2];k[p+4>>2]=k[g+4>>2];k[p+8>>2]=k[g+8>>2];k[p+12>>2]=k[g+12>>2];k[p+16>>2]=k[g+16>>2];k[p+20>>2]=k[g+20>>2];k[p+24>>2]=k[g+24>>2];k[p+28>>2]=k[g+28>>2];k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];k[g+16>>2]=k[b+16>>2];k[g+20>>2]=k[b+20>>2];j[g+24>>1]=j[b+24>>1]|0;i[g+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;b=a+2|0;if(Za[k[c>>2]&7](g,e)|0){k[p>>2]=k[e>>2];k[p+4>>2]=k[e+4>>2];k[p+8>>2]=k[e+8>>2];k[p+12>>2]=k[e+12>>2];k[p+16>>2]=k[e+16>>2];k[p+20>>2]=k[e+20>>2];k[p+24>>2]=k[e+24>>2];k[p+28>>2]=k[e+28>>2];k[e>>2]=k[g>>2];k[e+4>>2]=k[g+4>>2];k[e+8>>2]=k[g+8>>2];k[e+12>>2]=k[g+12>>2];k[e+16>>2]=k[g+16>>2];k[e+20>>2]=k[g+20>>2];j[e+24>>1]=j[g+24>>1]|0;i[e+26>>0]=i[g+26>>0]|0;k[g>>2]=k[p>>2];k[g+4>>2]=k[p+4>>2];k[g+8>>2]=k[p+8>>2];k[g+12>>2]=k[p+12>>2];k[g+16>>2]=k[p+16>>2];k[g+20>>2]=k[p+20>>2];j[g+24>>1]=j[p+24>>1]|0;i[g+26>>0]=i[p+26>>0]|0;if(Za[k[c>>2]&7](e,s)|0){k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[e>>2];k[s+4>>2]=k[e+4>>2];k[s+8>>2]=k[e+8>>2];k[s+12>>2]=k[e+12>>2];k[s+16>>2]=k[e+16>>2];k[s+20>>2]=k[e+20>>2];j[s+24>>1]=j[e+24>>1]|0;i[s+26>>0]=i[e+26>>0]|0;k[e>>2]=k[p>>2];k[e+4>>2]=k[p+4>>2];k[e+8>>2]=k[p+8>>2];k[e+12>>2]=k[p+12>>2];k[e+16>>2]=k[p+16>>2];k[e+20>>2]=k[p+20>>2];j[e+24>>1]=j[p+24>>1]|0;i[e+26>>0]=i[p+26>>0]|0;a=a+4|0}else a=a+3|0}else a=b}else a=d}}else{f=Za[k[c>>2]&7](g,s)|0;a=Za[k[c>>2]&7](n,g)|0;if(!f){if(!a){a=0;break};k[p>>2]=k[g>>2];k[p+4>>2]=k[g+4>>2];k[p+8>>2]=k[g+8>>2];k[p+12>>2]=k[g+12>>2];k[p+16>>2]=k[g+16>>2];k[p+20>>2]=k[g+20>>2];k[p+24>>2]=k[g+24>>2];k[p+28>>2]=k[g+28>>2];k[g>>2]=k[n>>2];k[g+4>>2]=k[n+4>>2];k[g+8>>2]=k[n+8>>2];k[g+12>>2]=k[n+12>>2];k[g+16>>2]=k[n+16>>2];k[g+20>>2]=k[n+20>>2];j[g+24>>1]=j[n+24>>1]|0;i[g+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](g,s)|0)){a=1;break};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[g>>2];k[s+4>>2]=k[g+4>>2];k[s+8>>2]=k[g+8>>2];k[s+12>>2]=k[g+12>>2];k[s+16>>2]=k[g+16>>2];k[s+20>>2]=k[g+20>>2];j[s+24>>1]=j[g+24>>1]|0;i[s+26>>0]=i[g+26>>0]|0;k[g>>2]=k[p>>2];k[g+4>>2]=k[p+4>>2];k[g+8>>2]=k[p+8>>2];k[g+12>>2]=k[p+12>>2];k[g+16>>2]=k[p+16>>2];k[g+20>>2]=k[p+20>>2];j[g+24>>1]=j[p+24>>1]|0;i[g+26>>0]=i[p+26>>0]|0;a=2;break};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];if(a){k[s>>2]=k[n>>2];k[s+4>>2]=k[n+4>>2];k[s+8>>2]=k[n+8>>2];k[s+12>>2]=k[n+12>>2];k[s+16>>2]=k[n+16>>2];k[s+20>>2]=k[n+20>>2];j[s+24>>1]=j[n+24>>1]|0;i[s+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;a=1;break};k[s>>2]=k[g>>2];k[s+4>>2]=k[g+4>>2];k[s+8>>2]=k[g+8>>2];k[s+12>>2]=k[g+12>>2];k[s+16>>2]=k[g+16>>2];k[s+20>>2]=k[g+20>>2];j[s+24>>1]=j[g+24>>1]|0;i[s+26>>0]=i[g+26>>0]|0;k[g>>2]=k[p>>2];k[g+4>>2]=k[p+4>>2];k[g+8>>2]=k[p+8>>2];k[g+12>>2]=k[p+12>>2];k[g+16>>2]=k[p+16>>2];k[g+20>>2]=k[p+20>>2];j[g+24>>1]=j[p+24>>1]|0;i[g+26>>0]=i[p+26>>0]|0;if(Za[k[c>>2]&7](n,g)|0){k[p>>2]=k[g>>2];k[p+4>>2]=k[g+4>>2];k[p+8>>2]=k[g+8>>2];k[p+12>>2]=k[g+12>>2];k[p+16>>2]=k[g+16>>2];k[p+20>>2]=k[g+20>>2];k[p+24>>2]=k[g+24>>2];k[p+28>>2]=k[g+28>>2];k[g>>2]=k[n>>2];k[g+4>>2]=k[n+4>>2];k[g+8>>2]=k[n+8>>2];k[g+12>>2]=k[n+12>>2];k[g+16>>2]=k[n+16>>2];k[g+20>>2]=k[n+20>>2];j[g+24>>1]=j[n+24>>1]|0;i[g+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;a=2}else a=1}while(0);do if(Za[k[c>>2]&7](s,g)|0)b=n;else{b=n;while(1){b=b+-32|0;if((s|0)==(b|0))break;if(Za[k[c>>2]&7](b,g)|0){m=65;break}}if((m|0)==65){m=0;k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[b>>2];k[s+4>>2]=k[b+4>>2];k[s+8>>2]=k[b+8>>2];k[s+12>>2]=k[b+12>>2];k[s+16>>2]=k[b+16>>2];k[s+20>>2]=k[b+20>>2];j[s+24>>1]=j[b+24>>1]|0;i[s+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;a=a+1|0;break}a=s+32|0;if(!(Za[k[c>>2]&7](s,n)|0)){if((a|0)==(n|0)){m=82;break a}else b=s;while(1){if(Za[k[c>>2]&7](s,a)|0)break;b=a+32|0;if((b|0)==(n|0)){m=82;break a}else{h=a;a=b;b=h}}k[p>>2]=k[a>>2];k[p+4>>2]=k[a+4>>2];k[p+8>>2]=k[a+8>>2];k[p+12>>2]=k[a+12>>2];k[p+16>>2]=k[a+16>>2];k[p+20>>2]=k[a+20>>2];k[p+24>>2]=k[a+24>>2];k[p+28>>2]=k[a+28>>2];k[a>>2]=k[n>>2];k[a+4>>2]=k[n+4>>2];k[a+8>>2]=k[n+8>>2];k[a+12>>2]=k[n+12>>2];k[a+16>>2]=k[n+16>>2];k[a+20>>2]=k[n+20>>2];j[a+24>>1]=j[n+24>>1]|0;i[a+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;a=b+64|0}if((a|0)==(n|0)){m=82;break a}else d=n;while(1){b=a;while(1){a=b+32|0;if(Za[k[c>>2]&7](s,b)|0)break;else b=a}do d=d+-32|0;while(Za[k[c>>2]&7](s,d)|0);if(b>>>0>=d>>>0){s=b;continue b};k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[p+28>>2]=k[b+28>>2];k[b>>2]=k[d>>2];k[b+4>>2]=k[d+4>>2];k[b+8>>2]=k[d+8>>2];k[b+12>>2]=k[d+12>>2];k[b+16>>2]=k[d+16>>2];k[b+20>>2]=k[d+20>>2];j[b+24>>1]=j[d+24>>1]|0;i[b+26>>0]=i[d+26>>0]|0;k[d>>2]=k[p>>2];k[d+4>>2]=k[p+4>>2];k[d+8>>2]=k[p+8>>2];k[d+12>>2]=k[p+12>>2];k[d+16>>2]=k[p+16>>2];k[d+20>>2]=k[p+20>>2];j[d+24>>1]=j[p+24>>1]|0;i[d+26>>0]=i[p+26>>0]|0}}while(0);d=s+32|0;c:do if(d>>>0<b>>>0)while(1){e=d;while(1){d=e+32|0;if(Za[k[c>>2]&7](e,g)|0)e=d;else{f=b;break}}do f=f+-32|0;while(!(Za[k[c>>2]&7](f,g)|0));if(e>>>0>f>>>0){d=e;b=g;break c};k[p>>2]=k[e>>2];k[p+4>>2]=k[e+4>>2];k[p+8>>2]=k[e+8>>2];k[p+12>>2]=k[e+12>>2];k[p+16>>2]=k[e+16>>2];k[p+20>>2]=k[e+20>>2];k[p+24>>2]=k[e+24>>2];k[p+28>>2]=k[e+28>>2];k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];k[e+16>>2]=k[f+16>>2];k[e+20>>2]=k[f+20>>2];j[e+24>>1]=j[f+24>>1]|0;i[e+26>>0]=i[f+26>>0]|0;k[f>>2]=k[p>>2];k[f+4>>2]=k[p+4>>2];k[f+8>>2]=k[p+8>>2];k[f+12>>2]=k[p+12>>2];k[f+16>>2]=k[p+16>>2];k[f+20>>2]=k[p+20>>2];j[f+24>>1]=j[p+24>>1]|0;i[f+26>>0]=i[p+26>>0]|0;b=f;g=(g|0)==(e|0)?f:g;a=a+1|0}else b=g;while(0);if((d|0)!=(b|0)?Za[k[c>>2]&7](b,d)|0:0){k[p>>2]=k[d>>2];k[p+4>>2]=k[d+4>>2];k[p+8>>2]=k[d+8>>2];k[p+12>>2]=k[d+12>>2];k[p+16>>2]=k[d+16>>2];k[p+20>>2]=k[d+20>>2];k[p+24>>2]=k[d+24>>2];k[p+28>>2]=k[d+28>>2];k[d>>2]=k[b>>2];k[d+4>>2]=k[b+4>>2];k[d+8>>2]=k[b+8>>2];k[d+12>>2]=k[b+12>>2];k[d+16>>2]=k[b+16>>2];k[d+20>>2]=k[b+20>>2];j[d+24>>1]=j[b+24>>1]|0;i[d+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;a=a+1|0}if(!a){a=yb(s,d,c)|0;b=d+32|0;if(yb(b,o,c)|0){m=77;break}if(a){s=b;continue}}g=d;if((g-h|0)>=(l-g|0)){m=81;break}qb(s,d,c);s=d+32|0}if((m|0)==77){m=0;if(a){m=82;break}else{a=s;o=d;continue}}else if((m|0)==81){m=0;qb(d+32|0,o,c);a=s;o=d;continue}}if((m|0)==4){if(!(Za[k[c>>2]&7](n,s)|0)){r=t;return};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[n>>2];k[s+4>>2]=k[n+4>>2];k[s+8>>2]=k[n+8>>2];k[s+12>>2]=k[n+12>>2];k[s+16>>2]=k[n+16>>2];k[s+20>>2]=k[n+20>>2];j[s+24>>1]=j[n+24>>1]|0;i[s+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;r=t;return}else if((m|0)==6){b=s+32|0;q=Za[k[c>>2]&7](b,s)|0;a=Za[k[c>>2]&7](n,b)|0;if(!q){if(!a){r=t;return};k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[p+28>>2]=k[b+28>>2];k[b>>2]=k[n>>2];k[b+4>>2]=k[n+4>>2];k[b+8>>2]=k[n+8>>2];k[b+12>>2]=k[n+12>>2];k[b+16>>2]=k[n+16>>2];k[b+20>>2]=k[n+20>>2];j[b+24>>1]=j[n+24>>1]|0;i[b+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](b,s)|0)){r=t;return};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[b>>2];k[s+4>>2]=k[b+4>>2];k[s+8>>2]=k[b+8>>2];k[s+12>>2]=k[b+12>>2];k[s+16>>2]=k[b+16>>2];k[s+20>>2]=k[b+20>>2];j[s+24>>1]=j[b+24>>1]|0;i[s+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;r=t;return};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];if(a){k[s>>2]=k[n>>2];k[s+4>>2]=k[n+4>>2];k[s+8>>2]=k[n+8>>2];k[s+12>>2]=k[n+12>>2];k[s+16>>2]=k[n+16>>2];k[s+20>>2]=k[n+20>>2];j[s+24>>1]=j[n+24>>1]|0;i[s+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;r=t;return};k[s>>2]=k[b>>2];k[s+4>>2]=k[b+4>>2];k[s+8>>2]=k[b+8>>2];k[s+12>>2]=k[b+12>>2];k[s+16>>2]=k[b+16>>2];k[s+20>>2]=k[b+20>>2];j[s+24>>1]=j[b+24>>1]|0;i[s+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](n,b)|0)){r=t;return};k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[p+28>>2]=k[b+28>>2];k[b>>2]=k[n>>2];k[b+4>>2]=k[n+4>>2];k[b+8>>2]=k[n+8>>2];k[b+12>>2]=k[n+12>>2];k[b+16>>2]=k[n+16>>2];k[b+20>>2]=k[n+20>>2];j[b+24>>1]=j[n+24>>1]|0;i[b+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;r=t;return}else if((m|0)==14){xb(s,s+32|0,s+64|0,n,c)|0;r=t;return}else if((m|0)==15){a=s+32|0;b=s+64|0;d=s+96|0;xb(s,a,b,d,c)|0;if(!(Za[k[c>>2]&7](n,d)|0)){r=t;return};k[p>>2]=k[d>>2];k[p+4>>2]=k[d+4>>2];k[p+8>>2]=k[d+8>>2];k[p+12>>2]=k[d+12>>2];k[p+16>>2]=k[d+16>>2];k[p+20>>2]=k[d+20>>2];k[p+24>>2]=k[d+24>>2];k[p+28>>2]=k[d+28>>2];k[d>>2]=k[n>>2];k[d+4>>2]=k[n+4>>2];k[d+8>>2]=k[n+8>>2];k[d+12>>2]=k[n+12>>2];k[d+16>>2]=k[n+16>>2];k[d+20>>2]=k[n+20>>2];j[d+24>>1]=j[n+24>>1]|0;i[d+26>>0]=i[n+26>>0]|0;k[n>>2]=k[p>>2];k[n+4>>2]=k[p+4>>2];k[n+8>>2]=k[p+8>>2];k[n+12>>2]=k[p+12>>2];k[n+16>>2]=k[p+16>>2];k[n+20>>2]=k[p+20>>2];j[n+24>>1]=j[p+24>>1]|0;i[n+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](d,b)|0)){r=t;return};k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[p+28>>2]=k[b+28>>2];k[b>>2]=k[d>>2];k[b+4>>2]=k[d+4>>2];k[b+8>>2]=k[d+8>>2];k[b+12>>2]=k[d+12>>2];k[b+16>>2]=k[d+16>>2];k[b+20>>2]=k[d+20>>2];j[b+24>>1]=j[d+24>>1]|0;i[b+26>>0]=i[d+26>>0]|0;k[d>>2]=k[p>>2];k[d+4>>2]=k[p+4>>2];k[d+8>>2]=k[p+8>>2];k[d+12>>2]=k[p+12>>2];k[d+16>>2]=k[p+16>>2];k[d+20>>2]=k[p+20>>2];j[d+24>>1]=j[p+24>>1]|0;i[d+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](b,a)|0)){r=t;return};k[p>>2]=k[a>>2];k[p+4>>2]=k[a+4>>2];k[p+8>>2]=k[a+8>>2];k[p+12>>2]=k[a+12>>2];k[p+16>>2]=k[a+16>>2];k[p+20>>2]=k[a+20>>2];k[p+24>>2]=k[a+24>>2];k[p+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];j[a+24>>1]=j[b+24>>1]|0;i[a+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;if(!(Za[k[c>>2]&7](a,s)|0)){r=t;return};k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[a>>2];k[s+4>>2]=k[a+4>>2];k[s+8>>2]=k[a+8>>2];k[s+12>>2]=k[a+12>>2];k[s+16>>2]=k[a+16>>2];k[s+20>>2]=k[a+20>>2];j[s+24>>1]=j[a+24>>1]|0;i[s+26>>0]=i[a+26>>0]|0;k[a>>2]=k[p>>2];k[a+4>>2]=k[p+4>>2];k[a+8>>2]=k[p+8>>2];k[a+12>>2]=k[p+12>>2];k[a+16>>2]=k[p+16>>2];k[a+20>>2]=k[p+20>>2];j[a+24>>1]=j[p+24>>1]|0;i[a+26>>0]=i[p+26>>0]|0;r=t;return}else if((m|0)==21){b=s+64|0;a=s+32|0;n=Za[k[c>>2]&7](a,s)|0;d=Za[k[c>>2]&7](b,a)|0;do if(n){k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];if(d){k[s>>2]=k[b>>2];k[s+4>>2]=k[b+4>>2];k[s+8>>2]=k[b+8>>2];k[s+12>>2]=k[b+12>>2];k[s+16>>2]=k[b+16>>2];k[s+20>>2]=k[b+20>>2];j[s+24>>1]=j[b+24>>1]|0;i[s+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0;break};k[s>>2]=k[a>>2];k[s+4>>2]=k[a+4>>2];k[s+8>>2]=k[a+8>>2];k[s+12>>2]=k[a+12>>2];k[s+16>>2]=k[a+16>>2];k[s+20>>2]=k[a+20>>2];j[s+24>>1]=j[a+24>>1]|0;i[s+26>>0]=i[a+26>>0]|0;k[a>>2]=k[p>>2];k[a+4>>2]=k[p+4>>2];k[a+8>>2]=k[p+8>>2];k[a+12>>2]=k[p+12>>2];k[a+16>>2]=k[p+16>>2];k[a+20>>2]=k[p+20>>2];j[a+24>>1]=j[p+24>>1]|0;i[a+26>>0]=i[p+26>>0]|0;if(Za[k[c>>2]&7](b,a)|0){k[p>>2]=k[a>>2];k[p+4>>2]=k[a+4>>2];k[p+8>>2]=k[a+8>>2];k[p+12>>2]=k[a+12>>2];k[p+16>>2]=k[a+16>>2];k[p+20>>2]=k[a+20>>2];k[p+24>>2]=k[a+24>>2];k[p+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];j[a+24>>1]=j[b+24>>1]|0;i[a+26>>0]=i[b+26>>0]|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];j[b+24>>1]=j[p+24>>1]|0;i[b+26>>0]=i[p+26>>0]|0}}else if(d?(k[p>>2]=k[a>>2],k[p+4>>2]=k[a+4>>2],k[p+8>>2]=k[a+8>>2],k[p+12>>2]=k[a+12>>2],k[p+16>>2]=k[a+16>>2],k[p+20>>2]=k[a+20>>2],k[p+24>>2]=k[a+24>>2],k[p+28>>2]=k[a+28>>2],k[a>>2]=k[b>>2],k[a+4>>2]=k[b+4>>2],k[a+8>>2]=k[b+8>>2],k[a+12>>2]=k[b+12>>2],k[a+16>>2]=k[b+16>>2],k[a+20>>2]=k[b+20>>2],j[a+24>>1]=j[b+24>>1]|0,i[a+26>>0]=i[b+26>>0]|0,k[b>>2]=k[p>>2],k[b+4>>2]=k[p+4>>2],k[b+8>>2]=k[p+8>>2],k[b+12>>2]=k[p+12>>2],k[b+16>>2]=k[p+16>>2],k[b+20>>2]=k[p+20>>2],j[b+24>>1]=j[p+24>>1]|0,i[b+26>>0]=i[p+26>>0]|0,Za[k[c>>2]&7](a,s)|0):0){k[p>>2]=k[s>>2];k[p+4>>2]=k[s+4>>2];k[p+8>>2]=k[s+8>>2];k[p+12>>2]=k[s+12>>2];k[p+16>>2]=k[s+16>>2];k[p+20>>2]=k[s+20>>2];k[p+24>>2]=k[s+24>>2];k[p+28>>2]=k[s+28>>2];k[s>>2]=k[a>>2];k[s+4>>2]=k[a+4>>2];k[s+8>>2]=k[a+8>>2];k[s+12>>2]=k[a+12>>2];k[s+16>>2]=k[a+16>>2];k[s+20>>2]=k[a+20>>2];j[s+24>>1]=j[a+24>>1]|0;i[s+26>>0]=i[a+26>>0]|0;k[a>>2]=k[p>>2];k[a+4>>2]=k[p+4>>2];k[a+8>>2]=k[p+8>>2];k[a+12>>2]=k[p+12>>2];k[a+16>>2]=k[p+16>>2];k[a+20>>2]=k[p+20>>2];j[a+24>>1]=j[p+24>>1]|0;i[a+26>>0]=i[p+26>>0]|0}while(0);a=s+96|0;if((a|0)!=(o|0))while(1){if(Za[k[c>>2]&7](a,b)|0){k[q>>2]=k[a>>2];k[q+4>>2]=k[a+4>>2];k[q+8>>2]=k[a+8>>2];k[q+12>>2]=k[a+12>>2];k[q+16>>2]=k[a+16>>2];k[q+20>>2]=k[a+20>>2];k[q+24>>2]=k[a+24>>2];k[q+28>>2]=k[a+28>>2];d=a;e=b;while(1){k[d>>2]=k[e>>2];k[d+4>>2]=k[e+4>>2];k[d+8>>2]=k[e+8>>2];k[d+12>>2]=k[e+12>>2];k[d+16>>2]=k[e+16>>2];k[d+20>>2]=k[e+20>>2];j[d+24>>1]=j[e+24>>1]|0;i[d+26>>0]=i[e+26>>0]|0;if((e|0)==(s|0))break;b=e+-32|0;if(Za[k[c>>2]&7](q,b)|0){d=e;e=b}else break}k[e>>2]=k[q>>2];k[e+4>>2]=k[q+4>>2];k[e+8>>2]=k[q+8>>2];k[e+12>>2]=k[q+12>>2];k[e+16>>2]=k[q+16>>2];k[e+20>>2]=k[q+20>>2];j[e+24>>1]=j[q+24>>1]|0;i[e+26>>0]=i[q+26>>0]|0}b=a+32|0;if((b|0)==(o|0))break;else{p=a;a=b;b=p}}r=t;return}else if((m|0)==82){r=t;return}}function rb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;a:while(1){p=b;r=b+-32|0;q=b+-64|0;z=b+-28|0;s=z+4|0;t=b+-20|0;u=b+-16|0;v=b+-12|0;w=b+-8|0;x=b+-4|0;b:while(1){o=a;c=p-o|0;d=c>>5;switch(d|0){case 2:{y=4;break a}case 3:{y=8;break a}case 4:{y=9;break a}case 5:{y=10;break a}case 1:case 0:{y=83;break a}default:{}}if((c|0)<224){y=12;break a}e=(d|0)/2|0;j=a+(e<<5)|0;if((c|0)>31968){c=(d|0)/4|0;c=vb(a,a+(c<<5)|0,j,a+(c+e<<5)|0,r)|0}else c=tb(a,j,r)|0;n=a+4|0;d=a+(e<<5)+4|0;m=i[n>>0]^1;l=i[d>>0]^1;c:do if((m&255)<(l&255))e=r;else{if((l&255)>=(m&255)?(k[n+4>>2]|0)>>>0<(k[d+4>>2]|0)>>>0:0){e=r;break}d:do if((a|0)!=(q|0)){h=d+4|0;e=q;f=r;while(1){g=f+-28|0;d=i[g>>0]^1;if((d&255)<(l&255))break;if((l&255)>=(d&255)?(k[g+4>>2]|0)>>>0<(k[h>>2]|0)>>>0:0)break;d=e+-32|0;if((a|0)==(d|0))break d;else{f=e;e=d}}G=k[a>>2]|0;E=n;F=k[E>>2]|0;E=k[E+4>>2]|0;A=a+12|0;D=k[A>>2]|0;h=a+16|0;B=k[h>>2]|0;I=a+20|0;d=k[I>>2]|0;y=a+24|0;l=k[y>>2]|0;H=a+28|0;m=k[H>>2]|0;k[a>>2]=k[e>>2];K=g;J=k[K+4>>2]|0;C=n;k[C>>2]=k[K>>2];k[C+4>>2]=J;C=f+-20|0;k[A>>2]=k[C>>2];A=f+-16|0;k[h>>2]=k[A>>2];h=f+-12|0;k[I>>2]=k[h>>2];n=f+-8|0;k[y>>2]=k[n>>2];y=f+-4|0;k[H>>2]=k[y>>2];k[e>>2]=G;k[g>>2]=F;k[g+4>>2]=E;k[C>>2]=D;k[A>>2]=B;k[h>>2]=d;k[n>>2]=l;k[y>>2]=m;c=c+1|0;break c}while(0);d=a+32|0;c=i[z>>0]^1;do if((m&255)<(c&255))a=d;else{if((c&255)>=(m&255)?(k[n+4>>2]|0)>>>0<(k[s>>2]|0)>>>0:0){a=d;break}if((d|0)==(r|0)){y=83;break a}f=n+4|0;while(1){e=a+36|0;c=i[e>>0]^1;if((m&255)<(c&255))break;if((c&255)>=(m&255)?(k[f>>2]|0)>>>0<(k[e+4>>2]|0)>>>0:0)break;a=d+32|0;if((a|0)==(r|0)){y=83;break a}else{K=d;d=a;a=K}}F=k[d>>2]|0;E=e;D=k[E>>2]|0;E=k[E+4>>2]|0;o=a+44|0;G=k[o>>2]|0;y=a+48|0;H=k[y>>2]|0;A=a+52|0;I=k[A>>2]|0;B=a+56|0;J=k[B>>2]|0;C=a+60|0;K=k[C>>2]|0;k[d>>2]=k[r>>2];j=z;l=k[j+4>>2]|0;m=e;k[m>>2]=k[j>>2];k[m+4>>2]=l;k[o>>2]=k[t>>2];k[y>>2]=k[u>>2];k[A>>2]=k[v>>2];k[B>>2]=k[w>>2];k[C>>2]=k[x>>2];k[r>>2]=F;F=z;k[F>>2]=D;k[F+4>>2]=E;k[t>>2]=G;k[u>>2]=H;k[v>>2]=I;k[w>>2]=J;k[x>>2]=K;a=a+64|0}while(0);if((a|0)==(r|0)){y=83;break a}h=n+4|0;f=r;while(1){g=i[n>>0]^1;c=i[a+4>>0]^1;e:do if((g&255)>=(c&255)){d=a;while(1){if((c&255)>=(g&255)?(k[h>>2]|0)>>>0<(k[d+4+4>>2]|0)>>>0:0){a=d;break e}a=d+32|0;c=i[d+36>>0]^1;if((g&255)<(c&255))break;else d=a}}while(0);d=f;while(1){f=d+-32|0;e=d+-28|0;c=i[e>>0]^1;if((g&255)<(c&255)){d=f;continue}if((c&255)<(g&255))break;if((k[h>>2]|0)>>>0<(k[e+4>>2]|0)>>>0)d=f;else break}if(a>>>0>=f>>>0)continue b;A=k[a>>2]|0;C=a+4|0;y=C;o=k[y>>2]|0;y=k[y+4>>2]|0;E=a+12|0;B=k[E>>2]|0;G=a+16|0;D=k[G>>2]|0;I=a+20|0;F=k[I>>2]|0;K=a+24|0;H=k[K>>2]|0;m=a+28|0;J=k[m>>2]|0;k[a>>2]=k[f>>2];j=e;l=k[j+4>>2]|0;k[C>>2]=k[j>>2];k[C+4>>2]=l;C=d+-20|0;k[E>>2]=k[C>>2];E=d+-16|0;k[G>>2]=k[E>>2];G=d+-12|0;k[I>>2]=k[G>>2];I=d+-8|0;k[K>>2]=k[I>>2];K=d+-4|0;k[m>>2]=k[K>>2];k[f>>2]=A;A=e;k[A>>2]=o;k[A+4>>2]=y;k[C>>2]=B;k[E>>2]=D;k[G>>2]=F;k[I>>2]=H;k[K>>2]=J;a=a+32|0}}while(0);d=a+32|0;f:do if(d>>>0<e>>>0)while(1){l=j+4|0;h=i[l>>0]^1;l=l+4|0;n=d;while(1){m=n+4|0;d=i[m>>0]^1;if((d&255)>=(h&255)){if((h&255)<(d&255))break;if((k[m+4>>2]|0)>>>0>=(k[l>>2]|0)>>>0)break}n=n+32|0}f=e+-32|0;d=i[e+-28>>0]^1;g:do if((d&255)>=(h&255)){g=f;while(1){if((h&255)>=(d&255)?(k[e+-28+4>>2]|0)>>>0<(k[l>>2]|0)>>>0:0){f=g;break g}f=g+-32|0;d=i[e+-60>>0]^1;if((d&255)<(h&255)){e=g;break}else{e=g;g=f}}}while(0);if(n>>>0>f>>>0){d=n;break f}l=k[n>>2]|0;B=m;A=k[B>>2]|0;B=k[B+4>>2]|0;F=n+12|0;C=k[F>>2]|0;H=n+16|0;E=k[H>>2]|0;J=n+20|0;G=k[J>>2]|0;d=n+24|0;I=k[d>>2]|0;h=n+28|0;K=k[h>>2]|0;k[n>>2]=k[f>>2];y=e+-28|0;L=y;g=k[L+4>>2]|0;D=m;k[D>>2]=k[L>>2];k[D+4>>2]=g;D=e+-20|0;k[F>>2]=k[D>>2];F=e+-16|0;k[H>>2]=k[F>>2];H=e+-12|0;k[J>>2]=k[H>>2];J=e+-8|0;k[d>>2]=k[J>>2];d=e+-4|0;k[h>>2]=k[d>>2];k[f>>2]=l;e=y;k[e>>2]=A;k[e+4>>2]=B;k[D>>2]=C;k[F>>2]=E;k[H>>2]=G;k[J>>2]=I;k[d>>2]=K;d=n+32|0;e=f;j=(j|0)==(n|0)?f:j;c=c+1|0}while(0);do if((d|0)!=(j|0)){g=j+4|0;h=d+4|0;e=i[g>>0]^1;f=i[h>>0]^1;if((e&255)>=(f&255)){if((f&255)<(e&255))break;if((k[g+4>>2]|0)>>>0>=(k[h+4>>2]|0)>>>0)break}B=k[d>>2]|0;A=h;y=k[A>>2]|0;A=k[A+4>>2]|0;F=d+12|0;C=k[F>>2]|0;H=d+16|0;E=k[H>>2]|0;J=d+20|0;G=k[J>>2]|0;L=d+24|0;I=k[L>>2]|0;n=d+28|0;K=k[n>>2]|0;k[d>>2]=k[j>>2];l=g;m=k[l+4>>2]|0;D=h;k[D>>2]=k[l>>2];k[D+4>>2]=m;D=j+12|0;k[F>>2]=k[D>>2];F=j+16|0;k[H>>2]=k[F>>2];H=j+20|0;k[J>>2]=k[H>>2];J=j+24|0;k[L>>2]=k[J>>2];L=j+28|0;k[n>>2]=k[L>>2];k[j>>2]=B;B=g;k[B>>2]=y;k[B+4>>2]=A;k[D>>2]=C;k[F>>2]=E;k[H>>2]=G;k[J>>2]=I;k[L>>2]=K;c=c+1|0}while(0);if(!c){e=wb(a,d)|0;c=d+32|0;if(wb(c,b)|0){y=78;break}if(e){a=c;continue}}L=d;if((L-o|0)>=(p-L|0)){y=82;break}rb(a,d);a=d+32|0}if((y|0)==78)if(e){y=83;break}else{b=d;continue}else if((y|0)==82){rb(d+32|0,b);b=d;continue}}if((y|0)==4){d=a+4|0;b=i[z>>0]^1;c=i[d>>0]^1;if((b&255)>=(c&255)){if((c&255)<(b&255))return;if((k[s>>2]|0)>>>0>=(k[d+4>>2]|0)>>>0)return}G=k[a>>2]|0;F=d;E=k[F>>2]|0;F=k[F+4>>2]|0;y=a+12|0;H=k[y>>2]|0;A=a+16|0;I=k[A>>2]|0;B=a+20|0;J=k[B>>2]|0;C=a+24|0;K=k[C>>2]|0;D=a+28|0;L=k[D>>2]|0;k[a>>2]=k[r>>2];p=z;q=k[p+4>>2]|0;s=d;k[s>>2]=k[p>>2];k[s+4>>2]=q;k[y>>2]=k[t>>2];k[A>>2]=k[u>>2];k[B>>2]=k[v>>2];k[C>>2]=k[w>>2];k[D>>2]=k[x>>2];k[r>>2]=G;G=z;k[G>>2]=E;k[G+4>>2]=F;k[t>>2]=H;k[u>>2]=I;k[v>>2]=J;k[w>>2]=K;k[x>>2]=L;return}else if((y|0)==8){tb(a,a+32|0,r)|0;return}else if((y|0)==9){ub(a,a+32|0,a+64|0,r)|0;return}else if((y|0)==10){vb(a,a+32|0,a+64|0,a+96|0,r)|0;return}else if((y|0)==12){d=a+64|0;tb(a,a+32|0,d)|0;c=a+96|0;if((c|0)==(b|0))return;else x=c;while(1){f=x+4|0;l=d+4|0;c=i[f>>0]^1;e=i[l>>0]^1;if((c&255)>=(e&255)){if((e&255)>=(c&255)?(k[f+4>>2]|0)>>>0<(k[l+4>>2]|0)>>>0:0)y=16}else y=16;if((y|0)==16){y=0;p=k[x>>2]|0;r=f;q=k[r>>2]|0;r=k[r+4>>2]|0;e=x+12|0;s=k[e>>2]|0;g=x+16|0;t=k[g>>2]|0;h=x+20|0;u=k[h>>2]|0;K=x+24|0;v=k[K>>2]|0;L=x+28|0;w=k[L>>2]|0;k[x>>2]=k[d>>2];I=l;J=k[I+4>>2]|0;c=f;k[c>>2]=k[I>>2];k[c+4>>2]=J;c=d+12|0;k[e>>2]=k[c>>2];e=d+16|0;k[g>>2]=k[e>>2];g=d+20|0;k[h>>2]=k[g>>2];h=d+24|0;k[K>>2]=k[h>>2];f=d+28|0;k[L>>2]=k[f>>2];h:do if((d|0)==(a|0)){j=e;e=l}else{n=q&255^1;m=d;o=f;j=e;e=l;while(1){d=m+-32|0;l=m+-28|0;f=i[l>>0]^1;if((n&255)>=(f&255)){if((f&255)<(n&255)){d=m;f=o;break h}if(r>>>0>=(k[m+-24>>2]|0)>>>0){d=m;f=o;break h}}k[m>>2]=k[d>>2];g=l;e=k[g+4>>2]|0;c=m+4|0;k[c>>2]=k[g>>2];k[c+4>>2]=e;c=m+-20|0;k[m+12>>2]=k[c>>2];e=m+-16|0;k[m+16>>2]=k[e>>2];g=m+-12|0;k[m+20>>2]=k[g>>2];h=m+-8|0;k[m+24>>2]=k[h>>2];f=m+-4|0;k[m+28>>2]=k[f>>2];if((d|0)==(a|0)){j=e;e=l;break}else{m=d;o=f;j=e;e=l}}}while(0);k[d>>2]=p;L=e;k[L>>2]=q;k[L+4>>2]=r;k[c>>2]=s;k[j>>2]=t;k[g>>2]=u;k[h>>2]=v;k[f>>2]=w}c=x+32|0;if((c|0)==(b|0))break;else{d=x;x=c}}return}else if((y|0)==83)return}function sb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;m=a+4|0;e=k[m>>2]|0;n=k[a>>2]|0;j=n;l=e-j>>3;i=l+1|0;if(i>>>0>536870911)xa(1340,1363,303,1438);o=a+8|0;c=(k[o>>2]|0)-j|0;if(c>>3>>>0<268435455){c=c>>2;c=c>>>0<i>>>0?i:c;if(!c){f=0;d=0}else g=5}else{c=536870911;g=5}if((g|0)==5){f=c<<3;f=(f|0)==0?1:f;d=_d(f)|0;a:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(f)|0;if(d)break a}a=ya(4)|0;k[a>>2]=128;La(a|0,8,1)}while(0);f=c}c=d+(l<<3)|0;h=d+(f<<3)|0;k[c>>2]=k[b>>2];k[d+(l<<3)+4>>2]=k[b+4>>2];g=d+(i<<3)|0;if((e|0)!=(n|0)){f=e+-8|0;while(1){b=e;e=e+-8|0;k[c+-8>>2]=k[e>>2];k[c+-4>>2]=k[b+-4>>2];if((e|0)==(n|0))break;else c=c+-8|0}c=d+(l+~((f-j|0)>>>3)<<3)|0}k[a>>2]=c;k[m>>2]=g;k[o>>2]=h;if(!n)return;$d(n);return}function tb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;x=b+4|0;v=a+4|0;e=i[x>>0]^1;d=i[v>>0]^1;if((e&255)>=(d&255))if((d&255)<(e&255))f=0;else f=(k[x+4>>2]|0)>>>0<(k[v+4>>2]|0)>>>0;else f=1;w=c+4|0;d=i[w>>0]^1;if((d&255)>=(e&255))if((e&255)<(d&255))e=0;else e=(k[w+4>>2]|0)>>>0<(k[x+4>>2]|0)>>>0;else e=1;if(!f){if(!e){x=0;return x|0}z=k[b>>2]|0;m=x;y=k[m>>2]|0;m=k[m+4>>2]|0;f=b+12|0;n=k[f>>2]|0;g=b+16|0;p=k[g>>2]|0;h=b+20|0;r=k[h>>2]|0;j=b+24|0;t=k[j>>2]|0;l=b+28|0;e=k[l>>2]|0;k[b>>2]=k[c>>2];s=w;q=k[s+4>>2]|0;o=x;k[o>>2]=k[s>>2];k[o+4>>2]=q;o=c+12|0;k[f>>2]=k[o>>2];q=c+16|0;k[g>>2]=k[q>>2];s=c+20|0;k[h>>2]=k[s>>2];u=c+24|0;k[j>>2]=k[u>>2];d=c+28|0;k[l>>2]=k[d>>2];k[c>>2]=z;c=w;k[c>>2]=y;k[c+4>>2]=m;k[o>>2]=n;k[q>>2]=p;k[s>>2]=r;k[u>>2]=t;k[d>>2]=e;d=i[x>>0]^1;e=i[v>>0]^1;if((d&255)>=(e&255)){if((e&255)<(d&255)){z=1;return z|0}if((k[x+4>>2]|0)>>>0>=(k[v+4>>2]|0)>>>0){z=1;return z|0}}r=k[a>>2]|0;t=v;s=k[t>>2]|0;t=k[t+4>>2]|0;m=a+12|0;u=k[m>>2]|0;n=a+16|0;w=k[n>>2]|0;o=a+20|0;c=k[o>>2]|0;p=a+24|0;y=k[p>>2]|0;q=a+28|0;z=k[q>>2]|0;k[a>>2]=k[b>>2];e=x;a=k[e+4>>2]|0;k[v>>2]=k[e>>2];k[v+4>>2]=a;k[m>>2]=k[f>>2];k[n>>2]=k[g>>2];k[o>>2]=k[h>>2];k[p>>2]=k[j>>2];k[q>>2]=k[l>>2];k[b>>2]=r;k[x>>2]=s;k[x+4>>2]=t;k[f>>2]=u;k[g>>2]=w;k[h>>2]=c;k[j>>2]=y;k[l>>2]=z;z=2;return z|0}n=k[a>>2]|0;p=v;o=k[p>>2]|0;p=k[p+4>>2]|0;d=a+12|0;q=k[d>>2]|0;f=a+16|0;r=k[f>>2]|0;g=a+20|0;s=k[g>>2]|0;l=a+24|0;t=k[l>>2]|0;m=a+28|0;u=k[m>>2]|0;if(e){k[a>>2]=k[c>>2];x=w;b=k[x+4>>2]|0;k[v>>2]=k[x>>2];k[v+4>>2]=b;v=c+12|0;k[d>>2]=k[v>>2];b=c+16|0;k[f>>2]=k[b>>2];x=c+20|0;k[g>>2]=k[x>>2];y=c+24|0;k[l>>2]=k[y>>2];z=c+28|0;k[m>>2]=k[z>>2];k[c>>2]=n;c=w;k[c>>2]=o;k[c+4>>2]=p;k[v>>2]=q;k[b>>2]=r;k[x>>2]=s;k[y>>2]=t;k[z>>2]=u;z=1;return z|0}k[a>>2]=k[b>>2];h=x;j=k[h+4>>2]|0;a=v;k[a>>2]=k[h>>2];k[a+4>>2]=j;a=b+12|0;k[d>>2]=k[a>>2];j=b+16|0;k[f>>2]=k[j>>2];h=b+20|0;k[g>>2]=k[h>>2];g=b+24|0;k[l>>2]=k[g>>2];f=b+28|0;k[m>>2]=k[f>>2];k[b>>2]=n;d=x;k[d>>2]=o;k[d+4>>2]=p;k[a>>2]=q;k[j>>2]=r;k[h>>2]=s;k[g>>2]=t;k[f>>2]=u;d=i[w>>0]^1;e=o&255^1;if((d&255)>=(e&255)){if((e&255)<(d&255)){z=1;return z|0}if((k[w+4>>2]|0)>>>0>=p>>>0){z=1;return z|0}}k[b>>2]=k[c>>2];y=w;b=k[y+4>>2]|0;v=x;k[v>>2]=k[y>>2];k[v+4>>2]=b;v=c+12|0;k[a>>2]=k[v>>2];b=c+16|0;k[j>>2]=k[b>>2];x=c+20|0;k[h>>2]=k[x>>2];y=c+24|0;k[g>>2]=k[y>>2];z=c+28|0;k[f>>2]=k[z>>2];k[c>>2]=n;c=w;k[c>>2]=o;k[c+4>>2]=p;k[v>>2]=q;k[b>>2]=r;k[x>>2]=s;k[y>>2]=t;k[z>>2]=u;z=2;return z|0}function ub(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;v=tb(a,b,c)|0;g=d+4|0;t=c+4|0;e=i[g>>0]^1;f=i[t>>0]^1;if((e&255)>=(f&255)){if((f&255)<(e&255)){b=v;return b|0}if((k[g+4>>2]|0)>>>0>=(k[t+4>>2]|0)>>>0){b=v;return b|0}}A=k[c>>2]|0;y=t;z=k[y>>2]|0;y=k[y+4>>2]|0;o=c+12|0;x=k[o>>2]|0;p=c+16|0;h=k[p>>2]|0;q=c+20|0;l=k[q>>2]|0;r=c+24|0;n=k[r>>2]|0;s=c+28|0;u=k[s>>2]|0;k[c>>2]=k[d>>2];m=g;j=k[m+4>>2]|0;w=t;k[w>>2]=k[m>>2];k[w+4>>2]=j;w=d+12|0;k[o>>2]=k[w>>2];j=d+16|0;k[p>>2]=k[j>>2];m=d+20|0;k[q>>2]=k[m>>2];f=d+24|0;k[r>>2]=k[f>>2];e=d+28|0;k[s>>2]=k[e>>2];k[d>>2]=A;d=g;k[d>>2]=z;k[d+4>>2]=y;k[w>>2]=x;k[j>>2]=h;k[m>>2]=l;k[f>>2]=n;k[e>>2]=u;e=v+1|0;u=b+4|0;f=i[t>>0]^1;d=i[u>>0]^1;if((f&255)>=(d&255)){if((d&255)<(f&255)){A=e;return A|0}if((k[t+4>>2]|0)>>>0>=(k[u+4>>2]|0)>>>0){A=e;return A|0}}z=k[b>>2]|0;y=u;x=k[y>>2]|0;y=k[y+4>>2]|0;h=b+12|0;A=k[h>>2]|0;j=b+16|0;f=k[j>>2]|0;l=b+20|0;e=k[l>>2]|0;m=b+24|0;g=k[m>>2]|0;n=b+28|0;d=k[n>>2]|0;k[b>>2]=k[c>>2];C=t;B=k[C+4>>2]|0;w=u;k[w>>2]=k[C>>2];k[w+4>>2]=B;k[h>>2]=k[o>>2];k[j>>2]=k[p>>2];k[l>>2]=k[q>>2];k[m>>2]=k[r>>2];k[n>>2]=k[s>>2];k[c>>2]=z;z=t;k[z>>2]=x;k[z+4>>2]=y;k[o>>2]=A;k[p>>2]=f;k[q>>2]=e;k[r>>2]=g;k[s>>2]=d;d=v+2|0;g=a+4|0;e=i[u>>0]^1;f=i[g>>0]^1;if((e&255)>=(f&255)){if((f&255)<(e&255)){C=d;return C|0}if((k[u+4>>2]|0)>>>0>=(k[g+4>>2]|0)>>>0){C=d;return C|0}}x=k[a>>2]|0;w=g;t=k[w>>2]|0;w=k[w+4>>2]|0;p=a+12|0;y=k[p>>2]|0;q=a+16|0;z=k[q>>2]|0;r=a+20|0;A=k[r>>2]|0;s=a+24|0;B=k[s>>2]|0;c=a+28|0;C=k[c>>2]|0;k[a>>2]=k[b>>2];d=u;o=k[d+4>>2]|0;a=g;k[a>>2]=k[d>>2];k[a+4>>2]=o;k[p>>2]=k[h>>2];k[q>>2]=k[j>>2];k[r>>2]=k[l>>2];k[s>>2]=k[m>>2];k[c>>2]=k[n>>2];k[b>>2]=x;x=u;k[x>>2]=t;k[x+4>>2]=w;k[h>>2]=y;k[j>>2]=z;k[l>>2]=A;k[m>>2]=B;k[n>>2]=C;C=v+3|0;return C|0}function vb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;v=ub(a,b,c,d)|0;h=e+4|0;p=d+4|0;f=i[h>>0]^1;g=i[p>>0]^1;if((f&255)>=(g&255)){if((g&255)<(f&255)){b=v;return b|0}if((k[h+4>>2]|0)>>>0>=(k[p+4>>2]|0)>>>0){b=v;return b|0}}B=k[d>>2]|0;z=p;A=k[z>>2]|0;z=k[z+4>>2]|0;j=d+12|0;y=k[j>>2]|0;l=d+16|0;w=k[l>>2]|0;m=d+20|0;r=k[m>>2]|0;n=d+24|0;t=k[n>>2]|0;o=d+28|0;u=k[o>>2]|0;k[d>>2]=k[e>>2];s=h;q=k[s+4>>2]|0;x=p;k[x>>2]=k[s>>2];k[x+4>>2]=q;x=e+12|0;k[j>>2]=k[x>>2];q=e+16|0;k[l>>2]=k[q>>2];s=e+20|0;k[m>>2]=k[s>>2];g=e+24|0;k[n>>2]=k[g>>2];f=e+28|0;k[o>>2]=k[f>>2];k[e>>2]=B;e=h;k[e>>2]=A;k[e+4>>2]=z;k[x>>2]=y;k[q>>2]=w;k[s>>2]=r;k[g>>2]=t;k[f>>2]=u;f=v+1|0;u=c+4|0;g=i[p>>0]^1;e=i[u>>0]^1;if((g&255)>=(e&255)){if((e&255)<(g&255)){B=f;return B|0}if((k[p+4>>2]|0)>>>0>=(k[u+4>>2]|0)>>>0){B=f;return B|0}}x=k[c>>2]|0;z=u;y=k[z>>2]|0;z=k[z+4>>2]|0;h=c+12|0;A=k[h>>2]|0;q=c+16|0;B=k[q>>2]|0;r=c+20|0;g=k[r>>2]|0;s=c+24|0;f=k[s>>2]|0;t=c+28|0;e=k[t>>2]|0;k[c>>2]=k[d>>2];D=p;C=k[D+4>>2]|0;w=u;k[w>>2]=k[D>>2];k[w+4>>2]=C;k[h>>2]=k[j>>2];k[q>>2]=k[l>>2];k[r>>2]=k[m>>2];k[s>>2]=k[n>>2];k[t>>2]=k[o>>2];k[d>>2]=x;d=p;k[d>>2]=y;k[d+4>>2]=z;k[j>>2]=A;k[l>>2]=B;k[m>>2]=g;k[n>>2]=f;k[o>>2]=e;e=v+2|0;d=b+4|0;f=i[u>>0]^1;g=i[d>>0]^1;if((f&255)>=(g&255)){if((g&255)<(f&255)){D=e;return D|0}if((k[u+4>>2]|0)>>>0>=(k[d+4>>2]|0)>>>0){D=e;return D|0}}B=k[b>>2]|0;A=d;z=k[A>>2]|0;A=k[A+4>>2]|0;j=b+12|0;C=k[j>>2]|0;l=b+16|0;D=k[l>>2]|0;m=b+20|0;e=k[m>>2]|0;n=b+24|0;g=k[n>>2]|0;o=b+28|0;f=k[o>>2]|0;k[b>>2]=k[c>>2];w=u;x=k[w+4>>2]|0;y=d;k[y>>2]=k[w>>2];k[y+4>>2]=x;k[j>>2]=k[h>>2];k[l>>2]=k[q>>2];k[m>>2]=k[r>>2];k[n>>2]=k[s>>2];k[o>>2]=k[t>>2];k[c>>2]=B;B=u;k[B>>2]=z;k[B+4>>2]=A;k[h>>2]=C;k[q>>2]=D;k[r>>2]=e;k[s>>2]=g;k[t>>2]=f;f=v+3|0;h=a+4|0;g=i[d>>0]^1;e=i[h>>0]^1;if((g&255)>=(e&255)){if((e&255)<(g&255)){D=f;return D|0}if((k[d+4>>2]|0)>>>0>=(k[h+4>>2]|0)>>>0){D=f;return D|0}}y=k[a>>2]|0;x=h;w=k[x>>2]|0;x=k[x+4>>2]|0;r=a+12|0;z=k[r>>2]|0;s=a+16|0;A=k[s>>2]|0;t=a+20|0;B=k[t>>2]|0;u=a+24|0;C=k[u>>2]|0;c=a+28|0;D=k[c>>2]|0;k[a>>2]=k[b>>2];p=d;q=k[p+4>>2]|0;a=h;k[a>>2]=k[p>>2];k[a+4>>2]=q;k[r>>2]=k[j>>2];k[s>>2]=k[l>>2];k[t>>2]=k[m>>2];k[u>>2]=k[n>>2];k[c>>2]=k[o>>2];k[b>>2]=y;y=d;k[y>>2]=w;k[y+4>>2]=x;k[j>>2]=z;k[l>>2]=A;k[m>>2]=B;k[n>>2]=C;k[o>>2]=D;D=v+4|0;return D|0}function wb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;switch(b-a>>5|0){case 2:{c=b+-32|0;f=b+-28|0;g=a+4|0;d=i[f>>0]^1;e=i[g>>0]^1;if((d&255)>=(e&255)){if((e&255)<(d&255)){b=1;return b|0}if((k[f+4>>2]|0)>>>0>=(k[g+4>>2]|0)>>>0){b=1;return b|0}}r=k[a>>2]|0;q=g;p=k[q>>2]|0;q=k[q+4>>2]|0;v=a+12|0;s=k[v>>2]|0;x=a+16|0;u=k[x>>2]|0;m=a+20|0;w=k[m>>2]|0;n=a+24|0;y=k[n>>2]|0;o=a+28|0;z=k[o>>2]|0;k[a>>2]=k[c>>2];l=f;a=k[l+4>>2]|0;t=g;k[t>>2]=k[l>>2];k[t+4>>2]=a;t=b+-20|0;k[v>>2]=k[t>>2];v=b+-16|0;k[x>>2]=k[v>>2];x=b+-12|0;k[m>>2]=k[x>>2];a=b+-8|0;k[n>>2]=k[a>>2];b=b+-4|0;k[o>>2]=k[b>>2];k[c>>2]=r;r=f;k[r>>2]=p;k[r+4>>2]=q;k[t>>2]=s;k[v>>2]=u;k[x>>2]=w;k[a>>2]=y;k[b>>2]=z;b=1;return b|0}case 3:{tb(a,a+32|0,b+-32|0)|0;b=1;return b|0}case 4:{ub(a,a+32|0,a+64|0,b+-32|0)|0;b=1;return b|0}case 5:{vb(a,a+32|0,a+64|0,a+96|0,b+-32|0)|0;b=1;return b|0}case 1:case 0:{b=1;return b|0}default:{e=a+64|0;tb(a,a+32|0,e)|0;d=a+96|0;if((d|0)==(b|0)){b=1;return b|0}else c=0;while(1){h=d+4|0;j=e+4|0;f=i[h>>0]^1;g=i[j>>0]^1;if((f&255)>=(g&255)){if((g&255)>=(f&255)?(k[h+4>>2]|0)>>>0<(k[j+4>>2]|0)>>>0:0)z=13}else z=13;if((z|0)==13){z=0;r=k[d>>2]|0;t=h;s=k[t>>2]|0;t=k[t+4>>2]|0;m=d+12|0;u=k[m>>2]|0;p=d+16|0;v=k[p>>2]|0;g=d+20|0;w=k[g>>2]|0;f=d+24|0;x=k[f>>2]|0;q=d+28|0;y=k[q>>2]|0;k[d>>2]=k[e>>2];n=j;o=k[n+4>>2]|0;l=h;k[l>>2]=k[n>>2];k[l+4>>2]=o;l=e+12|0;k[m>>2]=k[l>>2];m=e+16|0;k[p>>2]=k[m>>2];h=e+20|0;k[g>>2]=k[h>>2];g=e+24|0;k[f>>2]=k[g>>2];f=e+28|0;k[q>>2]=k[f>>2];a:do if((e|0)!=(a|0)){q=s&255^1;p=e;o=h;while(1){e=p+-32|0;n=p+-28|0;h=i[n>>0]^1;if((q&255)>=(h&255)){if((h&255)<(q&255)){e=p;h=o;break a}if(t>>>0>=(k[p+-24>>2]|0)>>>0){e=p;h=o;break a}}k[p>>2]=k[e>>2];h=n;m=k[h+4>>2]|0;l=p+4|0;k[l>>2]=k[h>>2];k[l+4>>2]=m;l=p+-20|0;k[p+12>>2]=k[l>>2];m=p+-16|0;k[p+16>>2]=k[m>>2];h=p+-12|0;k[p+20>>2]=k[h>>2];g=p+-8|0;k[p+24>>2]=k[g>>2];f=p+-4|0;k[p+28>>2]=k[f>>2];if((e|0)==(a|0)){j=n;break}else{p=e;o=h;j=n}}}while(0);k[e>>2]=r;r=j;k[r>>2]=s;k[r+4>>2]=t;k[l>>2]=u;k[m>>2]=v;k[h>>2]=w;k[g>>2]=x;k[f>>2]=y;c=c+1|0;if((c|0)==8)break}e=d+32|0;if((e|0)==(b|0)){c=1;z=22;break}else{y=d;d=e;e=y}}if((z|0)==22)return c|0;b=(d+32|0)==(b|0);return b|0}}return 0}function xb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,l=0;h=r;r=r+32|0;g=h;l=Za[k[e>>2]&7](b,a)|0;f=Za[k[e>>2]&7](c,b)|0;do if(l){k[g>>2]=k[a>>2];k[g+4>>2]=k[a+4>>2];k[g+8>>2]=k[a+8>>2];k[g+12>>2]=k[a+12>>2];k[g+16>>2]=k[a+16>>2];k[g+20>>2]=k[a+20>>2];k[g+24>>2]=k[a+24>>2];k[g+28>>2]=k[a+28>>2];if(f){k[a>>2]=k[c>>2];k[a+4>>2]=k[c+4>>2];k[a+8>>2]=k[c+8>>2];k[a+12>>2]=k[c+12>>2];k[a+16>>2]=k[c+16>>2];k[a+20>>2]=k[c+20>>2];j[a+24>>1]=j[c+24>>1]|0;i[a+26>>0]=i[c+26>>0]|0;k[c>>2]=k[g>>2];k[c+4>>2]=k[g+4>>2];k[c+8>>2]=k[g+8>>2];k[c+12>>2]=k[g+12>>2];k[c+16>>2]=k[g+16>>2];k[c+20>>2]=k[g+20>>2];j[c+24>>1]=j[g+24>>1]|0;i[c+26>>0]=i[g+26>>0]|0;f=1;break};k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];j[a+24>>1]=j[b+24>>1]|0;i[a+26>>0]=i[b+26>>0]|0;k[b>>2]=k[g>>2];k[b+4>>2]=k[g+4>>2];k[b+8>>2]=k[g+8>>2];k[b+12>>2]=k[g+12>>2];k[b+16>>2]=k[g+16>>2];k[b+20>>2]=k[g+20>>2];j[b+24>>1]=j[g+24>>1]|0;i[b+26>>0]=i[g+26>>0]|0;if(Za[k[e>>2]&7](c,b)|0){k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];k[g+16>>2]=k[b+16>>2];k[g+20>>2]=k[b+20>>2];k[g+24>>2]=k[b+24>>2];k[g+28>>2]=k[b+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];j[b+24>>1]=j[c+24>>1]|0;i[b+26>>0]=i[c+26>>0]|0;k[c>>2]=k[g>>2];k[c+4>>2]=k[g+4>>2];k[c+8>>2]=k[g+8>>2];k[c+12>>2]=k[g+12>>2];k[c+16>>2]=k[g+16>>2];k[c+20>>2]=k[g+20>>2];j[c+24>>1]=j[g+24>>1]|0;i[c+26>>0]=i[g+26>>0]|0;f=2}else f=1}else if(f){k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];k[g+16>>2]=k[b+16>>2];k[g+20>>2]=k[b+20>>2];k[g+24>>2]=k[b+24>>2];k[g+28>>2]=k[b+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];j[b+24>>1]=j[c+24>>1]|0;i[b+26>>0]=i[c+26>>0]|0;k[c>>2]=k[g>>2];k[c+4>>2]=k[g+4>>2];k[c+8>>2]=k[g+8>>2];k[c+12>>2]=k[g+12>>2];k[c+16>>2]=k[g+16>>2];k[c+20>>2]=k[g+20>>2];j[c+24>>1]=j[g+24>>1]|0;i[c+26>>0]=i[g+26>>0]|0;if(Za[k[e>>2]&7](b,a)|0){k[g>>2]=k[a>>2];k[g+4>>2]=k[a+4>>2];k[g+8>>2]=k[a+8>>2];k[g+12>>2]=k[a+12>>2];k[g+16>>2]=k[a+16>>2];k[g+20>>2]=k[a+20>>2];k[g+24>>2]=k[a+24>>2];k[g+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];j[a+24>>1]=j[b+24>>1]|0;i[a+26>>0]=i[b+26>>0]|0;k[b>>2]=k[g>>2];k[b+4>>2]=k[g+4>>2];k[b+8>>2]=k[g+8>>2];k[b+12>>2]=k[g+12>>2];k[b+16>>2]=k[g+16>>2];k[b+20>>2]=k[g+20>>2];j[b+24>>1]=j[g+24>>1]|0;i[b+26>>0]=i[g+26>>0]|0;f=2}else f=1}else f=0;while(0);if(!(Za[k[e>>2]&7](d,c)|0)){l=f;r=h;return l|0};k[g>>2]=k[c>>2];k[g+4>>2]=k[c+4>>2];k[g+8>>2]=k[c+8>>2];k[g+12>>2]=k[c+12>>2];k[g+16>>2]=k[c+16>>2];k[g+20>>2]=k[c+20>>2];k[g+24>>2]=k[c+24>>2];k[g+28>>2]=k[c+28>>2];k[c>>2]=k[d>>2];k[c+4>>2]=k[d+4>>2];k[c+8>>2]=k[d+8>>2];k[c+12>>2]=k[d+12>>2];k[c+16>>2]=k[d+16>>2];k[c+20>>2]=k[d+20>>2];j[c+24>>1]=j[d+24>>1]|0;i[c+26>>0]=i[d+26>>0]|0;k[d>>2]=k[g>>2];k[d+4>>2]=k[g+4>>2];k[d+8>>2]=k[g+8>>2];k[d+12>>2]=k[g+12>>2];k[d+16>>2]=k[g+16>>2];k[d+20>>2]=k[g+20>>2];j[d+24>>1]=j[g+24>>1]|0;i[d+26>>0]=i[g+26>>0]|0;if(!(Za[k[e>>2]&7](c,b)|0)){l=f+1|0;r=h;return l|0};k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];k[g+16>>2]=k[b+16>>2];k[g+20>>2]=k[b+20>>2];k[g+24>>2]=k[b+24>>2];k[g+28>>2]=k[b+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];j[b+24>>1]=j[c+24>>1]|0;i[b+26>>0]=i[c+26>>0]|0;k[c>>2]=k[g>>2];k[c+4>>2]=k[g+4>>2];k[c+8>>2]=k[g+8>>2];k[c+12>>2]=k[g+12>>2];k[c+16>>2]=k[g+16>>2];k[c+20>>2]=k[g+20>>2];j[c+24>>1]=j[g+24>>1]|0;i[c+26>>0]=i[g+26>>0]|0;if(!(Za[k[e>>2]&7](b,a)|0)){l=f+2|0;r=h;return l|0};k[g>>2]=k[a>>2];k[g+4>>2]=k[a+4>>2];k[g+8>>2]=k[a+8>>2];k[g+12>>2]=k[a+12>>2];k[g+16>>2]=k[a+16>>2];k[g+20>>2]=k[a+20>>2];k[g+24>>2]=k[a+24>>2];k[g+28>>2]=k[a+28>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];j[a+24>>1]=j[b+24>>1]|0;i[a+26>>0]=i[b+26>>0]|0;k[b>>2]=k[g>>2];k[b+4>>2]=k[g+4>>2];k[b+8>>2]=k[g+8>>2];k[b+12>>2]=k[g+12>>2];k[b+16>>2]=k[g+16>>2];k[b+20>>2]=k[g+20>>2];j[b+24>>1]=j[g+24>>1]|0;i[b+26>>0]=i[g+26>>0]|0;l=f+3|0;r=h;return l|0}function yb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0;n=r;r=r+64|0;h=n+32|0;l=n;switch(b-a>>5|0){case 2:{d=b+-32|0;if(!(Za[k[c>>2]&7](d,a)|0)){a=1;r=n;return a|0};k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];k[a>>2]=k[d>>2];k[a+4>>2]=k[d+4>>2];k[a+8>>2]=k[d+8>>2];k[a+12>>2]=k[d+12>>2];k[a+16>>2]=k[d+16>>2];k[a+20>>2]=k[d+20>>2];j[a+24>>1]=j[d+24>>1]|0;i[a+26>>0]=i[d+26>>0]|0;k[d>>2]=k[h>>2];k[d+4>>2]=k[h+4>>2];k[d+8>>2]=k[h+8>>2];k[d+12>>2]=k[h+12>>2];k[d+16>>2]=k[h+16>>2];k[d+20>>2]=k[h+20>>2];j[d+24>>1]=j[h+24>>1]|0;i[d+26>>0]=i[h+26>>0]|0;a=1;r=n;return a|0}case 3:{f=a+32|0;e=b+-32|0;b=Za[k[c>>2]&7](f,a)|0;d=Za[k[c>>2]&7](e,f)|0;if(!b){if(!d){a=1;r=n;return a|0};k[h>>2]=k[f>>2];k[h+4>>2]=k[f+4>>2];k[h+8>>2]=k[f+8>>2];k[h+12>>2]=k[f+12>>2];k[h+16>>2]=k[f+16>>2];k[h+20>>2]=k[f+20>>2];k[h+24>>2]=k[f+24>>2];k[h+28>>2]=k[f+28>>2];k[f>>2]=k[e>>2];k[f+4>>2]=k[e+4>>2];k[f+8>>2]=k[e+8>>2];k[f+12>>2]=k[e+12>>2];k[f+16>>2]=k[e+16>>2];k[f+20>>2]=k[e+20>>2];j[f+24>>1]=j[e+24>>1]|0;i[f+26>>0]=i[e+26>>0]|0;k[e>>2]=k[h>>2];k[e+4>>2]=k[h+4>>2];k[e+8>>2]=k[h+8>>2];k[e+12>>2]=k[h+12>>2];k[e+16>>2]=k[h+16>>2];k[e+20>>2]=k[h+20>>2];j[e+24>>1]=j[h+24>>1]|0;i[e+26>>0]=i[h+26>>0]|0;if(!(Za[k[c>>2]&7](f,a)|0)){a=1;r=n;return a|0};k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];k[a>>2]=k[f>>2];k[a+4>>2]=k[f+4>>2];k[a+8>>2]=k[f+8>>2];k[a+12>>2]=k[f+12>>2];k[a+16>>2]=k[f+16>>2];k[a+20>>2]=k[f+20>>2];j[a+24>>1]=j[f+24>>1]|0;i[a+26>>0]=i[f+26>>0]|0;k[f>>2]=k[h>>2];k[f+4>>2]=k[h+4>>2];k[f+8>>2]=k[h+8>>2];k[f+12>>2]=k[h+12>>2];k[f+16>>2]=k[h+16>>2];k[f+20>>2]=k[h+20>>2];j[f+24>>1]=j[h+24>>1]|0;i[f+26>>0]=i[h+26>>0]|0;a=1;r=n;return a|0};k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];if(d){k[a>>2]=k[e>>2];k[a+4>>2]=k[e+4>>2];k[a+8>>2]=k[e+8>>2];k[a+12>>2]=k[e+12>>2];k[a+16>>2]=k[e+16>>2];k[a+20>>2]=k[e+20>>2];j[a+24>>1]=j[e+24>>1]|0;i[a+26>>0]=i[e+26>>0]|0;k[e>>2]=k[h>>2];k[e+4>>2]=k[h+4>>2];k[e+8>>2]=k[h+8>>2];k[e+12>>2]=k[h+12>>2];k[e+16>>2]=k[h+16>>2];k[e+20>>2]=k[h+20>>2];j[e+24>>1]=j[h+24>>1]|0;i[e+26>>0]=i[h+26>>0]|0;a=1;r=n;return a|0};k[a>>2]=k[f>>2];k[a+4>>2]=k[f+4>>2];k[a+8>>2]=k[f+8>>2];k[a+12>>2]=k[f+12>>2];k[a+16>>2]=k[f+16>>2];k[a+20>>2]=k[f+20>>2];j[a+24>>1]=j[f+24>>1]|0;i[a+26>>0]=i[f+26>>0]|0;k[f>>2]=k[h>>2];k[f+4>>2]=k[h+4>>2];k[f+8>>2]=k[h+8>>2];k[f+12>>2]=k[h+12>>2];k[f+16>>2]=k[h+16>>2];k[f+20>>2]=k[h+20>>2];j[f+24>>1]=j[h+24>>1]|0;i[f+26>>0]=i[h+26>>0]|0;if(!(Za[k[c>>2]&7](e,f)|0)){a=1;r=n;return a|0};k[h>>2]=k[f>>2];k[h+4>>2]=k[f+4>>2];k[h+8>>2]=k[f+8>>2];k[h+12>>2]=k[f+12>>2];k[h+16>>2]=k[f+16>>2];k[h+20>>2]=k[f+20>>2];k[h+24>>2]=k[f+24>>2];k[h+28>>2]=k[f+28>>2];k[f>>2]=k[e>>2];k[f+4>>2]=k[e+4>>2];k[f+8>>2]=k[e+8>>2];k[f+12>>2]=k[e+12>>2];k[f+16>>2]=k[e+16>>2];k[f+20>>2]=k[e+20>>2];j[f+24>>1]=j[e+24>>1]|0;i[f+26>>0]=i[e+26>>0]|0;k[e>>2]=k[h>>2];k[e+4>>2]=k[h+4>>2];k[e+8>>2]=k[h+8>>2];k[e+12>>2]=k[h+12>>2];k[e+16>>2]=k[h+16>>2];k[e+20>>2]=k[h+20>>2];j[e+24>>1]=j[h+24>>1]|0;i[e+26>>0]=i[h+26>>0]|0;a=1;r=n;return a|0}case 4:{xb(a,a+32|0,a+64|0,b+-32|0,c)|0;a=1;r=n;return a|0}case 5:{e=a+32|0;f=a+64|0;g=a+96|0;d=b+-32|0;xb(a,e,f,g,c)|0;if(!(Za[k[c>>2]&7](d,g)|0)){a=1;r=n;return a|0};k[h>>2]=k[g>>2];k[h+4>>2]=k[g+4>>2];k[h+8>>2]=k[g+8>>2];k[h+12>>2]=k[g+12>>2];k[h+16>>2]=k[g+16>>2];k[h+20>>2]=k[g+20>>2];k[h+24>>2]=k[g+24>>2];k[h+28>>2]=k[g+28>>2];k[g>>2]=k[d>>2];k[g+4>>2]=k[d+4>>2];k[g+8>>2]=k[d+8>>2];k[g+12>>2]=k[d+12>>2];k[g+16>>2]=k[d+16>>2];k[g+20>>2]=k[d+20>>2];j[g+24>>1]=j[d+24>>1]|0;i[g+26>>0]=i[d+26>>0]|0;k[d>>2]=k[h>>2];k[d+4>>2]=k[h+4>>2];k[d+8>>2]=k[h+8>>2];k[d+12>>2]=k[h+12>>2];k[d+16>>2]=k[h+16>>2];k[d+20>>2]=k[h+20>>2];j[d+24>>1]=j[h+24>>1]|0;i[d+26>>0]=i[h+26>>0]|0;if(!(Za[k[c>>2]&7](g,f)|0)){a=1;r=n;return a|0};k[h>>2]=k[f>>2];k[h+4>>2]=k[f+4>>2];k[h+8>>2]=k[f+8>>2];k[h+12>>2]=k[f+12>>2];k[h+16>>2]=k[f+16>>2];k[h+20>>2]=k[f+20>>2];k[h+24>>2]=k[f+24>>2];k[h+28>>2]=k[f+28>>2];k[f>>2]=k[g>>2];k[f+4>>2]=k[g+4>>2];k[f+8>>2]=k[g+8>>2];k[f+12>>2]=k[g+12>>2];k[f+16>>2]=k[g+16>>2];k[f+20>>2]=k[g+20>>2];j[f+24>>1]=j[g+24>>1]|0;i[f+26>>0]=i[g+26>>0]|0;k[g>>2]=k[h>>2];k[g+4>>2]=k[h+4>>2];k[g+8>>2]=k[h+8>>2];k[g+12>>2]=k[h+12>>2];k[g+16>>2]=k[h+16>>2];k[g+20>>2]=k[h+20>>2];j[g+24>>1]=j[h+24>>1]|0;i[g+26>>0]=i[h+26>>0]|0;if(!(Za[k[c>>2]&7](f,e)|0)){a=1;r=n;return a|0};k[h>>2]=k[e>>2];k[h+4>>2]=k[e+4>>2];k[h+8>>2]=k[e+8>>2];k[h+12>>2]=k[e+12>>2];k[h+16>>2]=k[e+16>>2];k[h+20>>2]=k[e+20>>2];k[h+24>>2]=k[e+24>>2];k[h+28>>2]=k[e+28>>2];k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];k[e+16>>2]=k[f+16>>2];k[e+20>>2]=k[f+20>>2];j[e+24>>1]=j[f+24>>1]|0;i[e+26>>0]=i[f+26>>0]|0;k[f>>2]=k[h>>2];k[f+4>>2]=k[h+4>>2];k[f+8>>2]=k[h+8>>2];k[f+12>>2]=k[h+12>>2];k[f+16>>2]=k[h+16>>2];k[f+20>>2]=k[h+20>>2];j[f+24>>1]=j[h+24>>1]|0;i[f+26>>0]=i[h+26>>0]|0;if(!(Za[k[c>>2]&7](e,a)|0)){a=1;r=n;return a|0};k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];k[a>>2]=k[e>>2];k[a+4>>2]=k[e+4>>2];k[a+8>>2]=k[e+8>>2];k[a+12>>2]=k[e+12>>2];k[a+16>>2]=k[e+16>>2];k[a+20>>2]=k[e+20>>2];j[a+24>>1]=j[e+24>>1]|0;i[a+26>>0]=i[e+26>>0]|0;k[e>>2]=k[h>>2];k[e+4>>2]=k[h+4>>2];k[e+8>>2]=k[h+8>>2];k[e+12>>2]=k[h+12>>2];k[e+16>>2]=k[h+16>>2];k[e+20>>2]=k[h+20>>2];j[e+24>>1]=j[h+24>>1]|0;i[e+26>>0]=i[h+26>>0]|0;a=1;r=n;return a|0}case 1:case 0:{a=1;r=n;return a|0}default:{f=a+64|0;d=a+32|0;g=Za[k[c>>2]&7](d,a)|0;e=Za[k[c>>2]&7](f,d)|0;do if(g){k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];if(e){k[a>>2]=k[f>>2];k[a+4>>2]=k[f+4>>2];k[a+8>>2]=k[f+8>>2];k[a+12>>2]=k[f+12>>2];k[a+16>>2]=k[f+16>>2];k[a+20>>2]=k[f+20>>2];j[a+24>>1]=j[f+24>>1]|0;i[a+26>>0]=i[f+26>>0]|0;k[f>>2]=k[h>>2];k[f+4>>2]=k[h+4>>2];k[f+8>>2]=k[h+8>>2];k[f+12>>2]=k[h+12>>2];k[f+16>>2]=k[h+16>>2];k[f+20>>2]=k[h+20>>2];j[f+24>>1]=j[h+24>>1]|0;i[f+26>>0]=i[h+26>>0]|0;break};k[a>>2]=k[d>>2];k[a+4>>2]=k[d+4>>2];k[a+8>>2]=k[d+8>>2];k[a+12>>2]=k[d+12>>2];k[a+16>>2]=k[d+16>>2];k[a+20>>2]=k[d+20>>2];j[a+24>>1]=j[d+24>>1]|0;i[a+26>>0]=i[d+26>>0]|0;k[d>>2]=k[h>>2];k[d+4>>2]=k[h+4>>2];k[d+8>>2]=k[h+8>>2];k[d+12>>2]=k[h+12>>2];k[d+16>>2]=k[h+16>>2];k[d+20>>2]=k[h+20>>2];j[d+24>>1]=j[h+24>>1]|0;i[d+26>>0]=i[h+26>>0]|0;if(Za[k[c>>2]&7](f,d)|0){k[h>>2]=k[d>>2];k[h+4>>2]=k[d+4>>2];k[h+8>>2]=k[d+8>>2];k[h+12>>2]=k[d+12>>2];k[h+16>>2]=k[d+16>>2];k[h+20>>2]=k[d+20>>2];k[h+24>>2]=k[d+24>>2];k[h+28>>2]=k[d+28>>2];k[d>>2]=k[f>>2];k[d+4>>2]=k[f+4>>2];k[d+8>>2]=k[f+8>>2];k[d+12>>2]=k[f+12>>2];k[d+16>>2]=k[f+16>>2];k[d+20>>2]=k[f+20>>2];j[d+24>>1]=j[f+24>>1]|0;i[d+26>>0]=i[f+26>>0]|0;k[f>>2]=k[h>>2];k[f+4>>2]=k[h+4>>2];k[f+8>>2]=k[h+8>>2];k[f+12>>2]=k[h+12>>2];k[f+16>>2]=k[h+16>>2];k[f+20>>2]=k[h+20>>2];j[f+24>>1]=j[h+24>>1]|0;i[f+26>>0]=i[h+26>>0]|0}}else if(e?(k[h>>2]=k[d>>2],k[h+4>>2]=k[d+4>>2],k[h+8>>2]=k[d+8>>2],k[h+12>>2]=k[d+12>>2],k[h+16>>2]=k[d+16>>2],k[h+20>>2]=k[d+20>>2],k[h+24>>2]=k[d+24>>2],k[h+28>>2]=k[d+28>>2],k[d>>2]=k[f>>2],k[d+4>>2]=k[f+4>>2],k[d+8>>2]=k[f+8>>2],k[d+12>>2]=k[f+12>>2],k[d+16>>2]=k[f+16>>2],k[d+20>>2]=k[f+20>>2],j[d+24>>1]=j[f+24>>1]|0,i[d+26>>0]=i[f+26>>0]|0,k[f>>2]=k[h>>2],k[f+4>>2]=k[h+4>>2],k[f+8>>2]=k[h+8>>2],k[f+12>>2]=k[h+12>>2],k[f+16>>2]=k[h+16>>2],k[f+20>>2]=k[h+20>>2],j[f+24>>1]=j[h+24>>1]|0,i[f+26>>0]=i[h+26>>0]|0,Za[k[c>>2]&7](d,a)|0):0){k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[h+16>>2]=k[a+16>>2];k[h+20>>2]=k[a+20>>2];k[h+24>>2]=k[a+24>>2];k[h+28>>2]=k[a+28>>2];k[a>>2]=k[d>>2];k[a+4>>2]=k[d+4>>2];k[a+8>>2]=k[d+8>>2];k[a+12>>2]=k[d+12>>2];k[a+16>>2]=k[d+16>>2];k[a+20>>2]=k[d+20>>2];j[a+24>>1]=j[d+24>>1]|0;i[a+26>>0]=i[d+26>>0]|0;k[d>>2]=k[h>>2];k[d+4>>2]=k[h+4>>2];k[d+8>>2]=k[h+8>>2];k[d+12>>2]=k[h+12>>2];k[d+16>>2]=k[h+16>>2];k[d+20>>2]=k[h+20>>2];j[d+24>>1]=j[h+24>>1]|0;i[d+26>>0]=i[h+26>>0]|0}while(0);e=a+96|0;if((e|0)==(b|0)){a=1;r=n;return a|0}d=0;while(1){if(Za[k[c>>2]&7](e,f)|0){k[l>>2]=k[e>>2];k[l+4>>2]=k[e+4>>2];k[l+8>>2]=k[e+8>>2];k[l+12>>2]=k[e+12>>2];k[l+16>>2]=k[e+16>>2];k[l+20>>2]=k[e+20>>2];k[l+24>>2]=k[e+24>>2];k[l+28>>2]=k[e+28>>2];g=e;h=f;while(1){k[g>>2]=k[h>>2];k[g+4>>2]=k[h+4>>2];k[g+8>>2]=k[h+8>>2];k[g+12>>2]=k[h+12>>2];k[g+16>>2]=k[h+16>>2];k[g+20>>2]=k[h+20>>2];j[g+24>>1]=j[h+24>>1]|0;i[g+26>>0]=i[h+26>>0]|0;if((h|0)==(a|0))break;f=h+-32|0;if(Za[k[c>>2]&7](l,f)|0){g=h;h=f}else break}k[h>>2]=k[l>>2];k[h+4>>2]=k[l+4>>2];k[h+8>>2]=k[l+8>>2];k[h+12>>2]=k[l+12>>2];k[h+16>>2]=k[l+16>>2];k[h+20>>2]=k[l+20>>2];j[h+24>>1]=j[l+24>>1]|0;i[h+26>>0]=i[l+26>>0]|0;d=d+1|0;if((d|0)==8)break}f=e+32|0;if((f|0)==(b|0)){d=1;m=35;break}else{h=e;e=f;f=h}}if((m|0)==35){r=n;return d|0}a=(e+32|0)==(b|0);r=n;return a|0}}return 0}function zb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;v=Za[k[d>>2]&7](b,a)|0;e=Za[k[d>>2]&7](c,b)|0;if(!v){if(!e){c=0;return c|0}y=k[b>>2]|0;j=b+4|0;l=j;w=k[l>>2]|0;l=k[l+4>>2]|0;e=b+12|0;m=k[e>>2]|0;f=b+16|0;o=k[f>>2]|0;g=b+20|0;q=k[g>>2]|0;h=b+24|0;s=k[h>>2]|0;i=b+28|0;u=k[i>>2]|0;k[b>>2]=k[c>>2];x=c+4|0;r=x;p=k[r+4>>2]|0;n=j;k[n>>2]=k[r>>2];k[n+4>>2]=p;n=c+12|0;k[e>>2]=k[n>>2];p=c+16|0;k[f>>2]=k[p>>2];r=c+20|0;k[g>>2]=k[r>>2];t=c+24|0;k[h>>2]=k[t>>2];v=c+28|0;k[i>>2]=k[v>>2];k[c>>2]=y;c=x;k[c>>2]=w;k[c+4>>2]=l;k[n>>2]=m;k[p>>2]=o;k[r>>2]=q;k[t>>2]=s;k[v>>2]=u;if(!(Za[k[d>>2]&7](b,a)|0)){y=1;return y|0}t=k[a>>2]|0;n=a+4|0;v=n;u=k[v>>2]|0;v=k[v+4>>2]|0;o=a+12|0;d=k[o>>2]|0;p=a+16|0;c=k[p>>2]|0;q=a+20|0;w=k[q>>2]|0;r=a+24|0;x=k[r>>2]|0;s=a+28|0;y=k[s>>2]|0;k[a>>2]=k[b>>2];a=j;m=k[a+4>>2]|0;k[n>>2]=k[a>>2];k[n+4>>2]=m;k[o>>2]=k[e>>2];k[p>>2]=k[f>>2];k[q>>2]=k[g>>2];k[r>>2]=k[h>>2];k[s>>2]=k[i>>2];k[b>>2]=t;b=j;k[b>>2]=u;k[b+4>>2]=v;k[e>>2]=d;k[f>>2]=c;k[g>>2]=w;k[h>>2]=x;k[i>>2]=y;y=2;return y|0}r=k[a>>2]|0;f=a+4|0;t=f;s=k[t>>2]|0;t=k[t+4>>2]|0;g=a+12|0;u=k[g>>2]|0;j=a+16|0;v=k[j>>2]|0;l=a+20|0;n=k[l>>2]|0;m=a+24|0;o=k[m>>2]|0;p=a+28|0;q=k[p>>2]|0;if(e){k[a>>2]=k[c>>2];a=c+4|0;w=a;b=k[w+4>>2]|0;d=f;k[d>>2]=k[w>>2];k[d+4>>2]=b;d=c+12|0;k[g>>2]=k[d>>2];b=c+16|0;k[j>>2]=k[b>>2];w=c+20|0;k[l>>2]=k[w>>2];x=c+24|0;k[m>>2]=k[x>>2];y=c+28|0;k[p>>2]=k[y>>2];k[c>>2]=r;c=a;k[c>>2]=s;k[c+4>>2]=t;k[d>>2]=u;k[b>>2]=v;k[w>>2]=n;k[x>>2]=o;k[y>>2]=q;y=1;return y|0}k[a>>2]=k[b>>2];a=b+4|0;e=a;h=k[e+4>>2]|0;i=f;k[i>>2]=k[e>>2];k[i+4>>2]=h;i=b+12|0;k[g>>2]=k[i>>2];h=b+16|0;k[j>>2]=k[h>>2];g=b+20|0;k[l>>2]=k[g>>2];f=b+24|0;k[m>>2]=k[f>>2];e=b+28|0;k[p>>2]=k[e>>2];k[b>>2]=r;y=a;k[y>>2]=s;k[y+4>>2]=t;k[i>>2]=u;k[h>>2]=v;k[g>>2]=n;k[f>>2]=o;k[e>>2]=q;if(!(Za[k[d>>2]&7](c,b)|0)){y=1;return y|0}n=k[b>>2]|0;q=a;p=k[q>>2]|0;q=k[q+4>>2]|0;r=k[i>>2]|0;t=k[h>>2]|0;v=k[g>>2]|0;d=k[f>>2]|0;x=k[e>>2]|0;k[b>>2]=k[c>>2];o=c+4|0;b=o;u=k[b+4>>2]|0;s=a;k[s>>2]=k[b>>2];k[s+4>>2]=u;s=c+12|0;k[i>>2]=k[s>>2];u=c+16|0;k[h>>2]=k[u>>2];b=c+20|0;k[g>>2]=k[b>>2];w=c+24|0;k[f>>2]=k[w>>2];y=c+28|0;k[e>>2]=k[y>>2];k[c>>2]=n;c=o;k[c>>2]=p;k[c+4>>2]=q;k[s>>2]=r;k[u>>2]=t;k[b>>2]=v;k[w>>2]=d;k[y>>2]=x;y=2;return y|0}function Ab(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=zb(a,b,c,e)|0;if(!(Za[k[e>>2]&7](d,c)|0)){c=l;return c|0}A=k[c>>2]|0;r=c+4|0;x=r;y=k[x>>2]|0;x=k[x+4>>2]|0;m=c+12|0;w=k[m>>2]|0;n=c+16|0;u=k[n>>2]|0;o=c+20|0;s=k[o>>2]|0;p=c+24|0;g=k[p>>2]|0;q=c+28|0;i=k[q>>2]|0;k[c>>2]=k[d>>2];z=d+4|0;f=z;t=k[f+4>>2]|0;v=r;k[v>>2]=k[f>>2];k[v+4>>2]=t;v=d+12|0;k[m>>2]=k[v>>2];t=d+16|0;k[n>>2]=k[t>>2];f=d+20|0;k[o>>2]=k[f>>2];h=d+24|0;k[p>>2]=k[h>>2];j=d+28|0;k[q>>2]=k[j>>2];k[d>>2]=A;d=z;k[d>>2]=y;k[d+4>>2]=x;k[v>>2]=w;k[t>>2]=u;k[f>>2]=s;k[h>>2]=g;k[j>>2]=i;if(!(Za[k[e>>2]&7](c,b)|0)){A=l+1|0;return A|0}v=k[b>>2]|0;d=b+4|0;u=d;t=k[u>>2]|0;u=k[u+4>>2]|0;f=b+12|0;w=k[f>>2]|0;g=b+16|0;x=k[g>>2]|0;h=b+20|0;y=k[h>>2]|0;i=b+24|0;z=k[i>>2]|0;j=b+28|0;A=k[j>>2]|0;k[b>>2]=k[c>>2];C=r;B=k[C+4>>2]|0;s=d;k[s>>2]=k[C>>2];k[s+4>>2]=B;k[f>>2]=k[m>>2];k[g>>2]=k[n>>2];k[h>>2]=k[o>>2];k[i>>2]=k[p>>2];k[j>>2]=k[q>>2];k[c>>2]=v;v=r;k[v>>2]=t;k[v+4>>2]=u;k[m>>2]=w;k[n>>2]=x;k[o>>2]=y;k[p>>2]=z;k[q>>2]=A;if(!(Za[k[e>>2]&7](b,a)|0)){C=l+2|0;return C|0}x=k[a>>2]|0;p=a+4|0;w=p;v=k[w>>2]|0;w=k[w+4>>2]|0;e=a+12|0;y=k[e>>2]|0;c=a+16|0;z=k[c>>2]|0;s=a+20|0;A=k[s>>2]|0;t=a+24|0;B=k[t>>2]|0;u=a+28|0;C=k[u>>2]|0;k[a>>2]=k[b>>2];q=d;r=k[q+4>>2]|0;a=p;k[a>>2]=k[q>>2];k[a+4>>2]=r;k[e>>2]=k[f>>2];k[c>>2]=k[g>>2];k[s>>2]=k[h>>2];k[t>>2]=k[i>>2];k[u>>2]=k[j>>2];k[b>>2]=x;x=d;k[x>>2]=v;k[x+4>>2]=w;k[f>>2]=y;k[g>>2]=z;k[h>>2]=A;k[i>>2]=B;k[j>>2]=C;C=l+3|0;return C|0}function Bb(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;t=Ab(a,b,c,d,f)|0;if(!(Za[k[f>>2]&7](e,d)|0)){c=t;return c|0}B=k[d>>2]|0;m=d+4|0;y=m;z=k[y>>2]|0;y=k[y+4>>2]|0;g=d+12|0;x=k[g>>2]|0;h=d+16|0;v=k[h>>2]|0;i=d+20|0;n=k[i>>2]|0;j=d+24|0;p=k[j>>2]|0;l=d+28|0;r=k[l>>2]|0;k[d>>2]=k[e>>2];A=e+4|0;o=A;u=k[o+4>>2]|0;w=m;k[w>>2]=k[o>>2];k[w+4>>2]=u;w=e+12|0;k[g>>2]=k[w>>2];u=e+16|0;k[h>>2]=k[u>>2];o=e+20|0;k[i>>2]=k[o>>2];q=e+24|0;k[j>>2]=k[q>>2];s=e+28|0;k[l>>2]=k[s>>2];k[e>>2]=B;e=A;k[e>>2]=z;k[e+4>>2]=y;k[w>>2]=x;k[u>>2]=v;k[o>>2]=n;k[q>>2]=p;k[s>>2]=r;if(!(Za[k[f>>2]&7](d,c)|0)){B=t+1|0;return B|0}w=k[c>>2]|0;n=c+4|0;v=n;u=k[v>>2]|0;v=k[v+4>>2]|0;o=c+12|0;x=k[o>>2]|0;p=c+16|0;y=k[p>>2]|0;q=c+20|0;z=k[q>>2]|0;r=c+24|0;A=k[r>>2]|0;s=c+28|0;B=k[s>>2]|0;k[c>>2]=k[d>>2];D=m;C=k[D+4>>2]|0;e=n;k[e>>2]=k[D>>2];k[e+4>>2]=C;k[o>>2]=k[g>>2];k[p>>2]=k[h>>2];k[q>>2]=k[i>>2];k[r>>2]=k[j>>2];k[s>>2]=k[l>>2];k[d>>2]=w;w=m;k[w>>2]=u;k[w+4>>2]=v;k[g>>2]=x;k[h>>2]=y;k[i>>2]=z;k[j>>2]=A;k[l>>2]=B;if(!(Za[k[f>>2]&7](c,b)|0)){D=t+2|0;return D|0}y=k[b>>2]|0;j=b+4|0;x=j;w=k[x>>2]|0;x=k[x+4>>2]|0;l=b+12|0;z=k[l>>2]|0;e=b+16|0;A=k[e>>2]|0;g=b+20|0;B=k[g>>2]|0;h=b+24|0;C=k[h>>2]|0;i=b+28|0;D=k[i>>2]|0;k[b>>2]=k[c>>2];d=n;u=k[d+4>>2]|0;v=j;k[v>>2]=k[d>>2];k[v+4>>2]=u;k[l>>2]=k[o>>2];k[e>>2]=k[p>>2];k[g>>2]=k[q>>2];k[h>>2]=k[r>>2];k[i>>2]=k[s>>2];k[c>>2]=y;y=n;k[y>>2]=w;k[y+4>>2]=x;k[o>>2]=z;k[p>>2]=A;k[q>>2]=B;k[r>>2]=C;k[s>>2]=D;if(!(Za[k[f>>2]&7](b,a)|0)){D=t+3|0;return D|0}y=k[a>>2]|0;p=a+4|0;x=p;w=k[x>>2]|0;x=k[x+4>>2]|0;s=a+12|0;z=k[s>>2]|0;f=a+16|0;A=k[f>>2]|0;c=a+20|0;B=k[c>>2]|0;u=a+24|0;C=k[u>>2]|0;v=a+28|0;D=k[v>>2]|0;k[a>>2]=k[b>>2];q=j;r=k[q+4>>2]|0;a=p;k[a>>2]=k[q>>2];k[a+4>>2]=r;k[s>>2]=k[l>>2];k[f>>2]=k[e>>2];k[c>>2]=k[g>>2];k[u>>2]=k[h>>2];k[v>>2]=k[i>>2];k[b>>2]=y;y=j;k[y>>2]=w;k[y+4>>2]=x;k[l>>2]=z;k[e>>2]=A;k[g>>2]=B;k[h>>2]=C;k[i>>2]=D;D=t+4|0;return D|0}function Cb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0;x=r;r=r+32|0;v=x;switch(b-a>>5|0){case 2:{d=b+-32|0;if(!(Za[k[c>>2]&7](d,a)|0)){w=1;r=x;return w|0}j=k[a>>2]|0;p=a+4|0;n=p;m=k[n>>2]|0;n=k[n+4>>2]|0;s=a+12|0;o=k[s>>2]|0;u=a+16|0;q=k[u>>2]|0;h=a+20|0;t=k[h>>2]|0;w=a+24|0;v=k[w>>2]|0;i=a+28|0;c=k[i>>2]|0;k[a>>2]=k[d>>2];l=b+-28|0;g=l;a=k[g+4>>2]|0;k[p>>2]=k[g>>2];k[p+4>>2]=a;p=b+-20|0;k[s>>2]=k[p>>2];s=b+-16|0;k[u>>2]=k[s>>2];u=b+-12|0;k[h>>2]=k[u>>2];a=b+-8|0;k[w>>2]=k[a>>2];w=b+-4|0;k[i>>2]=k[w>>2];k[d>>2]=j;b=l;k[b>>2]=m;k[b+4>>2]=n;k[p>>2]=o;k[s>>2]=q;k[u>>2]=t;k[a>>2]=v;k[w>>2]=c;w=1;r=x;return w|0}case 3:{zb(a,a+32|0,b+-32|0,c)|0;w=1;r=x;return w|0}case 4:{Ab(a,a+32|0,a+64|0,b+-32|0,c)|0;w=1;r=x;return w|0}case 5:{Bb(a,a+32|0,a+64|0,a+96|0,b+-32|0,c)|0;w=1;r=x;return w|0}case 1:case 0:{w=1;r=x;return w|0}default:{f=a+64|0;zb(a,a+32|0,f,c)|0;e=a+96|0;if((e|0)==(b|0)){w=1;r=x;return w|0}o=v+4|0;p=v+12|0;q=v+16|0;s=v+20|0;t=v+24|0;u=v+28|0;d=0;while(1){if(Za[k[c>>2]&7](e,f)|0){k[v>>2]=k[e>>2];m=e+4|0;n=k[m+4>>2]|0;g=o;k[g>>2]=k[m>>2];k[g+4>>2]=n;k[p>>2]=k[e+12>>2];k[q>>2]=k[e+16>>2];k[s>>2]=k[e+20>>2];k[t>>2]=k[e+24>>2];k[u>>2]=k[e+28>>2];g=e;while(1){k[g>>2]=k[f>>2];n=f+4|0;j=n;i=k[j+4>>2]|0;h=g+4|0;k[h>>2]=k[j>>2];k[h+4>>2]=i;h=f+12|0;k[g+12>>2]=k[h>>2];i=f+16|0;k[g+16>>2]=k[i>>2];j=f+20|0;k[g+20>>2]=k[j>>2];l=f+24|0;k[g+24>>2]=k[l>>2];m=f+28|0;k[g+28>>2]=k[m>>2];if((f|0)==(a|0))break;g=f+-32|0;if(Za[k[c>>2]&7](v,g)|0){n=f;f=g;g=n}else break}k[f>>2]=k[v>>2];f=o;g=k[f+4>>2]|0;k[n>>2]=k[f>>2];k[n+4>>2]=g;k[h>>2]=k[p>>2];k[i>>2]=k[q>>2];k[j>>2]=k[s>>2];k[l>>2]=k[t>>2];k[m>>2]=k[u>>2];d=d+1|0;if((d|0)==8)break}f=e+32|0;if((f|0)==(b|0)){d=1;w=16;break}else{n=e;e=f;f=n}}if((w|0)==16){r=x;return d|0}w=(e+32|0)==(b|0);r=x;return w|0}}return 0}function Db(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;m=a+4|0;e=k[m>>2]|0;l=k[a>>2]|0;c=l;i=(e-c|0)/24|0;j=i+1|0;if(j>>>0>178956970)xa(1340,1363,303,1438);n=a+8|0;d=((k[n>>2]|0)-c|0)/24|0;if(d>>>0<89478485){d=d<<1;d=d>>>0<j>>>0?j:d;if(!d){g=0;f=0}else h=5}else{d=178956970;h=5}if((h|0)==5){g=d*24|0;g=(g|0)==0?1:g;f=_d(g)|0;a:do if(!f){while(1){f=k[35]|0;k[35]=f+0;if(!f)break;Xa[f&0]();f=_d(g)|0;if(f)break a}n=ya(4)|0;k[n>>2]=128;La(n|0,8,1)}while(0);g=d}h=f+(i*24|0)|0;d=h;g=f+(g*24|0)|0;k[h>>2]=k[b>>2];k[f+(i*24|0)+4>>2]=k[b+4>>2];k[f+(i*24|0)+8>>2]=k[b+8>>2];k[f+(i*24|0)+12>>2]=k[b+12>>2];k[f+(i*24|0)+16>>2]=k[b+16>>2];k[f+(i*24|0)+20>>2]=k[b+20>>2];f=f+(j*24|0)|0;if((e|0)==(l|0))e=a;else{c=h;do{i=e;e=e+-24|0;k[c+-24>>2]=k[e>>2];k[c+-20>>2]=k[i+-20>>2];k[c+-16>>2]=k[i+-16>>2];k[c+-12>>2]=k[i+-12>>2];i=i+-8|0;j=k[i+4>>2]|0;b=c+-8|0;k[b>>2]=k[i>>2];k[b+4>>2]=j;c=d+-24|0;d=c}while((e|0)!=(l|0));e=a;c=k[a>>2]|0}k[e>>2]=d;k[m>>2]=f;k[n>>2]=g;if(!c)return;$d(c);return}function Eb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;V=r;r=r+160|0;K=V+132|0;y=V+8|0;z=V;A=V+120|0;B=V+108|0;I=V+52|0;H=V+40|0;G=V+28|0;M=V+16|0;S=V+96|0;O=V+84|0;v=V+64|0;k[S>>2]=0;T=S+4|0;k[T>>2]=0;k[S+8>>2]=0;k[O>>2]=0;R=O+4|0;k[R>>2]=0;k[O+8>>2]=0;do if((b|0)!=(c|0)){p=v+4|0;q=v+8|0;s=v+12|0;t=v+16|0;u=S+8|0;f=0;g=0;o=0;n=0;h=0;e=0;a:while(1){l=b+16|0;if((f|0)==(g|0)){m=e-n|0;i=m>>3;j=i+1|0;if(j>>>0>536870911){N=6;break}d=h-n|0;if(d>>3>>>0<268435455){d=d>>2;d=d>>>0<j>>>0?j:d;if(!d){d=0;g=0}else N=9}else{d=536870911;N=9}if((N|0)==9){N=0;f=d<<3;f=(f|0)==0?1:f;e=_d(f)|0;if(!e)do{e=k[35]|0;k[35]=e+0;if(!e){N=12;break a}Xa[e&0]();e=_d(f)|0}while((e|0)==0);g=e}h=g+(d<<3)|0;e=l;d=k[e+4>>2]|0;f=g+(i<<3)|0;k[f>>2]=k[e>>2];k[f+4>>2]=d;f=g+(j<<3)|0;d=g;e=n;fe(g|0,e|0,m|0)|0;if(!n){l=h;j=f}else{$d(e);l=h;j=f}}else{j=l;l=k[j+4>>2]|0;d=f;k[d>>2]=k[j>>2];k[d+4>>2]=l;d=n;l=h;j=e+8|0}e=k[b>>2]|0;k[v>>2]=e;f=k[b+4>>2]|0;k[p>>2]=f;g=k[b+8>>2]|0;k[q>>2]=g;h=k[b+12>>2]|0;k[s>>2]=h;k[t>>2]=o;i=k[T>>2]|0;if(i>>>0<(k[u>>2]|0)>>>0){k[i>>2]=e;k[i+4>>2]=f;k[i+8>>2]=g;k[i+12>>2]=h;k[i+16>>2]=o;k[T>>2]=i+20}else Fb(S,v);b=b+24|0;if((b|0)==(c|0)){N=21;break}f=j;g=l;o=o+1|0;n=d;h=l;e=j}if((N|0)==6)xa(1340,1363,303,1438);else if((N|0)==12){V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}else if((N|0)==21){x=k[T>>2]|0;w=k[S>>2]|0;U=d;break}}else{x=0;w=0;U=0}while(0);n=(x-w|0)/20|0;k[M>>2]=0;J=M+4|0;k[J>>2]=0;k[M+8>>2]=0;g=(x|0)==(w|0);if(!g){if(n>>>0>357913941)xa(1340,1363,303,1438);d=n*12|0;b=_d(d)|0;b:do if(!b){while(1){b=k[35]|0;k[35]=b+0;if(!b)break;Xa[b&0]();b=_d(d)|0;if(b)break b}V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}while(0);k[J>>2]=b;k[M>>2]=b;k[M+8>>2]=b+(n*12|0);e=n;f=b;while(1){k[f+4>>2]=0;k[f+8>>2]=0;k[f>>2]=f+4;d=b+12|0;k[J>>2]=d;b=e+-1|0;if(!b)break;else{e=b;f=d;b=d}}}k[I>>2]=0;E=I+4|0;k[E>>2]=0;k[I+8>>2]=0;k[K>>2]=0;m=K+4|0;k[m>>2]=0;k[K+8>>2]=0;e=n<<1;j=K+8|0;if(g){f=0;g=0;d=0}else{d=n<<4;b=_d(d)|0;c:do if(!b){while(1){b=k[35]|0;k[35]=b+0;if(!b)break;Xa[b&0]();b=_d(d)|0;if(b)break c}V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}while(0);f=b;d=b+(e<<3)|0;k[K>>2]=f;k[m>>2]=f;k[j>>2]=d;f=b;g=b}F=w;D=(F|0)==(x|0);if(D){e=g;b=g;d=f;j=f}else{h=y+4|0;i=z+4|0;b=F;while(1){C=k[b+4>>2]|0;e=b+12|0;f=(C|0)<(k[e>>2]|0)?1:-1;k[y>>2]=C;k[h>>2]=f;if(g>>>0<d>>>0){w=y;C=k[w+4>>2]|0;d=g;k[d>>2]=k[w>>2];k[d+4>>2]=C;d=(k[m>>2]|0)+8|0;k[m>>2]=d}else{dc(K,y);d=k[m>>2]|0}k[z>>2]=k[e>>2];k[i>>2]=0-f;if(d>>>0<(k[j>>2]|0)>>>0){c=z;w=k[c+4>>2]|0;C=d;k[C>>2]=k[c>>2];k[C+4>>2]=w;k[m>>2]=d+8}else dc(K,z);b=b+20|0;if((b|0)==(x|0))break;g=k[m>>2]|0;d=k[j>>2]|0}j=k[K>>2]|0;d=k[m>>2]|0;e=j;b=d}ec(e,b);h=d-j>>3;l=I+8|0;b=k[l>>2]|0;i=k[I>>2]|0;e=i;d=k[E>>2]|0;if(((b-e|0)/12|0)>>>0<h>>>0){f=d-e|0;g=(f|0)/12|0;if(!h)e=0;else{d=h*12|0;d=(d|0)==0?1:d;b=_d(d)|0;d:do if(!b){while(1){b=k[35]|0;k[35]=b+0;if(!b)break;Xa[b&0]();b=_d(d)|0;if(b)break d}V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}while(0);e=b}d=e+(g*12|0)|0;b=e+(h*12|0)|0;C=e+((((f|0)/-12|0)+g|0)*12|0)|0;fe(C|0,i|0,f|0)|0;k[I>>2]=C;k[E>>2]=d;k[l>>2]=b;if(!i)e=j;else{$d(i);e=k[K>>2]|0}}else e=j;k[A>>2]=k[e>>2];k[A+4>>2]=0;k[A+8>>2]=0;if(d>>>0<b>>>0){k[d>>2]=k[A>>2];k[d+4>>2]=k[A+4>>2];k[d+8>>2]=k[A+8>>2];k[E>>2]=(k[E>>2]|0)+12}else fc(I,A);i=k[K>>2]|0;d=k[m>>2]|0;if((i|0)==(d|0))d=i;else{f=B+4|0;g=B+8|0;h=i;e=k[E>>2]|0;do{b=k[h>>2]|0;do if((b|0)!=(k[e+-12>>2]|0)){k[B>>2]=b;k[f>>2]=k[e+-8>>2];k[g>>2]=k[e+-4>>2];if(e>>>0<(k[l>>2]|0)>>>0){k[e>>2]=k[B>>2];k[e+4>>2]=k[B+4>>2];k[e+8>>2]=k[B+8>>2];e=e+12|0;k[E>>2]=e;break}else{fc(I,B);e=k[E>>2]|0;break}}while(0);b=k[h+4>>2]|0;if((b|0)<0){C=e+-4|0;k[C>>2]=(k[C>>2]|0)-b}C=e+-8|0;k[C>>2]=(k[C>>2]|0)+b;h=h+8|0}while((h|0)!=(d|0))}b=i;if(i){if((d|0)!=(i|0))k[m>>2]=d+(~((d+-8-b|0)>>>3)<<3);$d(i)}k[H>>2]=0;C=H+4|0;k[C>>2]=0;k[H+8>>2]=0;d=k[I>>2]|0;Mb(H,d,k[E>>2]|0,n);z=G+4|0;k[z>>2]=0;A=G+8|0;k[A>>2]=0;B=G+4|0;k[G>>2]=B;b=_d(32)|0;e:do if(!b){while(1){b=k[35]|0;k[35]=b+0;if(!b)break;Xa[b&0]();b=_d(32)|0;if(b)break e}V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}while(0);y=B;k[b+16>>2]=k[d>>2];g=b+20|0;k[g>>2]=0;h=b+24|0;k[h>>2]=0;f=b+28|0;k[f>>2]=0;k[b>>2]=0;k[b+4>>2]=0;k[b+8>>2]=y;k[B>>2]=b;d=k[k[G>>2]>>2]|0;if(!d)d=b;else{k[G>>2]=d;d=b}Nb(b,d);k[A>>2]=(k[A>>2]|0)+1;b=k[g>>2]|0;d=b;if(!b)b=f;else{e=k[h>>2]|0;if((e|0)!=(b|0))k[h>>2]=e+(~(((e+-20-d|0)>>>0)/20|0)*20|0);$d(b);k[f>>2]=0;k[h>>2]=0;k[g>>2]=0;b=f}k[g>>2]=0;k[h>>2]=0;k[b>>2]=0;b=k[H>>2]|0;f:do if((b|0)!=(k[C>>2]|0)){g:while(1){d=k[B>>2]|0;do if(d){g=k[b>>2]|0;while(1){e=k[d+16>>2]|0;if((g|0)<(e|0)){e=k[d>>2]|0;if(!e){N=90;break}else d=e}else{if((e|0)>=(g|0)){N=96;break}f=d+4|0;e=k[f>>2]|0;if(!e){N=94;break}else d=e}}if((N|0)==90){k[K>>2]=d;f=d;N=97;break}else if((N|0)==94){k[K>>2]=d;N=97;break}else if((N|0)==96){N=0;k[K>>2]=d;if(!d){f=K;N=97;break}else break}}else{k[K>>2]=B;f=B;d=y;N=97}while(0);if((N|0)==97){N=0;e=_d(32)|0;if(!e)do{e=k[35]|0;k[35]=e+0;if(!e)break g;Xa[e&0]();e=_d(32)|0}while((e|0)==0);k[e+16>>2]=k[b>>2];k[e+20>>2]=0;k[e+24>>2]=0;k[e+28>>2]=0;k[e>>2]=0;k[e+4>>2]=0;k[e+8>>2]=d;k[f>>2]=e;d=k[k[G>>2]>>2]|0;if(!d)d=e;else{k[G>>2]=d;d=k[f>>2]|0}Nb(k[z>>2]|0,d);k[A>>2]=(k[A>>2]|0)+1;d=e}i=d+20|0;e=k[i>>2]|0;f=e;h=d+24|0;if(!e)d=d+28|0;else{g=k[h>>2]|0;if((g|0)!=(e|0))k[h>>2]=g+(~(((g+-20-f|0)>>>0)/20|0)*20|0);$d(e);d=d+28|0;k[d>>2]=0;k[h>>2]=0;k[i>>2]=0}k[i>>2]=0;k[h>>2]=0;k[d>>2]=0;b=b+4|0;if((b|0)==(k[C>>2]|0))break f}V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}while(0);h:do if(!D){c=F;i:while(1){v=c+4|0;h=k[v>>2]|0;w=c+12|0;i=k[w>>2]|0;e=k[B>>2]|0;j=(e|0)==0;j:do if(j)d=B;else{g=(i|0)<(h|0)?i:h;d=B;f=e;while(1){b=f;while(1){if((k[b+16>>2]|0)>=(g|0))break;b=k[b+4>>2]|0;if(!b)break j}f=k[b>>2]|0;if(!f){d=b;break}else d=b}}while(0);if((d|0)!=(k[G>>2]|0)){b=k[d>>2]|0;if(!b)while(1){b=k[d+8>>2]|0;if((k[b>>2]|0)==(d|0))d=b;else{d=b;break}}else{d=b;while(1){b=k[d+4>>2]|0;if(!b)break;else d=b}}}k:do if(j)f=B;else{g=(h|0)<(i|0)?i:h;f=B;while(1){b=e;while(1){if((g|0)<(k[b+16>>2]|0))break;b=k[b+4>>2]|0;if(!b)break k}e=k[b>>2]|0;if(!e){f=b;break}else f=b}}while(0);if((d|0)!=(f|0)){t=c+8|0;u=c+16|0;while(1){o=d+24|0;l=k[o>>2]|0;p=d+28|0;do if((l|0)==(k[p>>2]|0)){q=d+20|0;s=k[q>>2]|0;m=s;n=(l-m|0)/20|0;h=n+1|0;if(h>>>0>214748364){N=135;break i}if(n>>>0<107374182){b=n<<1;b=b>>>0<h>>>0?h:b;if(!b){g=0;e=0}else N=138}else{b=214748364;N=138}if((N|0)==138){N=0;g=b*20|0;g=(g|0)==0?1:g;e=_d(g)|0;if(!e)do{e=k[35]|0;k[35]=e+0;if(!e){N=141;break i}Xa[e&0]();e=_d(g)|0}while((e|0)==0);g=b}b=e+(n*20|0)|0;j=e+(g*20|0)|0;k[b>>2]=k[c>>2];k[e+(n*20|0)+4>>2]=k[v>>2];k[e+(n*20|0)+8>>2]=k[t>>2];k[e+(n*20|0)+12>>2]=k[w>>2];k[e+(n*20|0)+16>>2]=k[u>>2];i=e+(h*20|0)|0;if((l|0)!=(s|0)){h=l+-20|0;g=l;while(1){l=g;g=g+-20|0;k[b+-20>>2]=k[g>>2];k[b+-16>>2]=k[l+-16>>2];k[b+-12>>2]=k[l+-12>>2];k[b+-8>>2]=k[l+-8>>2];k[b+-4>>2]=k[l+-4>>2];if((g|0)==(s|0))break;else b=b+-20|0}b=e+((n+~(((h-m|0)>>>0)/20|0)|0)*20|0)|0}k[q>>2]=b;k[o>>2]=i;k[p>>2]=j;if(!s)break;$d(s)}else{k[l>>2]=k[c>>2];k[l+4>>2]=k[v>>2];k[l+8>>2]=k[t>>2];k[l+12>>2]=k[w>>2];k[l+16>>2]=k[u>>2];k[o>>2]=l+20}while(0);b=k[d+4>>2]|0;if(!b)while(1){b=k[d+8>>2]|0;if((k[b>>2]|0)==(d|0))break;else d=b}else while(1){d=k[b>>2]|0;if(!d)break;else b=d}if((b|0)==(f|0))break;else d=b}}c=c+20|0;if((c|0)==(x|0))break h}if((N|0)==135)xa(1340,1363,303,1438);else if((N|0)==141){V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}}while(0);h=k[I>>2]|0;b=k[B>>2]|0;do if(b){g=k[h>>2]|0;f=b;while(1){d=k[f+16>>2]|0;if((g|0)<(d|0)){d=k[f>>2]|0;if(!d){N=159;break}}else{if((d|0)>=(g|0)){N=165;break}e=f+4|0;d=k[e>>2]|0;if(!d){N=163;break}}f=d}if((N|0)==159){k[K>>2]=f;e=f;N=166;break}else if((N|0)==163){k[K>>2]=f;N=166;break}else if((N|0)==165){k[K>>2]=f;if(!f){e=K;N=166;break}else{d=f;break}}}else{k[K>>2]=B;e=B;f=y;N=166}while(0);if((N|0)==166){b=_d(32)|0;l:do if(!b){while(1){b=k[35]|0;k[35]=b+0;if(!b)break;Xa[b&0]();b=_d(32)|0;if(b){d=b;break l}}V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}else d=b;while(0);k[d+16>>2]=k[h>>2];k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=f;k[e>>2]=d;b=k[k[G>>2]>>2]|0;if(!b)b=d;else{k[G>>2]=b;b=k[e>>2]|0}Nb(k[z>>2]|0,b);k[A>>2]=(k[A>>2]|0)+1;b=k[B>>2]|0;h=k[I>>2]|0}g=k[d+20>>2]|0;do if(b){f=k[h>>2]|0;while(1){d=k[b+16>>2]|0;if((f|0)<(d|0)){d=k[b>>2]|0;if(!d){N=177;break}else b=d}else{if((d|0)>=(f|0)){N=183;break}e=b+4|0;d=k[e>>2]|0;if(!d){N=181;break}else b=d}}if((N|0)==177){k[K>>2]=b;e=b;d=b;N=184;break}else if((N|0)==181){k[K>>2]=b;d=b;N=184;break}else if((N|0)==183){k[K>>2]=b;if(!b){e=K;d=b;N=184;break}else break}}else{k[K>>2]=B;e=B;d=y;N=184}while(0);if((N|0)==184){b=_d(32)|0;m:do if(!b){while(1){b=k[35]|0;k[35]=b+0;if(!b)break;Xa[b&0]();b=_d(32)|0;if(b)break m}V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}while(0);k[b+16>>2]=k[h>>2];k[b+20>>2]=0;k[b+24>>2]=0;k[b+28>>2]=0;k[b>>2]=0;k[b+4>>2]=0;k[b+8>>2]=d;k[e>>2]=b;d=k[k[G>>2]>>2]|0;if(!d)d=b;else{k[G>>2]=d;d=k[e>>2]|0}Nb(k[z>>2]|0,d);k[A>>2]=(k[A>>2]|0)+1}Pb(M,g,k[b+24>>2]|0,-2147483648);b=k[H>>2]|0;n:do if((b|0)!=(k[C>>2]|0)){o:while(1){g=k[B>>2]|0;do if(g){h=k[b>>2]|0;f=g;while(1){d=k[f+16>>2]|0;if((h|0)<(d|0)){d=k[f>>2]|0;if(!d){N=197;break}}else{if((d|0)>=(h|0)){N=203;break}e=f+4|0;d=k[e>>2]|0;if(!d){N=201;break}}f=d}if((N|0)==197){k[K>>2]=f;g=f;N=204;break}else if((N|0)==201){k[K>>2]=f;g=e;N=204;break}else if((N|0)==203){N=0;k[K>>2]=f;if(!f){g=K;N=204;break}else{d=f;break}}}else{k[K>>2]=B;g=B;f=y;N=204}while(0);if((N|0)==204){d=_d(32)|0;if(!d)while(1){d=k[35]|0;k[35]=d+0;if(!d){N=207;break o}Xa[d&0]();d=_d(32)|0;if(d){e=d;break}}else e=d;k[e+16>>2]=k[b>>2];k[e+20>>2]=0;k[e+24>>2]=0;k[e+28>>2]=0;k[e>>2]=0;k[e+4>>2]=0;k[e+8>>2]=f;k[g>>2]=e;d=k[k[G>>2]>>2]|0;if(!d)d=e;else{k[G>>2]=d;d=k[g>>2]|0}Nb(k[z>>2]|0,d);k[A>>2]=(k[A>>2]|0)+1;g=k[B>>2]|0;d=e}h=k[d+20>>2]|0;do if(g){f=k[b>>2]|0;while(1){d=k[g+16>>2]|0;if((f|0)<(d|0)){d=k[g>>2]|0;if(!d){N=215;break}}else{if((d|0)>=(f|0)){N=221;break}e=g+4|0;d=k[e>>2]|0;if(!d){N=219;break}}g=d}if((N|0)==215){k[K>>2]=g;f=g;N=222;break}else if((N|0)==219){k[K>>2]=g;f=e;N=222;break}else if((N|0)==221){N=0;k[K>>2]=g;if(!g){f=K;N=222;break}else{d=g;break}}}else{k[K>>2]=B;f=B;g=y;N=222}while(0);if((N|0)==222){N=0;d=_d(32)|0;if(!d)do{d=k[35]|0;k[35]=d+0;if(!d){N=225;break o}Xa[d&0]();d=_d(32)|0}while((d|0)==0);k[d+16>>2]=k[b>>2];k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=g;k[f>>2]=d;e=k[k[G>>2]>>2]|0;if(!e)e=d;else{k[G>>2]=e;e=k[f>>2]|0}Nb(k[z>>2]|0,e);k[A>>2]=(k[A>>2]|0)+1}Pb(M,h,k[d+24>>2]|0,k[b>>2]|0);b=b+4|0;if((b|0)==(k[C>>2]|0))break n}if((N|0)==207){V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}else if((N|0)==225){V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}}while(0);Ob(k[B>>2]|0);b=k[H>>2]|0;d=b;if(b){e=k[C>>2]|0;if((e|0)!=(b|0))k[C>>2]=e+(~((e+-4-d|0)>>>2)<<2);$d(b)}b=k[I>>2]|0;d=b;if(b){e=k[E>>2]|0;if((e|0)!=(b|0))k[E>>2]=e+(~(((e+-12-d|0)>>>0)/12|0)*12|0);$d(b)}p:do if(!D){c=K+4|0;w=K+8|0;y=K+12|0;z=K+16|0;A=O+8|0;B=K+4|0;C=K+8|0;D=K+12|0;E=K+16|0;u=F;q:while(1){v=k[u+16>>2]|0;n=k[M>>2]|0;m=n+(v*12|0)|0;b=k[u>>2]|0;d=k[u+8>>2]|0;do if((b|0)==(d|0))N=320;else{H=k[u+4>>2]|0;l=b+1|0;h=k[u+12>>2]|0;H=be(h|0,((h|0)<0)<<31>>31|0,H|0,((H|0)<0)<<31>>31|0)|0;h=L;e=((b|0)<0)<<31>>31;l=be(l|0,((l|0)<0)<<31>>31|0,b|0,e|0)|0;g=L;e=be(d|0,((d|0)<0)<<31>>31|0,b|0,e|0)|0;i=L;I=(i|0)<0;b=be(0,0,H|0,h|0)|0;d=L;f=be(0,0,e|0,i|0)|0;j=L;b=I?b:H;d=I?d:h;e=(g|0)<0;f=be(0,0,l|0,g|0)|0;g=e?L:g;h=(d|0)<0;i=((I?j:i)|0)<0?-1:1;j=ha(h?-1:1,(g|0)<0?-1:1)|0;if((j|0)>=(i|0)?(I=be(0,0,b|0,d|0)|0,I=ne((h?I:b)|0,(h?L:d)|0,(e?f:l)|0,g|0)|0,!(((I|0)!=0|(L|0)!=0)&((i|0)>=(j|0)&(j|0)==-1))):0){N=320;break}e=k[n+(v*12|0)+8>>2]|0;if(!e){s=0;t=0;i=0}else{d=e<<3;d=(d|0)==0?1:d;b=_d(d)|0;if(!b)do{b=k[35]|0;k[35]=b+0;if(!b){N=247;break q}Xa[b&0]();b=_d(d)|0}while((b|0)==0);s=b;t=b;i=b+(e<<3)|0}q=s;h=k[m>>2]|0;m=n+(v*12|0)+4|0;l=m;n=t;o=q-t>>3;f=h;do if((f|0)==(m|0)){j=t;b=t}else{e=h;d=e;g=0;while(1){j=g+1|0;b=k[d+4>>2]|0;if(!b)while(1){b=k[d+8>>2]|0;if((k[b>>2]|0)==(d|0))break;else d=b}else while(1){d=k[b>>2]|0;if(!d)break;else b=d}if((b|0)==(m|0))break;else{d=b;g=j}}if((g|0)<=-1){j=t;b=t;break}p=t;if((g|0)>=(i-t>>3|0)){d=(t-t>>3)+j|0;if(d>>>0>536870911){N=290;break q}b=i-t|0;if(b>>3>>>0<268435455){b=b>>2;b=b>>>0<d>>>0?d:b;if(!b)g=0;else N=293}else{b=536870911;N=293}if((N|0)==293){N=0;d=b<<3;d=(d|0)==0?1:d;b=_d(d)|0;if(!b)do{b=k[35]|0;k[35]=b+0;if(!b){N=296;break q}Xa[b&0]();b=_d(d)|0}while((b|0)==0);g=b}d=g+(o<<3)|0;h=d;while(1){k[h>>2]=k[f+16>>2];k[h+4>>2]=k[f+20>>2];b=h+8|0;f=k[e+4>>2]|0;if(!f)while(1){f=k[e+8>>2]|0;if((k[f>>2]|0)==(e|0)){e=f;break}else e=f}else{e=f;while(1){f=k[e>>2]|0;if(!f)break;else e=f}}if((e|0)==(m|0))break;else{f=e;h=b}}if((n|0)!=(s|0)){f=s+-8|0;e=s;while(1){I=e;e=e+-8|0;k[d+-8>>2]=k[e>>2];k[d+-4>>2]=k[I+-4>>2];if((e|0)==(n|0))break;else d=d+-8|0}d=g+(o+~((f-t|0)>>>3)<<3)|0}if((p|0)!=(s|0)){g=p+-8|0;e=s;f=h;while(1){k[f+8>>2]=k[e>>2];k[f+12>>2]=k[e+4>>2];e=e+8|0;if((e|0)==(p|0))break;else{f=b;b=b+8|0}}b=h+(((g-q|0)>>>3)+2<<3)|0}if(!t){j=d;break}$d(t);j=d;break}i=t-q|0;b=i>>3;if((g|0)>=(b|0)){do if((i|0)>-8){if((i|0)>0){d=e;g=b}else{l=h;break}while(1){b=k[d+4>>2]|0;if(!b)while(1){b=k[d+8>>2]|0;if((k[b>>2]|0)==(d|0))break;else d=b}else while(1){d=k[b>>2]|0;if(!d)break;else b=d}if((g|0)>1){d=b;g=g+-1|0}else break}l=b}else{d=e;g=b;while(1){b=k[d>>2]|0;if(!b)while(1){b=k[d+8>>2]|0;if((k[b>>2]|0)==(d|0))d=b;else break}else while(1){d=k[b+4>>2]|0;if(!d)break;else b=d}if((g|0)<-1){d=b;g=g+1|0}else break}l=b}while(0);b=l;if((b|0)==(m|0)){d=p;b=t}else{g=p;d=l;while(1){k[g>>2]=k[b+16>>2];k[g+4>>2]=k[b+20>>2];g=g+8|0;b=k[d+4>>2]|0;if(!b){b=d;while(1){d=k[b+8>>2]|0;if((k[d>>2]|0)==(b|0))break;else b=d}}else while(1){d=k[b>>2]|0;if(!d){d=b;break}else b=d}if((d|0)==(m|0))break;else b=d}d=g;b=g}if((i|0)<=0){j=t;break}}else{d=p;b=t}j=d-(n+(j+o<<3))>>3;g=s+(j<<3)|0;if(g>>>0<p>>>0){i=p+(0-j<<3)+~q|0;b=d;h=g;while(1){k[b>>2]=k[h>>2];k[b+4>>2]=k[h+4>>2];h=h+8|0;if(h>>>0>=p>>>0)break;else b=b+8|0}b=d+((i>>>3)+1<<3)|0}if(j)do{I=d;d=d+-8|0;H=g;g=g+-8|0;k[d>>2]=k[g>>2];k[I+-4>>2]=k[H+-4>>2]}while((g|0)!=(s|0));h=l;if((f|0)==(h|0)){j=t;break}else g=s;while(1){k[g>>2]=k[f+16>>2];k[g+4>>2]=k[f+20>>2];d=k[e+4>>2]|0;if(!d)while(1){d=k[e+8>>2]|0;if((k[d>>2]|0)==(e|0))break;else e=d}else while(1){e=k[d>>2]|0;if(!e)break;else d=e}if((d|0)==(h|0)){j=t;break}else{g=g+8|0;f=d;e=d}}}while(0);e=j;Hb(e,b);d=e+8|0;if((d|0)!=(b|0)){i=d;while(1){g=k[e>>2]|0;h=k[e+4>>2]|0;f=k[e+8>>2]|0;d=k[e+12>>2]|0;k[K>>2]=g;k[B>>2]=h;k[C>>2]=f;k[D>>2]=d;k[E>>2]=v;e=k[R>>2]|0;if(e>>>0<(k[A>>2]|0)>>>0){k[e>>2]=g;k[e+4>>2]=h;k[e+8>>2]=f;k[e+12>>2]=d;k[e+16>>2]=v;k[R>>2]=e+20}else Fb(O,K);d=i+8|0;if((d|0)==(b|0))break;else{e=i;i=d}}}if(!j)break;$d(j)}while(0);if((N|0)==320){N=0;d=k[m>>2]|0;j=n+(v*12|0)+4|0;e=d;b=k[d+4>>2]|0;if(!b)while(1){b=k[d+8>>2]|0;if((k[b>>2]|0)==(d|0))break;else d=b}else while(1){d=k[b>>2]|0;if(!d)break;else b=d}if((b|0)!=(j|0)){d=b;i=e;while(1){e=i;i=d;b=k[e+16>>2]|0;e=k[e+20>>2]|0;f=k[d+16>>2]|0;g=k[d+20>>2]|0;k[K>>2]=b;k[c>>2]=e;k[w>>2]=f;k[y>>2]=g;k[z>>2]=v;h=k[R>>2]|0;if(h>>>0<(k[A>>2]|0)>>>0){k[h>>2]=b;k[h+4>>2]=e;k[h+8>>2]=f;k[h+12>>2]=g;k[h+16>>2]=v;k[R>>2]=h+20}else Fb(O,K);b=k[d+4>>2]|0;if(!b)while(1){b=k[d+8>>2]|0;if((k[b>>2]|0)==(d|0))break;else d=b}else while(1){d=k[b>>2]|0;if(!d)break;else b=d}if((b|0)==(j|0))break;else d=b}}}u=u+20|0;if((u|0)==(x|0))break p}if((N|0)==247){V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}else if((N|0)==290)xa(1340,1363,303,1438);else if((N|0)==296){V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}}while(0);d=k[M>>2]|0;if(d){b=k[J>>2]|0;if((b|0)!=(d|0)){do{Gb(k[b+-8>>2]|0);b=b+-12|0}while((b|0)!=(d|0));k[J>>2]=d}$d(d)}b=k[R>>2]|0;d=k[O>>2]|0;r:do if((b|0)!=(d|0)){v=a+4|0;c=a+8|0;w=U;e=k[v>>2]|0;u=0;s:while(1){m=k[d+(u*20|0)+16>>2]|0;p=k[d+(u*20|0)>>2]|0;q=k[d+(u*20|0)+4>>2]|0;s=k[d+(u*20|0)+8>>2]|0;j=k[d+(u*20|0)+12>>2]|0;l=k[w+(m<<3)>>2]|0;m=k[w+(m<<3)+4>>2]|0;d=k[c>>2]|0;do if(e>>>0<d>>>0){k[e>>2]=p;k[e+4>>2]=q;k[e+8>>2]=s;k[e+12>>2]=j;e=e+16|0;k[e>>2]=l;k[e+4>>2]=m;e=(k[v>>2]|0)+24|0;k[v>>2]=e}else{t=k[a>>2]|0;b=t;n=(e-b|0)/24|0;o=n+1|0;if(o>>>0>178956970){N=344;break s}d=(d-b|0)/24|0;if(d>>>0<89478485){d=d<<1;d=d>>>0<o>>>0?o:d;if(!d){g=0;f=0}else N=347}else{d=178956970;N=347}if((N|0)==347){N=0;g=d*24|0;g=(g|0)==0?1:g;f=_d(g)|0;if(!f)do{f=k[35]|0;k[35]=f+0;if(!f){N=350;break s}Xa[f&0]();f=_d(g)|0}while((f|0)==0);g=d}h=f+(n*24|0)|0;d=h;i=f+(g*24|0)|0;k[h>>2]=p;k[f+(n*24|0)+4>>2]=q;k[f+(n*24|0)+8>>2]=s;k[f+(n*24|0)+12>>2]=j;g=f+(n*24|0)+16|0;k[g>>2]=l;k[g+4>>2]=m;f=f+(o*24|0)|0;g=f;if((e|0)!=(t|0)){b=h;do{J=e;e=e+-24|0;k[b+-24>>2]=k[e>>2];k[b+-20>>2]=k[J+-20>>2];k[b+-16>>2]=k[J+-16>>2];k[b+-12>>2]=k[J+-12>>2];J=J+-8|0;K=k[J+4>>2]|0;M=b+-8|0;k[M>>2]=k[J>>2];k[M+4>>2]=K;b=d+-24|0;d=b}while((e|0)!=(t|0));b=k[a>>2]|0}k[a>>2]=d;k[v>>2]=g;k[c>>2]=i;if(!b){e=f;break}$d(b);e=k[v>>2]|0}while(0);m=e+-24|0;n=k[m>>2]|0;o=e+-16|0;p=k[o>>2]|0;do if((n|0)<(p|0))f=1;else{if((n|0)==(p|0)?(k[e+-20>>2]|0)<(k[e+-12>>2]|0):0){f=1;break}f=0}while(0);d=k[O>>2]|0;h=k[d+(u*20|0)+16>>2]|0;i=k[S>>2]|0;j=i+(h*20|0)|0;g=k[j>>2]|0;l=i+(h*20|0)+8|0;b=k[l>>2]|0;do if((g|0)>=(b|0)){if((g|0)==(b|0)?(k[i+(h*20|0)+4>>2]|0)<(k[i+(h*20|0)+12>>2]|0):0){N=364;break}if(f)N=366}else N=364;while(0);if((N|0)==364){N=0;if(!f)N=366}if((N|0)==366){N=0;g=e+-4|0;k[g>>2]=0-(k[g>>2]|0);g=k[j>>2]|0;b=k[l>>2]|0}f=(n|0)==(p|0);if((g|0)!=(b|0)&f){M=e+-4|0;k[M>>2]=0-(k[M>>2]|0)}do if((p|0)>=(n|0)){if(!f)break;b=e+-12|0;h=k[b>>2]|0;g=e+-20|0;f=k[g>>2]|0;if((h|0)<(f|0))N=373}else{f=e+-20|0;h=e+-12|0;b=h;g=f;h=k[h>>2]|0;f=k[f>>2]|0;N=373}while(0);if((N|0)==373){N=0;k[m>>2]=p;k[g>>2]=h;k[o>>2]=n;k[b>>2]=f}u=u+1|0;b=k[R>>2]|0;if(u>>>0>=((b-d|0)/20|0)>>>0){P=d;Q=b;break r}}if((N|0)==344)xa(1340,1363,303,1438);else if((N|0)==350){V=ya(4)|0;k[V>>2]=128;La(V|0,8,1)}}else{P=b;Q=b}while(0);b=P;if(P){if((Q|0)!=(P|0))k[R>>2]=Q+(~(((Q+-20-b|0)>>>0)/20|0)*20|0);$d(P)}b=k[S>>2]|0;d=b;if(b){e=k[T>>2]|0;if((e|0)!=(b|0))k[T>>2]=e+(~(((e+-20-d|0)>>>0)/20|0)*20|0);$d(b)}if(!U){r=V;return}$d(U);r=V;return}function Fb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;m=a+4|0;e=k[m>>2]|0;n=k[a>>2]|0;j=n;l=(e-j|0)/20|0;i=l+1|0;if(i>>>0>214748364)xa(1340,1363,303,1438);o=a+8|0;c=((k[o>>2]|0)-j|0)/20|0;if(c>>>0<107374182){c=c<<1;c=c>>>0<i>>>0?i:c;if(!c){f=0;d=0}else g=5}else{c=214748364;g=5}if((g|0)==5){f=c*20|0;f=(f|0)==0?1:f;d=_d(f)|0;a:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(f)|0;if(d)break a}a=ya(4)|0;k[a>>2]=128;La(a|0,8,1)}while(0);f=c}c=d+(l*20|0)|0;h=d+(f*20|0)|0;k[c>>2]=k[b>>2];k[d+(l*20|0)+4>>2]=k[b+4>>2];k[d+(l*20|0)+8>>2]=k[b+8>>2];k[d+(l*20|0)+12>>2]=k[b+12>>2];k[d+(l*20|0)+16>>2]=k[b+16>>2];g=d+(i*20|0)|0;if((e|0)!=(n|0)){f=e+-20|0;while(1){b=e;e=e+-20|0;k[c+-20>>2]=k[e>>2];k[c+-16>>2]=k[b+-16>>2];k[c+-12>>2]=k[b+-12>>2];k[c+-8>>2]=k[b+-8>>2];k[c+-4>>2]=k[b+-4>>2];if((e|0)==(n|0))break;else c=c+-20|0}c=d+((l+~(((f-j|0)>>>0)/20|0)|0)*20|0)|0}k[a>>2]=c;k[m>>2]=g;k[o>>2]=h;if(!n)return;$d(n);return}function Gb(a){a=a|0;if(!a)return;else{Gb(k[a>>2]|0);Gb(k[a+4>>2]|0);$d(a);return}}function Hb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;t=b;a:while(1){m=t;n=t+-8|0;o=t+-16|0;s=t+-4|0;y=a;b:while(1){l=y;a=m-l|0;b=a>>3;switch(b|0){case 2:{x=4;break a}case 3:{x=9;break a}case 4:{x=10;break a}case 5:{x=11;break a}case 1:case 0:{x=88;break a}default:{}}if((a|0)<56){x=13;break a}c=(b|0)/2|0;g=y+(c<<3)|0;if((a|0)>7992){a=(b|0)/4|0;a=Kb(y,y+(a<<3)|0,g,y+(a+c<<3)|0,n)|0}else a=Ib(y,g,n)|0;h=k[y>>2]|0;f=k[g>>2]|0;c:do if((h|0)<(f|0))c=n;else{if((h|0)==(f|0)?(k[y+4>>2]|0)>(k[y+(c<<3)+4>>2]|0):0){c=n;break}d:do if((y|0)!=(o|0)){e=y+(c<<3)+4|0;c=o;d=n;while(1){b=k[c>>2]|0;if((b|0)<(f|0)){x=58;break}if((b|0)==(f|0)?(p=d+-4|0,(k[p>>2]|0)>(k[e>>2]|0)):0){d=p;b=f;break}b=c+-8|0;if((y|0)==(b|0))break d;else{d=c;c=b}}if((x|0)==58){x=0;d=d+-4|0}i=y+4|0;j=k[i>>2]|0;k[y>>2]=b;k[i>>2]=k[d>>2];k[c>>2]=h;k[d>>2]=j;a=a+1|0;break c}while(0);a=y+8|0;f=k[n>>2]|0;do if((h|0)>=(f|0)){if((h|0)==(f|0)?(k[y+4>>2]|0)>(k[s>>2]|0):0)break;if((a|0)==(n|0)){x=88;break a}c=y+4|0;e=y;while(1){d=e+8|0;b=k[d>>2]|0;if((h|0)<(b|0)){x=40;break}if((h|0)==(b|0)?(q=e+12|0,r=k[q>>2]|0,(k[c>>2]|0)>(r|0)):0){c=q;a=h;b=r;break}b=a+8|0;if((b|0)==(n|0)){x=88;break a}else{e=a;a=b}}if((x|0)==40){x=0;l=e+12|0;c=l;a=b;b=k[l>>2]|0}k[d>>2]=f;k[c>>2]=k[s>>2];k[n>>2]=a;k[s>>2]=b;a=e+16|0}while(0);if((a|0)==(n|0)){x=88;break a}h=y+4|0;c=n;while(1){g=k[y>>2]|0;b=k[a>>2]|0;e:do if((g|0)<(b|0)){f=a;e=a}else while(1){if((g|0)==(b|0)?(k[h>>2]|0)>(k[a+4>>2]|0):0){f=a;b=g;e=a;break e}a=a+8|0;b=k[a>>2]|0;if((g|0)<(b|0)){f=a;e=a;break}}while(0);while(1){d=c+-8|0;a=k[d>>2]|0;if((g|0)<(a|0)){c=d;continue}if((g|0)!=(a|0))break;if((k[h>>2]|0)>(k[c+-4>>2]|0))c=d;else{a=g;break}}if(e>>>0>=d>>>0){y=e;continue b}j=e+4|0;l=k[j>>2]|0;k[f>>2]=a;a=c+-4|0;k[j>>2]=k[a>>2];k[d>>2]=b;k[a>>2]=l;a=e+8|0;c=d}}while(0);b=y+8|0;f:do if(b>>>0<c>>>0)while(1){i=k[g>>2]|0;f=g+4|0;j=b;while(1){b=k[j>>2]|0;if((b|0)>=(i|0)){if((b|0)!=(i|0))break;if((k[j+4>>2]|0)<=(k[f>>2]|0)){b=i;break}}j=j+8|0}d=c+-8|0;e=k[d>>2]|0;g:do if((e|0)<(i|0)){h=d;f=d}else while(1){if((e|0)==(i|0)?(k[c+-4>>2]|0)>(k[f>>2]|0):0){h=d;f=d;e=i;break g}c=d+-8|0;e=k[c>>2]|0;if((e|0)<(i|0)){h=c;f=c;c=d;break}else{h=d;d=c;c=h}}while(0);if(j>>>0>h>>>0){h=j;break f}d=j+4|0;i=k[d>>2]|0;k[j>>2]=e;c=c+-4|0;k[d>>2]=k[c>>2];k[f>>2]=b;k[c>>2]=i;b=j+8|0;c=h;g=(g|0)==(j|0)?h:g;a=a+1|0}else h=b;while(0);do if((h|0)!=(g|0)){e=k[g>>2]|0;f=k[h>>2]|0;if((e|0)>=(f|0)){if((e|0)!=(f|0))break;b=g+4|0;d=h+4|0;c=k[d>>2]|0;if((k[b>>2]|0)<=(c|0))break}else{c=h+4|0;b=g+4|0;d=c;c=k[c>>2]|0}k[h>>2]=e;k[d>>2]=k[b>>2];k[g>>2]=f;k[b>>2]=c;a=a+1|0}while(0);if(!a){a=Lb(y,h)|0;b=h+8|0;if(Lb(b,t)|0){x=83;break}if(a){y=b;continue}}j=h;if((j-l|0)>=(m-j|0)){x=87;break}Hb(y,h);y=h+8|0}if((x|0)==83){x=0;if(a){x=88;break}else{a=y;t=h;continue}}else if((x|0)==87){x=0;Hb(h+8|0,t);a=y;t=h;continue}}if((x|0)==4){c=t+-8|0;d=k[c>>2]|0;e=k[y>>2]|0;if((d|0)>=(e|0)){if((d|0)!=(e|0))return;a=y+4|0;b=k[a>>2]|0;if((k[s>>2]|0)<=(b|0))return}else{b=y+4|0;a=b;b=k[b>>2]|0}k[y>>2]=d;k[a>>2]=k[s>>2];k[c>>2]=e;k[s>>2]=b;return}else if((x|0)==9){Ib(y,y+8|0,n)|0;return}else if((x|0)==10){Jb(y,y+8|0,y+16|0,n)|0;return}else if((x|0)==11){Kb(y,y+8|0,y+16|0,y+24|0,n)|0;return}else if((x|0)==13){b=y+16|0;Ib(y,y+8|0,b)|0;a=y+24|0;if((a|0)==(t|0))return;while(1){h=k[a>>2]|0;e=k[b>>2]|0;if((h|0)>=(e|0)){if((h|0)==(e|0)?(u=a+4|0,v=k[u>>2]|0,w=b+4|0,(v|0)>(k[w>>2]|0)):0){d=u;c=w;i=v;x=18}}else{i=a+4|0;d=i;c=b+4|0;i=k[i>>2]|0;x=18}if((x|0)==18){x=0;k[a>>2]=e;k[d>>2]=k[c>>2];h:do if((b|0)!=(y|0)){f=b;while(1){b=f+-8|0;g=k[b>>2]|0;if((h|0)>=(g|0)){if((h|0)!=(g|0)){b=f;break h}e=f+-4|0;d=k[e>>2]|0;if((i|0)>(d|0))c=e;else{b=f;break h}}else{d=f+-4|0;c=d;d=k[d>>2]|0}k[f>>2]=g;k[f+4>>2]=d;if((b|0)==(y|0))break;else f=b}}while(0);k[b>>2]=h;k[c>>2]=i}b=a+8|0;if((b|0)==(t|0))break;else{s=a;a=b;b=s}}return}else if((x|0)==88)return}function Ib(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;f=k[b>>2]|0;i=k[a>>2]|0;do if((f|0)<(i|0))d=1;else{if((f|0)==(i|0)?(k[b+4>>2]|0)>(k[a+4>>2]|0):0){d=1;break}d=0}while(0);g=k[c>>2]|0;do if((g|0)<(f|0))e=1;else{if((g|0)==(f|0)?(k[c+4>>2]|0)>(k[b+4>>2]|0):0){e=1;break}e=0}while(0);if(!d){if(!e){b=0;return b|0}h=b+4|0;i=k[h>>2]|0;k[b>>2]=g;g=c+4|0;k[h>>2]=k[g>>2];k[c>>2]=f;k[g>>2]=i;f=k[b>>2]|0;g=k[a>>2]|0;if((f|0)>=(g|0)){if((f|0)!=(g|0)){b=1;return b|0}d=a+4|0;e=k[d>>2]|0;if((k[h>>2]|0)<=(e|0)){b=1;return b|0}}else{e=a+4|0;d=e;e=k[e>>2]|0}k[a>>2]=f;k[d>>2]=k[h>>2];k[b>>2]=g;k[h>>2]=e;b=2;return b|0}d=a+4|0;h=k[d>>2]|0;if(e){k[a>>2]=g;b=c+4|0;k[d>>2]=k[b>>2];k[c>>2]=i;k[b>>2]=h;b=1;return b|0}k[a>>2]=f;f=b+4|0;k[d>>2]=k[f>>2];k[b>>2]=i;k[f>>2]=h;e=k[c>>2]|0;if((e|0)>=(i|0)){if((e|0)!=(i|0)){b=1;return b|0}d=c+4|0;if((k[d>>2]|0)<=(h|0)){b=1;return b|0}}else d=c+4|0;k[b>>2]=e;k[f>>2]=k[d>>2];k[c>>2]=i;k[d>>2]=h;b=2;return b|0}function Jb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0;l=Ib(a,b,c)|0;h=k[d>>2]|0;i=k[c>>2]|0;if((h|0)>=(i|0)){if((h|0)!=(i|0)){b=l;return b|0}f=d+4|0;g=c+4|0;e=k[g>>2]|0;if((k[f>>2]|0)>(e|0))j=g;else{b=l;return b|0}}else{e=c+4|0;f=d+4|0;j=e;e=k[e>>2]|0}k[c>>2]=h;k[j>>2]=k[f>>2];k[d>>2]=i;k[f>>2]=e;f=l+1|0;h=k[c>>2]|0;i=k[b>>2]|0;if((h|0)>=(i|0)){if((h|0)!=(i|0)){b=f;return b|0}g=b+4|0;e=k[g>>2]|0;if((k[j>>2]|0)>(e|0))d=g;else{b=f;return b|0}}else{e=b+4|0;d=e;e=k[e>>2]|0}k[b>>2]=h;k[d>>2]=k[j>>2];k[c>>2]=i;k[j>>2]=e;g=l+2|0;h=k[b>>2]|0;i=k[a>>2]|0;if((h|0)>=(i|0)){if((h|0)!=(i|0)){b=g;return b|0}f=a+4|0;e=k[f>>2]|0;if((k[d>>2]|0)<=(e|0)){b=g;return b|0}}else{e=a+4|0;f=e;e=k[e>>2]|0}k[a>>2]=h;k[f>>2]=k[d>>2];k[b>>2]=i;k[d>>2]=e;b=l+3|0;return b|0}function Kb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;n=Jb(a,b,c,d)|0;i=k[e>>2]|0;j=k[d>>2]|0;if((i|0)>=(j|0)){if((i|0)!=(j|0)){b=n;return b|0}g=e+4|0;h=d+4|0;f=k[h>>2]|0;if((k[g>>2]|0)>(f|0))m=h;else{b=n;return b|0}}else{f=d+4|0;g=e+4|0;m=f;f=k[f>>2]|0}k[d>>2]=i;k[m>>2]=k[g>>2];k[e>>2]=j;k[g>>2]=f;g=n+1|0;i=k[d>>2]|0;j=k[c>>2]|0;if((i|0)>=(j|0)){if((i|0)!=(j|0)){b=g;return b|0}h=c+4|0;f=k[h>>2]|0;if((k[m>>2]|0)>(f|0))l=h;else{b=g;return b|0}}else{f=c+4|0;l=f;f=k[f>>2]|0}k[c>>2]=i;k[l>>2]=k[m>>2];k[d>>2]=j;k[m>>2]=f;g=n+2|0;i=k[c>>2]|0;j=k[b>>2]|0;if((i|0)>=(j|0)){if((i|0)!=(j|0)){b=g;return b|0}h=b+4|0;f=k[h>>2]|0;if((k[l>>2]|0)>(f|0))e=h;else{b=g;return b|0}}else{f=b+4|0;e=f;f=k[f>>2]|0}k[b>>2]=i;k[e>>2]=k[l>>2];k[c>>2]=j;k[l>>2]=f;h=n+3|0;i=k[b>>2]|0;j=k[a>>2]|0;if((i|0)>=(j|0)){if((i|0)!=(j|0)){b=h;return b|0}g=a+4|0;f=k[g>>2]|0;if((k[e>>2]|0)<=(f|0)){b=h;return b|0}}else{f=a+4|0;g=f;f=k[f>>2]|0}k[a>>2]=i;k[g>>2]=k[e>>2];k[b>>2]=j;k[e>>2]=f;b=n+4|0;return b|0}function Lb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;switch(b-a>>3|0){case 2:{f=b+-8|0;g=k[f>>2]|0;h=k[a>>2]|0;if((g|0)>=(h|0)){if((g|0)!=(h|0)){a=1;return a|0}e=b+-4|0;c=a+4|0;d=k[c>>2]|0;if((k[e>>2]|0)<=(d|0)){a=1;return a|0}}else{d=a+4|0;c=d;e=b+-4|0;d=k[d>>2]|0}k[a>>2]=g;k[c>>2]=k[e>>2];k[f>>2]=h;k[e>>2]=d;a=1;return a|0}case 3:{Ib(a,a+8|0,b+-8|0)|0;a=1;return a|0}case 4:{Jb(a,a+8|0,a+16|0,b+-8|0)|0;a=1;return a|0}case 5:{Kb(a,a+8|0,a+16|0,a+24|0,b+-8|0)|0;a=1;return a|0}case 1:case 0:{a=1;return a|0}default:{e=a+16|0;Ib(a,a+8|0,e)|0;d=a+24|0;if((d|0)==(b|0)){a=1;return a|0}else c=0;while(1){l=k[d>>2]|0;h=k[e>>2]|0;if((l|0)>=(h|0)){if((l|0)==(h|0)?(n=d+4|0,o=k[n>>2]|0,p=e+4|0,(o|0)>(k[p>>2]|0)):0){f=p;g=n;m=o;q=15}}else{m=d+4|0;f=e+4|0;g=m;m=k[m>>2]|0;q=15}if((q|0)==15){q=0;k[d>>2]=h;k[g>>2]=k[f>>2];a:do if((e|0)!=(a|0)){j=e;while(1){e=j+-8|0;i=k[e>>2]|0;if((l|0)>=(i|0)){if((l|0)!=(i|0)){e=j;break a}h=j+-4|0;g=k[h>>2]|0;if((m|0)>(g|0))f=h;else{e=j;break a}}else{g=j+-4|0;f=g;g=k[g>>2]|0}k[j>>2]=i;k[j+4>>2]=g;if((e|0)==(a|0))break;else j=e}}while(0);k[e>>2]=l;k[f>>2]=m;c=c+1|0;if((c|0)==8)break}e=d+8|0;if((e|0)==(b|0)){c=1;q=24;break}else{m=d;d=e;e=m}}if((q|0)==24)return c|0;a=(d+8|0)==(b|0);return a|0}}return 0}function Mb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;e=b;if(d>>>0<30|(b|0)==(c|0))return;l=(c-e|0)/12|0;m=(l>>>0)/3|0;j=b;f=e;g=e;e=0;h=d;i=0;while(1){if(i>>>0>=m>>>0){if((l-i|0)>>>0<m>>>0)break;o=k[j+4>>2]|0;n=o>>>0<h>>>0;f=n?g:f;e=n?i:e;h=n?o:h}g=j+12|0;if((g|0)==(c|0))break;else{j=g;i=i+1|0}}if(!e)return;e=k[f+4>>2]|0;if(e>>>0>((d>>>0)/9|0)>>>0)return;o=f+8|0;Mb(a,b,f,(k[o>>2]|0)+e|0);m=a+4|0;e=k[m>>2]|0;b=a+8|0;if((e|0)==(k[b>>2]|0)){n=k[a>>2]|0;i=e-n|0;j=i>>2;l=j+1|0;if(l>>>0>1073741823)xa(1340,1363,303,1438);if(j>>>0<536870911){e=i>>1;e=e>>>0<l>>>0?l:e;if(!e){e=0;g=0}else p=15}else{e=1073741823;p=15}if((p|0)==15){h=e<<2;h=(h|0)==0?1:h;g=_d(h)|0;a:do if(!g){while(1){g=k[35]|0;k[35]=g+0;if(!g)break;Xa[g&0]();g=_d(h)|0;if(g)break a}a=ya(4)|0;k[a>>2]=128;La(a|0,8,1)}while(0)}k[g+(j<<2)>>2]=k[f>>2];fe(g|0,n|0,i|0)|0;k[a>>2]=g;k[m>>2]=g+(l<<2);k[b>>2]=g+(e<<2);if(n)$d(n)}else{k[e>>2]=k[f>>2];k[m>>2]=e+4}Mb(a,f,c,d-(k[o>>2]|0)|0);return}function Nb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;h=(b|0)==(a|0);i[b+12>>0]=h&1;if(h)return;while(1){f=b+8|0;g=k[f>>2]|0;d=g+12|0;if(i[d>>0]|0){c=37;break}h=g+8|0;e=k[h>>2]|0;c=k[e>>2]|0;if((c|0)==(g|0)){c=k[e+4>>2]|0;if(!c){c=7;break}c=c+12|0;if(i[c>>0]|0){c=7;break}i[d>>0]=1;i[e+12>>0]=(e|0)==(a|0)&1;i[c>>0]=1}else{if(!c){c=24;break}c=c+12|0;if(i[c>>0]|0){c=24;break}i[d>>0]=1;i[e+12>>0]=(e|0)==(a|0)&1;i[c>>0]=1}if((e|0)==(a|0)){c=37;break}else b=e}if((c|0)==7){if((k[g>>2]|0)==(b|0)){b=g;a=e}else{f=g+4|0;b=k[f>>2]|0;c=k[b>>2]|0;k[f>>2]=c;if(!c)c=e;else{k[c+8>>2]=g;c=k[h>>2]|0}d=b+8|0;k[d>>2]=c;c=k[h>>2]|0;if((k[c>>2]|0)==(g|0))k[c>>2]=b;else k[c+4>>2]=b;k[b>>2]=g;k[h>>2]=b;a=k[d>>2]|0}i[b+12>>0]=1;i[a+12>>0]=0;d=k[a>>2]|0;e=d+4|0;b=k[e>>2]|0;k[a>>2]=b;if(b)k[b+8>>2]=a;b=a+8|0;k[d+8>>2]=k[b>>2];c=k[b>>2]|0;if((k[c>>2]|0)==(a|0))k[c>>2]=d;else k[c+4>>2]=d;k[e>>2]=a;k[b>>2]=d;return}else if((c|0)==24){if((k[g>>2]|0)==(b|0)){d=b+4|0;c=k[d>>2]|0;k[g>>2]=c;if(!c)c=e;else{k[c+8>>2]=g;c=k[h>>2]|0}k[f>>2]=c;c=k[h>>2]|0;if((k[c>>2]|0)==(g|0))k[c>>2]=b;else k[c+4>>2]=b;k[d>>2]=g;k[h>>2]=b;e=k[f>>2]|0}else b=g;i[b+12>>0]=1;i[e+12>>0]=0;h=e+4|0;d=k[h>>2]|0;b=k[d>>2]|0;k[h>>2]=b;if(b)k[b+8>>2]=e;b=e+8|0;k[d+8>>2]=k[b>>2];c=k[b>>2]|0;if((k[c>>2]|0)==(e|0))k[c>>2]=d;else k[c+4>>2]=d;k[d>>2]=e;k[b>>2]=d;return}else if((c|0)==37)return}function Ob(a){a=a|0;var b=0,c=0,d=0,e=0;if(!a)return;Ob(k[a>>2]|0);Ob(k[a+4>>2]|0);b=k[a+20>>2]|0;c=b;if(b){d=a+24|0;e=k[d>>2]|0;if((e|0)!=(b|0))k[d>>2]=e+(~(((e+-20-c|0)>>>0)/20|0)*20|0);$d(b)}$d(a);return}function Pb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0.0,q=0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0.0;ca=r;r=r+48|0;g=b;$=ca+40|0;X=ca+32|0;Z=ca+16|0;Y=ca;aa=ca+8|0;k[Z>>2]=0;ba=Z+4|0;k[ba>>2]=0;k[Z+8>>2]=0;f=c-g|0;do if((c|0)!=(b|0)){if(((f|0)/20|0)>>>0>214748364)xa(1340,1363,303,1438);e=_d(f)|0;a:do if(!e){while(1){e=k[35]|0;k[35]=e+0;if(!e)break;Xa[e&0]();e=_d(f)|0;if(e)break a}ca=ya(4)|0;k[ca>>2]=128;La(ca|0,8,1)}while(0);if((b|0)!=(c|0)){g=c+-20-g|0;f=e;while(1){k[f>>2]=k[b>>2];k[f+4>>2]=k[b+4>>2];k[f+8>>2]=k[b+8>>2];k[f+12>>2]=k[b+12>>2];k[f+16>>2]=k[b+16>>2];b=b+20|0;if((b|0)==(c|0))break;else f=f+20|0}q=e+((((g>>>0)/20|0)+1|0)*20|0)|0;g=(q|0)==(e|0);if(g){Qb(e,q);h=g;break}c=(q-e|0)/20|0;o=0;do{h=e+(o*20|0)+8|0;i=k[h>>2]|0;j=e+(o*20|0)|0;l=k[j>>2]|0;if((i|0)>=(l|0)){if((i|0)==(l|0)?(u=e+(o*20|0)+12|0,v=k[u>>2]|0,w=e+(o*20|0)+4|0,x=k[w>>2]|0,(v|0)<(x|0)):0){b=u;f=w;m=v;n=x;_=19}}else{n=e+(o*20|0)+4|0;m=e+(o*20|0)+12|0;b=m;f=n;m=k[m>>2]|0;n=k[n>>2]|0;_=19}if((_|0)==19){_=0;k[j>>2]=i;k[f>>2]=m;k[h>>2]=l;k[b>>2]=n}o=o+1|0}while(o>>>0<c>>>0);W=g;Qb(e,q);if(W)h=W;else{S=Z+8|0;T=Y+4|0;U=$+4|0;V=X+4|0;R=e;while(1){b=k[ba>>2]|0;f=k[S>>2]|0;if((b|0)==(f|0)){Rb(Z,R);b=k[ba>>2]|0;f=k[S>>2]|0}else{k[b>>2]=k[R>>2];k[b+4>>2]=k[R+4>>2];b=b+8|0;k[ba>>2]=b}Q=R+8|0;if((b|0)==(f|0))Rb(Z,Q);else{k[b>>2]=k[Q>>2];k[b+4>>2]=k[R+12>>2];k[ba>>2]=b+8}P=R+16|0;h=k[P>>2]|0;O=k[a>>2]|0;b=k[O+(h*12|0)>>2]|0;h=O+(h*12|0)+4|0;if((b|0)!=(h|0)){f=b;while(1){b=f+16|0;g=f+20|0;do if((k[g>>2]|0)>=(d|0)){c=k[ba>>2]|0;if((c|0)==(k[S>>2]|0)){Rb(Z,b);break}else{k[c>>2]=k[b>>2];k[c+4>>2]=k[g>>2];k[ba>>2]=c+8;break}}while(0);b=k[f+4>>2]|0;if(!b)while(1){b=k[f+8>>2]|0;if((k[b>>2]|0)==(f|0))break;else f=b}else while(1){f=k[b>>2]|0;if(!f)break;else b=f}if((b|0)==(h|0))break;else f=b}}L=R+4|0;if((k[L>>2]|0)<(d|0))O=0;else O=(k[R+12>>2]|0)>=(d|0);M=R+8|0;N=R+12|0;K=R;b:do{if(!O){if((k[K+4>>2]|0)>=(d|0)?(k[K+12>>2]|0)>=(d|0):0)_=46}else _=46;c:do if((_|0)==46){_=0;b=k[R>>2]|0;f=k[K>>2]|0;g=(b|0)==(f|0);if(((g?(k[L>>2]|0)==(k[K+4>>2]|0):0)?(k[M>>2]|0)==(k[K+8>>2]|0):0)?(k[N>>2]|0)==(k[K+12>>2]|0):0)break;J=K+8|0;c=k[J>>2]|0;h=k[Q>>2]|0;if((((c|0)<(f|0)?c:f)|0)>=(((h|0)<(b|0)?b:h)|0))break b;if(g?(k[L>>2]|0)==(k[K+4>>2]|0):0)break;if((h|0)==(c|0)?(k[N>>2]|0)==(k[K+12>>2]|0):0)break;I=Y;k[I>>2]=0;k[I+4>>2]=0;if(!(Sb(R,K)|0))break;b=k[R>>2]|0;h=k[M>>2]|0;g=k[L>>2]|0;n=k[N>>2]|0;m=(h|0)<(b|0);j=m?h:b;m=m?b:h;G=(n|0)<(g|0);x=G?n:g;G=G?g:n;o=k[K>>2]|0;c=k[J>>2]|0;H=K+4|0;u=k[H>>2]|0;I=K+12|0;v=k[I>>2]|0;l=(c|0)<(o|0);i=l?c:o;l=l?o:c;F=(v|0)<(u|0);w=F?v:u;F=F?u:v;d:do if((m|0)>=(i|0)&(j|0)<=(l|0)){if(!((x|0)<=(F|0)&(G|0)>=(w|0))){_=79;break}f=(c|0)==(o|0);do if((h|0)==(b|0)){if(f){_=79;break d}do if((v|0)==(u|0))g=u;else{p=+(o|0);s=+(u|0);t=+(b|0)-p;if(t==0.0){g=u;break}g=~~(s+(+(v|0)-s)*t/(+(c|0)-p))}while(0);if(!((x|0)<=(g|0)&(G|0)>=(g|0))){_=79;break d}k[Y>>2]=b;k[T>>2]=g}else{if(!f){z=+(v-u|0);A=+(n-g|0);y=+(c-o|0);p=+(h-b|0);s=z*p;t=A*y;if(s==t){_=79;break d}da=+(o|0);C=+(u|0);E=A*+(b|0);B=+(g|0)*p;D=(y*E-z*da*p+y*(C*p)-y*B)/(t-s);E=(z*(A*da)+(z*B-A*(C*y))-z*E)/(s-t);b=~~D;o=~~E;b=((D<+(b|0))<<31>>31)+b|0;g=(v|0)==(u|0)?u:(n|0)==(g|0)?g:((E<+(o|0))<<31>>31)+o|0;if(!((x|0)<=(g|0)&(((j|0)>(b|0)|(m|0)<(b|0)|(G|0)<(g|0))^1))){_=79;break d}if(!((w|0)<=(g|0)&(((i|0)>(b|0)|(l|0)<(b|0)|(F|0)<(g|0))^1))){_=79;break d}k[Y>>2]=b;k[T>>2]=g;break}do if((n|0)!=(g|0)){p=+(b|0);s=+(g|0);t=+(o|0)-p;if(t==0.0)break;g=~~(s+(+(n|0)-s)*t/(+(h|0)-p))}while(0);if(!((w|0)<=(g|0)&(F|0)>=(g|0))){_=79;break d}k[Y>>2]=o;k[T>>2]=g;b=o}while(0);k[$>>2]=b;k[U>>2]=g;if(!(Tb($,R)|0)){_=79;break}k[X>>2]=b;k[V>>2]=g;if(!(Tb(X,K)|0)){_=79;break}}else _=79;while(0);e:do if((_|0)==79){_=0;f:do if(Sb(R,K)|0){b=k[R>>2]|0;i=k[M>>2]|0;n=k[L>>2]|0;v=k[N>>2]|0;u=(b|0)>(i|0);o=u?i:b;u=u?b:i;G=(n|0)>(v|0);F=G?v:n;G=G?n:v;j=k[K>>2]|0;g=k[J>>2]|0;l=k[H>>2]|0;m=k[I>>2]|0;h=(j|0)>(g|0);c=h?g:j;h=h?j:g;x=(l|0)>(m|0);w=x?m:l;x=x?l:m;if(!((u|0)>=(c|0)&(o|0)<=(h|0)))break;if(!((F|0)<=(x|0)&(G|0)>=(w|0)))break;f=(j|0)==(g|0);do if((b|0)==(i|0)){if(f)break f;do if((l|0)==(m|0))p=+(l|0);else{t=+(j|0);p=+(l|0);s=+(b|0)-t;if(s==0.0)break;p=p+(+(m|0)-p)*s/(+(g|0)-t)}while(0);g=~~p;g=((p<+(g|0))<<31>>31)+g|0;if(!((G|0)>=(g|0)&(F|0)<=(g|0)))break f;k[Y>>2]=b;k[T>>2]=g}else{if(!f){B=+(l|0);C=+(m|0)-B;D=+(n|0);E=+(v|0)-D;A=+(j|0);z=+(g|0)-A;y=+(b|0);p=+(i|0)-y;s=C*p;t=z*E;if(s==t)break f;da=y*E;y=p*D;D=(da*z-A*C*p+z*(B*p)-z*y)/(t-s);da=(y*C-B*z*E+C*(E*A)-C*da)/(s-t);b=~~D;g=~~da;b=((D<+(b|0))<<31>>31)+b|0;g=(l|0)==(m|0)?l:(n|0)==(v|0)?n:((da<+(g|0))<<31>>31)+g|0;if(!((F|0)<=(g|0)&(((o|0)>(b|0)|(u|0)<(b|0)|(G|0)<(g|0))^1)))break f;if(!((w|0)<=(g|0)&(((c|0)>(b|0)|(h|0)<(b|0)|(x|0)<(g|0))^1)))break f;k[Y>>2]=b;k[T>>2]=g;break}do if((n|0)==(v|0))p=+(n|0);else{t=+(b|0);p=+(n|0);s=+(j|0)-t;if(s==0.0)break;p=p+(+(v|0)-p)*s/(+(i|0)-t)}while(0);g=~~p;g=((p<+(g|0))<<31>>31)+g|0;if(!((x|0)>=(g|0)&(w|0)<=(g|0)))break f;k[Y>>2]=j;k[T>>2]=g;b=j}while(0);break e}while(0);break c}while(0);f=k[ba>>2]|0;if((f|0)==(k[S>>2]|0))Rb(Z,Y);else{k[f>>2]=b;k[f+4>>2]=g;k[ba>>2]=f+8}Ub($,(k[a>>2]|0)+((k[K+16>>2]|0)*12|0)|0,Y);Ub($,(k[a>>2]|0)+((k[P>>2]|0)*12|0)|0,Y)}while(0);K=K+20|0}while((K|0)!=(q|0));R=R+20|0;if((R|0)==(q|0)){h=W;break}}}}else{b=e;_=11}}else{b=0;_=11}while(0);if((_|0)==11){Qb(b,b);h=(b|0)==(b|0);e=b;q=b}n=k[Z>>2]|0;o=k[ba>>2]|0;Vb(n,o);u=(n|0)==(o|0);g:do if(!u){b=n+8|0;if((b|0)==(o|0))m=o;else{f=b;b=n;while(1){if((k[b>>2]|0)==(k[b+8>>2]|0)?(k[b+4>>2]|0)==(k[b+12>>2]|0):0){_=114;break g}b=f+8|0;if((b|0)==(o|0)){m=o;break}else{Z=f;f=b;b=Z}}}}else{b=n;_=114}while(0);if((_|0)==114)if((b|0)==(o|0))m=o;else{f=b+16|0;if((f|0)!=(o|0)){c=b;b=b+8|0;while(1){g=k[f>>2]|0;if((k[c>>2]|0)==(g|0)){b=b+12|0;if((k[c+4>>2]|0)==(k[b>>2]|0))b=c;else _=120}else{b=b+12|0;_=120}if((_|0)==120){_=0;Z=c+8|0;k[Z>>2]=g;k[c+12>>2]=k[b>>2];b=Z}g=f+8|0;if((g|0)==(o|0))break;else{Z=f;f=g;c=b;b=Z}}}m=b+8|0}if(!h){i=aa+4|0;j=e;f=n;do{l=k[j+16>>2]|0;b=j+8|0;c=k[b>>2]|0;h=k[j>>2]|0;if((c|0)>=(h|0))if((c|0)==(h|0))g=(k[j+12>>2]|0)<(k[j+4>>2]|0)?b:j;else g=j;else g=b;g=k[g>>2]|0;if((h|0)>=(c|0))if((h|0)==(c|0))b=(k[j+4>>2]|0)<(k[j+12>>2]|0)?b:j;else b=j;c=k[b>>2]|0;b=f;h:do if((b|0)!=(m|0))do{if((k[b>>2]|0)>=(g|0))break h;b=b+8|0;f=b}while((b|0)!=(m|0));while(0);b=f;i:do if((b|0)!=(m|0))do{g=k[b>>2]|0;if((g|0)>(c|0))break i;k[aa>>2]=g;k[i>>2]=k[b+4>>2];if(Tb(aa,j)|0)Ub($,(k[a>>2]|0)+(l*12|0)|0,b);b=b+8|0}while((b|0)!=(m|0));while(0);j=j+20|0}while((j|0)!=(q|0))}if(e)$d(e);if(!n){r=ca;return}if(!u)k[ba>>2]=o+(~((o+-8-n|0)>>>3)<<3);$d(n);r=ca;return}\\r\\nfunction Jc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;L=r;r=r+176|0;D=L+72|0;E=L;K=L+40|0;B=L+104|0;F=L+168|0;G=L+164|0;H=L+160|0;I=a+16|0;c=k[I>>2]|0;k[K>>2]=k[c>>2];k[K+4>>2]=k[c+4>>2];k[K+8>>2]=k[c+8>>2];k[K+12>>2]=k[c+12>>2];k[K+16>>2]=k[c+16>>2];k[K+20>>2]=k[c+20>>2];k[K+24>>2]=k[c+24>>2];h=c+28|0;l=k[K>>2]|0;J=K+8|0;if((l|0)==(k[J>>2]|0)?(t=K+4|0,e=k[t>>2]|0,(e|0)==(k[K+12>>2]|0)):0){u=a+20|0;d=k[u>>2]|0;v=a+24|0;f=k[v>>2]|0;if((d|0)!=(f|0)?(w=a+64|0,x=a+72|0,y=a+68|0,(k[d>>2]|0)==(l|0)):0){c=f;while(1){l=d+4|0;if((k[l>>2]|0)!=(e|0))break;s=k[d+8>>2]|0;e=c-d|0;if((e|0)>12){f=(e|0)/12|0;m=c+-12|0;q=d;C=k[q>>2]|0;q=k[q+4>>2]|0;n=m;o=k[n+4>>2]|0;p=d;k[p>>2]=k[n>>2];k[p+4>>2]=o;k[m>>2]=C;k[m+4>>2]=q;m=d+8|0;q=c+-4|0;C=k[m>>2]|0;k[m>>2]=k[q>>2];k[q>>2]=C;q=f+-1|0;do if((e|0)>=36?(C=f+-3|0,z=(C|0)/2|0,(C|0)>=-1):0){c=d+12|0;e=c;do if((q|0)>2){f=d+24|0;g=k[f>>2]|0;c=k[c>>2]|0;if((g|0)==(c|0)){if((k[d+28>>2]|0)>=(k[d+16>>2]|0)){j=1;break}}else if((g|0)>=(c|0)){j=1;break}e=f;j=2}else j=1;while(0);c=e;f=k[d>>2]|0;g=k[c>>2]|0;if((f|0)==(g|0)){if((k[l>>2]|0)<(k[c+4>>2]|0))break}else if((f|0)<(g|0))break;o=d;n=k[o>>2]|0;o=k[o+4>>2]|0;p=k[m>>2]|0;g=e;l=k[g+4>>2]|0;C=d;k[C>>2]=k[g>>2];k[C+4>>2]=l;k[m>>2]=k[c+8>>2];a:do if((z|0)>=(j|0)){m=c;c=j;while(1){f=c<<1|1;c=d+(f*12|0)|0;g=c;l=f+1|0;do if((l|0)<(q|0)){e=d+(l*12|0)|0;j=k[e>>2]|0;c=k[c>>2]|0;if((j|0)==(c|0)){if((k[d+(l*12|0)+4>>2]|0)>=(k[d+(f*12|0)+4>>2]|0))break}else if((j|0)>=(c|0))break;g=e;f=l}while(0);c=g;e=k[c>>2]|0;if((n|0)==(e|0)){if((o|0)<(k[c+4>>2]|0)){c=m;break a}}else if((n|0)<(e|0)){c=m;break a}j=g;l=k[j+4>>2]|0;C=m;k[C>>2]=k[j>>2];k[C+4>>2]=l;k[m+8>>2]=k[c+8>>2];if((z|0)<(f|0))break;else{m=c;c=f}}}while(0);C=c;k[C>>2]=n;k[C+4>>2]=o;k[c+8>>2]=p}while(0);c=k[v>>2]|0}k[v>>2]=c+-12;e=s;c=k[e+4>>2]|0;if(!c){d=s;while(1){c=k[d+8>>2]|0;if((k[c>>2]|0)==(d|0))break;else d=c}}else while(1){d=k[c>>2]|0;if(!d)break;else c=d}if((k[w>>2]|0)==(e|0))k[w>>2]=c;k[x>>2]=(k[x>>2]|0)+-1;Mc(k[y>>2]|0,s);$d(s);d=k[u>>2]|0;c=k[v>>2]|0;if((d|0)==(c|0))break;if((k[d>>2]|0)!=(k[K>>2]|0))break;e=k[t>>2]|0}c=k[I>>2]|0}d=c;f=c}else A=3;b:do if((A|0)==3){j=k[a+8>>2]|0;if((h|0)==(j|0)){d=c;f=c}else{g=k[K+4>>2]|0;f=c;while(1){e=k[f+28>>2]|0;if((e|0)==(k[f+36>>2]|0)){d=k[f+32>>2]|0;if(!((e|0)==(l|0)?(d|0)!=(k[f+40>>2]|0):0)){d=c;f=c;break b}}else{if((e|0)!=(l|0)){d=c;f=c;break b}d=k[f+32>>2]|0}if((d|0)!=(g|0)){d=c;f=c;break b}d=h+28|0;if((d|0)==(j|0)){d=c;f=c;h=j;break}else{f=h;h=d}}}}while(0);k[B>>2]=k[d>>2];k[B+4>>2]=k[d+4>>2];k[B+8>>2]=k[d+8>>2];k[B+12>>2]=k[d+12>>2];k[B+16>>2]=k[d+16>>2];k[B+20>>2]=k[d+20>>2];k[B+24>>2]=k[d+24>>2];C=B+28|0;k[C>>2]=k[d>>2];k[C+4>>2]=k[d+4>>2];k[C+8>>2]=k[d+8>>2];k[C+12>>2]=k[d+12>>2];k[C+16>>2]=k[d+16>>2];k[C+20>>2]=k[d+20>>2];k[C+24>>2]=k[d+24>>2];C=a+68|0;c=k[C>>2]|0;c:do if(!c)d=C;else{e=C;while(1){d=c;while(1){if(!(cd(d+16|0,B)|0))break;c=k[d+4>>2]|0;if(!c){d=e;break c}else d=c}c=k[d>>2]|0;if(!c)break;else e=d}}while(0);if((f|0)==(h|0)){r=L;return}m=D+24|0;n=a+80|0;o=a+36|0;p=E+32|0;q=a+64|0;s=K+4|0;t=K+12|0;u=D+24|0;v=E+32|0;w=K+8|0;x=K+24|0;y=D+24|0;z=E+32|0;A=D+24|0;B=E+32|0;c=f;do{k[K>>2]=k[c>>2];k[K+4>>2]=k[c+4>>2];k[K+8>>2]=k[c+8>>2];k[K+12>>2]=k[c+12>>2];k[K+16>>2]=k[c+16>>2];k[K+20>>2]=k[c+20>>2];k[K+24>>2]=k[c+24>>2];e=d;do if((e|0)==(C|0)){e=d;c=k[e>>2]|0;if(!c)while(1){c=k[e+8>>2]|0;if((k[c>>2]|0)==(e|0))e=c;else break}else while(1){e=k[c+4>>2]|0;if(!e)break;else c=e}l=c+44|0;k[F>>2]=d;k[D>>2]=k[F>>2];e=dd(a,l,l,K,D,b)|0;d=e;i[m>>0]=1;if(Nc(n,c+16|0,l,K,D)|0){k[E>>2]=k[D>>2];k[E+4>>2]=k[D+4>>2];k[E+8>>2]=k[D+8>>2];k[E+12>>2]=k[D+12>>2];k[E+16>>2]=k[D+16>>2];k[E+20>>2]=k[D+20>>2];k[E+24>>2]=k[D+24>>2];k[E+28>>2]=k[D+28>>2];k[p>>2]=d;l=Oc(o,E)|0;k[e+72>>2]=l}}else{l=e+16|0;if((e|0)==(k[q>>2]|0)){k[G>>2]=d;k[D>>2]=k[G>>2];c=dd(a,l,l,K,D,b)|0;if(!((k[K>>2]|0)==(k[J>>2]|0)?(k[s>>2]|0)==(k[t>>2]|0):0)){g=K;f=k[g>>2]|0;g=k[g+4>>2]|0;N=w;M=k[N+4>>2]|0;j=K;k[j>>2]=k[N>>2];k[j+4>>2]=M;j=w;k[j>>2]=f;k[j+4>>2]=g;k[x>>2]=k[x>>2]^32}i[u>>0]=1;if(Nc(n,K,l,e+44|0,D)|0){k[E>>2]=k[D>>2];k[E+4>>2]=k[D+4>>2];k[E+8>>2]=k[D+8>>2];k[E+12>>2]=k[D+12>>2];k[E+16>>2]=k[D+16>>2];k[E+20>>2]=k[D+20>>2];k[E+24>>2]=k[D+24>>2];k[E+28>>2]=k[D+28>>2];k[v>>2]=d;N=Oc(o,E)|0;k[e+72>>2]=N}d=c;break}j=e+44|0;g=e+72|0;c=k[g>>2]|0;if(c){i[c+24>>0]=0;k[g>>2]=0}c=d;e=k[c>>2]|0;if(!e)while(1){e=k[c+8>>2]|0;if((k[e>>2]|0)==(c|0))c=e;else{c=e;break}}else{c=e;while(1){e=k[c+4>>2]|0;if(!e)break;else c=e}}N=c+44|0;k[H>>2]=d;k[D>>2]=k[H>>2];e=dd(a,N,l,K,D,b)|0;f=e;i[y>>0]=1;if(Nc(n,c+16|0,N,K,D)|0){k[E>>2]=k[D>>2];k[E+4>>2]=k[D+4>>2];k[E+8>>2]=k[D+8>>2];k[E+12>>2]=k[D+12>>2];k[E+16>>2]=k[D+16>>2];k[E+20>>2]=k[D+20>>2];k[E+24>>2]=k[D+24>>2];k[E+28>>2]=k[D+28>>2];k[z>>2]=f;N=Oc(o,E)|0;k[e+72>>2]=N}if(!((k[K>>2]|0)==(k[J>>2]|0)?(k[s>>2]|0)==(k[t>>2]|0):0)){M=K;e=k[M>>2]|0;M=k[M+4>>2]|0;O=w;c=k[O+4>>2]|0;N=K;k[N>>2]=k[O>>2];k[N+4>>2]=c;N=w;k[N>>2]=e;k[N+4>>2]=M;k[x>>2]=k[x>>2]^32}i[A>>0]=1;if(Nc(n,K,l,j,D)|0){k[E>>2]=k[D>>2];k[E+4>>2]=k[D+4>>2];k[E+8>>2]=k[D+8>>2];k[E+12>>2]=k[D+12>>2];k[E+16>>2]=k[D+16>>2];k[E+20>>2]=k[D+20>>2];k[E+24>>2]=k[D+24>>2];k[E+28>>2]=k[D+28>>2];k[B>>2]=d;O=Oc(o,E)|0;k[g>>2]=O}d=f}while(0);c=(k[I>>2]|0)+28|0;k[I>>2]=c}while((c|0)!=(h|0));r=L;return}function Kc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;J=r;r=r+144|0;E=J+72|0;F=J+32|0;I=J;H=J+104|0;G=a+36|0;h=k[k[G>>2]>>2]|0;A=k[h+40>>2]|0;B=A;y=B+44|0;k[I>>2]=k[y>>2];k[I+4>>2]=k[y+4>>2];k[I+8>>2]=k[y+8>>2];k[I+12>>2]=k[y+12>>2];k[I+16>>2]=k[y+16>>2];k[I+20>>2]=k[y+20>>2];k[I+24>>2]=k[y+24>>2];y=k[B+76>>2]|0;z=A;c=k[z>>2]|0;if(!c){d=z;while(1){c=k[d+8>>2]|0;if((k[c>>2]|0)==(d|0))d=c;else break}}else while(1){d=k[c+4>>2]|0;if(!d)break;else c=d}C=c;d=c+16|0;D=c+72|0;w=D+4|0;x=k[w>>2]|0;k[H>>2]=k[d>>2];k[H+4>>2]=k[d+4>>2];k[H+8>>2]=k[d+8>>2];k[H+12>>2]=k[d+12>>2];k[H+16>>2]=k[d+16>>2];k[H+20>>2]=k[d+20>>2];k[H+24>>2]=k[d+24>>2];d=k[H>>2]|0;u=H+8|0;do if((d|0)==(k[u>>2]|0)?(g=k[H+4>>2]|0,(g|0)==(k[H+12>>2]|0)):0){e=k[I+8>>2]|0;if((k[I>>2]|0)==(e|0)?(k[I+4>>2]|0)==(k[I+12>>2]|0):0)break;f=I+8|0;if((e|0)==(d|0)?(k[I+12>>2]|0)==(g|0):0){o=I;n=k[o>>2]|0;o=k[o+4>>2]|0;l=f;m=k[l+4>>2]|0;t=I;k[t>>2]=k[l>>2];k[t+4>>2]=m;t=f;k[t>>2]=n;k[t+4>>2]=o;t=I+24|0;k[t>>2]=k[t>>2]^32}}while(0);m=c+44|0;k[m>>2]=k[I>>2];k[m+4>>2]=k[I+4>>2];k[m+8>>2]=k[I+8>>2];k[m+12>>2]=k[I+12>>2];k[m+16>>2]=k[I+16>>2];k[m+20>>2]=k[I+20>>2];k[m+24>>2]=k[I+24>>2];s=+p[h+8>>3];q=+p[h+16>>3];m=b+16|0;d=k[m>>2]|0;n=b+20|0;e=k[n>>2]|0;if(d>>>0>=e>>>0){o=b+12|0;t=k[o>>2]|0;f=t;j=d-f|0;l=(j|0)/24|0;h=l+1|0;if(h>>>0>178956970)xa(1340,1363,303,1438);d=(e-f|0)/24|0;if(d>>>0<89478485){g=d<<1;g=g>>>0<h>>>0?h:g}else g=178956970;f=g*24|0;f=(f|0)==0?1:f;e=_d(f)|0;a:do if(!e){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();e=_d(f)|0;if(e)break a}J=ya(4)|0;k[J>>2]=128;La(J|0,8,1)}while(0);p[e+(l*24|0)>>3]=s;p[e+(l*24|0)+8>>3]=q;k[e+(l*24|0)+16>>2]=0;k[e+(l*24|0)+20>>2]=0;d=e+(h*24|0)|0;l=e+((((j|0)/-24|0)+l|0)*24|0)|0;fe(l|0,t|0,j|0)|0;k[o>>2]=l;k[m>>2]=d;k[n>>2]=e+(g*24|0);if(t){$d(t);d=k[m>>2]|0}}else{p[d>>3]=s;p[d+8>>3]=q;k[d+16>>2]=0;k[d+20>>2]=0;d=(k[m>>2]|0)+24|0;k[m>>2]=d}t=d+-24|0;k[x+4>>2]=t;k[y+4>>2]=t;o=k[H>>2]|0;l=k[u>>2]|0;h=(o|0)==(l|0);if(h)f=(k[H+4>>2]|0)!=(k[H+12>>2]|0);else f=1;m=k[I>>2]|0;n=k[I+8>>2]|0;j=(m|0)==(n|0);do if(j){e=k[I+4>>2]|0;d=(e|0)!=(k[I+12>>2]|0);if(!(d|f^1)){if((o|0)==(m|0)?(k[H+4>>2]|0)==(e|0):0){g=1;break}if((l|0)==(m|0)?(k[H+12>>2]|0)==(e|0):0)g=1;else v=36}else v=31}else{d=1;v=31}while(0);do if((v|0)==31)if(!(f|d^1)){if((m|0)==(o|0)?(k[I+4>>2]|0)==(k[H+4>>2]|0):0){g=1;break}if((n|0)==(o|0)?(k[I+12>>2]|0)==(k[H+4>>2]|0):0)g=1;else v=36}else v=36;while(0);if((v|0)==36){if(h)d=(k[H+4>>2]|0)!=(k[H+12>>2]|0);else d=1;if(j)e=(k[I+4>>2]|0)!=(k[I+12>>2]|0);else e=1;g=d^e^1}if(h)f=(k[H+4>>2]|0)!=(k[H+12>>2]|0);else f=1;do if(j){e=k[I+4>>2]|0;d=(e|0)!=(k[I+12>>2]|0);if(!(d|f^1)){if((o|0)==(m|0)?(k[H+4>>2]|0)==(e|0):0){d=0;break}if((l|0)==(m|0))d=(k[H+12>>2]|0)!=(e|0);else d=1}else v=49}else{d=1;v=49}while(0);do if((v|0)==49)if(!(f|d^1)){if((m|0)==(o|0)?(k[I+4>>2]|0)==(k[H+4>>2]|0):0){d=0;break}if((n|0)==(o|0))d=(k[I+12>>2]|0)!=(k[H+4>>2]|0);else d=1}else d=1;while(0);l=b+24|0;e=g&1;e=d?e|2:e;k[E>>2]=0;k[E+4>>2]=0;k[E+8>>2]=0;k[E+12>>2]=0;k[E+16>>2]=0;k[E+20>>2]=e;f=b+28|0;d=k[f>>2]|0;g=b+32|0;if(d>>>0<(k[g>>2]|0)>>>0){k[d>>2]=k[E>>2];k[d+4>>2]=k[E+4>>2];k[d+8>>2]=k[E+8>>2];k[d+12>>2]=k[E+12>>2];k[d+16>>2]=k[E+16>>2];k[d+20>>2]=k[E+20>>2];j=(k[f>>2]|0)+24|0;k[f>>2]=j}else{bd(l,E);j=k[f>>2]|0}h=j+-24|0;k[h>>2]=(k[b>>2]|0)+((k[H+16>>2]|0)*12|0);k[F>>2]=0;k[F+4>>2]=0;k[F+8>>2]=0;k[F+12>>2]=0;k[F+16>>2]=0;k[F+20>>2]=e;if(j>>>0<(k[g>>2]|0)>>>0){k[j>>2]=k[F>>2];k[j+4>>2]=k[F+4>>2];k[j+8>>2]=k[F+8>>2];k[j+12>>2]=k[F+12>>2];k[j+16>>2]=k[F+16>>2];k[j+20>>2]=k[F+20>>2];d=(k[f>>2]|0)+24|0;k[f>>2]=d}else{bd(l,F);d=k[f>>2]|0}v=d+-24|0;k[v>>2]=(k[b>>2]|0)+((k[I+16>>2]|0)*12|0);k[j+-16>>2]=v;k[d+-16>>2]=h;k[d+-20>>2]=t;k[x+16>>2]=h;k[j+-12>>2]=x;j=k[x+8>>2]|0;k[j+12>>2]=y;k[y+16>>2]=j;j=k[y+8>>2]|0;k[j+12>>2]=v;k[d+-8>>2]=j;k[w>>2]=h;j=a+64|0;d=k[B+4>>2]|0;if(!d){e=z;while(1){d=k[e+8>>2]|0;if((k[d>>2]|0)==(e|0))break;else e=d}}else while(1){e=k[d>>2]|0;if(!e)break;else d=e}if((k[j>>2]|0)==(B|0))k[j>>2]=d;e=a+72|0;k[e>>2]=(k[e>>2]|0)+-1;Mc(k[a+68>>2]|0,z);$d(A);e=k[G>>2]|0;g=k[e>>2]|0;h=a+40|0;d=k[h>>2]|0;f=d-e|0;if((f|0)>4){d=d+-4|0;k[e>>2]=k[d>>2];k[d>>2]=g;Lc(e,(f>>2)+-1|0,e);d=k[h>>2]|0}k[h>>2]=d+-4;B=g+4|0;A=k[g>>2]|0;k[A+4>>2]=k[B>>2];k[k[B>>2]>>2]=A;B=a+60|0;k[B>>2]=(k[B>>2]|0)+-1;$d(g);if((c|0)!=(k[j>>2]|0)){d=k[D>>2]|0;if(d){i[d+24>>0]=0;k[D>>2]=0}d=k[c>>2]|0;if(!d){e=c;while(1){d=k[e+8>>2]|0;if((k[d>>2]|0)==(e|0))e=d;else break}}else while(1){e=k[d+4>>2]|0;if(!e)break;else d=e}i[E+24>>0]=1;if(Nc(a+80|0,d+16|0,H,I,E)|0){k[F>>2]=k[E>>2];k[F+4>>2]=k[E+4>>2];k[F+8>>2]=k[E+8>>2];k[F+12>>2]=k[E+12>>2];k[F+16>>2]=k[E+16>>2];k[F+20>>2]=k[E+20>>2];k[F+24>>2]=k[E+24>>2];k[F+28>>2]=k[E+28>>2];k[F+32>>2]=C;C=Oc(G,F)|0;k[D>>2]=C}}d=k[c+4>>2]|0;if(!d)while(1){d=k[c+8>>2]|0;if((k[d>>2]|0)==(c|0)){c=d;break}else c=d}else{c=d;while(1){d=k[c>>2]|0;if(!d)break;else c=d}}if((c|0)==(a+68|0)){r=J;return}d=c+72|0;e=k[d>>2]|0;if(e){i[e+24>>0]=0;k[d>>2]=0}i[E+24>>0]=1;if(Nc(a+80|0,H,I,c+44|0,E)|0){k[F>>2]=k[E>>2];k[F+4>>2]=k[E+4>>2];k[F+8>>2]=k[E+8>>2];k[F+12>>2]=k[E+12>>2];k[F+16>>2]=k[E+16>>2];k[F+20>>2]=k[E+20>>2];k[F+24>>2]=k[E+24>>2];k[F+28>>2]=k[E+28>>2];k[F+32>>2]=c;a=Oc(G,F)|0;k[d>>2]=a}r=J;return}function Lc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0.0,h=0.0,i=0,j=0,l=0,m=0.0,n=0,o=0,q=0;d=c-a|0;if((b|0)<2)return;q=(b+-2|0)/2|0;if((q|0)<(d>>2|0))return;l=d>>1|1;f=a+(l<<2)|0;d=f;e=l+1|0;do if((e|0)<(b|0)){j=a+(e<<2)|0;f=k[f>>2]|0;i=k[j>>2]|0;g=+p[i+24>>3];h=+p[f+24>>3];if(g!=h){if(!(g<h)){e=l;break}}else if(!(+p[i+16>>3]<+p[f+16>>3])){e=l;break}d=j}else e=l;while(0);f=k[d>>2]|0;i=k[c>>2]|0;g=+p[i+24>>3];h=+p[f+24>>3];o=i;if(g!=h){if(g<h)return}else if(+p[i+16>>3]<+p[f+16>>3])return;n=i+16|0;k[c>>2]=k[d>>2];a:do if((q|0)>=(e|0)){m=+p[i+24>>3];while(1){e=e<<1|1;i=a+(e<<2)|0;f=i;c=e+1|0;do if((c|0)<(b|0)){l=a+(c<<2)|0;i=k[i>>2]|0;j=k[l>>2]|0;g=+p[j+24>>3];h=+p[i+24>>3];if(g!=h){if(!(g<h))break}else if(!(+p[j+16>>3]<+p[i+16>>3]))break;f=l;e=c}while(0);i=k[f>>2]|0;g=+p[i+24>>3];if(m!=g){if(m<g)break a}else if(+p[n>>3]<+p[i+16>>3])break a;k[d>>2]=k[f>>2];if((q|0)<(e|0)){d=f;break}else d=f}}while(0);k[d>>2]=o;return}function Mc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0;d=k[b>>2]|0;if(d){c=k[b+4>>2]|0;if(!c){e=b;c=b;h=6}else while(1){d=k[c>>2]|0;if(!d){h=4;break}else c=d}}else{c=b;h=4}if((h|0)==4){d=k[c+4>>2]|0;if(!d){l=c+8|0;e=c;d=0;m=0;j=c}else{e=c;h=6}}if((h|0)==6){l=e+8|0;k[d+8>>2]=k[l>>2];m=1;j=c}c=k[l>>2]|0;f=k[c>>2]|0;if((f|0)==(e|0)){k[c>>2]=d;if((e|0)==(a|0)){a=d;f=0}else f=k[c+4>>2]|0}else k[c+4>>2]=d;g=e+12|0;h=(i[g>>0]|0)!=0;if((e|0)!=(b|0)){o=b+8|0;c=k[o>>2]|0;k[l>>2]=c;if((k[k[o>>2]>>2]|0)==(b|0))k[c>>2]=e;else k[c+4>>2]=e;c=k[b>>2]|0;k[j>>2]=c;k[c+8>>2]=e;c=k[b+4>>2]|0;k[e+4>>2]=c;if(c)k[c+8>>2]=e;i[g>>0]=i[b+12>>0]|0;a=(a|0)==(b|0)?e:a}if(!(h&(a|0)!=0))return;if(m){i[d+12>>0]=1;return}else g=f;while(1){f=g+8|0;h=k[f>>2]|0;c=g+12|0;d=(i[c>>0]|0)!=0;if((k[h>>2]|0)==(g|0)){if(!d){i[c>>0]=1;i[h+12>>0]=0;e=g+4|0;c=k[e>>2]|0;k[h>>2]=c;if(c)k[c+8>>2]=h;d=h+8|0;k[f>>2]=k[d>>2];c=k[d>>2]|0;if((k[c>>2]|0)==(h|0))k[c>>2]=g;else k[c+4>>2]=g;k[e>>2]=h;k[d>>2]=g;a=(a|0)==(h|0)?g:a;g=k[h>>2]|0}e=k[g>>2]|0;f=(e|0)==0;if(!f?(i[e+12>>0]|0)==0:0){c=e;a=g;h=76;break}c=g+4|0;d=k[c>>2]|0;if((d|0)!=0?(i[d+12>>0]|0)==0:0){h=67;break}i[g+12>>0]=0;c=k[g+8>>2]|0;d=c+12|0;if((c|0)==(a|0)|(i[d>>0]|0)==0){h=64;break}o=k[c+8>>2]|0;c=(k[o>>2]|0)==(c|0)?o+4|0:o}else{if(d)f=g;else{i[c>>0]=1;i[h+12>>0]=0;o=h+4|0;e=k[o>>2]|0;c=k[e>>2]|0;k[o>>2]=c;if(c)k[c+8>>2]=h;c=h+8|0;k[e+8>>2]=k[c>>2];d=k[c>>2]|0;if((k[d>>2]|0)==(h|0))k[d>>2]=e;else k[d+4>>2]=e;k[e>>2]=h;k[c>>2]=e;f=k[g>>2]|0;a=(a|0)==(f|0)?g:a;f=k[f+4>>2]|0}c=k[f>>2]|0;if((c|0)!=0?(n=c+12|0,(i[n>>0]|0)==0):0){h=37;break}c=k[f+4>>2]|0;if((c|0)!=0?(i[c+12>>0]|0)==0:0){a=c;c=f;h=46;break}i[f+12>>0]=0;c=k[f+8>>2]|0;if((c|0)==(a|0)){h=35;break}if(!(i[c+12>>0]|0)){a=c;h=35;break}o=k[c+8>>2]|0;c=(k[o>>2]|0)==(c|0)?o+4|0:o}g=k[c>>2]|0}do if((h|0)==35){i[a+12>>0]=1;return}else if((h|0)==37){a=k[f+4>>2]|0;if(!a)a=n;else{if(!(i[a+12>>0]|0)){c=f;h=46;break}a=c+12|0}i[a>>0]=1;i[f+12>>0]=0;e=c+4|0;a=k[e>>2]|0;k[f>>2]=a;if(a)k[a+8>>2]=f;a=f+8|0;k[c+8>>2]=k[a>>2];d=k[a>>2]|0;if((k[d>>2]|0)==(f|0))k[d>>2]=c;else k[d+4>>2]=c;k[e>>2]=f;k[a>>2]=c;a=f;h=46}else if((h|0)==64){i[d>>0]=1;return}else if((h|0)==67){if(!f){if(!(i[e+12>>0]|0)){c=e;a=g;h=76;break}d=g+4|0;c=d;d=k[d>>2]|0}i[d+12>>0]=1;i[g+12>>0]=0;a=k[d>>2]|0;k[c>>2]=a;if(a)k[a+8>>2]=g;a=g+8|0;k[d+8>>2]=k[a>>2];c=k[a>>2]|0;if((k[c>>2]|0)==(g|0))k[c>>2]=d;else k[c+4>>2]=d;k[d>>2]=g;k[a>>2]=d;c=g;a=d;h=76}while(0);if((h|0)==46){e=k[c+8>>2]|0;o=e+12|0;i[c+12>>0]=i[o>>0]|0;i[o>>0]=1;i[a+12>>0]=1;o=e+4|0;d=k[o>>2]|0;a=k[d>>2]|0;k[o>>2]=a;if(a)k[a+8>>2]=e;a=e+8|0;k[d+8>>2]=k[a>>2];c=k[a>>2]|0;if((k[c>>2]|0)==(e|0))k[c>>2]=d;else k[c+4>>2]=d;k[d>>2]=e;k[a>>2]=d;return}else if((h|0)==76){f=k[a+8>>2]|0;d=f+12|0;i[a+12>>0]=i[d>>0]|0;i[d>>0]=1;i[c+12>>0]=1;d=k[f>>2]|0;e=d+4|0;a=k[e>>2]|0;k[f>>2]=a;if(a)k[a+8>>2]=f;a=f+8|0;k[d+8>>2]=k[a>>2];c=k[a>>2]|0;if((k[c>>2]|0)==(f|0))k[c>>2]=d;else k[c+4>>2]=d;k[e>>2]=f;k[a>>2]=d;return}}function Nc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0.0,n=0.0,o=0.0,q=0.0,s=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0.0,O=0.0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0.0,ia=0,ja=0.0,ka=0.0,la=0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0;gb=r;r=r+11200|0;Na=gb+10416|0;Oa=gb+9376|0;Ma=gb+8336|0;Ea=gb+8072|0;Fa=gb+7812|0;Xa=gb+7552|0;Ga=gb+7292|0;Ha=gb+7032|0;Ya=gb+6772|0;Ia=gb+792|0;Ja=gb+6512|0;Za=gb+6252|0;Ka=gb+5992|0;La=gb+528|0;Wa=gb+5732|0;Pa=gb+5472|0;Qa=gb+5212|0;Ra=gb+4952|0;Sa=gb+4692|0;Ua=gb+264|0;Va=gb;_a=gb+3912|0;Ta=gb+3132|0;Z=gb+2872|0;_=gb+2612|0;$=gb+2352|0;aa=gb+2092|0;ca=gb+1832|0;ba=gb+1572|0;fa=gb+1312|0;ga=gb+1052|0;U=k[b>>2]|0;$a=b+8|0;T=k[$a>>2]|0;if((U|0)==(T|0))f=(k[b+4>>2]|0)!=(k[b+12>>2]|0);else f=1;V=k[c>>2]|0;cb=c+8|0;S=k[cb>>2]|0;if((V|0)==(S|0))g=(k[c+4>>2]|0)!=(k[c+12>>2]|0);else g=1;ea=k[d>>2]|0;fb=d+8|0;da=k[fb>>2]|0;if((ea|0)==(da|0))h=(k[d+4>>2]|0)!=(k[d+12>>2]|0);else h=1;do if(!f){if(g){if(h)if((k[c+16>>2]|0)==(k[d+16>>2]|0)){e=0;r=gb;return e|0}else{Rc(a+4|0,b,c,d,1,e);break}if(((V|0)==(U|0)?((S|0)==(ea|0)?(k[c+4>>2]|0)==(k[b+4>>2]|0):0):0)?(k[c+12>>2]|0)==(k[d+4>>2]|0):0){e=0;r=gb;return e|0}Qc(a+4|0,b,d,c,2,e);break}D=b+4|0;f=k[D>>2]|0;G=c+4|0;j=k[G>>2]|0;P=d+4|0;l=k[P>>2]|0;g=Pc(U,f,V,j,ea,l)|0;if(h){f=Pc(U,f,V,j,da,k[d+12>>2]|0)|0;if((V|0)<(U|0)){if((g|0)!=-1&(f|0)!=-1){e=0;r=gb;return e|0}}else if((f|0)!=-1){e=0;r=gb;return e|0}Qc(a+4|0,b,c,d,3,e);break}if((g|0)!=-1){e=0;r=gb;return e|0}v=+(U|0);w=+(V|0);O=v-w;q=+(ea|0);ha=w-q;s=+(f|0);n=+(j|0);ja=s-n;u=+(l|0);ka=n-u;Ba=((V|0)<0)<<31>>31;g=be(U|0,((U|0)<0)<<31>>31|0,V|0,Ba|0)|0;Ca=L;Ba=be(V|0,Ba|0,ea|0,((ea|0)<0)<<31>>31|0)|0;h=L;da=((j|0)<0)<<31>>31;za=be(f|0,((f|0)<0)<<31>>31|0,j|0,da|0)|0;Aa=L;da=be(j|0,da|0,l|0,((l|0)<0)<<31>>31|0)|0;ea=L;Da=(Ca|0)<0;la=be(0,0,g|0,Ca|0)|0;f=Da?L:Ca;Ca=(h|0)<0;j=be(0,0,Ba|0,h|0)|0;h=Ca?L:h;l=(Aa|0)<0;ya=be(0,0,za|0,Aa|0)|0;Aa=l?L:Aa;a=(ea|0)<0;Y=be(0,0,da|0,ea|0)|0;f=ne((a?Y:da)|0,(a?L:ea)|0,(Da?la:g)|0,f|0)|0;g=L;h=ne((l?ya:za)|0,Aa|0,(Ca?j:Ba)|0,h|0)|0;j=L;l=Ca^l;do if(Da^a){if(!l){a=ge(f|0,g|0,h|0,j|0)|0;m=-(+(a>>>0)+4294967296.0*+(L>>>0));break}if(g>>>0>j>>>0|(g|0)==(j|0)&f>>>0>h>>>0){a=be(f|0,g|0,h|0,j|0)|0;m=-(+(a>>>0)+4294967296.0*+(L>>>0));break}else{a=be(h|0,j|0,f|0,g|0)|0;m=+(a>>>0)+4294967296.0*+(L>>>0);break}}else{if(l){a=ge(f|0,g|0,h|0,j|0)|0;m=+(a>>>0)+4294967296.0*+(L>>>0);break}if(g>>>0<j>>>0|(g|0)==(j|0)&f>>>0<h>>>0){a=be(h|0,j|0,f|0,g|0)|0;m=-(+(a>>>0)+4294967296.0*+(L>>>0));break}else{a=be(f|0,g|0,h|0,j|0)|0;m=+(a>>>0)+4294967296.0*+(L>>>0);break}}while(0);ma=.5/m;x=w+q;o=s+n;y=n+u;C=v-q;B=s-u;z=O*(v+w);m=ka*z;if(m<0.0){n=0.0-m;if(m>0.0){m=(m*2.0+0.0)/n;m=m<0.0?-m:m}else m=2.0;u=0.0;v=0.0;q=m+1.0}else{u=m+0.0;v=3.0;n=0.0;q=0.0}A=ja*o;m=ka*A;do if(m<0.0){o=n-m;if(m>0.0|n<0.0){m=(m*2.0+n*q)/o;m=m<0.0?-m:m}else m=q<2.0?2.0:q;n=o;q=m+1.0}else{o=m+u;if(u<0.0?m>0.0|u>0.0:0){v=(u*v-m*2.0)/o;u=o;v=(v<0.0?-v:v)+1.0;break}u=o;v=v<2.0?3.0:v+1.0}while(0);w=ha*x;o=ja*w;do if(o<0.0){s=u-o;if(o>0.0|u<0.0){m=(o*2.0+u*v)/s;m=m<0.0?-m:m}else m=v<2.0?2.0:v;v=m+1.0}else{m=o+n;if(n<0.0?o>0.0|n>0.0:0){q=(n*q-o*2.0)/m;n=m;q=(q<0.0?-q:q)+1.0;s=u;break}n=m;q=q<2.0?3.0:q+1.0;s=u}while(0);y=ka*y;o=ja*y;do if(o<0.0){u=s-o;if(o>0.0|s<0.0){m=(o*2.0+s*v)/u;m=m<0.0?-m:m}else m=v<2.0?2.0:v;N=n;s=u;v=m+1.0}else{m=o+n;if(n<0.0?o>0.0|n>0.0:0){q=(n*q-o*2.0)/m;N=m;q=(q<0.0?-q:q)+1.0;break}N=m;q=q<2.0?3.0:q+1.0}while(0);m=O*w;if(m<0.0){n=0.0-m;if(m>0.0){m=(m*2.0+0.0)/n;m=m<0.0?-m:m}else m=2.0;x=0.0;w=0.0;u=m+1.0}else{x=m+0.0;w=3.0;n=0.0;u=0.0}m=O*y;do if(m<0.0){o=n-m;if(m>0.0|n<0.0){m=(m*2.0+n*u)/o;m=m<0.0?-m:m}else m=u<2.0?2.0:u;n=o;y=m+1.0}else{o=m+x;if(x<0.0?m>0.0|x>0.0:0){w=(x*w-m*2.0)/o;y=u;x=o;w=(w<0.0?-w:w)+1.0;break}y=u;x=o;w=w<2.0?3.0:w+1.0}while(0);o=ha*z;do if(o<0.0){u=x-o;if(o>0.0|x<0.0){m=(o*2.0+x*w)/u;m=m<0.0?-m:m}else m=w<2.0?2.0:w;z=n;w=m+1.0}else{m=o+n;if(n<0.0?o>0.0|n>0.0:0){y=(n*y-o*2.0)/m;z=m;y=(y<0.0?-y:y)+1.0;u=x;break}z=m;y=y<2.0?3.0:y+1.0;u=x}while(0);n=ha*A;a:do if(n<0.0){o=u-n;if(n>0.0|u<0.0){m=(n*2.0+u*w)/o;m=m<0.0?-m:m}else m=w<2.0?2.0:w;w=m+1.0}else{m=n+z;do if(z<0.0){if(!(n>0.0|z>0.0))break;y=(z*y-n*2.0)/m;z=m;o=u;y=(y<0.0?-y:y)+1.0;break a}while(0);z=m;o=u;y=y<2.0?3.0:y+1.0}while(0);n=+X(+((O*O+ja*ja)*(ha*ha+ka*ka)*(C*C+B*B)));b:do if(n<0.0){m=s-n;if(s<0.0|n>0.0){n=(s*v+n*5.0)/m;n=n<0.0?-n:n}else n=v<5.0?5.0:v;C=N;A=m;B=q;x=n+1.0}else{m=N+n;do if(N<0.0){if(!(N>0.0|n>0.0))break;B=(N*q-n*5.0)/m;C=m;A=s;B=(B<0.0?-B:B)+1.0;x=v;break b}while(0);C=m;A=s;B=q<5.0?6.0:q+1.0;x=v}while(0);m=s-N;n=o-z;f=o<0.0|z>0.0;u=A-C;g=C>0.0|A<0.0;p[e>>3]=ma*m;Y=e+8|0;p[Y>>3]=ma*n;W=e+16|0;p[W>>3]=ma*u;i[e+24>>0]=1;do if(s<0.0|N>0.0){if(!(s>0.0|N<0.0)){ia=97;break}m=(s*v+N*q)/m;if(!(m<0.0))break;m=-m}else ia=97;while(0);if((ia|0)==97)m=v<q?q:v;T=m+1.0>64.0;do if(f){if(!(o>0.0|z<0.0)){ia=102;break}m=(o*w+z*y)/n;if(!(m<0.0))break;m=-m}else ia=102;while(0);if((ia|0)==102)m=w<y?y:w;V=m+1.0>64.0;do if(g){if(!(C<0.0|A>0.0)){ia=107;break}m=(B*C+x*A)/u;if(!(m<0.0))break;m=-m}else ia=107;while(0);if((ia|0)==107)m=x<B?B:x;S=m+1.0>64.0;if(!(T|V|S))break;E=k[b>>2]|0;F=((E|0)<0)<<31>>31;K=k[c>>2]|0;M=((K|0)<0)<<31>>31;f=be(E|0,F|0,K|0,M|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;a=L;k[_a>>2]=Da;k[_a+4>>2]=a;k[_a+256>>2]=(a|0)!=0?-2:-1;break}else{k[_a+256>>2]=0;break}else{k[_a>>2]=f;k[_a+4>>2]=g;k[_a+256>>2]=(g|0)!=0?2:1}while(0);U=_a+260|0;I=k[d>>2]|0;J=((I|0)<0)<<31>>31;f=be(K|0,M|0,I|0,J|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;a=L;k[U>>2]=Da;k[_a+264>>2]=a;k[_a+516>>2]=(a|0)!=0?-2:-1;break}else{k[_a+516>>2]=0;break}else{k[U>>2]=f;k[_a+264>>2]=g;k[_a+516>>2]=(g|0)!=0?2:1}while(0);R=_a+520|0;f=be(E|0,F|0,I|0,J|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;a=L;k[R>>2]=Da;k[_a+524>>2]=a;k[_a+776>>2]=(a|0)!=0?-2:-1;break}else{k[_a+776>>2]=0;break}else{k[R>>2]=f;k[_a+524>>2]=g;k[_a+776>>2]=(g|0)!=0?2:1}while(0);j=k[D>>2]|0;D=((j|0)<0)<<31>>31;G=k[G>>2]|0;H=((G|0)<0)<<31>>31;f=be(j|0,D|0,G|0,H|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;a=L;k[Ta>>2]=Da;k[Ta+4>>2]=a;k[Ta+256>>2]=(a|0)!=0?-2:-1;break}else{k[Ta+256>>2]=0;break}else{k[Ta>>2]=f;k[Ta+4>>2]=g;k[Ta+256>>2]=(g|0)!=0?2:1}while(0);Q=Ta+260|0;h=k[P>>2]|0;l=((h|0)<0)<<31>>31;f=be(G|0,H|0,h|0,l|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;a=L;k[Q>>2]=Da;k[Ta+264>>2]=a;k[Ta+516>>2]=(a|0)!=0?-2:-1;break}else{k[Ta+516>>2]=0;break}else{k[Q>>2]=f;k[Ta+264>>2]=g;k[Ta+516>>2]=(g|0)!=0?2:1}while(0);P=Ta+520|0;f=be(j|0,D|0,h|0,l|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;a=L;k[P>>2]=Da;k[Ta+524>>2]=a;k[Ta+776>>2]=(a|0)!=0?-2:-1;break}else{k[Ta+776>>2]=0;break}else{k[P>>2]=f;k[Ta+524>>2]=g;k[Ta+776>>2]=(g|0)!=0?2:1}while(0);f=ge(K|0,M|0,E|0,F|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;a=L;k[Na>>2]=Da;k[Na+4>>2]=a;k[Na+256>>2]=(a|0)!=0?-2:-1;break}else{k[Na+256>>2]=0;break}else{k[Na>>2]=f;k[Na+4>>2]=g;k[Na+256>>2]=(g|0)!=0?2:1}while(0);E=Na+260|0;f=ge(I|0,J|0,K|0,M|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;a=L;k[E>>2]=Da;k[Na+264>>2]=a;k[Na+516>>2]=(a|0)!=0?-2:-1;break}else{k[Na+516>>2]=0;break}else{k[E>>2]=f;k[Na+264>>2]=g;k[Na+516>>2]=(g|0)!=0?2:1}while(0);f=ge(G|0,H|0,j|0,D|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;a=L;k[Oa>>2]=Da;k[Oa+4>>2]=a;k[Oa+256>>2]=(a|0)!=0?-2:-1;break}else{k[Oa+256>>2]=0;break}else{k[Oa>>2]=f;k[Oa+4>>2]=g;k[Oa+256>>2]=(g|0)!=0?2:1}while(0);j=Oa+260|0;f=ge(h|0,l|0,G|0,H|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;a=L;k[j>>2]=Da;k[Oa+264>>2]=a;k[Oa+516>>2]=(a|0)!=0?-2:-1;break}else{k[Oa+516>>2]=0;break}else{k[j>>2]=f;k[Oa+264>>2]=g;k[Oa+516>>2]=(g|0)!=0?2:1}while(0);Sc(Ea,_a,Q);Sc(Fa,U,Ta);Uc(Ma,Ea,Fa);g=k[Ma+256>>2]|0;f=(g|0)>-1?g:0-g|0;c:do switch(f|0){case 0:{f=0;m=0.0;break}case 1:{m=+((k[Ma>>2]|0)>>>0);ia=164;break}case 2:{m=+((k[Ma+4>>2]|0)>>>0)*4294967296.0+ +((k[Ma>>2]|0)>>>0);ia=164;break}default:{m=+((k[Ma+(f+-3<<2)>>2]|0)>>>0)+(+((k[Ma+(f+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Ma+(f+-2<<2)>>2]|0)>>>0))*4294967296.0;h=f<<5;f=h+-96|0;m=(g|0)<0?-m:m;if((f|0)>1023){m=m*89884656743115795.0e291;f=h+-1119|0;if((f|0)<=1023)break c;f=h+-2142|0;f=(f|0)>1023?1023:f;m=m*89884656743115795.0e291;break c}if((f|0)>=-1022)break c;m=m*2.2250738585072014e-308;f=h+926|0;if((f|0)>=-1022)break c;f=h+1948|0;f=(f|0)<-1022?-1022:f;m=m*2.2250738585072014e-308}}while(0);if((ia|0)==164){f=0;m=(g|0)<0?-m:m}Fa=ee(f+1023|0,0,52)|0;Ma=L;k[t>>2]=Fa;k[t+4>>2]=Ma;q=.5/(m*+p[t>>3]);Sc(Ga,_a,Na);Sc(Ha,Ta,Oa);Tc(Xa,Ga,Ha);Sc(Ia,U,E);Sc(Ja,Q,j);Tc(Ya,Ia,Ja);if(T|S){Sc(Ka,Xa,Q);Sc(La,Ya,Ta);Uc(Za,Ka,La);j=Za+256|0;g=k[j>>2]|0;f=(g|0)>-1?g:0-g|0;d:do switch(f|0){case 0:{f=0;m=0.0;break}case 1:{m=+((k[Za>>2]|0)>>>0);ia=175;break}case 2:{m=+((k[Za+4>>2]|0)>>>0)*4294967296.0+ +((k[Za>>2]|0)>>>0);ia=175;break}default:{m=+((k[Za+(f+-3<<2)>>2]|0)>>>0)+(+((k[Za+(f+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Za+(f+-2<<2)>>2]|0)>>>0))*4294967296.0;h=f<<5;f=h+-96|0;m=(g|0)<0?-m:m;if((f|0)>1023){m=m*89884656743115795.0e291;f=h+-1119|0;if((f|0)<=1023)break d;f=h+-2142|0;f=(f|0)>1023?1023:f;m=m*89884656743115795.0e291;break d}if((f|0)>=-1022)break d;m=m*2.2250738585072014e-308;f=h+926|0;if((f|0)>=-1022)break d;f=h+1948|0;f=(f|0)<-1022?-1022:f;m=m*2.2250738585072014e-308}}while(0);if((ia|0)==175){f=0;m=(g|0)<0?-m:m}Na=ee(f+1023|0,0,52)|0;Oa=L;k[t>>2]=Na;k[t+4>>2]=Oa;p[e>>3]=q*(m*+p[t>>3]);if(S){Sc(Pa,_a,_a);Sc(Qa,Ta,Ta);Tc(Ra,Pa,Qa);Sc(Ua,U,U);Sc(Va,Q,Q);Tc(Sa,Ua,Va);Sc(Z,Ra,Sa);Sc($,R,R);Sc(aa,P,P);Tc(_,$,aa);Sc(Wa,Z,_);g=k[Wa+256>>2]|0;f=(g|0)>-1?g:0-g|0;e:do switch(f|0){case 0:{f=0;m=0.0;break}case 1:{m=+((k[Wa>>2]|0)>>>0);ia=186;break}case 2:{m=+((k[Wa+4>>2]|0)>>>0)*4294967296.0+ +((k[Wa>>2]|0)>>>0);ia=186;break}default:{m=+((k[Wa+(f+-3<<2)>>2]|0)>>>0)+(+((k[Wa+(f+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Wa+(f+-2<<2)>>2]|0)>>>0))*4294967296.0;h=f<<5;f=h+-96|0;m=(g|0)<0?-m:m;if((f|0)>1023){m=m*89884656743115795.0e291;f=h+-1119|0;if((f|0)<=1023)break e;f=h+-2142|0;f=(f|0)>1023?1023:f;m=m*89884656743115795.0e291;break e}if((f|0)>=-1022)break e;m=m*2.2250738585072014e-308;f=h+926|0;if((f|0)>=-1022)break e;f=h+1948|0;f=(f|0)<-1022?-1022:f;m=m*2.2250738585072014e-308}}while(0);if((ia|0)==186){f=0;m=(g|0)<0?-m:m}Ua=ee(f+1023|0,0,52)|0;Va=L;k[t>>2]=Ua;k[t+4>>2]=Va;o=+X(+(m*+p[t>>3]));n=+p[e>>3];do if(!(n<0.0)){m=q*o;if(q<0.0){p[W>>3]=n-m;break}else{p[W>>3]=n+m;break}}else{Sc(ba,Za,Za);Uc(ca,ba,Wa);g=k[ca+256>>2]|0;f=(g|0)>-1?g:0-g|0;f:do switch(f|0){case 0:{f=0;m=0.0;break}case 1:{m=+((k[ca>>2]|0)>>>0);ia=200;break}case 2:{m=+((k[ca+4>>2]|0)>>>0)*4294967296.0+ +((k[ca>>2]|0)>>>0);ia=200;break}default:{m=+((k[ca+(f+-3<<2)>>2]|0)>>>0)+(+((k[ca+(f+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[ca+(f+-2<<2)>>2]|0)>>>0))*4294967296.0;h=f<<5;f=h+-96|0;m=(g|0)<0?-m:m;if((f|0)>1023){m=m*89884656743115795.0e291;f=h+-1119|0;if((f|0)<=1023)break f;f=h+-2142|0;f=(f|0)>1023?1023:f;m=m*89884656743115795.0e291;break f}if((f|0)>=-1022)break f;m=m*2.2250738585072014e-308;f=h+926|0;if((f|0)>=-1022)break f;f=h+1948|0;f=(f|0)<-1022?-1022:f;m=m*2.2250738585072014e-308}}while(0);if((ia|0)==200){f=0;m=(g|0)<0?-m:m}f=ee(f+1023|0,0,52)|0;g=L;k[t>>2]=f;k[t+4>>2]=g;n=q*(m*+p[t>>3]);g=k[j>>2]|0;f=(g|0)>-1?g:0-g|0;g:do switch(f|0){case 0:{f=0;m=0.0;break}case 1:{m=+((k[Za>>2]|0)>>>0);ia=210;break}case 2:{m=+((k[Za+4>>2]|0)>>>0)*4294967296.0+ +((k[Za>>2]|0)>>>0);ia=210;break}default:{m=+((k[Za+(f+-3<<2)>>2]|0)>>>0)+(+((k[Za+(f+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Za+(f+-2<<2)>>2]|0)>>>0))*4294967296.0;h=f<<5;f=h+-96|0;m=(g|0)<0?-m:m;if((f|0)>1023){m=m*89884656743115795.0e291;f=h+-1119|0;if((f|0)<=1023)break g;f=h+-2142|0;f=(f|0)>1023?1023:f;m=m*89884656743115795.0e291;break g}if((f|0)>=-1022)break g;m=m*2.2250738585072014e-308;f=h+926|0;if((f|0)>=-1022)break g;f=h+1948|0;f=(f|0)<-1022?-1022:f;m=m*2.2250738585072014e-308}}while(0);if((ia|0)==210){f=0;m=(g|0)<0?-m:m}Va=ee(f+1023|0,0,52)|0;Wa=L;k[t>>2]=Va;k[t+4>>2]=Wa;p[W>>3]=n/(o+m*+p[t>>3])}while(0)}}if(V){Sc(fa,Ya,_a);Sc(ga,Xa,U);Uc(Za,fa,ga);g=k[Za+256>>2]|0;f=(g|0)>-1?g:0-g|0;h:do switch(f|0){case 0:{f=0;m=0.0;break}case 1:{m=+((k[Za>>2]|0)>>>0);ia=224;break}case 2:{m=+((k[Za+4>>2]|0)>>>0)*4294967296.0+ +((k[Za>>2]|0)>>>0);ia=224;break}default:{m=+((k[Za+(f+-3<<2)>>2]|0)>>>0)+(+((k[Za+(f+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Za+(f+-2<<2)>>2]|0)>>>0))*4294967296.0;h=f<<5;f=h+-96|0;m=(g|0)<0?-m:m;if((f|0)>1023){m=m*89884656743115795.0e291;f=h+-1119|0;if((f|0)<=1023)break h;f=h+-2142|0;f=(f|0)>1023?1023:f;m=m*89884656743115795.0e291;break h}if((f|0)>=-1022)break h;m=m*2.2250738585072014e-308;f=h+926|0;if((f|0)>=-1022)break h;f=h+1948|0;f=(f|0)<-1022?-1022:f;m=m*2.2250738585072014e-308}}while(0);if((ia|0)==224){f=0;m=(g|0)<0?-m:m}Za=ee(f+1023|0,0,52)|0;_a=L;k[t>>2]=Za;k[t+4>>2]=_a;p[Y>>3]=q*(m*+p[t>>3])}}else{if(!g){if(!h){g=k[c+4>>2]|0;h=k[d+4>>2]|0;f=Pc(V,g,ea,h,U,k[b+4>>2]|0)|0;if((V|0)<(ea|0)){if((f|0)!=-1&(Pc(V,g,ea,h,T,k[b+12>>2]|0)|0)!=-1){e=0;r=gb;return e|0}}else if((f|0)!=-1){e=0;r=gb;return e|0}Qc(a+4|0,c,d,b,1,e);break}if((k[b+16>>2]|0)==(k[d+16>>2]|0)){e=0;r=gb;return e|0}f=(k[d+24>>2]&32|0)==0;if(!(k[b+24>>2]&32))if(f)ia=254;else{e=0;r=gb;return e|0}else if(!f)ia=254;if((ia|0)==254?(Pc(U,k[b+4>>2]|0,V,k[c+4>>2]|0,da,k[d+12>>2]|0)|0)!=-1:0){e=0;r=gb;return e|0}Rc(a+4|0,c,b,d,2,e);break}f=k[b+16>>2]|0;g=k[c+16>>2]|0;if(!h)if((f|0)==(g|0)){e=0;r=gb;return e|0}else{Rc(a+4|0,d,b,c,3,e);break}if(!((f|0)!=(g|0)?(g|0)!=(k[d+16>>2]|0):0)){e=0;r=gb;return e|0}O=+(T|0)-+(U|0);ya=b+12|0;J=k[ya>>2]|0;za=b+4|0;K=k[za>>2]|0;xa=+(J|0)-+(K|0);M=((U|0)<0)<<31>>31;P=((K|0)<0)<<31>>31;Q=((T|0)<0)<<31>>31;R=((J|0)<0)<<31>>31;Ca=(U|0)<0;g=be(0,0,U|0,M|0)|0;f=Ca?L:M;l=(K|0)<0;la=be(0,0,K|0,P|0)|0;Aa=l?L:P;Ba=(T|0)<0;j=be(0,0,T|0,Q|0)|0;h=Ba?L:Q;Da=(J|0)<0;ga=be(0,0,J|0,R|0)|0;f=ne((Da?ga:J)|0,(Da?L:R)|0,(Ca?g:U)|0,f|0)|0;g=L;h=ne((l?la:K)|0,Aa|0,(Ba?j:T)|0,h|0)|0;j=L;l=Ba^l;do if(Ca^Da){if(!l){Da=ge(h|0,j|0,f|0,g|0)|0;wa=-(+(Da>>>0)+4294967296.0*+(L>>>0));break}if(g>>>0>j>>>0|(g|0)==(j|0)&f>>>0>h>>>0){Da=be(f|0,g|0,h|0,j|0)|0;wa=-(+(Da>>>0)+4294967296.0*+(L>>>0));break}else{Da=be(h|0,j|0,f|0,g|0)|0;wa=+(Da>>>0)+4294967296.0*+(L>>>0);break}}else{if(l){Da=ge(h|0,j|0,f|0,g|0)|0;wa=+(Da>>>0)+4294967296.0*+(L>>>0);break}if(g>>>0<j>>>0|(g|0)==(j|0)&f>>>0<h>>>0){Da=be(h|0,j|0,f|0,g|0)|0;wa=-(+(Da>>>0)+4294967296.0*+(L>>>0));break}else{Da=be(f|0,g|0,h|0,j|0)|0;wa=+(Da>>>0)+4294967296.0*+(L>>>0);break}}while(0);B=+(S|0)-+(V|0);Aa=c+12|0;D=k[Aa>>2]|0;Ba=c+4|0;E=k[Ba>>2]|0;ra=+(D|0)-+(E|0);F=((V|0)<0)<<31>>31;G=((E|0)<0)<<31>>31;H=((S|0)<0)<<31>>31;I=((D|0)<0)<<31>>31;Ca=(V|0)<0;g=be(0,0,V|0,F|0)|0;f=Ca?L:F;l=(E|0)<0;fa=be(0,0,E|0,G|0)|0;ga=l?L:G;la=(S|0)<0;j=be(0,0,S|0,H|0)|0;h=la?L:H;Da=(D|0)<0;ca=be(0,0,D|0,I|0)|0;f=ne((Da?ca:D)|0,(Da?L:I)|0,(Ca?g:V)|0,f|0)|0;g=L;h=ne((l?fa:E)|0,ga|0,(la?j:S)|0,h|0)|0;j=L;l=la^l;do if(Ca^Da){if(!l){Da=ge(h|0,j|0,f|0,g|0)|0;sa=-(+(Da>>>0)+4294967296.0*+(L>>>0));break}if(g>>>0>j>>>0|(g|0)==(j|0)&f>>>0>h>>>0){Da=be(f|0,g|0,h|0,j|0)|0;sa=-(+(Da>>>0)+4294967296.0*+(L>>>0));break}else{Da=be(h|0,j|0,f|0,g|0)|0;sa=+(Da>>>0)+4294967296.0*+(L>>>0);break}}else{if(l){Da=ge(h|0,j|0,f|0,g|0)|0;sa=+(Da>>>0)+4294967296.0*+(L>>>0);break}if(g>>>0<j>>>0|(g|0)==(j|0)&f>>>0<h>>>0){Da=be(h|0,j|0,f|0,g|0)|0;sa=-(+(Da>>>0)+4294967296.0*+(L>>>0));break}else{Da=be(f|0,g|0,h|0,j|0)|0;sa=+(Da>>>0)+4294967296.0*+(L>>>0);break}}while(0);C=+(da|0)-+(ea|0);Ca=d+12|0;Z=k[Ca>>2]|0;Da=d+4|0;_=k[Da>>2]|0;ta=+(Z|0)-+(_|0);$=((ea|0)<0)<<31>>31;aa=((_|0)<0)<<31>>31;ba=((da|0)<0)<<31>>31;ca=((Z|0)<0)<<31>>31;ga=(ea|0)<0;g=be(0,0,ea|0,$|0)|0;f=ga?L:$;l=(_|0)<0;W=be(0,0,_|0,aa|0)|0;Y=l?L:aa;fa=(da|0)<0;j=be(0,0,da|0,ba|0)|0;h=fa?L:ba;la=(Z|0)<0;hb=be(0,0,Z|0,ca|0)|0;f=ne((la?hb:Z)|0,(la?L:ca)|0,(ga?g:ea)|0,f|0)|0;g=L;h=ne((l?W:_)|0,Y|0,(fa?j:da)|0,h|0)|0;j=L;l=fa^l;do if(ga^la){if(!l){hb=ge(h|0,j|0,f|0,g|0)|0;ua=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}if(g>>>0>j>>>0|(g|0)==(j|0)&f>>>0>h>>>0){hb=be(f|0,g|0,h|0,j|0)|0;ua=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}else{hb=be(h|0,j|0,f|0,g|0)|0;ua=+(hb>>>0)+4294967296.0*+(L>>>0);break}}else{if(l){hb=ge(h|0,j|0,f|0,g|0)|0;ua=+(hb>>>0)+4294967296.0*+(L>>>0);break}if(g>>>0<j>>>0|(g|0)==(j|0)&f>>>0<h>>>0){hb=be(h|0,j|0,f|0,g|0)|0;ua=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}else{hb=be(f|0,g|0,h|0,j|0)|0;ua=+(hb>>>0)+4294967296.0*+(L>>>0);break}}while(0);qa=+X(+(O*O+xa*xa));va=+X(+(B*B+ra*ra));pa=+X(+(C*C+ta*ta));U=be(T|0,Q|0,U|0,M|0)|0;Y=L;R=be(J|0,R|0,K|0,P|0)|0;T=L;J=be(S|0,H|0,V|0,F|0)|0;K=L;M=be(D|0,I|0,E|0,G|0)|0;P=L;W=(Y|0)<0;V=be(0,0,U|0,Y|0)|0;U=W?V:U;V=W?L:Y;Y=(T|0)<0;S=be(0,0,R|0,T|0)|0;S=Y?S:R;T=Y?L:T;R=(K|0)<0;Q=be(0,0,J|0,K|0)|0;J=R?Q:J;K=R?L:K;Q=(P|0)<0;f=be(0,0,M|0,P|0)|0;M=Q?f:M;P=Q?L:P;f=ne(M|0,P|0,U|0,V|0)|0;g=L;h=ne(J|0,K|0,S|0,T|0)|0;j=L;l=Y^R;do if(W^Q){if(!l){hb=ge(f|0,g|0,h|0,j|0)|0;w=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}if(g>>>0>j>>>0|(g|0)==(j|0)&f>>>0>h>>>0){hb=be(f|0,g|0,h|0,j|0)|0;w=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}else{hb=be(h|0,j|0,f|0,g|0)|0;w=+(hb>>>0)+4294967296.0*+(L>>>0);break}}else{if(l){hb=ge(f|0,g|0,h|0,j|0)|0;w=+(hb>>>0)+4294967296.0*+(L>>>0);break}if(g>>>0<j>>>0|(g|0)==(j|0)&f>>>0<h>>>0){hb=be(h|0,j|0,f|0,g|0)|0;w=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}else{hb=be(f|0,g|0,h|0,j|0)|0;w=+(hb>>>0)+4294967296.0*+(L>>>0);break}}while(0);D=be(da|0,ba|0,ea|0,$|0)|0;E=L;F=be(Z|0,ca|0,_|0,aa|0)|0;G=L;I=(E|0)<0;H=be(0,0,D|0,E|0)|0;D=I?H:D;E=I?L:E;H=(G|0)<0;j=be(0,0,F|0,G|0)|0;F=H?j:F;G=H?L:G;j=ne(F|0,G|0,J|0,K|0)|0;l=L;g=ne(D|0,E|0,M|0,P|0)|0;h=L;f=Q^I;do if(R^H){if(!f){hb=ge(j|0,l|0,g|0,h|0)|0;z=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}if(l>>>0>h>>>0|(l|0)==(h|0)&j>>>0>g>>>0){hb=be(j|0,l|0,g|0,h|0)|0;z=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}else{hb=be(g|0,h|0,j|0,l|0)|0;z=+(hb>>>0)+4294967296.0*+(L>>>0);break}}else{if(f){hb=ge(j|0,l|0,g|0,h|0)|0;z=+(hb>>>0)+4294967296.0*+(L>>>0);break}if(l>>>0<h>>>0|(l|0)==(h|0)&j>>>0<g>>>0){hb=be(g|0,h|0,j|0,l|0)|0;z=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}else{hb=be(j|0,l|0,g|0,h|0)|0;z=+(hb>>>0)+4294967296.0*+(L>>>0);break}}while(0);j=ne(S|0,T|0,D|0,E|0)|0;l=L;g=ne(U|0,V|0,F|0,G|0)|0;h=L;f=H^W;do if(I^Y){if(!f){hb=ge(j|0,l|0,g|0,h|0)|0;y=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}if(l>>>0>h>>>0|(l|0)==(h|0)&j>>>0>g>>>0){hb=be(j|0,l|0,g|0,h|0)|0;y=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}else{hb=be(g|0,h|0,j|0,l|0)|0;y=+(hb>>>0)+4294967296.0*+(L>>>0);break}}else{if(f){hb=ge(j|0,l|0,g|0,h|0)|0;y=+(hb>>>0)+4294967296.0*+(L>>>0);break}if(l>>>0<h>>>0|(l|0)==(h|0)&j>>>0<g>>>0){hb=be(g|0,h|0,j|0,l|0)|0;y=-(+(hb>>>0)+4294967296.0*+(L>>>0));break}else{hb=be(j|0,l|0,g|0,h|0)|0;y=+(hb>>>0)+4294967296.0*+(L>>>0);break}}while(0);m=pa*w;if(m<0.0){n=0.0-m;if(m>0.0){m=(m*4.0+0.0)/n;m=m<0.0?-m:m}else m=4.0;u=0.0;v=0.0;s=m+1.0}else{u=m+0.0;v=5.0;n=0.0;s=0.0}o=qa*z;do if(o<0.0){q=n-o;if(o>0.0|n<0.0){o=(o*4.0+n*s)/q;o=o<0.0?-o:o}else o=s<4.0?4.0:s;m=u;n=q;s=o+1.0}else{m=o+u;if(u<0.0?o>0.0|u>0.0:0){v=(u*v-o*4.0)/m;v=(v<0.0?-v:v)+1.0;break}v=v<4.0?5.0:v+1.0}while(0);o=va*y;i:do if(o<0.0){q=n-o;if(o>0.0|n<0.0){n=(o*4.0+n*s)/q;n=n<0.0?-n:n}else n=s<4.0?4.0:s;oa=q;q=m;s=n+1.0;na=v}else{q=o+m;do if(m<0.0){if(!(o>0.0|m>0.0))break;na=(m*v-o*4.0)/q;oa=n;na=(na<0.0?-na:na)+1.0;break i}while(0);oa=n;na=v<4.0?5.0:v+1.0}while(0);m=ua*w;if(m<0.0){n=0.0-m;if(m>0.0){m=(m*3.0+0.0)/n;m=m<0.0?-m:m}else m=3.0;w=0.0;x=0.0;u=m+1.0}else{w=m+0.0;x=4.0;n=0.0;u=0.0}o=wa*z;j:do if(o<0.0){v=n-o;if(o>0.0|n<0.0){m=(o*3.0+n*u)/v;m=m<0.0?-m:m}else m=u<3.0?3.0:u;n=v;u=m+1.0}else{m=o+w;do if(w<0.0){if(!(o>0.0|w>0.0))break;x=(w*x-o*3.0)/m;w=m;x=(x<0.0?-x:x)+1.0;break j}while(0);w=m;x=x<3.0?4.0:x+1.0}while(0);m=sa*y;k:do if(m<0.0){o=n-m;if(m>0.0|n<0.0){m=(m*3.0+n*u)/o;m=m<0.0?-m:m}else m=u<3.0?3.0:u;A=o;z=m+1.0;ma=w;N=x}else{o=m+w;do if(w<0.0){if(!(m>0.0|w>0.0))break;N=(w*x-m*3.0)/o;A=n;z=u;ma=o;N=(N<0.0?-N:N)+1.0;break k}while(0);A=n;z=u;ma=o;N=x<3.0?4.0:x+1.0}while(0);n=O*sa*pa;if(n<0.0){m=0.0-n;if(n>0.0){n=(n*5.0+0.0)/m;n=n<0.0?-n:n}else n=5.0;w=n+1.0;u=0.0;v=0.0}else{m=0.0;w=0.0;u=n+0.0;v=6.0}n=wa*B*pa;l:do if(n<0.0){o=u-n;if(n>0.0|u<0.0){n=(n*5.0+u*v)/o;n=n<0.0?-n:n}else n=v<5.0?5.0:v;u=o;v=n+1.0}else{o=n+m;do if(m<0.0){if(!(n>0.0|m>0.0))break;w=(m*w-n*5.0)/o;m=o;w=(w<0.0?-w:w)+1.0;break l}while(0);m=o;w=w<5.0?6.0:w+1.0}while(0);n=B*ua*qa;m:do if(n<0.0){o=m-n;if(n>0.0|m<0.0){n=(n*5.0+m*w)/o;n=n<0.0?-n:n}else n=w<5.0?5.0:w;m=o;w=n+1.0}else{o=n+u;do if(u<0.0){if(!(n>0.0|u>0.0))break;v=(u*v-n*5.0)/o;u=o;v=(v<0.0?-v:v)+1.0;break m}while(0);u=o;v=v<5.0?6.0:v+1.0}while(0);n=sa*C*qa;n:do if(n<0.0){o=u-n;if(n>0.0|u<0.0){n=(n*5.0+u*v)/o;n=n<0.0?-n:n}else n=v<5.0?5.0:v;x=o;v=n+1.0}else{o=n+m;do if(m<0.0){if(!(n>0.0|m>0.0))break;w=(m*w-n*5.0)/o;x=u;m=o;w=(w<0.0?-w:w)+1.0;break n}while(0);x=u;m=o;w=w<5.0?6.0:w+1.0}while(0);n=wa*C*va;o:do if(n<0.0){o=m-n;if(n>0.0|m<0.0){m=(n*5.0+m*w)/o;m=m<0.0?-m:m}else m=w<5.0?5.0:w;w=m+1.0;u=x}else{u=n+x;do if(x<0.0){if(!(n>0.0|x>0.0))break;v=(x*v-n*5.0)/u;o=m;v=(v<0.0?-v:v)+1.0;break o}while(0);o=m;v=v<5.0?6.0:v+1.0}while(0);m=O*ua*va;p:do if(m<0.0){n=u-m;if(m>0.0|u<0.0){m=(m*5.0+u*v)/n;m=m<0.0?-m:m}else m=v<5.0?5.0:v;ka=n;ja=m+1.0;ha=o}else{n=m+o;do if(o<0.0){if(!(m>0.0|o>0.0))break;w=(o*w-m*5.0)/n;ka=u;ja=v;ha=n;w=(w<0.0?-w:w)+1.0;break p}while(0);ka=u;ja=v;ha=n;w=w<5.0?6.0:w+1.0}while(0);n=xa*sa*pa;if(n<0.0){m=0.0-n;if(n>0.0){n=(n*5.0+0.0)/m;n=n<0.0?-n:n}else n=5.0;x=n+1.0;u=0.0;v=0.0}else{m=0.0;x=0.0;u=n+0.0;v=6.0}n=wa*ra*pa;q:do if(n<0.0){o=u-n;if(n>0.0|u<0.0){n=(n*5.0+u*v)/o;n=n<0.0?-n:n}else n=v<5.0?5.0:v;y=o;v=n+1.0}else{o=n+m;do if(m<0.0){if(!(n>0.0|m>0.0))break;x=(m*x-n*5.0)/o;y=u;m=o;x=(x<0.0?-x:x)+1.0;break q}while(0);y=u;m=o;x=x<5.0?6.0:x+1.0}while(0);n=ra*ua*qa;r:do if(n<0.0){o=m-n;if(n>0.0|m<0.0){n=(n*5.0+m*x)/o;n=n<0.0?-n:n}else n=x<5.0?5.0:x;m=o;x=n+1.0;u=y}else{u=n+y;do if(y<0.0){if(!(n>0.0|y>0.0))break;v=(y*v-n*5.0)/u;v=(v<0.0?-v:v)+1.0;break r}while(0);v=v<5.0?6.0:v+1.0}while(0);n=sa*ta*qa;s:do if(n<0.0){o=u-n;if(n>0.0|u<0.0){n=(n*5.0+u*v)/o;n=n<0.0?-n:n}else n=v<5.0?5.0:v;u=o;o=m;v=n+1.0}else{o=n+m;do if(m<0.0){if(!(n>0.0|m>0.0))break;x=(m*x-n*5.0)/o;x=(x<0.0?-x:x)+1.0;break s}while(0);x=x<5.0?6.0:x+1.0}while(0);m=wa*ta*va;t:do if(m<0.0){n=o-m;if(m>0.0|o<0.0){m=(m*5.0+o*x)/n;m=m<0.0?-m:m}else m=x<5.0?5.0:x;y=n;x=m+1.0}else{n=m+u;do if(u<0.0){if(!(m>0.0|u>0.0))break;v=(u*v-m*5.0)/n;y=o;u=n;v=(v<0.0?-v:v)+1.0;break t}while(0);y=o;u=n;v=v<5.0?6.0:v+1.0}while(0);n=xa*ua*va;u:do if(n<0.0){o=u-n;if(n>0.0|u<0.0){m=(n*5.0+u*v)/o;m=m<0.0?-m:m}else m=v<5.0?5.0:v;v=m+1.0}else{m=n+y;do if(y<0.0){if(!(n>0.0|y>0.0))break;x=(y*x-n*5.0)/m;y=m;o=u;x=(x<0.0?-x:x)+1.0;break u}while(0);y=m;o=u;x=x<5.0?6.0:x+1.0}while(0);O=A+ka;g=ka<0.0;do if(A<0.0|g){if(!(A>0.0|ka>0.0)){ia=474;break}m=(ka*ja-A*z)/O;if(!(m<0.0))break;m=-m}else ia=474;while(0);if((ia|0)==474)m=ja<z?z:ja;C=m+1.0;B=ma+ha;f=ha<0.0;do if(ma<0.0|f){if(!(ma>0.0|ha>0.0)){ia=479;break}m=(ha*w-ma*N)/B;if(!(m<0.0))break;m=-m}else ia=479;while(0);if((ia|0)==479)m=w<N?N:w;A=m+1.0;N=q-oa;do if(q<0.0|oa>0.0){if(!(q>0.0|oa<0.0)){ia=484;break}m=(q*na+oa*s)/N;if(!(m<0.0))break;m=-m}else ia=484;while(0);if((ia|0)==484)m=na<s?s:na;z=m+1.0;n=ka-ha;do if((g|ha>0.0)&(ka>0.0|f)){m=(ka*ja+ha*w)/n;if(!(m<0.0))break;m=-m}else m=ja<w?w:ja;while(0);u=n/N;s=z+(m+1.0)+1.0;n=o-y;do if(o<0.0|y>0.0){if(!(o>0.0|y<0.0)){ia=493;break}m=(o*v+y*x)/n;if(!(m<0.0))break;m=-m}else ia=493;while(0);if((ia|0)==493)m=v<x?x:v;o=n/N;n=z+(m+1.0)+1.0;q=O-B;do if(O<0.0|B>0.0){if(!(O>0.0|B<0.0)){ia=498;break}m=(O*C+B*A)/q;if(!(m<0.0))break;m=-m}else ia=498;while(0);if((ia|0)==498)m=C<A?A:C;ga=s>64.0;da=n>64.0;ia=z+(m+1.0)+1.0>64.0;p[e>>3]=u;fa=e+8|0;p[fa>>3]=o;la=e+16|0;p[la>>3]=q/N;i[e+24>>0]=1;if(!(ga|da|ia))break;P=k[$a>>2]|0;Q=((P|0)<0)<<31>>31;R=k[b>>2]|0;S=((R|0)<0)<<31>>31;f=be(P|0,Q|0,R|0,S|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){ea=be(0,0,f|0,g|0)|0;hb=L;k[_a>>2]=ea;k[_a+4>>2]=hb;k[_a+256>>2]=(hb|0)!=0?-2:-1;break}else{k[_a+256>>2]=0;break}else{k[_a>>2]=f;k[_a+4>>2]=g;k[_a+256>>2]=(g|0)!=0?2:1}while(0);ea=_a+260|0;T=k[cb>>2]|0;U=((T|0)<0)<<31>>31;V=k[c>>2]|0;W=((V|0)<0)<<31>>31;f=be(T|0,U|0,V|0,W|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){ca=be(0,0,f|0,g|0)|0;hb=L;k[ea>>2]=ca;k[_a+264>>2]=hb;k[_a+516>>2]=(hb|0)!=0?-2:-1;break}else{k[_a+516>>2]=0;break}else{k[ea>>2]=f;k[_a+264>>2]=g;k[_a+516>>2]=(g|0)!=0?2:1}while(0);ca=_a+520|0;Y=k[fb>>2]|0;Z=((Y|0)<0)<<31>>31;_=k[d>>2]|0;$=((_|0)<0)<<31>>31;f=be(Y|0,Z|0,_|0,$|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){ba=be(0,0,f|0,g|0)|0;hb=L;k[ca>>2]=ba;k[_a+524>>2]=hb;k[_a+776>>2]=(hb|0)!=0?-2:-1;break}else{k[_a+776>>2]=0;break}else{k[ca>>2]=f;k[_a+524>>2]=g;k[_a+776>>2]=(g|0)!=0?2:1}while(0);K=k[ya>>2]|0;M=((K|0)<0)<<31>>31;G=k[za>>2]|0;H=((G|0)<0)<<31>>31;f=be(K|0,M|0,G|0,H|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){za=be(0,0,f|0,g|0)|0;hb=L;k[Ta>>2]=za;k[Ta+4>>2]=hb;k[Ta+256>>2]=(hb|0)!=0?-2:-1;break}else{k[Ta+256>>2]=0;break}else{k[Ta>>2]=f;k[Ta+4>>2]=g;k[Ta+256>>2]=(g|0)!=0?2:1}while(0);ba=Ta+260|0;I=k[Aa>>2]|0;J=((I|0)<0)<<31>>31;l=k[Ba>>2]|0;D=((l|0)<0)<<31>>31;f=be(I|0,J|0,l|0,D|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Ba=be(0,0,f|0,g|0)|0;hb=L;k[ba>>2]=Ba;k[Ta+264>>2]=hb;k[Ta+516>>2]=(hb|0)!=0?-2:-1;break}else{k[Ta+516>>2]=0;break}else{k[ba>>2]=f;k[Ta+264>>2]=g;k[Ta+516>>2]=(g|0)!=0?2:1}while(0);aa=Ta+520|0;E=k[Ca>>2]|0;F=((E|0)<0)<<31>>31;h=k[Da>>2]|0;j=((h|0)<0)<<31>>31;f=be(E|0,F|0,h|0,j|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;hb=L;k[aa>>2]=Da;k[Ta+524>>2]=hb;k[Ta+776>>2]=(hb|0)!=0?-2:-1;break}else{k[Ta+776>>2]=0;break}else{k[aa>>2]=f;k[Ta+524>>2]=g;k[Ta+776>>2]=(g|0)!=0?2:1}while(0);hb=ne(K|0,M|0,R|0,S|0)|0;g=L;f=ne(P|0,Q|0,G|0,H|0)|0;f=be(hb|0,g|0,f|0,L|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;hb=L;k[Na>>2]=Da;k[Na+4>>2]=hb;k[Na+256>>2]=(hb|0)!=0?-2:-1;break}else{k[Na+256>>2]=0;break}else{k[Na>>2]=f;k[Na+4>>2]=g;k[Na+256>>2]=(g|0)!=0?2:1}while(0);G=Na+260|0;hb=ne(I|0,J|0,V|0,W|0)|0;g=L;f=ne(T|0,U|0,l|0,D|0)|0;f=be(hb|0,g|0,f|0,L|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;hb=L;k[G>>2]=Da;k[Na+264>>2]=hb;k[Na+516>>2]=(hb|0)!=0?-2:-1;break}else{k[Na+516>>2]=0;break}else{k[G>>2]=f;k[Na+264>>2]=g;k[Na+516>>2]=(g|0)!=0?2:1}while(0);D=Na+520|0;hb=ne(E|0,F|0,_|0,$|0)|0;g=L;f=ne(Y|0,Z|0,h|0,j|0)|0;f=be(hb|0,g|0,f|0,L|0)|0;g=L;do if(!((g|0)>0|(g|0)==0&f>>>0>0))if((g|0)<0){Da=be(0,0,f|0,g|0)|0;hb=L;k[D>>2]=Da;k[Na+524>>2]=hb;k[Na+776>>2]=(hb|0)!=0?-2:-1;break}else{k[Na+776>>2]=0;break}else{k[D>>2]=f;k[Na+524>>2]=g;k[Na+776>>2]=(g|0)!=0?2:1}while(0);Sc(Fa,_a,_a);Sc(Xa,Ta,Ta);Tc(Ea,Fa,Xa);fe(Ma|0,Ea|0,260)|0;Sc(Fa,ea,ea);Sc(Xa,ba,ba);Tc(Ea,Fa,Xa);fe(Ma+260|0,Ea|0,260)|0;Sc(Fa,ca,ca);Sc(Xa,aa,aa);Tc(Ea,Fa,Xa);fe(Ma+520|0,Ea|0,260)|0;Sc(Ha,ea,aa);Sc(Ya,ca,ba);Uc(Ga,Ha,Ya);fe(Oa|0,Ga|0,260)|0;h=Oa+260|0;Sc(Ha,ca,Ta);Sc(Ya,_a,aa);Uc(Ga,Ha,Ya);fe(h|0,Ga|0,260)|0;j=Oa+520|0;Sc(Ha,_a,ba);Sc(Ya,ea,Ta);Uc(Ga,Ha,Ya);fe(j|0,Ga|0,260)|0;l=a+4|0;Vc(Ia,l,Oa,Ma);m=+p[Ia>>3];g=k[Ia+8>>2]|0;do if((g|0)>1023){m=m*89884656743115795.0e291;f=g+-1023|0;if((f|0)<=1023)break;f=g+-2046|0;f=(f|0)>1023?1023:f;m=m*89884656743115795.0e291}else{if((g|0)>=-1022){f=g;break}m=m*2.2250738585072014e-308;f=g+1022|0;if((f|0)>=-1022)break;f=g+2044|0;f=(f|0)<-1022?-1022:f;m=m*2.2250738585072014e-308}while(0);Ya=ee(f+1023|0,0,52)|0;hb=L;k[t>>2]=Ya;k[t+4>>2]=hb;n=m*+p[t>>3];if(da){Sc(Za,ba,D);Sc(Ka,aa,G);Uc(Ja,Za,Ka);fe(Oa|0,Ja|0,260)|0;Sc(Za,aa,Na);Sc(Ka,Ta,D);Uc(Ja,Za,Ka);fe(h|0,Ja|0,260)|0;Sc(Za,Ta,G);Sc(Ka,ba,Na);Uc(Ja,Za,Ka);fe(j|0,Ja|0,260)|0;Vc(La,l,Oa,Ma);m=+p[La>>3];g=k[La+8>>2]|0;do if((g|0)>1023){m=m*89884656743115795.0e291;f=g+-1023|0;if((f|0)<=1023)break;f=g+-2046|0;f=(f|0)>1023?1023:f;m=m*89884656743115795.0e291}else{if((g|0)>=-1022){f=g;break}m=m*2.2250738585072014e-308;f=g+1022|0;if((f|0)>=-1022)break;f=g+2044|0;f=(f|0)<-1022?-1022:f;m=m*2.2250738585072014e-308}while(0);Za=ee(f+1023|0,0,52)|0;hb=L;k[t>>2]=Za;k[t+4>>2]=hb;p[fa>>3]=m*+p[t>>3]/n}do if(ga|ia){f=Oa+780|0;k[Oa+1036>>2]=0;Sc(Pa,ea,D);Sc(Qa,ca,G);Uc(Wa,Pa,Qa);fe(Oa|0,Wa|0,260)|0;if(ia){Sc(Sa,Oa,Ta);Tc(Ra,f,Sa);fe(f|0,Ra|0,260)|0;Sc(Pa,ca,Na);Sc(Qa,_a,D);Uc(Wa,Pa,Qa);fe(h|0,Wa|0,260)|0;Sc(Sa,h,ba);Tc(Ra,f,Sa);fe(f|0,Ra|0,260)|0;Sc(Pa,_a,G);Sc(Qa,ea,Na);Uc(Wa,Pa,Qa);fe(j|0,Wa|0,260)|0;Sc(Sa,j,aa);Tc(Ra,f,Sa);fe(f|0,Ra|0,260)|0}else{Sc(Pa,ca,Na);Sc(Qa,_a,D);Uc(Wa,Pa,Qa);fe(h|0,Wa|0,260)|0;Sc(Pa,_a,G);Sc(Qa,ea,Na);Uc(Wa,Pa,Qa);fe(j|0,Wa|0,260)|0}if(ga){Vc(Ua,l,Oa,Ma);m=+p[Ua>>3];g=k[Ua+8>>2]|0;do if((g|0)>1023){m=m*89884656743115795.0e291;f=g+-1023|0;if((f|0)<=1023)break;f=g+-2046|0;f=(f|0)>1023?1023:f;m=m*89884656743115795.0e291}else{if((g|0)>=-1022){f=g;break}m=m*2.2250738585072014e-308;f=g+1022|0;if((f|0)>=-1022)break;f=g+2044|0;f=(f|0)<-1022?-1022:f;m=m*2.2250738585072014e-308}while(0);_a=ee(f+1023|0,0,52)|0;hb=L;k[t>>2]=_a;k[t+4>>2]=hb;p[e>>3]=m*+p[t>>3]/n}if(!ia)break;k[Ma+780>>2]=1;k[Ma+1036>>2]=1;Wc(Va,l,Oa,Ma);m=+p[Va>>3];g=k[Va+8>>2]|0;do if((g|0)>1023){m=m*89884656743115795.0e291;f=g+-1023|0;if((f|0)<=1023)break;f=g+-2046|0;f=(f|0)>1023?1023:f;m=m*89884656743115795.0e291}else{if((g|0)>=-1022){f=g;break}m=m*2.2250738585072014e-308;f=g+1022|0;if((f|0)>=-1022)break;f=g+2044|0;f=(f|0)<-1022?-1022:f;m=m*2.2250738585072014e-308}while(0);_a=ee(f+1023|0,0,52)|0;hb=L;k[t>>2]=_a;k[t+4>>2]=hb;p[la>>3]=m*+p[t>>3]/n}while(0)}while(0);if((k[b>>2]|0)==(k[$a>>2]|0)?(ab=k[b+4>>2]|0,bb=k[b+12>>2]|0,(ab|0)!=(bb|0)):0){f=(k[b+24>>2]&32|0)!=0;h=e+8|0;g=k[h>>2]|0;h=k[h+4>>2]|0;p[t>>3]=+((f?bb:ab)|0);$a=k[t>>2]|0;_a=k[t+4>>2]|0;hb=(h|0)>-1|(h|0)==-1&g>>>0>4294967295;b=be(0,-2147483648,g|0,h|0)|0;g=hb?b:g;h=hb?L:h;hb=(_a|0)>-1|(_a|0)==-1&$a>>>0>4294967295;b=be(0,-2147483648,$a|0,_a|0)|0;$a=hb?b:$a;_a=hb?L:_a;hb=be(g|0,h|0,$a|0,_a|0)|0;b=L;if((h>>>0>_a>>>0|(h|0)==(_a|0)&g>>>0>$a>>>0)&(b>>>0>0|(b|0)==0&hb>>>0>64)){hb=0;r=gb;return hb|0}p[t>>3]=+((f?ab:bb)|0);$a=k[t>>2]|0;_a=k[t+4>>2]|0;ab=(_a|0)>-1|(_a|0)==-1&$a>>>0>4294967295;b=be(0,-2147483648,$a|0,_a|0)|0;$a=ab?b:$a;_a=ab?L:_a;ab=be(g|0,h|0,$a|0,_a|0)|0;b=L;hb=be($a|0,_a|0,g|0,h|0)|0;bb=L;if(((h>>>0>_a>>>0|(h|0)==(_a|0)&g>>>0>$a>>>0?(b>>>0>0|(b|0)==0&ab>>>0>64)<<31>>31:(bb>>>0>0|(bb|0)==0&hb>>>0>64)&1)|0)==1){hb=0;r=gb;return hb|0}}if((k[c>>2]|0)==(k[cb>>2]|0)?(db=k[c+4>>2]|0,eb=k[c+12>>2]|0,(db|0)!=(eb|0)):0){f=(k[c+24>>2]&32|0)!=0;h=e+8|0;g=k[h>>2]|0;h=k[h+4>>2]|0;p[t>>3]=+((f?eb:db)|0);cb=k[t>>2]|0;bb=k[t+4>>2]|0;hb=(h|0)>-1|(h|0)==-1&g>>>0>4294967295;c=be(0,-2147483648,g|0,h|0)|0;g=hb?c:g;h=hb?L:h;hb=(bb|0)>-1|(bb|0)==-1&cb>>>0>4294967295;c=be(0,-2147483648,cb|0,bb|0)|0;cb=hb?c:cb;bb=hb?L:bb;hb=be(g|0,h|0,cb|0,bb|0)|0;c=L;if((h>>>0>bb>>>0|(h|0)==(bb|0)&g>>>0>cb>>>0)&(c>>>0>0|(c|0)==0&hb>>>0>64)){hb=0;r=gb;return hb|0}p[t>>3]=+((f?db:eb)|0);cb=k[t>>2]|0;bb=k[t+4>>2]|0;db=(bb|0)>-1|(bb|0)==-1&cb>>>0>4294967295;c=be(0,-2147483648,cb|0,bb|0)|0;cb=db?c:cb;bb=db?L:bb;db=be(g|0,h|0,cb|0,bb|0)|0;c=L;hb=be(cb|0,bb|0,g|0,h|0)|0;eb=L;if(((h>>>0>bb>>>0|(h|0)==(bb|0)&g>>>0>cb>>>0?(c>>>0>0|(c|0)==0&db>>>0>64)<<31>>31:(eb>>>0>0|(eb|0)==0&hb>>>0>64)&1)|0)==1){hb=0;r=gb;return hb|0}}if((k[d>>2]|0)!=(k[fb>>2]|0)){hb=1;r=gb;return hb|0}j=k[d+4>>2]|0;l=k[d+12>>2]|0;if((j|0)==(l|0)){hb=1;r=gb;return hb|0}h=(k[d+24>>2]&32|0)!=0;g=e+8|0;f=k[g>>2]|0;g=k[g+4>>2]|0;p[t>>3]=+((h?l:j)|0);d=k[t>>2]|0;fb=k[t+4>>2]|0;hb=(g|0)>-1|(g|0)==-1&f>>>0>4294967295;e=be(0,-2147483648,f|0,g|0)|0;f=hb?e:f;g=hb?L:g;hb=(fb|0)>-1|(fb|0)==-1&d>>>0>4294967295;e=be(0,-2147483648,d|0,fb|0)|0;d=hb?e:d;fb=hb?L:fb;hb=be(f|0,g|0,d|0,fb|0)|0;e=L;if((g>>>0>fb>>>0|(g|0)==(fb|0)&f>>>0>d>>>0)&(e>>>0>0|(e|0)==0&hb>>>0>64)){hb=0;r=gb;return hb|0}p[t>>3]=+((h?j:l)|0);eb=k[t>>2]|0;db=k[t+4>>2]|0;d=(db|0)>-1|(db|0)==-1&eb>>>0>4294967295;fb=be(0,-2147483648,eb|0,db|0)|0;eb=d?fb:eb;db=d?L:db;d=be(f|0,g|0,eb|0,db|0)|0;fb=L;hb=be(eb|0,db|0,f|0,g|0)|0;e=L;hb=((g>>>0>db>>>0|(g|0)==(db|0)&f>>>0>eb>>>0?(fb>>>0>0|(fb|0)==0&d>>>0>64)<<31>>31:(e>>>0>0|(e|0)==0&hb>>>0>64)&1)|0)!=1;r=gb;return hb|0}function Oc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0,h=0,i=0.0,j=0,l=0,m=0,n=0,o=0,q=0;f=a+16|0;c=_d(48)|0;a:do if(!c){while(1){c=k[35]|0;k[35]=c+0;if(!c)break;Xa[c&0]();c=_d(48)|0;if(c)break a}q=ya(4)|0;k[q>>2]=128;La(q|0,8,1)}while(0);e=c+8|0;d=e+40|0;do{k[e>>2]=k[b>>2];e=e+4|0;b=b+4|0}while((e|0)<(d|0));k[c>>2]=f;q=a+20|0;n=k[q>>2]|0;k[c+4>>2]=n;k[n>>2]=c;k[q>>2]=c;n=a+24|0;k[n>>2]=(k[n>>2]|0)+1;n=a+4|0;b=k[n>>2]|0;l=a+8|0;d=k[l>>2]|0;if(b>>>0>=d>>>0){m=k[a>>2]|0;e=m;j=b-e|0;f=j>>2;h=f+1|0;if(h>>>0>1073741823)xa(1340,1363,303,1438);b=d-e|0;if(b>>2>>>0<536870911){b=b>>1;b=b>>>0<h>>>0?h:b;if(!b){b=0;d=0}else o=11}else{b=1073741823;o=11}if((o|0)==11){e=b<<2;e=(e|0)==0?1:e;d=_d(e)|0;b:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break b}q=ya(4)|0;k[q>>2]=128;La(q|0,8,1)}while(0)}k[d+(f<<2)>>2]=c;c=d+(h<<2)|0;fe(d|0,m|0,j|0)|0;k[a>>2]=d;k[n>>2]=c;k[l>>2]=d+(b<<2);if(m){$d(m);c=k[n>>2]|0}}else{k[b>>2]=c;c=(k[n>>2]|0)+4|0;k[n>>2]=c}j=k[a>>2]|0;o=c-j|0;f=o>>2;if((o|0)<=4){q=k[q>>2]|0;q=q+8|0;return q|0}h=(f+-2|0)/2|0;a=j+(h<<2)|0;d=c+-4|0;b=k[a>>2]|0;c=k[d>>2]|0;i=+p[c+24>>3];g=+p[b+24>>3];e=b;l=c;do if(i!=g)if(i<g){c=c+16|0;break}else{q=k[q>>2]|0;q=q+8|0;return q|0}else{c=c+16|0;if(!(+p[c>>3]<+p[b+16>>3])){q=k[q>>2]|0;q=q+8|0;return q|0}}while(0);k[d>>2]=e;c:do if((f+-1|0)>>>0>=3)while(1){b=h;h=(h+-1|0)/2|0;d=j+(h<<2)|0;e=k[d>>2]|0;g=+p[e+24>>3];f=e;if(i!=g){if(!(i<g))break c}else if(!(+p[c>>3]<+p[e+16>>3]))break c;k[a>>2]=f;if(b>>>0<3){a=d;break}else a=d}while(0);k[a>>2]=l;q=k[q>>2]|0;q=q+8|0;return q|0}function Pc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=((c|0)<0)<<31>>31;n=be(a|0,((a|0)<0)<<31>>31|0,c|0,j|0)|0;a=L;j=be(c|0,j|0,e|0,((e|0)<0)<<31>>31|0)|0;c=L;p=((d|0)<0)<<31>>31;l=be(b|0,((b|0)<0)<<31>>31|0,d|0,p|0)|0;k=L;p=be(d|0,p|0,f|0,((f|0)<0)<<31>>31|0)|0;o=L;h=(a|0)<0;b=be(0,0,n|0,a|0)|0;a=h?L:a;e=(k|0)<0;m=be(0,0,l|0,k|0)|0;k=e?L:k;i=(c|0)<0;d=be(0,0,j|0,c|0)|0;c=i?L:c;f=(o|0)<0;q=be(0,0,p|0,o|0)|0;a=ne((f?q:p)|0,(f?L:o)|0,(h?b:n)|0,a|0)|0;b=L;c=ne((e?m:l)|0,k|0,(i?d:j)|0,c|0)|0;d=L;e=i^e;do if(h^f){if(!e){q=ge(a|0,b|0,c|0,d|0)|0;g=-(+(q>>>0)+4294967296.0*+(L>>>0));break}if(b>>>0>d>>>0|(b|0)==(d|0)&a>>>0>c>>>0){q=be(a|0,b|0,c|0,d|0)|0;g=-(+(q>>>0)+4294967296.0*+(L>>>0));break}else{q=be(c|0,d|0,a|0,b|0)|0;g=+(q>>>0)+4294967296.0*+(L>>>0);break}}else{if(e){q=ge(a|0,b|0,c|0,d|0)|0;g=+(q>>>0)+4294967296.0*+(L>>>0);break}if(b>>>0<d>>>0|(b|0)==(d|0)&a>>>0<c>>>0){q=be(c|0,d|0,a|0,b|0)|0;g=-(+(q>>>0)+4294967296.0*+(L>>>0));break}else{q=be(a|0,b|0,c|0,d|0)|0;g=+(q>>>0)+4294967296.0*+(L>>>0);break}}while(0);return (g==0.0?0:g<0.0?-1:1)|0}function Qc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0,j=0,l=0,m=0.0,n=0,o=0,q=0,s=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0,H=0.0,I=0,J=0,K=0.0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,Y=0,Z=0,_=0,$=0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0;Ib=r;r=r+18272|0;bb=Ib+18008|0;Eb=Ib+16968|0;Fb=Ib+15928|0;Fa=Ib+15664|0;Ga=Ib+15404|0;Gb=Ib+15144|0;pa=Ib+14884|0;qa=Ib+14624|0;ib=Ib+14364|0;rb=Ib+14104|0;hb=Ib+13844|0;pb=Ib+13584|0;zb=Ib+13324|0;ra=Ib+13064|0;sa=Ib+12804|0;Cb=Ib+12544|0;ta=Ib+12284|0;ua=Ib+12024|0;Da=Ib+11764|0;Ea=Ib+11504|0;Xa=Ib+11244|0;xa=Ib+10984|0;za=Ib+10724|0;Ya=Ib+10464|0;Ba=Ib+10204|0;Ca=Ib+9944|0;yb=Ib+9684|0;Bb=Ib+9424|0;Ha=Ib+9164|0;Ia=Ib+8904|0;Ja=Ib+8644|0;Ka=Ib+8384|0;La=Ib+8124|0;Ma=Ib+7864|0;Na=Ib+7604|0;Oa=Ib+7344|0;Pa=Ib+7084|0;Qa=Ib+6824|0;Ra=Ib+6564|0;Za=Ib+6304|0;_a=Ib+6044|0;$a=Ib+5784|0;ab=Ib+5524|0;Db=Ib+48|0;Sa=Ib+5264|0;Ta=Ib+5004|0;Ua=Ib+4744|0;Va=Ib+4484|0;Wa=Ib+4224|0;cb=Ib+3964|0;db=Ib+3704|0;eb=Ib+3444|0;fb=Ib+3184|0;gb=Ib+2924|0;jb=Ib+32|0;kb=Ib+2664|0;lb=Ib+2404|0;mb=Ib+2144|0;nb=Ib+1884|0;ob=Ib+1624|0;qb=Ib+16|0;sb=Ib+1364|0;tb=Ib+1104|0;ub=Ib+844|0;vb=Ib+584|0;wb=Ib+324|0;xb=Ib+64|0;Ab=Ib;wa=d+12|0;v=k[wa>>2]|0;oa=d+4|0;q=k[oa>>2]|0;la=+(q|0);ma=+(v|0)-la;M=k[d>>2]|0;ja=+(M|0);Aa=d+8|0;N=k[Aa>>2]|0;na=ja-+(N|0);ya=c+4|0;O=k[ya>>2]|0;ga=+(O|0);va=b+4|0;P=k[va>>2]|0;ha=+(P|0);ba=ga-ha;Q=k[b>>2]|0;F=+(Q|0);R=k[c>>2]|0;aa=+(R|0);ia=F-aa;w=((v|0)<0)<<31>>31;s=((q|0)<0)<<31>>31;Z=be(v|0,w|0,q|0,s|0)|0;_=L;S=((M|0)<0)<<31>>31;T=((N|0)<0)<<31>>31;G=be(M|0,S|0,N|0,T|0)|0;I=L;U=((R|0)<0)<<31>>31;V=((Q|0)<0)<<31>>31;n=be(R|0,U|0,Q|0,V|0)|0;l=L;W=((O|0)<0)<<31>>31;Y=((P|0)<0)<<31>>31;j=be(O|0,W|0,P|0,Y|0)|0;h=L;$=(_|0)<0;J=be(0,0,Z|0,_|0)|0;Z=$?J:Z;_=$?L:_;J=(I|0)<0;o=be(0,0,G|0,I|0)|0;G=J?o:G;I=J?L:I;o=(l|0)<0;Jb=be(0,0,n|0,l|0)|0;l=o?L:l;u=(h|0)<0;Kb=be(0,0,j|0,h|0)|0;h=ne((u?Kb:j)|0,(u?L:h)|0,Z|0,_|0)|0;j=L;l=ne((o?Jb:n)|0,l|0,G|0,I|0)|0;n=L;o=J^o;do if($^u){if(!o){Kb=ge(l|0,n|0,h|0,j|0)|0;E=-(+(Kb>>>0)+4294967296.0*+(L>>>0));break}if(j>>>0>n>>>0|(j|0)==(n|0)&h>>>0>l>>>0){Kb=be(h|0,j|0,l|0,n|0)|0;E=-(+(Kb>>>0)+4294967296.0*+(L>>>0));break}else{Kb=be(l|0,n|0,h|0,j|0)|0;E=+(Kb>>>0)+4294967296.0*+(L>>>0);break}}else{if(o){Kb=ge(l|0,n|0,h|0,j|0)|0;E=+(Kb>>>0)+4294967296.0*+(L>>>0);break}if(j>>>0<n>>>0|(j|0)==(n|0)&h>>>0<l>>>0){Kb=be(l|0,n|0,h|0,j|0)|0;E=-(+(Kb>>>0)+4294967296.0*+(L>>>0));break}else{Kb=be(h|0,j|0,l|0,n|0)|0;E=+(Kb>>>0)+4294967296.0*+(L>>>0);break}}while(0);q=be(q|0,s|0,v|0,w|0)|0;s=L;n=be(v|0,w|0,P|0,Y|0)|0;l=L;j=be(N|0,T|0,Q|0,V|0)|0;h=L;u=(s|0)<0;o=be(0,0,q|0,s|0)|0;q=u?o:q;s=u?L:s;o=(l|0)<0;Jb=be(0,0,n|0,l|0)|0;l=o?L:l;Kb=(h|0)<0;Lb=be(0,0,j|0,h|0)|0;h=ne((Kb?Lb:j)|0,(Kb?L:h)|0,q|0,s|0)|0;j=L;l=ne((o?Jb:n)|0,l|0,G|0,I|0)|0;n=L;o=J^o;do if(u^Kb){if(!o){Lb=ge(h|0,j|0,l|0,n|0)|0;D=-(+(Lb>>>0)+4294967296.0*+(L>>>0));break}if(j>>>0>n>>>0|(j|0)==(n|0)&h>>>0>l>>>0){Lb=be(h|0,j|0,l|0,n|0)|0;D=-(+(Lb>>>0)+4294967296.0*+(L>>>0));break}else{Lb=be(l|0,n|0,h|0,j|0)|0;D=+(Lb>>>0)+4294967296.0*+(L>>>0);break}}else{if(o){Lb=ge(h|0,j|0,l|0,n|0)|0;D=+(Lb>>>0)+4294967296.0*+(L>>>0);break}if(j>>>0<n>>>0|(j|0)==(n|0)&h>>>0<l>>>0){Lb=be(l|0,n|0,h|0,j|0)|0;D=-(+(Lb>>>0)+4294967296.0*+(L>>>0));break}else{Lb=be(h|0,j|0,l|0,n|0)|0;D=+(Lb>>>0)+4294967296.0*+(L>>>0);break}}while(0);l=be(v|0,w|0,O|0,W|0)|0;j=L;o=be(N|0,T|0,R|0,U|0)|0;n=L;h=(j|0)<0;Kb=be(0,0,l|0,j|0)|0;j=h?L:j;Lb=(n|0)<0;Jb=be(0,0,o|0,n|0)|0;n=ne((Lb?Jb:o)|0,(Lb?L:n)|0,q|0,s|0)|0;o=L;j=ne((h?Kb:l)|0,j|0,G|0,I|0)|0;l=L;h=J^h;do if(u^Lb){if(!h){Lb=ge(n|0,o|0,j|0,l|0)|0;z=-(+(Lb>>>0)+4294967296.0*+(L>>>0));break}if(o>>>0>l>>>0|(o|0)==(l|0)&n>>>0>j>>>0){Lb=be(n|0,o|0,j|0,l|0)|0;z=-(+(Lb>>>0)+4294967296.0*+(L>>>0));break}else{Lb=be(j|0,l|0,n|0,o|0)|0;z=+(Lb>>>0)+4294967296.0*+(L>>>0);break}}else{if(h){Lb=ge(n|0,o|0,j|0,l|0)|0;z=+(Lb>>>0)+4294967296.0*+(L>>>0);break}if(o>>>0<l>>>0|(o|0)==(l|0)&n>>>0<j>>>0){Lb=be(j|0,l|0,n|0,o|0)|0;z=-(+(Lb>>>0)+4294967296.0*+(L>>>0));break}else{Lb=be(n|0,o|0,j|0,l|0)|0;z=+(Lb>>>0)+4294967296.0*+(L>>>0);break}}while(0);o=be(P|0,Y|0,O|0,W|0)|0;n=L;l=be(Q|0,V|0,R|0,U|0)|0;j=L;V=be(N|0,T|0,M|0,S|0)|0;W=L;Kb=(n|0)<0;Y=be(0,0,o|0,n|0)|0;n=Kb?L:n;h=(j|0)<0;Jb=be(0,0,l|0,j|0)|0;j=h?L:j;Lb=(W|0)<0;U=be(0,0,V|0,W|0)|0;n=ne((Lb?U:V)|0,(Lb?L:W)|0,(Kb?Y:o)|0,n|0)|0;o=L;j=ne(Z|0,_|0,(h?Jb:l)|0,j|0)|0;l=L;h=h^$;do if(Kb^Lb){if(!h){Lb=ge(n|0,o|0,j|0,l|0)|0;y=-(+(Lb>>>0)+4294967296.0*+(L>>>0));break}if(o>>>0>l>>>0|(o|0)==(l|0)&n>>>0>j>>>0){Lb=be(n|0,o|0,j|0,l|0)|0;y=-(+(Lb>>>0)+4294967296.0*+(L>>>0));break}else{Lb=be(j|0,l|0,n|0,o|0)|0;y=+(Lb>>>0)+4294967296.0*+(L>>>0);break}}else{if(h){Lb=ge(n|0,o|0,j|0,l|0)|0;y=+(Lb>>>0)+4294967296.0*+(L>>>0);break}if(o>>>0<l>>>0|(o|0)==(l|0)&n>>>0<j>>>0){Lb=be(j|0,l|0,n|0,o|0)|0;y=-(+(Lb>>>0)+4294967296.0*+(L>>>0));break}else{Lb=be(n|0,o|0,j|0,l|0)|0;y=+(Lb>>>0)+4294967296.0*+(L>>>0);break}}while(0);ka=1.0/+X(+(ma*ma+na*na));do if(y==0.0){m=E/(D*8.0);if(m<0.0){g=0.0-m;if(m>0.0){m=(m*4.0+0.0)/g;m=m<0.0?-m:m}else m=4.0;A=g;z=m+1.0;y=0.0;x=0.0}else{A=0.0;z=0.0;y=m+0.0;x=5.0}g=D/(E*2.0);if(g<0.0){m=y-g;if(y<0.0|g>0.0){g=(y*x+g*4.0)/m;g=g<0.0?-g:g}else g=x<4.0?4.0:x;x=g+1.0;K=z;y=m;H=A;break}else{m=A+g;if(A<0.0?A>0.0|g>0.0:0){K=(A*z-g*4.0)/m;K=(K<0.0?-K:K)+1.0;H=m;break}K=z<4.0?5.0:z+1.0;H=m;break}}else{m=y*y;m=+X(+(z*(D*(E*E+m))))/m;h=m<0.0;do if((e|0)==2){if(!h){C=0.0;x=0.0;B=m+0.0;A=10.0;break}g=0.0-m;if(m>0.0){m=(m*9.0+0.0)/g;m=m<0.0?-m:m}else m=9.0;C=g;x=m+1.0;B=0.0;A=0.0}else{if(!h){C=m+0.0;x=10.0;B=0.0;A=0.0;break}g=0.0-m;if(m>0.0){m=(m*9.0+0.0)/g;m=m<0.0?-m:m}else m=9.0;C=0.0;x=0.0;B=g;A=m+1.0}while(0);m=D+z;if(D<0.0|z<0.0?D>0.0|z>0.0:0){g=(D-z)/m;if(g<0.0)g=-g}else g=1.0;m=E*m/(y*(y*2.0));g=g+1.0+1.0+1.0+4.0+1.0;if(m<0.0){z=B-m;if(B<0.0|m>0.0){g=(B*A+m*g)/z;g=g<0.0?-g:g}else g=A<g?g:A;K=g+1.0;y=C;H=z;break}else{y=C+m;if(C<0.0?C>0.0|m>0.0:0){x=(C*x-m*g)/y;x=(x<0.0?-x:x)+1.0;K=A;H=B;break}x=(x<g?g:x)+1.0;K=A;H=B;break}}while(0);g=(F+aa)*.5;if(g<0.0){m=0.0-g;if(g>0.0){g=(g*0.0+0.0)/m;g=g<0.0?-g:g}else g=0.0;C=0.0;D=0.0;F=g+1.0}else{C=g+0.0;D=1.0;m=0.0;F=0.0}if(ba<0.0){A=-ba;g=x;E=y*A;z=K;A=H*A}else{g=K;E=ba*H;z=x;A=ba*y}B=g+0.0+1.0;g=z+0.0+1.0;fa=C+A;if(C<0.0|A<0.0?C>0.0|A>0.0:0){g=(C*D-A*g)/fa;g=g<0.0?-g:g}else g=D<g?g:D;da=g+1.0;ea=m+E;if(m<0.0|E<0.0?m>0.0|E>0.0:0){g=(m*F-E*B)/ea;g=g<0.0?-g:g}else g=F<B?B:F;ca=g+1.0;g=(ha+ga)*.5;if(g<0.0){m=0.0-g;if(g>0.0){g=(g*0.0+0.0)/m;g=g<0.0?-g:g}else g=0.0;A=0.0;B=0.0;D=g+1.0}else{A=g+0.0;B=1.0;m=0.0;D=0.0}if(ia<0.0){ia=-ia;z=x;C=y*ia;g=K;x=H*ia}else{z=K;C=ia*H;g=x;x=ia*y}y=z+0.0+1.0;g=g+0.0+1.0;ba=A+x;if(A<0.0|x<0.0?A>0.0|x>0.0:0){g=(A*B-x*g)/ba;g=g<0.0?-g:g}else g=B<g?g:B;K=g+1.0;aa=m+C;if(m<0.0|C<0.0?m>0.0|C>0.0:0){g=(m*D-C*y)/aa;g=g<0.0?-g:g}else g=D<y?y:D;H=g+1.0;g=ma*ja;if(g<0.0){m=0.0-g;if(g>0.0){g=(g+0.0)/m;g=g<0.0?-g:g}else g=1.0;z=0.0;A=0.0;y=g+1.0}else{z=g+0.0;A=2.0;m=0.0;y=0.0}g=na*la;do if(g<0.0){x=m-g;if(m<0.0|g>0.0){g=(m*y+g)/x;g=g<0.0?-g:g}else g=y<1.0?1.0:y;m=x;C=g+1.0;x=z;D=A}else{x=z+g;if(z<0.0?z>0.0|g>0.0:0){D=(z*A-g)/x;C=y;D=(D<0.0?-D:D)+1.0;break}C=y;D=A<1.0?2.0:A+1.0}while(0);if(ma<0.0){z=-ma;g=da;B=fa*z;y=ca;z=ea*z}else{g=ca;B=ma*ea;y=da;z=ma*fa}A=g+0.0+1.0;g=y+0.0+1.0;F=m+z;if(m<0.0|z<0.0?m>0.0|z>0.0:0){g=(m*C-z*g)/F;g=g<0.0?-g:g}else g=C<g?g:C;C=g+1.0;E=x+B;if(x<0.0|B<0.0?x>0.0|B>0.0:0){g=(x*D-B*A)/E;g=g<0.0?-g:g}else g=D<A?A:D;B=g+1.0;if(na<0.0){x=-na;g=K;z=ba*x;m=H;x=aa*x}else{g=H;z=na*aa;m=K;x=na*ba}y=g+0.0+1.0;g=m+0.0+1.0;m=F+x;do if(F<0.0|x<0.0){if(!(F>0.0|x>0.0)){Hb=146;break}g=(F*C-x*g)/m;g=g<0.0?-g:g}else Hb=146;while(0);if((Hb|0)==146)g=C<g?g:C;x=g+1.0;A=E+z;do if(E<0.0|z<0.0){if(!(E>0.0|z>0.0)){Hb=150;break}g=(E*B-z*y)/A;g=g<0.0?-g:g}else Hb=150;while(0);if((Hb|0)==150)g=B<y?y:B;g=g+1.0;if(m<A){y=g;g=x;z=A}else{y=x;z=m;m=A}if(ka<0.0){x=g;g=y;A=-(ka*z);m=-(ka*m)}else{x=y;A=ka*m;m=ka*z}y=g+3.0+1.0;g=x+3.0+1.0;C=fa+m;l=fa<0.0;do if(l|m<0.0){if(!(fa>0.0|m>0.0)){Hb=159;break}g=(fa*da-m*g)/C;g=g<0.0?-g:g}else Hb=159;while(0);if((Hb|0)==159)g=da<g?g:da;z=g+1.0;B=ea+A;h=ea<0.0;do if(h|A<0.0){if(!(ea>0.0|A>0.0)){Hb=163;break}g=(ea*ca-A*y)/B;g=g<0.0?-g:g}else Hb=163;while(0);if((Hb|0)==163)g=ca<y?y:ca;x=g+1.0;g=fa-ea;m=ba-aa;j=ba<0.0|aa>0.0;y=C-B;n=C<0.0|B>0.0;p[f>>3]=g;O=f+8|0;p[O>>3]=m;P=f+16|0;p[P>>3]=y;i[f+24>>0]=1;do if((l|ea>0.0)&(fa>0.0|h)){g=(fa*da+ea*ca)/g;if(!(g<0.0))break;g=-g}else g=da<ca?ca:da;while(0);J=g+1.0>64.0;do if(j){if(!(ba>0.0|aa<0.0)){Hb=171;break}g=(ba*K+aa*H)/m;if(!(g<0.0))break;g=-g}else Hb=171;while(0);if((Hb|0)==171)g=K<H?H:K;M=g+1.0>64.0;do if(n){if(!(C>0.0|B<0.0)){Hb=176;break}g=(C*z+B*x)/y;if(!(g<0.0))break;g=-g}else Hb=176;while(0);if((Hb|0)==176)g=z<x?x:z;N=g+1.0>64.0;if(!(J|M|N)){r=Ib;return}j=k[wa>>2]|0;h=k[oa>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Kb=be(0,0,h|0,j|0)|0;Lb=L;k[Fa>>2]=Kb;k[Fa+4>>2]=Lb;k[Fa+256>>2]=(Lb|0)!=0?-2:-1;break}else{k[Fa+256>>2]=0;break}else{k[Fa>>2]=h;k[Fa+4>>2]=j;k[Fa+256>>2]=(j|0)!=0?2:1}while(0);j=k[d>>2]|0;h=k[Aa>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Kb=be(0,0,h|0,j|0)|0;Lb=L;k[Ga>>2]=Kb;k[Ga+4>>2]=Lb;k[Ga+256>>2]=(Lb|0)!=0?-2:-1;break}else{k[Ga+256>>2]=0;break}else{k[Ga>>2]=h;k[Ga+4>>2]=j;k[Ga+256>>2]=(j|0)!=0?2:1}while(0);Sc(pa,Fa,Fa);Sc(qa,Ga,Ga);Tc(Gb,pa,qa);s=k[ya>>2]|0;u=((s|0)<0)<<31>>31;v=k[va>>2]|0;w=((v|0)<0)<<31>>31;h=be(s|0,u|0,v|0,w|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Lb=be(0,0,h|0,j|0)|0;G=L;k[ib>>2]=Lb;k[ib+4>>2]=G;G=(G|0)!=0?-2:-1;k[ib+256>>2]=G;break}else{k[ib+256>>2]=0;G=0;break}else{k[ib>>2]=h;k[ib+4>>2]=j;G=(j|0)!=0?2:1;k[ib+256>>2]=G}while(0);l=k[b>>2]|0;n=((l|0)<0)<<31>>31;o=k[c>>2]|0;q=((o|0)<0)<<31>>31;h=be(l|0,n|0,o|0,q|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Lb=be(0,0,h|0,j|0)|0;I=L;k[rb>>2]=Lb;k[rb+4>>2]=I;I=(I|0)!=0?-2:-1;k[rb+256>>2]=I;break}else{k[rb+256>>2]=0;I=0;break}else{k[rb>>2]=h;k[rb+4>>2]=j;I=(j|0)!=0?2:1;k[rb+256>>2]=I}while(0);h=ge(o|0,q|0,l|0,n|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Kb=be(0,0,h|0,j|0)|0;Lb=L;k[hb>>2]=Kb;k[hb+4>>2]=Lb;k[hb+256>>2]=(Lb|0)!=0?-2:-1;break}else{k[hb+256>>2]=0;break}else{k[hb>>2]=h;k[hb+4>>2]=j;k[hb+256>>2]=(j|0)!=0?2:1}while(0);h=ge(s|0,u|0,v|0,w|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Kb=be(0,0,h|0,j|0)|0;Lb=L;k[pb>>2]=Kb;k[pb+4>>2]=Lb;k[pb+256>>2]=(Lb|0)!=0?-2:-1;break}else{k[pb+256>>2]=0;break}else{k[pb>>2]=h;k[pb+4>>2]=j;k[pb+256>>2]=(j|0)!=0?2:1}while(0);Sc(ra,Fa,ib);Sc(sa,Ga,rb);Tc(zb,ra,sa);Sc(ta,ib,Ga);Sc(ua,rb,Fa);Uc(Cb,ta,ua);j=k[wa>>2]|0;h=k[va>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Kb=be(0,0,h|0,j|0)|0;Lb=L;k[Da>>2]=Kb;k[Da+4>>2]=Lb;k[Da+256>>2]=(Lb|0)!=0?-2:-1;break}else{k[Da+256>>2]=0;break}else{k[Da>>2]=h;k[Da+4>>2]=j;k[Da+256>>2]=(j|0)!=0?2:1}while(0);j=k[b>>2]|0;h=k[Aa>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Kb=be(0,0,h|0,j|0)|0;Lb=L;k[Ea>>2]=Kb;k[Ea+4>>2]=Lb;k[Ea+256>>2]=(Lb|0)!=0?-2:-1;break}else{k[Ea+256>>2]=0;break}else{k[Ea>>2]=h;k[Ea+4>>2]=j;k[Ea+256>>2]=(j|0)!=0?2:1}while(0);Sc(xa,Fa,Ea);Sc(za,Ga,Da);Uc(Xa,xa,za);j=k[wa>>2]|0;h=k[ya>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Kb=be(0,0,h|0,j|0)|0;Lb=L;k[Da>>2]=Kb;k[Da+4>>2]=Lb;k[Da+256>>2]=(Lb|0)!=0?-2:-1;break}else{k[Da+256>>2]=0;break}else{k[Da>>2]=h;k[Da+4>>2]=j;k[Da+256>>2]=(j|0)!=0?2:1}while(0);j=k[c>>2]|0;h=k[Aa>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Kb=be(0,0,h|0,j|0)|0;Lb=L;k[Ea>>2]=Kb;k[Ea+4>>2]=Lb;k[Ea+256>>2]=(Lb|0)!=0?-2:-1;break}else{k[Ea+256>>2]=0;break}else{k[Ea>>2]=h;k[Ea+4>>2]=j;k[Ea+256>>2]=(j|0)!=0?2:1}while(0);Sc(Ba,Fa,Ea);Sc(Ca,Ga,Da);Uc(Ya,Ba,Ca);Tc(yb,Xa,Ya);h=Cb+256|0;if(!(k[h>>2]|0)){Sc(Ha,zb,zb);Sc(Ia,yb,yb);Uc(Bb,Ha,Ia);Sc(Ja,zb,yb);fe(Cb|0,Ja|0,260)|0;Sc(La,Cb,hb);k[bb>>2]=2;k[bb+256>>2]=1;Sc(Ma,La,bb);Sc(Na,Bb,ib);Tc(Ka,Ma,Na);fe(Eb|0,Ka|0,260)|0;fe(Fb|0,Gb|0,260)|0;Sc(Pa,Cb,yb);k[bb>>2]=2;k[bb+256>>2]=1;Sc(Qa,Pa,bb);Sc(Ra,Bb,zb);Tc(Oa,Qa,Ra);fe(Eb+260|0,Oa|0,260)|0;k[Fb+260>>2]=1;k[Fb+516>>2]=1;n=Eb+520|0;Sc(_a,Cb,pb);k[bb>>2]=2;k[bb+256>>2]=1;Sc($a,_a,bb);Sc(ab,Bb,rb);Tc(Za,$a,ab);fe(n|0,Za|0,260)|0;j=k[h>>2]|0;h=(j|0)>-1?j:0-j|0;a:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[Cb>>2]|0)>>>0);Hb=234;break}case 2:{g=+((k[Cb+4>>2]|0)>>>0)*4294967296.0+ +((k[Cb>>2]|0)>>>0);Hb=234;break}default:{g=+((k[Cb+(h+-3<<2)>>2]|0)>>>0)+(+((k[Cb+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Cb+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break a;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break a}if((h|0)>=-1022)break a;g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)>=-1022)break a;h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}while(0);if((Hb|0)==234){h=0;g=(j|0)<0?-g:g}Kb=ee(h+1023|0,0,52)|0;Lb=L;k[t>>2]=Kb;k[t+4>>2]=Lb;m=1.0/(g*+p[t>>3]);if(J){j=k[Eb+256>>2]|0;h=(j|0)>-1?j:0-j|0;b:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[Eb>>2]|0)>>>0);Hb=245;break}case 2:{g=+((k[Eb+4>>2]|0)>>>0)*4294967296.0+ +((k[Eb>>2]|0)>>>0);Hb=245;break}default:{g=+((k[Eb+(h+-3<<2)>>2]|0)>>>0)+(+((k[Eb+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Eb+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break b;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break b}if((h|0)>=-1022)break b;g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)>=-1022)break b;h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}while(0);if((Hb|0)==245){h=0;g=(j|0)<0?-g:g}Kb=ee(h+1023|0,0,52)|0;Lb=L;k[t>>2]=Kb;k[t+4>>2]=Lb;p[f>>3]=m*(g*+p[t>>3]*.25)}if(M){j=k[Eb+776>>2]|0;h=(j|0)>-1?j:0-j|0;c:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[n>>2]|0)>>>0);Hb=257;break}case 2:{g=+((k[Eb+524>>2]|0)>>>0)*4294967296.0+ +((k[n>>2]|0)>>>0);Hb=257;break}default:{g=+((k[Eb+520+(h+-3<<2)>>2]|0)>>>0)+(+((k[Eb+520+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Eb+520+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break c;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break c}if((h|0)>=-1022)break c;g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)>=-1022)break c;h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}while(0);if((Hb|0)==257){h=0;g=(j|0)<0?-g:g}Kb=ee(h+1023|0,0,52)|0;Lb=L;k[t>>2]=Kb;k[t+4>>2]=Lb;p[O>>3]=m*(g*+p[t>>3]*.25)}if(N){Xc(Db,Eb,Fb);g=+p[Db>>3];j=k[Db+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);h=ee(h+1023|0,0,52)|0;j=L;k[t>>2]=h;k[t+4>>2]=j;m=m*(g*+p[t>>3]*.25);j=k[Gb+256>>2]|0;h=(j|0)>-1?j:0-j|0;d:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[Gb>>2]|0)>>>0);Hb=275;break}case 2:{g=+((k[Gb+4>>2]|0)>>>0)*4294967296.0+ +((k[Gb>>2]|0)>>>0);Hb=275;break}default:{g=+((k[Gb+(h+-3<<2)>>2]|0)>>>0)+(+((k[Gb+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Gb+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break d;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break d}if((h|0)>=-1022)break d;g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)>=-1022)break d;h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}while(0);if((Hb|0)==275){h=0;g=(j|0)<0?-g:g}Kb=ee(h+1023|0,0,52)|0;Lb=L;k[t>>2]=Kb;k[t+4>>2]=Lb;na=m/+X(+(g*+p[t>>3]));p[P>>3]=na}}else{Sc(Sa,zb,zb);Sc(Ta,Cb,Cb);Tc(Ua,Sa,Ta);Sc(Va,Ua,Xa);Sc(Wa,Va,Ya);k[bb>>2]=4;k[bb+256>>2]=1;Sc(Bb,Wa,bb);j=k[h>>2]|0;h=(j|0)>-1?j:0-j|0;e:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[Cb>>2]|0)>>>0);Hb=287;break}case 2:{g=+((k[Cb+4>>2]|0)>>>0)*4294967296.0+ +((k[Cb>>2]|0)>>>0);Hb=287;break}default:{g=+((k[Cb+(h+-3<<2)>>2]|0)>>>0)+(+((k[Cb+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Cb+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break e;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break e}if((h|0)>=-1022)break e;g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)>=-1022)break e;h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}while(0);if((Hb|0)==287){h=0;g=(j|0)<0?-g:g}Kb=ee(h+1023|0,0,52)|0;Lb=L;k[t>>2]=Kb;k[t+4>>2]=Lb;m=1.0/(g*+p[t>>3]);m=m*m;do if(J|N){Sc(db,hb,Cb);Sc(eb,db,Cb);Sc(gb,zb,yb);Sc(fb,gb,ib);Tc(cb,eb,fb);fe(Eb|0,cb|0,260)|0;k[Fb>>2]=1;k[Fb+256>>2]=1;fe(Eb+260|0,ib|0,256)|0;k[Eb+516>>2]=(e|0)==2?0-G|0:G;fe(Fb+260|0,Bb|0,260)|0;if(!J)break;Xc(jb,Eb,Fb);g=+p[jb>>3];j=k[jb+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);Kb=ee(h+1023|0,0,52)|0;Lb=L;k[t>>2]=Kb;k[t+4>>2]=Lb;p[f>>3]=m*(g*+p[t>>3]*.5)}while(0);do if(M|N){j=Eb+520|0;Sc(lb,pb,Cb);Sc(mb,lb,Cb);Sc(ob,zb,yb);Sc(nb,ob,rb);Tc(kb,mb,nb);fe(j|0,kb|0,260)|0;h=Fb+520|0;k[h>>2]=1;k[Fb+776>>2]=1;fe(Eb+780|0,rb|0,256)|0;k[Eb+1036>>2]=(e|0)==2?0-I|0:I;fe(Fb+780|0,Bb|0,260)|0;if(!M)break;Xc(qb,j,h);g=+p[qb>>3];j=k[qb+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);Kb=ee(h+1023|0,0,52)|0;Lb=L;k[t>>2]=Kb;k[t+4>>2]=Lb;p[O>>3]=m*(g*+p[t>>3]*.5)}while(0);if(N){Sc(sb,Fb,Gb);fe(Fb|0,sb|0,260)|0;j=Fb+260|0;Sc(tb,j,Gb);fe(j|0,tb|0,260)|0;Sc(wb,Cb,Cb);Sc(xb,zb,zb);Tc(vb,wb,xb);Sc(ub,yb,vb);fe(Eb+520|0,ub|0,260)|0;k[Fb+520>>2]=1;k[Fb+776>>2]=1;j=k[zb+256>>2]|0;fe(Eb+780|0,zb|0,256)|0;k[Eb+1036>>2]=(e|0)==2?0-j|0:j;fe(Fb+780|0,Bb|0,260)|0;Wc(Ab,a,Eb,Fb);g=+p[Ab>>3];j=k[Ab+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);h=ee(h+1023|0,0,52)|0;j=L;k[t>>2]=h;k[t+4>>2]=j;m=m*(g*+p[t>>3]*.5);j=k[Gb+256>>2]|0;h=(j|0)>-1?j:0-j|0;f:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[Gb>>2]|0)>>>0);Hb=322;break}case 2:{g=+((k[Gb+4>>2]|0)>>>0)*4294967296.0+ +((k[Gb>>2]|0)>>>0);Hb=322;break}default:{g=+((k[Gb+(h+-3<<2)>>2]|0)>>>0)+(+((k[Gb+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Gb+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break f;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break f}if((h|0)>=-1022)break f;g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)>=-1022)break f;h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}while(0);if((Hb|0)==322){h=0;g=(j|0)<0?-g:g}Kb=ee(h+1023|0,0,52)|0;Lb=L;k[t>>2]=Kb;k[t+4>>2]=Lb;na=m/+X(+(g*+p[t>>3]));p[P>>3]=na}}r=Ib;return}function Rc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0,j=0,l=0,m=0.0,n=0,o=0.0,q=0,s=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0.0,E=0.0,F=0,G=0.0,H=0,I=0.0,J=0.0,K=0.0,M=0,N=0,O=0.0,P=0,Q=0,R=0,S=0,T=0.0,U=0.0,V=0,W=0,Y=0,Z=0,_=0,$=0,aa=0.0,ba=0,ca=0.0,da=0,ea=0.0,fa=0.0,ga=0.0,ia=0.0,ja=0.0,ka=0,la=0,ma=0.0,na=0,oa=0,pa=0,qa=0.0,ra=0,sa=0.0,ta=0.0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0.0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Wc=0,Yc=0,Zc=0,_c=0,$c=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0;ld=r;r=r+34960|0;id=ld+34696|0;gd=ld+34176|0;hd=ld+33656|0;cd=ld+33136|0;jd=ld+32096|0;kd=ld+31056|0;Oc=ld+30792|0;Ca=ld+30532|0;Da=ld+30272|0;Ha=ld+30012|0;Ea=ld+29752|0;Fa=ld+29492|0;wb=ld+29232|0;xb=ld+28972|0;yb=ld+28712|0;dd=ld+28452|0;zb=ld+28192|0;Ab=ld+27932|0;fd=ld+27672|0;Bb=ld+27412|0;Cb=ld+27152|0;$b=ld+26892|0;Db=ld+26632|0;Eb=ld+26372|0;Fb=ld+26112|0;Gb=ld+25852|0;ac=ld+25592|0;bc=ld+25332|0;cc=ld+25072|0;dc=ld+96|0;Pc=ld+24812|0;Cc=ld+24552|0;Dc=ld+24292|0;Ec=ld+24032|0;Fc=ld+23772|0;Qc=ld+23512|0;Rc=ld+23252|0;Wc=ld+22992|0;Yc=ld+80|0;Zc=ld+22732|0;_c=ld+22472|0;$c=ld+22212|0;bd=ld+64|0;Ia=ld+21952|0;Ja=ld+21692|0;Ka=ld+21432|0;Na=ld+21172|0;Oa=ld+20912|0;Pa=ld+20652|0;Qa=ld+20392|0;Ra=ld+20132|0;Sa=ld+19872|0;Ta=ld+19612|0;Lc=ld+19352|0;Ua=ld+19092|0;Mc=ld+18832|0;Va=ld+18572|0;xc=ld+18312|0;Wa=ld+18052|0;Xa=ld+17792|0;Ya=ld+17532|0;Za=ld+17272|0;_a=ld+17012|0;$a=ld+16752|0;ab=ld+16492|0;bb=ld+16232|0;cb=ld+15972|0;db=ld+15712|0;eb=ld+15452|0;fb=ld+15192|0;gb=ld+14932|0;hb=ld+14672|0;ib=ld+14412|0;jb=ld+14152|0;kb=ld+13892|0;lb=ld+13632|0;mb=ld+13372|0;nb=ld+13112|0;ob=ld+12852|0;pb=ld+12592|0;qb=ld+12332|0;rb=ld+12072|0;sb=ld+11812|0;tb=ld+11552|0;ub=ld+11292|0;vb=ld+48|0;Hb=ld+11032|0;Ib=ld+10772|0;Jb=ld+10512|0;Kb=ld+10252|0;Lb=ld+9992|0;Mb=ld+9732|0;Nb=ld+9472|0;Ob=ld+9212|0;Pb=ld+8952|0;Qb=ld+8692|0;Rb=ld+8432|0;Sb=ld+8172|0;Tb=ld+7912|0;Ub=ld+7652|0;Vb=ld+7392|0;Wb=ld+7132|0;Xb=ld+6872|0;Yb=ld+6612|0;Zb=ld+6352|0;_b=ld+32|0;rc=ld+6092|0;sc=ld+5832|0;tc=ld+5572|0;uc=ld+5312|0;vc=ld+5052|0;wc=ld+4792|0;ec=ld+4532|0;fc=ld+4272|0;gc=ld+4012|0;hc=ld+3752|0;ic=ld+3492|0;jc=ld+3232|0;kc=ld+2972|0;lc=ld+2712|0;mc=ld+2452|0;nc=ld+2192|0;oc=ld+1932|0;pc=ld+1672|0;qc=ld+1412|0;yc=ld+16|0;Gc=ld+1152|0;Hc=ld+892|0;Ic=ld+632|0;Jc=ld+372|0;Kc=ld+112|0;Nc=ld;C=k[c>>2]|0;zc=c+8|0;s=k[zc>>2]|0;o=+(s|0);aa=+(C|0)-o;Ga=c+4|0;W=k[Ga>>2]|0;Ac=c+12|0;M=k[Ac>>2]|0;x=+(M|0);ca=+(W|0)-x;Ma=d+8|0;$=k[Ma>>2]|0;P=k[d>>2]|0;u=+(P|0);B=+($|0)-u;La=d+12|0;Y=k[La>>2]|0;Bc=d+4|0;R=k[Bc>>2]|0;y=+(R|0);I=+(Y|0)-y;F=((W|0)<0)<<31>>31;N=((M|0)<0)<<31>>31;ua=be(W|0,F|0,M|0,N|0)|0;va=L;V=((C|0)<0)<<31>>31;H=((s|0)<0)<<31>>31;wa=be(C|0,V|0,s|0,H|0)|0;xa=L;Z=((Y|0)<0)<<31>>31;S=((R|0)<0)<<31>>31;na=be(Y|0,Z|0,R|0,S|0)|0;oa=L;_=(($|0)<0)<<31>>31;Q=((P|0)<0)<<31>>31;ka=be($|0,_|0,P|0,Q|0)|0;la=L;ya=(va|0)<0;za=be(0,0,ua|0,va|0)|0;ua=ya?za:ua;va=ya?L:va;za=(xa|0)<0;pa=be(0,0,wa|0,xa|0)|0;wa=za?pa:wa;xa=za?L:xa;pa=(oa|0)<0;ra=be(0,0,na|0,oa|0)|0;na=pa?ra:na;oa=pa?L:oa;ra=(la|0)<0;h=be(0,0,ka|0,la|0)|0;ka=ra?h:ka;la=ra?L:la;h=ne(ka|0,la|0,ua|0,va|0)|0;j=L;l=ne(na|0,oa|0,wa|0,xa|0)|0;n=L;q=za^pa;do if(ya^ra){if(!q){Aa=ge(l|0,n|0,h|0,j|0)|0;Ba=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}if(j>>>0>n>>>0|(j|0)==(n|0)&h>>>0>l>>>0){Aa=be(h|0,j|0,l|0,n|0)|0;Ba=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}else{Aa=be(l|0,n|0,h|0,j|0)|0;Ba=+(Aa>>>0)+4294967296.0*+(L>>>0);break}}else{if(q){Aa=ge(l|0,n|0,h|0,j|0)|0;Ba=+(Aa>>>0)+4294967296.0*+(L>>>0);break}if(j>>>0<n>>>0|(j|0)==(n|0)&h>>>0<l>>>0){Aa=be(l|0,n|0,h|0,j|0)|0;Ba=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}else{Aa=be(h|0,j|0,l|0,n|0)|0;Ba=+(Aa>>>0)+4294967296.0*+(L>>>0);break}}while(0);Aa=Ba<0.0;U=aa*aa+ca*ca;if(Ba==0.0){n=be(R|0,S|0,M|0,N|0)|0;l=L;j=be(P|0,Q|0,s|0,H|0)|0;h=L;q=(l|0)<0;ra=be(0,0,n|0,l|0)|0;l=q?L:l;Aa=(h|0)<0;pa=be(0,0,j|0,h|0)|0;h=ne((Aa?pa:j)|0,(Aa?L:h)|0,ua|0,va|0)|0;j=L;l=ne((q?ra:n)|0,l|0,wa|0,xa|0)|0;n=L;q=za^q;do if(ya^Aa){if(!q){Aa=ge(h|0,j|0,l|0,n|0)|0;T=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}if(j>>>0>n>>>0|(j|0)==(n|0)&h>>>0>l>>>0){Aa=be(h|0,j|0,l|0,n|0)|0;T=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}else{Aa=be(l|0,n|0,h|0,j|0)|0;T=+(Aa>>>0)+4294967296.0*+(L>>>0);break}}else{if(q){Aa=ge(h|0,j|0,l|0,n|0)|0;T=+(Aa>>>0)+4294967296.0*+(L>>>0);break}if(j>>>0<n>>>0|(j|0)==(n|0)&h>>>0<l>>>0){Aa=be(l|0,n|0,h|0,j|0)|0;T=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}else{Aa=be(h|0,j|0,l|0,n|0)|0;T=+(Aa>>>0)+4294967296.0*+(L>>>0);break}}while(0);F=k[b>>2]|0;C=((F|0)<0)<<31>>31;n=be(F|0,C|0,s|0,H|0)|0;l=L;H=k[b+4>>2]|0;s=((H|0)<0)<<31>>31;j=be(H|0,s|0,M|0,N|0)|0;h=L;q=(l|0)<0;ra=be(0,0,n|0,l|0)|0;l=q?L:l;Aa=(h|0)<0;pa=be(0,0,j|0,h|0)|0;h=ne((Aa?pa:j)|0,(Aa?L:h)|0,wa|0,xa|0)|0;j=L;l=ne((q?ra:n)|0,l|0,ua|0,va|0)|0;n=L;q=ya^q;do if(za^Aa){if(!q){Aa=ge(h|0,j|0,l|0,n|0)|0;m=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}if(j>>>0>n>>>0|(j|0)==(n|0)&h>>>0>l>>>0){Aa=be(h|0,j|0,l|0,n|0)|0;m=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}else{Aa=be(l|0,n|0,h|0,j|0)|0;m=+(Aa>>>0)+4294967296.0*+(L>>>0);break}}else{if(q){Aa=ge(h|0,j|0,l|0,n|0)|0;m=+(Aa>>>0)+4294967296.0*+(L>>>0);break}if(j>>>0<n>>>0|(j|0)==(n|0)&h>>>0<l>>>0){Aa=be(l|0,n|0,h|0,j|0)|0;m=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}else{Aa=be(h|0,j|0,l|0,n|0)|0;m=+(Aa>>>0)+4294967296.0*+(L>>>0);break}}while(0);l=be(H|0,s|0,R|0,S|0)|0;j=L;q=be(F|0,C|0,P|0,Q|0)|0;n=L;h=(j|0)<0;ra=be(0,0,l|0,j|0)|0;j=h?L:j;Aa=(n|0)<0;pa=be(0,0,q|0,n|0)|0;n=ne((Aa?pa:q)|0,(Aa?L:n)|0,ua|0,va|0)|0;q=L;j=ne((h?ra:l)|0,j|0,wa|0,xa|0)|0;l=L;h=za^h;do if(ya^Aa){if(!h){Aa=ge(n|0,q|0,j|0,l|0)|0;g=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}if(q>>>0>l>>>0|(q|0)==(l|0)&n>>>0>j>>>0){Aa=be(n|0,q|0,j|0,l|0)|0;g=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}else{Aa=be(j|0,l|0,n|0,q|0)|0;g=+(Aa>>>0)+4294967296.0*+(L>>>0);break}}else{if(h){Aa=ge(n|0,q|0,j|0,l|0)|0;g=+(Aa>>>0)+4294967296.0*+(L>>>0);break}if(q>>>0<l>>>0|(q|0)==(l|0)&n>>>0<j>>>0){Aa=be(j|0,l|0,n|0,q|0)|0;g=-(+(Aa>>>0)+4294967296.0*+(L>>>0));break}else{Aa=be(n|0,q|0,j|0,l|0)|0;g=+(Aa>>>0)+4294967296.0*+(L>>>0);break}}while(0);z=m*g;G=(o+u)*.5;g=aa*(G-+(F|0));if(g<0.0){m=0.0-g;if(g>0.0){g=(g+0.0)/m;g=g<0.0?-g:g}else g=1.0;v=0.0;w=0.0;u=g+1.0}else{v=g+0.0;w=2.0;m=0.0;u=0.0}O=(x+y)*.5;g=ca*(O-+(H|0));do if(g<0.0){o=m-g;if(m<0.0|g>0.0){g=(m*u+g)/o;g=g<0.0?-g:g}else g=u<1.0?1.0:u;m=o;x=g+1.0;y=v}else{o=v+g;if(v<0.0?v>0.0|g>0.0:0){w=(v*w-g)/o;x=u;y=o;w=(w<0.0?-w:w)+1.0;break}x=u;y=o;w=w<1.0?2.0:w+1.0}while(0);u=+X(+z);h=u<0.0;do if((e|0)==2)if(h){v=y-u;if(y<0.0|u>0.0){g=(y*w+u*2.5)/v;g=g<0.0?-g:g}else g=w<2.5?2.5:w;u=x;o=g+1.0;g=v;break}else{g=m+u;if(m<0.0?m>0.0|u>0.0:0){u=(m*x-u*2.5)/g;u=(u<0.0?-u:u)+1.0;m=g;o=w;g=y;break}u=x<2.5?3.5:x+1.0;m=g;o=w;g=y;break}else if(h){o=m-u;if(m<0.0|u>0.0){g=(m*x+u*2.5)/o;g=g<0.0?-g:g}else g=x<2.5?2.5:x;u=g+1.0;m=o;o=w;g=y;break}else{g=y+u;if(y<0.0?y>0.0|u>0.0:0){o=(y*w-u*2.5)/g;u=x;o=(o<0.0?-o:o)+1.0;break}u=x;o=w<2.5?3.5:w+1.0;break}while(0);D=u+3.0;E=m/U;A=o+3.0;B=g/U;if(G<0.0){g=0.0-G;if(G>0.0){m=(G*0.0+0.0)/g;m=m<0.0?-m:m}else m=0.0;v=0.0;w=0.0;z=g;y=m+1.0}else{v=G+0.0;w=1.0;z=0.0;y=0.0}if(aa<0.0){o=-aa;g=D;x=E*o;m=A;o=B*o}else{g=A;x=aa*B;m=D;o=aa*E}u=g+0.0+1.0;g=m+0.0+1.0;K=v+o;if(v<0.0|o<0.0?v>0.0|o>0.0:0){g=(v*w-o*g)/K;g=g<0.0?-g:g}else g=w<g?g:w;I=g+1.0;J=z+x;if(z<0.0|x<0.0?z>0.0|x>0.0:0){g=(z*y-x*u)/J;g=g<0.0?-g:g}else g=y<u?u:y;G=g+1.0;if(O<0.0){g=0.0-O;if(O>0.0){m=(O*0.0+0.0)/g;m=m<0.0?-m:m}else m=0.0;u=0.0;v=0.0;y=g;x=m+1.0}else{u=O+0.0;v=1.0;y=0.0;x=0.0}if(ca<0.0){m=-ca;o=D;w=E*m;g=A;m=B*m}else{o=A;w=ca*B;g=D;m=ca*E}o=o+0.0+1.0;g=g+0.0+1.0;D=u+m;if(u<0.0|m<0.0?u>0.0|m>0.0:0){g=(u*v-m*g)/D;g=g<0.0?-g:g}else g=v<g?g:v;A=g+1.0;B=y+w;if(y<0.0|w<0.0?y>0.0|w>0.0:0){g=(y*x-w*o)/B;g=g<0.0?-g:g}else g=x<o?o:x;u=g+1.0;o=T*.5/+X(+U);h=o<0.0;a:do if(T<0.0)if(h){m=K-o;if(K<0.0|o>0.0){o=(K*I+o*5.0)/m;o=o<0.0?-o:o}else o=I<5.0?5.0:I;g=J;z=m;x=G;w=o+1.0;break}else{g=J+o;do if(J<0.0){if(!(J>0.0|o>0.0))break;x=(J*G-o*5.0)/g;z=K;x=(x<0.0?-x:x)+1.0;w=I;break a}while(0);z=K;x=G<5.0?6.0:G+1.0;w=I;break}else if(h){g=J-o;if(J<0.0|o>0.0){m=(J*G+o*5.0)/g;m=m<0.0?-m:m}else m=G<5.0?5.0:G;z=K;x=m+1.0;w=I;break}else{m=K+o;do if(K<0.0){if(!(K>0.0|o>0.0))break;w=(K*I-o*5.0)/m;g=J;z=m;x=G;w=(w<0.0?-w:w)+1.0;break a}while(0);g=J;z=m;x=G;w=I<5.0?6.0:I+1.0;break}while(0);y=K-J;do if(K<0.0|J>0.0){if(!(K>0.0|J<0.0)){ed=132;break}o=(K*I+J*G)/y;if(!(o<0.0))break;o=-o}else ed=132;while(0);if((ed|0)==132)o=I<G?G:I;v=D-B;do if(D<0.0|B>0.0){if(!(D>0.0|B<0.0)){ed=137;break}m=(D*A+B*u)/v;if(!(m<0.0))break;m=-m}else ed=137;while(0);if((ed|0)==137)m=A<u?u:A;u=z-g;do if(g>0.0|z<0.0){if(!(g<0.0|z>0.0)){ed=142;break}g=(x*g+w*z)/u;if(!(g<0.0))break;g=-g}else ed=142;while(0);if((ed|0)==142)g=w<x?x:w;p[f>>3]=y;p[f+8>>3]=v;p[f+16>>3]=u;i[f+24>>0]=1}else{J=+X(+U);qa=+X(+(B*B+I*I));n=be(R|0,S|0,Y|0,Z|0)|0;l=L;q=(l|0)<0;da=be(0,0,n|0,l|0)|0;l=q?L:l;h=ne(ka|0,la|0,wa|0,xa|0)|0;j=L;l=ne((q?da:n)|0,l|0,ua|0,va|0)|0;n=L;q=ya^q;do if(za^ra){if(!q){da=ge(h|0,j|0,l|0,n|0)|0;o=-(+(da>>>0)+4294967296.0*+(L>>>0));break}if(j>>>0>n>>>0|(j|0)==(n|0)&h>>>0>l>>>0){da=be(h|0,j|0,l|0,n|0)|0;o=-(+(da>>>0)+4294967296.0*+(L>>>0));break}else{da=be(l|0,n|0,h|0,j|0)|0;o=+(da>>>0)+4294967296.0*+(L>>>0);break}}else{if(q){da=ge(h|0,j|0,l|0,n|0)|0;o=+(da>>>0)+4294967296.0*+(L>>>0);break}if(j>>>0<n>>>0|(j|0)==(n|0)&h>>>0<l>>>0){da=be(l|0,n|0,h|0,j|0)|0;o=-(+(da>>>0)+4294967296.0*+(L>>>0));break}else{da=be(h|0,j|0,l|0,n|0)|0;o=+(da>>>0)+4294967296.0*+(L>>>0);break}}while(0);if(!(o<0.0)){g=J*qa;m=g+o;if(g<0.0?g>0.0|o>0.0:0){sa=(o-g*5.0)/m;ta=m;sa=(sa<0.0?-sa:sa)+1.0}else{ta=m;sa=6.0}}else{m=Ba*Ba;g=J*qa;u=g-o;if(g<0.0|o>0.0){g=(g*5.0+o)/u;if(g<0.0)g=-g}else g=5.0;ta=m/u;sa=g+1.0+3.0+1.0}H=k[b+4>>2]|0;s=((H|0)<0)<<31>>31;n=be(W|0,F|0,H|0,s|0)|0;l=L;ba=k[b>>2]|0;da=((ba|0)<0)<<31>>31;j=be(C|0,V|0,ba|0,da|0)|0;h=L;q=(l|0)<0;R=be(0,0,n|0,l|0)|0;l=q?L:l;S=(h|0)<0;Q=be(0,0,j|0,h|0)|0;h=ne((S?Q:j)|0,(S?L:h)|0,ua|0,va|0)|0;j=L;l=ne((q?R:n)|0,l|0,wa|0,xa|0)|0;n=L;q=za^q;do if(ya^S){if(!q){S=ge(h|0,j|0,l|0,n|0)|0;m=-(+(S>>>0)+4294967296.0*+(L>>>0));break}if(j>>>0>n>>>0|(j|0)==(n|0)&h>>>0>l>>>0){S=be(h|0,j|0,l|0,n|0)|0;m=-(+(S>>>0)+4294967296.0*+(L>>>0));break}else{S=be(l|0,n|0,h|0,j|0)|0;m=+(S>>>0)+4294967296.0*+(L>>>0);break}}else{if(q){S=ge(h|0,j|0,l|0,n|0)|0;m=+(S>>>0)+4294967296.0*+(L>>>0);break}if(j>>>0<n>>>0|(j|0)==(n|0)&h>>>0<l>>>0){S=be(l|0,n|0,h|0,j|0)|0;m=-(+(S>>>0)+4294967296.0*+(L>>>0));break}else{S=be(h|0,j|0,l|0,n|0)|0;m=+(S>>>0)+4294967296.0*+(L>>>0);break}}while(0);n=be($|0,_|0,ba|0,da|0)|0;l=L;j=be(Y|0,Z|0,H|0,s|0)|0;h=L;q=(l|0)<0;R=be(0,0,n|0,l|0)|0;l=q?L:l;S=(h|0)<0;Q=be(0,0,j|0,h|0)|0;h=ne((S?Q:j)|0,(S?L:h)|0,ka|0,la|0)|0;j=L;l=ne((q?R:n)|0,l|0,na|0,oa|0)|0;n=L;q=pa^q;do if(ra^S){if(!q){S=ge(h|0,j|0,l|0,n|0)|0;g=-(+(S>>>0)+4294967296.0*+(L>>>0));break}if(j>>>0>n>>>0|(j|0)==(n|0)&h>>>0>l>>>0){S=be(h|0,j|0,l|0,n|0)|0;g=-(+(S>>>0)+4294967296.0*+(L>>>0));break}else{S=be(l|0,n|0,h|0,j|0)|0;g=+(S>>>0)+4294967296.0*+(L>>>0);break}}else{if(q){S=ge(h|0,j|0,l|0,n|0)|0;g=+(S>>>0)+4294967296.0*+(L>>>0);break}if(j>>>0<n>>>0|(j|0)==(n|0)&h>>>0<l>>>0){S=be(l|0,n|0,h|0,j|0)|0;g=-(+(S>>>0)+4294967296.0*+(L>>>0));break}else{S=be(h|0,j|0,l|0,n|0)|0;g=+(S>>>0)+4294967296.0*+(L>>>0);break}}while(0);T=ta*2.0*m*g;fa=sa+0.0+1.0+1.0+1.0+1.0+1.0;l=(W|0)<0;j=be(0,0,W|0,F|0)|0;h=l?L:F;S=(C|0)<0;n=be(0,0,C|0,V|0)|0;n=ne(ua|0,va|0,(S?n:C)|0,(S?L:V)|0)|0;q=L;h=ne(wa|0,xa|0,(l?j:W)|0,h|0)|0;j=L;l=l^za;do if(S^ya){if(!l){W=ge(h|0,j|0,n|0,q|0)|0;A=-(+(W>>>0)+4294967296.0*+(L>>>0));break}if(q>>>0>j>>>0|(q|0)==(j|0)&n>>>0>h>>>0){W=be(n|0,q|0,h|0,j|0)|0;A=-(+(W>>>0)+4294967296.0*+(L>>>0));break}else{W=be(h|0,j|0,n|0,q|0)|0;A=+(W>>>0)+4294967296.0*+(L>>>0);break}}else{if(l){W=ge(h|0,j|0,n|0,q|0)|0;A=+(W>>>0)+4294967296.0*+(L>>>0);break}if(q>>>0<j>>>0|(q|0)==(j|0)&n>>>0<h>>>0){W=be(h|0,j|0,n|0,q|0)|0;A=-(+(W>>>0)+4294967296.0*+(L>>>0));break}else{W=be(n|0,q|0,h|0,j|0)|0;A=+(W>>>0)+4294967296.0*+(L>>>0);break}}while(0);l=($|0)<0;j=be(0,0,$|0,_|0)|0;h=l?L:_;_=(Y|0)<0;n=be(0,0,Y|0,Z|0)|0;n=ne(ka|0,la|0,(_?n:Y)|0,(_?L:Z)|0)|0;q=L;h=ne(na|0,oa|0,(l?j:$)|0,h|0)|0;j=L;l=l^pa;do if(_^ra){if(!l){$=ge(h|0,j|0,n|0,q|0)|0;y=-(+($>>>0)+4294967296.0*+(L>>>0));break}if(q>>>0>j>>>0|(q|0)==(j|0)&n>>>0>h>>>0){$=be(n|0,q|0,h|0,j|0)|0;y=-(+($>>>0)+4294967296.0*+(L>>>0));break}else{$=be(h|0,j|0,n|0,q|0)|0;y=+($>>>0)+4294967296.0*+(L>>>0);break}}else{if(l){$=ge(h|0,j|0,n|0,q|0)|0;y=+($>>>0)+4294967296.0*+(L>>>0);break}if(q>>>0<j>>>0|(q|0)==(j|0)&n>>>0<h>>>0){$=be(h|0,j|0,n|0,q|0)|0;y=-(+($>>>0)+4294967296.0*+(L>>>0));break}else{$=be(n|0,q|0,h|0,j|0)|0;y=+($>>>0)+4294967296.0*+(L>>>0);break}}while(0);z=1.0/Ba;g=B*A*z;if(g<0.0){m=0.0-g;if(g>0.0){g=(g*5.0+0.0)/m;g=g<0.0?-g:g}else g=5.0;v=0.0;x=0.0;w=g+1.0}else{v=g+0.0;x=6.0;m=0.0;w=0.0}o=aa*y*z;do if(o<0.0){u=m-o;if(o>0.0|m<0.0){g=(o*5.0+m*w)/u;g=g<0.0?-g:g}else g=w<5.0?5.0:w;U=v;ea=u;K=x;O=g+1.0}else{g=o+v;if(v<0.0?o>0.0|v>0.0:0){K=(v*x-o*5.0)/g;U=g;ea=m;K=(K<0.0?-K:K)+1.0;O=w;break}U=g;ea=m;K=x<5.0?6.0:x+1.0;O=w}while(0);g=ca*y*z;if(g<0.0){m=0.0-g;if(g>0.0){g=(g*5.0+0.0)/m;g=g<0.0?-g:g}else g=5.0;v=0.0;x=0.0;w=g+1.0}else{v=g+0.0;x=6.0;m=0.0;w=0.0}o=I*A*z;do if(o<0.0){u=m-o;if(o>0.0|m<0.0){g=(o*5.0+m*w)/u;g=g<0.0?-g:g}else g=w<5.0?5.0:w;ja=v;ma=u;ga=x;ia=g+1.0}else{g=o+v;if(v<0.0?o>0.0|v>0.0:0){ga=(v*x-o*5.0)/g;ja=g;ma=m;ga=(ga<0.0?-ga:ga)+1.0;ia=w;break}ja=g;ma=m;ga=x<5.0?6.0:x+1.0;ia=w}while(0);E=aa*qa;P=E<0.0;if(P){m=O;g=K;v=-(E*U);o=-(E*ea)}else{m=K;g=O;v=E*ea;o=E*U}u=g+3.0+1.0;g=m+3.0+1.0;y=o+0.0;if(o<0.0&o>0.0){g=(0.0-o*g)/y;g=g<0.0?-g:g}else g=g>0.0?g:0.0;w=g+1.0;z=v+0.0;if(v<0.0&v>0.0){g=(0.0-v*u)/z;g=g<0.0?-g:g}else g=u>0.0?u:0.0;x=g+1.0;G=B*J;S=G<0.0;if(S){m=O;g=K;v=-(G*U);o=-(G*ea)}else{m=K;g=O;v=G*ea;o=G*U}u=g+3.0+1.0;g=m+3.0+1.0;B=y+o;if(y<0.0|o<0.0?y>0.0|o>0.0:0){g=(y*w-o*g)/B;g=g<0.0?-g:g}else g=w<g?g:w;y=g+1.0;A=z+v;do if(z<0.0|v<0.0){if(!(z>0.0|v>0.0)){ed=255;break}g=(z*x-v*u)/A;g=g<0.0?-g:g}else ed=255;while(0);if((ed|0)==255)g=x<u?u:x;w=g+1.0;ca=ca*qa;R=ca<0.0;if(R){m=ia;g=ga;v=-(ca*ja);o=-(ca*ma)}else{m=ga;g=ia;v=ca*ma;o=ca*ja}u=g+3.0+1.0;g=m+3.0+1.0;D=B+o;do if(B<0.0|o<0.0){if(!(B>0.0|o>0.0)){ed=262;break}g=(B*y-o*g)/D;g=g<0.0?-g:g}else ed=262;while(0);if((ed|0)==262)g=y<g?g:y;z=g+1.0;B=A+v;do if(A<0.0|v<0.0){if(!(A>0.0|v>0.0)){ed=266;break}g=(A*w-v*u)/B;g=g<0.0?-g:g}else ed=266;while(0);if((ed|0)==266)g=w<u?u:w;y=g+1.0;aa=I*J;Q=aa<0.0;if(Q){m=ia;g=ga;x=-(aa*ja);o=-(aa*ma)}else{m=ga;g=ia;x=aa*ma;o=aa*ja}u=g+3.0+1.0;g=m+3.0+1.0;w=D+o;do if(D<0.0|o<0.0){if(!(D>0.0|o>0.0)){ed=273;break}g=(D*z-o*g)/w;g=g<0.0?-g:g}else ed=273;while(0);if((ed|0)==273)g=z<g?g:z;v=g+1.0;z=B+x;do if(B<0.0|x<0.0){if(!(B>0.0|x>0.0)){ed=277;break}g=(B*y-x*u)/z;g=g<0.0?-g:g}else ed=277;while(0);if((ed|0)==277)g=y<u?u:y;u=g+1.0;F=0-H|0;N=((F|0)<0)<<31>>31;M=(H|0)>0;H=be(0,0,F|0,N|0)|0;F=M?H:F;H=M?L:N;N=(ba|0)<0;C=be(0,0,ba|0,da|0)|0;C=N?C:ba;s=N?L:da;n=ne(C|0,s|0,ka|0,la|0)|0;q=L;j=ne(na|0,oa|0,F|0,H|0)|0;l=L;h=M^pa;do if(ra^N){if(!h){ra=ge(n|0,q|0,j|0,l|0)|0;g=-(+(ra>>>0)+4294967296.0*+(L>>>0));break}if(q>>>0>l>>>0|(q|0)==(l|0)&n>>>0>j>>>0){ra=be(n|0,q|0,j|0,l|0)|0;g=-(+(ra>>>0)+4294967296.0*+(L>>>0));break}else{ra=be(j|0,l|0,n|0,q|0)|0;g=+(ra>>>0)+4294967296.0*+(L>>>0);break}}else{if(h){ra=ge(n|0,q|0,j|0,l|0)|0;g=+(ra>>>0)+4294967296.0*+(L>>>0);break}if(q>>>0<l>>>0|(q|0)==(l|0)&n>>>0<j>>>0){ra=be(j|0,l|0,n|0,q|0)|0;g=-(+(ra>>>0)+4294967296.0*+(L>>>0));break}else{ra=be(n|0,q|0,j|0,l|0)|0;g=+(ra>>>0)+4294967296.0*+(L>>>0);break}}while(0);m=J*g;b:do if(m<0.0){o=w-m;if(w<0.0|m>0.0){g=(w*v+m*4.0)/o;g=g<0.0?-g:g}else g=v<4.0?4.0:v;x=z;w=o;v=g+1.0}else{g=z+m;do if(z<0.0){if(!(z>0.0|m>0.0))break;u=(z*u-m*4.0)/g;x=g;u=(u<0.0?-u:u)+1.0;break b}while(0);x=g;u=u<4.0?5.0:u+1.0}while(0);n=ne(C|0,s|0,wa|0,xa|0)|0;q=L;j=ne(ua|0,va|0,F|0,H|0)|0;l=L;h=M^ya;do if(za^N){if(!h){za=ge(n|0,q|0,j|0,l|0)|0;g=-(+(za>>>0)+4294967296.0*+(L>>>0));break}if(q>>>0>l>>>0|(q|0)==(l|0)&n>>>0>j>>>0){za=be(n|0,q|0,j|0,l|0)|0;g=-(+(za>>>0)+4294967296.0*+(L>>>0));break}else{za=be(j|0,l|0,n|0,q|0)|0;g=+(za>>>0)+4294967296.0*+(L>>>0);break}}else{if(h){za=ge(n|0,q|0,j|0,l|0)|0;g=+(za>>>0)+4294967296.0*+(L>>>0);break}if(q>>>0<l>>>0|(q|0)==(l|0)&n>>>0<j>>>0){za=be(j|0,l|0,n|0,q|0)|0;g=-(+(za>>>0)+4294967296.0*+(L>>>0));break}else{za=be(n|0,q|0,j|0,l|0)|0;g=+(za>>>0)+4294967296.0*+(L>>>0);break}}while(0);m=qa*g;c:do if(m<0.0){o=w-m;if(w<0.0|m>0.0){m=(w*v+m*4.0)/o;m=m<0.0?-m:m}else m=v<4.0?4.0:v;g=x;m=m+1.0}else{g=x+m;do if(x<0.0){if(!(x>0.0|m>0.0))break;u=(x*u-m*4.0)/g;u=(u<0.0?-u:u)+1.0;o=w;m=v;break c}while(0);u=u<4.0?5.0:u+1.0;o=w;m=v}while(0);z=g+0.0;if(g<0.0&g>0.0){g=(0.0-g*u)/z;g=g<0.0?-g:g}else g=u>0.0?u:0.0;x=g+1.0;y=o+0.0;if(o<0.0&o>0.0){g=(0.0-o*m)/y;g=g<0.0?-g:g}else g=m>0.0?m:0.0;o=g+1.0;v=+X(+T);w=fa*.5+1.0;h=v<0.0;d:do if((e|0)==2)if(h){u=y-v;if(y<0.0|v>0.0){g=(y*o+w*v)/u;g=g<0.0?-g:g}else g=o<w?w:o;v=x;m=z;o=g+1.0;g=u;break}else{g=z+v;do if(z<0.0){if(!(z>0.0|v>0.0))break;v=(z*x-w*v)/g;v=(v<0.0?-v:v)+1.0;m=g;g=y;break d}while(0);v=(x<w?w:x)+1.0;m=g;g=y;break}else if(h){m=z-v;if(z<0.0|v>0.0){g=(z*x+w*v)/m;g=g<0.0?-g:g}else g=x<w?w:x;v=g+1.0;g=y;break}else{g=y+v;do if(y<0.0){if(!(y>0.0|v>0.0))break;o=(y*o-w*v)/g;v=x;m=z;o=(o<0.0?-o:o)+1.0;break d}while(0);v=x;m=z;o=(o<w?w:o)+1.0;break}while(0);I=ta*ta;T=sa+sa+1.0+1.0;v=T+v;J=m/I;T=T+o;I=g/I;if(P){m=T;g=v;w=-(E*J);o=-(E*I)}else{m=v;g=T;w=E*I;o=E*J}u=g+3.0+1.0;g=m+3.0+1.0;A=U+o;do if(U<0.0|o<0.0){if(!(U>0.0|o>0.0)){ed=349;break}g=(U*K-o*g)/A;g=g<0.0?-g:g}else ed=349;while(0);if((ed|0)==349)g=K<g?g:K;y=g+1.0;z=ea+w;do if(ea<0.0|w<0.0){if(!(ea>0.0|w>0.0)){ed=353;break}g=(ea*O-w*u)/z;g=g<0.0?-g:g}else ed=353;while(0);if((ed|0)==353)g=O<u?u:O;x=g+1.0;if(S){m=T;g=v;w=-(G*J);o=-(G*I)}else{m=v;g=T;w=G*I;o=G*J}u=g+3.0+1.0;g=m+3.0+1.0;U=A+o;do if(A<0.0|o<0.0){if(!(A>0.0|o>0.0)){ed=360;break}g=(A*y-o*g)/U;g=g<0.0?-g:g}else ed=360;while(0);if((ed|0)==360)g=y<g?g:y;K=g+1.0;O=z+w;do if(z<0.0|w<0.0){if(!(z>0.0|w>0.0)){ed=364;break}g=(z*x-w*u)/O;g=g<0.0?-g:g}else ed=364;while(0);if((ed|0)==364)g=x<u?u:x;G=g+1.0;if(R){m=T;g=v;w=-(ca*J);o=-(ca*I)}else{m=v;g=T;w=ca*I;o=ca*J}u=g+3.0+1.0;g=m+3.0+1.0;A=ja+o;do if(ja<0.0|o<0.0){if(!(ja>0.0|o>0.0)){ed=371;break}g=(ja*ga-o*g)/A;g=g<0.0?-g:g}else ed=371;while(0);if((ed|0)==371)g=ga<g?g:ga;y=g+1.0;z=ma+w;do if(ma<0.0|w<0.0){if(!(ma>0.0|w>0.0)){ed=375;break}g=(ma*ia-w*u)/z;g=g<0.0?-g:g}else ed=375;while(0);if((ed|0)==375)g=ia<u?u:ia;x=g+1.0;if(Q){m=T;g=v;w=-(aa*J);o=-(aa*I)}else{m=v;g=T;w=aa*I;o=aa*J}u=g+3.0+1.0;g=m+3.0+1.0;E=A+o;do if(A<0.0|o<0.0){if(!(A>0.0|o>0.0)){ed=382;break}g=(A*y-o*g)/E;g=g<0.0?-g:g}else ed=382;while(0);if((ed|0)==382)g=y<g?g:y;B=g+1.0;D=z+w;do if(z<0.0|w<0.0){if(!(z>0.0|w>0.0)){ed=386;break}g=(z*x-w*u)/D;g=g<0.0?-g:g}else ed=386;while(0);if((ed|0)==386)g=x<u?u:x;A=g+1.0;if(J<I){o=J;g=I;x=T}else{o=I;g=J;x=v;v=T}e:do if(Aa){w=Ba*o;m=Ba*g;g=x+1.0+1.0;o=v+1.0+1.0;u=U-m;do if(U<0.0|m>-0.0){if(!(U>0.0|m<-0.0)){ed=393;break}g=(U*K+m*g)/u;g=g<0.0?-g:g}else ed=393;while(0);if((ed|0)==393)g=K<g?g:K;m=g+1.0;g=O-w;do if(O<0.0|w>-0.0){if(!(O>0.0|w<-0.0))break;o=(O*G+w*o)/g;o=o<0.0?-o:o;z=u;x=m;break e}while(0);o=G<o?o:G;z=u;x=m}else{m=Ba*g;u=Ba*o;o=v+1.0+1.0;g=x+1.0+1.0;v=U+m;do if(U<0.0|m<0.0){if(!(U>0.0|m>0.0)){ed=401;break}g=(U*K-m*g)/v;g=g<0.0?-g:g}else ed=401;while(0);if((ed|0)==401)g=K<g?g:K;m=g+1.0;g=O+u;do if(O<0.0|u<0.0){if(!(O>0.0|u>0.0))break;o=(O*G-u*o)/g;o=o<0.0?-o:o;z=v;x=m;break e}while(0);o=G<o?o:G;z=v;x=m}while(0);w=o+1.0;y=U-O;do if(U<0.0|O>0.0){if(!(U>0.0|O<0.0)){ed=409;break}o=(U*K+O*G)/y;if(!(o<0.0))break;o=-o}else ed=409;while(0);if((ed|0)==409)o=K<G?G:K;v=E-D;do if(E<0.0|D>0.0){if(!(E>0.0|D<0.0)){ed=414;break}m=(E*B+D*A)/v;if(!(m<0.0))break;m=-m}else ed=414;while(0);if((ed|0)==414)m=B<A?A:B;u=z-g;do if(g>0.0|z<0.0){if(!(g<0.0|z>0.0)){ed=419;break}g=(g*w+x*z)/u;if(!(g<0.0))break;g=-g}else ed=419;while(0);if((ed|0)==419)g=x<w?w:x;p[f>>3]=y;p[f+8>>3]=v;p[f+16>>3]=u;i[f+24>>0]=1}N=g+1.0>64.0;H=m+1.0>64.0;M=o+1.0>64.0;if(!(M|H|N)){r=ld;return}j=k[c>>2]|0;h=k[zc>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){za=be(0,0,h|0,j|0)|0;Aa=L;k[gd>>2]=za;k[gd+4>>2]=Aa;k[gd+256>>2]=(Aa|0)!=0?-2:-1;break}else{k[gd+256>>2]=0;break}else{k[gd>>2]=h;k[gd+4>>2]=j;k[gd+256>>2]=(j|0)!=0?2:1}while(0);j=k[Ga>>2]|0;h=k[Ac>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){za=be(0,0,h|0,j|0)|0;Aa=L;k[hd>>2]=za;k[hd+4>>2]=Aa;k[hd+256>>2]=(Aa|0)!=0?-2:-1;break}else{k[hd+256>>2]=0;break}else{k[hd>>2]=h;k[hd+4>>2]=j;k[hd+256>>2]=(j|0)!=0?2:1}while(0);F=gd+260|0;j=k[Ma>>2]|0;h=k[d>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){za=be(0,0,h|0,j|0)|0;Aa=L;k[F>>2]=za;k[gd+264>>2]=Aa;k[gd+516>>2]=(Aa|0)!=0?-2:-1;break}else{k[gd+516>>2]=0;break}else{k[F>>2]=h;k[gd+264>>2]=j;k[gd+516>>2]=(j|0)!=0?2:1}while(0);C=hd+260|0;j=k[La>>2]|0;h=k[Bc>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){za=be(0,0,h|0,j|0)|0;Aa=L;k[C>>2]=za;k[hd+264>>2]=Aa;k[hd+516>>2]=(Aa|0)!=0?-2:-1;break}else{k[hd+516>>2]=0;break}else{k[C>>2]=h;k[hd+264>>2]=j;k[hd+516>>2]=(j|0)!=0?2:1}while(0);Sc(Ca,F,hd);Sc(Da,gd,C);Uc(Oc,Ca,Da);l=Oc+256|0;if(k[l>>2]|0){h=k[c>>2]|0;do if((h|0)<=0)if((h|0)<0){k[id>>2]=0-h;k[id+256>>2]=-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+256>>2]=1}while(0);Sc(Ja,hd,id);h=k[Ga>>2]|0;do if((h|0)<=0)if((h|0)<0){k[id>>2]=0-h;k[id+256>>2]=-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+256>>2]=1}while(0);Sc(Ka,gd,id);Uc(Ia,Ja,Ka);fe(cd|0,Ia|0,260)|0;j=cd+260|0;h=k[La>>2]|0;do if((h|0)<=0)if((h|0)<0){k[id>>2]=0-h;k[id+256>>2]=-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+256>>2]=1}while(0);Sc(Oa,F,id);h=k[Ma>>2]|0;do if((h|0)<=0)if((h|0)<0){k[id>>2]=0-h;k[id+256>>2]=-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+256>>2]=1}while(0);Sc(Pa,C,id);Uc(Na,Oa,Pa);fe(j|0,Na|0,260)|0;Sc(Qa,gd,j);Sc(Ra,F,cd);Tc(dd,Qa,Ra);Sc(Sa,hd,j);Sc(Ta,C,cd);Tc(fd,Sa,Ta);h=k[b>>2]|0;do if((h|0)<=0)if((h|0)<0){k[id>>2]=0-h;k[id+256>>2]=-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+256>>2]=1}while(0);Sc(Ua,Oc,id);Uc(Lc,dd,Ua);h=k[b+4>>2]|0;do if((h|0)<=0)if((h|0)<0){k[id>>2]=0-h;k[id+256>>2]=-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+256>>2]=1}while(0);Sc(Va,Oc,id);Uc(Mc,fd,Va);if((k[Lc+256>>2]|0)==0?(k[Mc+256>>2]|0)==0:0){j=k[l>>2]|0;h=(j|0)>-1?j:0-j|0;f:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[Oc>>2]|0)>>>0);ed=576;break}case 2:{g=+((k[Oc+4>>2]|0)>>>0)*4294967296.0+ +((k[Oc>>2]|0)>>>0);ed=576;break}default:{g=+((k[Oc+(h+-3<<2)>>2]|0)>>>0)+(+((k[Oc+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Oc+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break f;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break f}if((h|0)>=-1022)break f;g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)>=-1022)break f;h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}while(0);if((ed|0)==576){h=0;g=(j|0)<0?-g:g}h=ee(h+1023|0,0,52)|0;j=L;k[t>>2]=h;k[t+4>>2]=j;o=g*+p[t>>3];j=k[dd+256>>2]|0;h=(j|0)>-1?j:0-j|0;g:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[dd>>2]|0)>>>0);ed=586;break}case 2:{g=+((k[dd+4>>2]|0)>>>0)*4294967296.0+ +((k[dd>>2]|0)>>>0);ed=586;break}default:{g=+((k[dd+(h+-3<<2)>>2]|0)>>>0)+(+((k[dd+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[dd+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break g;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break g}if((h|0)>=-1022)break g;g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)>=-1022)break g;h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}while(0);if((ed|0)==586){h=0;g=(j|0)<0?-g:g}h=ee(h+1023|0,0,52)|0;j=L;k[t>>2]=h;k[t+4>>2]=j;m=g*+p[t>>3]/o;j=k[fd+256>>2]|0;h=(j|0)>-1?j:0-j|0;h:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[fd>>2]|0)>>>0);ed=596;break}case 2:{g=+((k[fd+4>>2]|0)>>>0)*4294967296.0+ +((k[fd>>2]|0)>>>0);ed=596;break}default:{g=+((k[fd+(h+-3<<2)>>2]|0)>>>0)+(+((k[fd+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[fd+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break h;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break h}if((h|0)>=-1022)break h;g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)>=-1022)break h;h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}while(0);if((ed|0)==596){h=0;g=(j|0)<0?-g:g}kd=ee(h+1023|0,0,52)|0;a=L;k[t>>2]=kd;k[t+4>>2]=a;Ba=g*+p[t>>3]/o;p[f>>3]=m;p[f+8>>3]=Ba;p[f+16>>3]=m;i[f+24>>0]=1}else{h=ha((k[l>>2]>>31&2)+-1|0,(e|0)==2?1:-1)|0;do if((h|0)<=0)if((h|0)<0){k[xc>>2]=0-h;k[xc+256>>2]=-1;break}else{k[xc+256>>2]=0;break}else{k[xc>>2]=h;k[xc+256>>2]=1}while(0);fe(Xa|0,Lc|0,260)|0;q=Xa+256|0;k[q>>2]=0-(k[q>>2]|0);Sc(Ya,F,Xa);fe(_a|0,Mc|0,260)|0;q=_a+256|0;k[q>>2]=0-(k[q>>2]|0);Sc(Za,C,_a);Tc(Wa,Ya,Za);fe(jd|0,Wa|0,260)|0;q=jd+260|0;fe(ab|0,Lc|0,260)|0;n=ab+256|0;k[n>>2]=0-(k[n>>2]|0);Sc(bb,gd,ab);fe(db|0,Mc|0,260)|0;n=db+256|0;k[n>>2]=0-(k[n>>2]|0);Sc(cb,hd,db);Tc($a,bb,cb);fe(q|0,$a|0,260)|0;n=jd+520|0;fe(n|0,xc|0,260)|0;s=jd+780|0;k[jd+1036>>2]=0;Sc(fb,gd,gd);Sc(gb,hd,hd);Tc(eb,fb,gb);fe(kd|0,eb|0,260)|0;Sc(ib,F,F);Sc(jb,C,C);Tc(hb,ib,jb);fe(kd+260|0,hb|0,260)|0;Sc(lb,gd,F);Sc(mb,hd,C);Tc(kb,lb,mb);fe(kd+520|0,kb|0,260)|0;Sc(ob,gd,Mc);Sc(pb,hd,Lc);Uc(qb,ob,pb);Sc(sb,F,Mc);Sc(tb,C,Lc);Uc(rb,sb,tb);Sc(ub,qb,rb);k[id>>2]=2;k[id+256>>2]=-1;Sc(nb,ub,id);fe(kd+780|0,nb|0,260)|0;ad(vb,a,jd,kd);g=+p[vb>>3];j=k[vb+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);h=ee(h+1023|0,0,52)|0;j=L;k[t>>2]=h;k[t+4>>2]=j;o=g*+p[t>>3];j=k[l>>2]|0;h=(j|0)>-1?j:0-j|0;i:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[Oc>>2]|0)>>>0);ed=618;break}case 2:{g=+((k[Oc+4>>2]|0)>>>0)*4294967296.0+ +((k[Oc>>2]|0)>>>0);ed=618;break}default:{g=+((k[Oc+(h+-3<<2)>>2]|0)>>>0)+(+((k[Oc+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Oc+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break i;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break i}if((h|0)>=-1022)break i;g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)>=-1022)break i;h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}while(0);if((ed|0)==618){h=0;g=(j|0)<0?-g:g}cd=ee(h+1023|0,0,52)|0;ed=L;k[t>>2]=cd;k[t+4>>2]=ed;m=o*(g*+p[t>>3]);if(H){Sc(Jb,Lc,Lc);Sc(Kb,Mc,Mc);Tc(Ib,Jb,Kb);Sc(Lb,C,Ib);Sc(Ob,Lc,F);Sc(Pb,Mc,C);Tc(Nb,Ob,Pb);Sc(Mb,fd,Nb);Uc(Hb,Lb,Mb);fe(jd|0,Hb|0,260)|0;Sc(Sb,Lc,Lc);Sc(Tb,Mc,Mc);Tc(Rb,Sb,Tb);Sc(Ub,hd,Rb);Sc(Xb,Lc,gd);Sc(Yb,Mc,hd);Tc(Wb,Xb,Yb);Sc(Vb,fd,Wb);Uc(Qb,Ub,Vb);fe(q|0,Qb|0,260)|0;Sc(Zb,fd,xc);fe(n|0,Zb|0,260)|0;ad(_b,a,jd,kd);g=+p[_b>>3];j=k[_b+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);ed=ee(h+1023|0,0,52)|0;fd=L;k[t>>2]=ed;k[t+4>>2]=fd;p[f+8>>3]=g*+p[t>>3]/m}do if(M|N){Sc(tc,Lc,Lc);Sc(uc,Mc,Mc);Tc(sc,tc,uc);Sc(vc,F,sc);Sc(fc,Lc,F);Sc(gc,Mc,C);Tc(ec,fc,gc);Sc(wc,dd,ec);Uc(rc,vc,wc);fe(jd|0,rc|0,260)|0;Sc(jc,Lc,Lc);Sc(kc,Mc,Mc);Tc(ic,jc,kc);Sc(lc,gd,ic);Sc(oc,Lc,gd);Sc(pc,Mc,hd);Tc(nc,oc,pc);Sc(mc,dd,nc);Uc(hc,lc,mc);fe(q|0,hc|0,260)|0;Sc(qc,dd,xc);fe(n|0,qc|0,260)|0;if(M){ad(yc,a,jd,kd);g=+p[yc>>3];j=k[yc+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);gd=ee(h+1023|0,0,52)|0;hd=L;k[t>>2]=gd;k[t+4>>2]=hd;p[f>>3]=g*+p[t>>3]/m}if(!N)break;Sc(Ic,Lc,Lc);Sc(Jc,Mc,Mc);Tc(Hc,Ic,Jc);Sc(Kc,Oc,Hc);k[id>>2]=1;k[id+256>>2]=o<0.0?-1:1;Sc(Gc,Kc,id);fe(s|0,Gc|0,260)|0;ad(Nc,a,jd,kd);g=+p[Nc>>3];j=k[Nc+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);kd=ee(h+1023|0,0,52)|0;a=L;k[t>>2]=kd;k[t+4>>2]=a;p[f+16>>3]=g*+p[t>>3]/m}while(0)}}else{Sc(Ea,gd,gd);Sc(Fa,hd,hd);Tc(Ha,Ea,Fa);j=k[Ha+256>>2]|0;h=(j|0)>-1?j:0-j|0;j:do switch(h|0){case 0:{h=0;g=0.0;break}case 1:{g=+((k[Ha>>2]|0)>>>0);ed=448;break}case 2:{g=+((k[Ha+4>>2]|0)>>>0)*4294967296.0+ +((k[Ha>>2]|0)>>>0);ed=448;break}default:{g=+((k[Ha+(h+-3<<2)>>2]|0)>>>0)+(+((k[Ha+(h+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[Ha+(h+-2<<2)>>2]|0)>>>0))*4294967296.0;l=h<<5;h=l+-96|0;g=(j|0)<0?-g:g;if((h|0)>1023){g=g*89884656743115795.0e291;h=l+-1119|0;if((h|0)<=1023)break j;h=l+-2142|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291;break j}if((h|0)<-1022){g=g*2.2250738585072014e-308;h=l+926|0;if((h|0)<-1022){h=l+1948|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}}}}while(0);if((ed|0)==448){h=0;g=(j|0)<0?-g:g}h=ee(h+1023|0,0,52)|0;j=L;k[t>>2]=h;k[t+4>>2]=j;m=g*+p[t>>3]*2.0;j=k[d>>2]|0;h=k[zc>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Oc=be(0,0,h|0,j|0)|0;ed=L;k[id>>2]=Oc;k[id+4>>2]=ed;k[id+256>>2]=(ed|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+4>>2]=j;k[id+256>>2]=(j|0)!=0?2:1}while(0);Sc(xb,hd,id);j=k[Bc>>2]|0;h=k[Ac>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Oc=be(0,0,h|0,j|0)|0;ed=L;k[id>>2]=Oc;k[id+4>>2]=ed;k[id+256>>2]=(ed|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+4>>2]=j;k[id+256>>2]=(j|0)!=0?2:1}while(0);Sc(yb,gd,id);Uc(wb,xb,yb);fe(cd|0,wb|0,260)|0;s=b+4|0;j=k[s>>2]|0;h=k[Ac>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Oc=be(0,0,h|0,j|0)|0;ed=L;k[id>>2]=Oc;k[id+4>>2]=ed;k[id+256>>2]=(ed|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+4>>2]=j;k[id+256>>2]=(j|0)!=0?2:1}while(0);Sc(zb,gd,id);j=k[b>>2]|0;h=k[zc>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Oc=be(0,0,h|0,j|0)|0;ed=L;k[id>>2]=Oc;k[id+4>>2]=ed;k[id+256>>2]=(ed|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+4>>2]=j;k[id+256>>2]=(j|0)!=0?2:1}while(0);Sc(Ab,hd,id);Uc(dd,zb,Ab);j=k[b>>2]|0;h=k[d>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Oc=be(0,0,h|0,j|0)|0;ed=L;k[id>>2]=Oc;k[id+4>>2]=ed;k[id+256>>2]=(ed|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+4>>2]=j;k[id+256>>2]=(j|0)!=0?2:1}while(0);Sc(Bb,hd,id);j=k[s>>2]|0;h=k[Bc>>2]|0;h=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){Oc=be(0,0,h|0,j|0)|0;ed=L;k[id>>2]=Oc;k[id+4>>2]=ed;k[id+256>>2]=(ed|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+4>>2]=j;k[id+256>>2]=(j|0)!=0?2:1}while(0);Sc(Cb,gd,id);Uc(fd,Bb,Cb);Sc(kd,dd,fd);k[kd+260>>2]=1;k[kd+516>>2]=1;if(H){k[id>>2]=2;k[id+256>>2]=(e|0)==2?1:-1;Sc(jd,hd,id);q=jd+260|0;Sc(Db,gd,gd);h=k[Ac>>2]|0;j=k[Bc>>2]|0;h=ge(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){ed=be(0,0,h|0,j|0)|0;fd=L;k[id>>2]=ed;k[id+4>>2]=fd;k[id+256>>2]=(fd|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+4>>2]=j;k[id+256>>2]=(j|0)!=0?2:1}while(0);Sc(Eb,Db,id);Sc(Gb,gd,hd);fd=k[zc>>2]|0;j=k[d>>2]|0;fd=ge(j|0,((j|0)<0)<<31>>31|0,fd|0,((fd|0)<0)<<31>>31|0)|0;j=L;h=k[b>>2]|0;h=ee(h|0,((h|0)<0)<<31>>31|0,1)|0;h=be(fd|0,j|0,h|0,L|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){ed=be(0,0,h|0,j|0)|0;fd=L;k[id>>2]=ed;k[id+4>>2]=fd;k[id+256>>2]=(fd|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+4>>2]=j;k[id+256>>2]=(j|0)!=0?2:1}while(0);Sc(Fb,Gb,id);Uc(ac,Eb,Fb);Sc(cc,hd,hd);h=k[s>>2]|0;j=((h|0)<0)<<31>>31;l=ee(h|0,j|0,1)|0;n=L;do if((h|0)<=0)if((h|0)<0){ed=be(0,0,l|0,n|0)|0;fd=L;k[id>>2]=ed;k[id+4>>2]=fd;k[id+256>>2]=(fd|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=l;fd=de(h|0,j|0,31)|0;k[id+4>>2]=fd;k[id+256>>2]=(fd|0)!=0?2:1}while(0);Sc(bc,cc,id);Tc($b,ac,bc);fe(q|0,$b|0,260)|0;Xc(dc,jd,kd);g=+p[dc>>3];j=k[dc+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);ed=ee(h+1023|0,0,52)|0;fd=L;k[t>>2]=ed;k[t+4>>2]=fd;p[f+8>>3]=g*+p[t>>3]/m}do if(M|N){k[id>>2]=2;k[id+256>>2]=(e|0)==2?1:-1;Sc(jd,gd,id);q=jd+260|0;Sc(Cc,hd,hd);h=k[zc>>2]|0;j=k[d>>2]|0;h=ge(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){ed=be(0,0,h|0,j|0)|0;fd=L;k[id>>2]=ed;k[id+4>>2]=fd;k[id+256>>2]=(fd|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+4>>2]=j;k[id+256>>2]=(j|0)!=0?2:1}while(0);Sc(Dc,Cc,id);Sc(Fc,gd,hd);fd=k[Ac>>2]|0;j=k[Bc>>2]|0;fd=ge(j|0,((j|0)<0)<<31>>31|0,fd|0,((fd|0)<0)<<31>>31|0)|0;j=L;h=k[s>>2]|0;h=ee(h|0,((h|0)<0)<<31>>31|0,1)|0;h=be(fd|0,j|0,h|0,L|0)|0;j=L;do if(!((j|0)>0|(j|0)==0&h>>>0>0))if((j|0)<0){ed=be(0,0,h|0,j|0)|0;fd=L;k[id>>2]=ed;k[id+4>>2]=fd;k[id+256>>2]=(fd|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=h;k[id+4>>2]=j;k[id+256>>2]=(j|0)!=0?2:1}while(0);Sc(Ec,Fc,id);Uc(Qc,Dc,Ec);Sc(Wc,gd,gd);h=k[b>>2]|0;j=((h|0)<0)<<31>>31;l=ee(h|0,j|0,1)|0;n=L;do if((h|0)<=0)if((h|0)<0){ed=be(0,0,l|0,n|0)|0;fd=L;k[id>>2]=ed;k[id+4>>2]=fd;k[id+256>>2]=(fd|0)!=0?-2:-1;break}else{k[id+256>>2]=0;break}else{k[id>>2]=l;fd=de(h|0,j|0,31)|0;k[id+4>>2]=fd;k[id+256>>2]=(fd|0)!=0?2:1}while(0);Sc(Rc,Wc,id);Tc(Pc,Qc,Rc);fe(q|0,Pc|0,260)|0;if(M){Xc(Yc,jd,kd);g=+p[Yc>>3];j=k[Yc+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);fd=ee(h+1023|0,0,52)|0;id=L;k[t>>2]=fd;k[t+4>>2]=id;p[f>>3]=g*+p[t>>3]/m}if(!N)break;j=k[cd+256>>2]|0;fe(jd+520|0,cd|0,256)|0;k[jd+776>>2]=(j|0)<0?0-j|0:j;Sc(_c,gd,gd);Sc($c,hd,hd);Tc(Zc,_c,$c);fe(kd+520|0,Zc|0,260)|0;Vc(bd,a,jd,kd);g=+p[bd>>3];j=k[bd+8>>2]|0;do if((j|0)>1023){g=g*89884656743115795.0e291;h=j+-1023|0;if((h|0)<=1023)break;h=j+-2046|0;h=(h|0)>1023?1023:h;g=g*89884656743115795.0e291}else{if((j|0)>=-1022){h=j;break}g=g*2.2250738585072014e-308;h=j+1022|0;if((h|0)>=-1022)break;h=j+2044|0;h=(h|0)<-1022?-1022:h;g=g*2.2250738585072014e-308}while(0);kd=ee(h+1023|0,0,52)|0;a=L;k[t>>2]=kd;k[t+4>>2]=a;p[f+16>>3]=g*+p[t>>3]/m}while(0)}r=ld;return}function Sc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=b+256|0;d=k[r>>2]|0;if((d|0)!=0?(s=c+256|0,e=k[s>>2]|0,(e|0)!=0):0){d=(d|0)>-1?d:0-d|0;p=(e|0)>-1?e:0-e|0;o=d+-1+p|0;o=o>>>0<64?o:64;q=a+256|0;k[q>>2]=o;if(o){o=(d|0)==0;l=0-d|0;e=0;g=0;m=-1;n=0;while(1){j=0-(m>>>0>l>>>0?m:l)|0;if(o){f=0;d=0}else{f=0;d=0;i=0;do{h=n-i|0;if(h>>>0<p>>>0){t=ne(k[c+(h<<2)>>2]|0,0,k[b+(i<<2)>>2]|0,0)|0;h=L;e=ge(t|0,0,e|0,g|0)|0;g=L;f=ge(h|0,0,f|0,d|0)|0;d=L}i=i+1|0}while((i|0)!=(j|0))}k[a+(n<<2)>>2]=e;e=ge(g|0,0,f|0,d|0)|0;g=L;n=n+1|0;d=k[q>>2]|0;if(n>>>0>=d>>>0)break;else m=m+-1|0}if(!((e|0)==0&(g|0)==0|(d|0)==64)){k[a+(d<<2)>>2]=e;d=(k[q>>2]|0)+1|0;k[q>>2]=d}}else d=0;if(!((k[r>>2]|0)>0^(k[s>>2]|0)>0))return;k[q>>2]=0-d;return}k[a+256>>2]=0;return}\\r\\nfunction Tc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;j=b+256|0;d=k[j>>2]|0;if(!d){fe(a|0,c|0,260)|0;return}e=k[c+256>>2]|0;if(!e){fe(a|0,b|0,260)|0;return}f=(d|0)>-1?d:0-d|0;g=(e|0)>-1?e:0-e|0;if(!((d|0)>0^(e|0)>0)){while(1)if(f>>>0<g>>>0){h=g;i=c;g=f;f=h;c=b;b=i}else break;i=a+256|0;k[i>>2]=f;if(!g){e=0;d=0;c=0}else{e=0;d=0;h=0;while(1){m=k[c+(h<<2)>>2]|0;d=ge(k[b+(h<<2)>>2]|0,0,e|0,d|0)|0;d=ge(d|0,L|0,m|0,0)|0;e=L;k[a+(h<<2)>>2]=d;h=h+1|0;if((h|0)==(g|0)){d=0;c=g;break}else d=0}}if(c>>>0<f>>>0)while(1){m=ge(k[b+(c<<2)>>2]|0,0,e|0,d|0)|0;e=L;k[a+(c<<2)>>2]=m;c=c+1|0;if((c|0)==(f|0)){d=0;break}else d=0}if(!((e|0)==0&(d|0)==0)?(l=k[i>>2]|0,(l|0)!=64):0){k[a+(l<<2)>>2]=e;k[i>>2]=(k[i>>2]|0)+1}}else $c(a,b,f,c,g,0);if((k[j>>2]|0)>=0)return;m=a+256|0;k[m>>2]=0-(k[m>>2]|0);return}function Uc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;j=b+256|0;d=k[j>>2]|0;if(!d){fe(a|0,c|0,260)|0;a=a+256|0;k[a>>2]=0-(k[a>>2]|0);return}e=k[c+256>>2]|0;if(!e){fe(a|0,b|0,260)|0;return}f=(d|0)>-1?d:0-d|0;g=(e|0)>-1?e:0-e|0;if((d|0)>0^(e|0)>0){while(1)if(f>>>0<g>>>0){h=g;i=c;g=f;f=h;c=b;b=i}else break;i=a+256|0;k[i>>2]=f;if(!g){e=0;d=0;c=0}else{e=0;d=0;h=0;while(1){m=k[c+(h<<2)>>2]|0;d=ge(k[b+(h<<2)>>2]|0,0,e|0,d|0)|0;d=ge(d|0,L|0,m|0,0)|0;e=L;k[a+(h<<2)>>2]=d;h=h+1|0;if((h|0)==(g|0)){d=0;c=g;break}else d=0}}if(c>>>0<f>>>0)while(1){m=ge(k[b+(c<<2)>>2]|0,0,e|0,d|0)|0;e=L;k[a+(c<<2)>>2]=m;c=c+1|0;if((c|0)==(f|0)){d=0;break}else d=0}if(!((e|0)==0&(d|0)==0)?(l=k[i>>2]|0,(l|0)!=64):0){k[a+(l<<2)>>2]=e;k[i>>2]=(k[i>>2]|0)+1}}else $c(a,b,f,c,g,0);if((k[j>>2]|0)>=0)return;m=a+256|0;k[m>>2]=0-(k[m>>2]|0);return}function Vc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0.0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0,B=0,C=0,D=0,E=0;C=r;r=r+3184|0;A=C+2924|0;x=C+48|0;y=C+32|0;e=C+2664|0;f=C+2404|0;n=C+2144|0;o=C+1884|0;q=C+1624|0;s=C+1364|0;t=C+1104|0;u=C+844|0;v=C+584|0;w=C+324|0;g=C+64|0;h=C+16|0;i=C;Xc(x,c,d);j=c+520|0;l=d+520|0;_c(y,j,l);m=+p[x>>3];if(!(!(m<0.0)?!(+p[y>>3]<0.0):0))B=3;if((B|0)==3?(z=+p[y>>3],m>0.0|z>0.0):0){D=b+780|0;Sc(f,c,c);Sc(n,f,d);E=c+260|0;Sc(q,E,E);f=d+260|0;Sc(o,q,f);Tc(s,n,o);Sc(u,j,j);Sc(t,u,l);Uc(e,s,t);fe(D|0,e|0,260)|0;B=b+2080|0;k[B>>2]=1;k[b+2336>>2]=1;Sc(w,c,E);k[A>>2]=2;k[A+256>>2]=1;Sc(v,w,A);fe(b+1040|0,v|0,260)|0;Sc(g,d,f);fe(b+2340|0,g|0,260)|0;Xc(h,D,B);Zc(i,x,z,k[y+8>>2]|0);b=(k[h+8>>2]|0)-(k[i+8>>2]|0)|0;B=a+8|0;z=+Kd(+p[h>>3]/+p[i>>3],B);p[a>>3]=z;k[B>>2]=b+(k[B>>2]|0);r=C;return}Yc(a,x,y);r=C;return}function Wc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0.0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0,H=0,I=0,J=0;I=r;r=r+4752|0;G=I+4484|0;D=I+48|0;E=I+32|0;e=I+4224|0;f=I+3964|0;t=I+3704|0;w=I+3444|0;x=I+3184|0;y=I+2924|0;z=I+2664|0;A=I+2404|0;B=I+2144|0;C=I+1884|0;g=I+1624|0;h=I+1364|0;i=I+1104|0;j=I+844|0;l=I+584|0;m=I+324|0;n=I+64|0;o=I+16|0;q=I;Xc(D,c,d);s=c+520|0;u=d+520|0;Xc(E,s,u);v=+p[D>>3];if(!(!(v<0.0)?!(+p[E>>3]<0.0):0))H=3;if((H|0)==3?(F=+p[E>>3],v>0.0|F>0.0):0){Sc(f,c,c);Sc(t,f,d);J=c+260|0;Sc(x,J,J);f=d+260|0;Sc(w,x,f);Tc(y,t,w);Sc(A,s,s);Sc(z,A,u);Uc(B,y,z);z=c+780|0;Sc(g,z,z);A=d+780|0;Sc(C,g,A);Uc(e,B,C);fe(b|0,e|0,260)|0;H=b+1300|0;k[H>>2]=1;k[b+1556>>2]=1;Sc(i,c,J);k[G>>2]=2;k[G+256>>2]=1;Sc(h,i,G);fe(b+260|0,h|0,260)|0;Sc(j,d,f);fe(b+1560|0,j|0,260)|0;Sc(m,s,z);k[G>>2]=2;k[G+256>>2]=-1;Sc(l,m,G);fe(b+520|0,l|0,260)|0;Sc(n,u,A);fe(b+1820|0,n|0,260)|0;Vc(o,b,b,H);Zc(q,D,F,k[E+8>>2]|0);b=(k[o+8>>2]|0)-(k[q+8>>2]|0)|0;H=a+8|0;F=+Kd(+p[o>>3]/+p[q>>3],H);p[a>>3]=F;k[H>>2]=b+(k[H>>2]|0);r=I;return}Yc(a,D,E);r=I;return}function Xc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0;t=r;r=r+1376|0;o=t+48|0;q=t+32|0;l=t+1104|0;d=t+844|0;f=t+584|0;g=t+324|0;h=t+64|0;m=t+16|0;n=t;_c(o,b,c);i=b+260|0;j=c+260|0;_c(q,i,j);e=+p[o>>3];if(!(!(e<0.0)?!(+p[q>>3]<0.0):0))s=3;do if((s|0)==3){if(!(e>0.0)?!(+p[q>>3]>0.0):0)break;Sc(d,b,b);Sc(f,d,c);Sc(h,i,i);Sc(g,h,j);Uc(l,f,g);f=k[l+256>>2]|0;d=(f|0)>-1?f:0-f|0;switch(d|0){case 0:{e=0.0;d=0;break}case 1:{e=+((k[l>>2]|0)>>>0);d=0;s=10;break}case 2:{e=+((k[l+4>>2]|0)>>>0)*4294967296.0+ +((k[l>>2]|0)>>>0);d=0;s=10;break}default:{e=+((k[l+(d+-3<<2)>>2]|0)>>>0)+(+((k[l+(d+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[l+(d+-2<<2)>>2]|0)>>>0))*4294967296.0;d=(d<<5)+-96|0;s=10}}if((s|0)==10)e=(f|0)<0?-e:e;l=m+8|0;e=+Kd(e,l);p[m>>3]=e;s=(k[l>>2]|0)+d|0;k[l>>2]=s;Zc(n,o,+p[q>>3],k[q+8>>2]|0);q=s-(k[n+8>>2]|0)|0;s=a+8|0;e=+Kd(e/+p[n>>3],s);p[a>>3]=e;k[s>>2]=q+(k[s>>2]|0);r=t;return}while(0);Yc(a,o,q);r=t;return}function Yc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0,g=0;d=+p[b>>3];if(!(d==0.0)?(f=k[c+8>>2]|0,g=k[b+8>>2]|0,(f|0)<=(g+54|0)):0){e=+p[c>>3];if((g|0)>(f+54|0)|e==0.0){k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];return}if((g|0)<(f|0)){b=f-g|0;if((b|0)>1023){e=e*89884656743115795.0e291;c=b+-1023|0;if((c|0)>1023){c=b+-2046|0;c=(c|0)>1023?1023:c;e=e*89884656743115795.0e291}}else if((b|0)<-1022){e=e*2.2250738585072014e-308;c=b+1022|0;if((c|0)<-1022){c=b+2044|0;c=(c|0)<-1022?-1022:c;e=e*2.2250738585072014e-308}}else c=b;b=ee(c+1023|0,0,52)|0;f=L;k[t>>2]=b;k[t+4>>2]=f;f=a+8|0;e=+Kd(d+e*+p[t>>3],f);p[a>>3]=e;k[f>>2]=(k[f>>2]|0)+g;return}else{b=g-f|0;if((b|0)>1023){d=d*89884656743115795.0e291;c=b+-1023|0;if((c|0)>1023){c=b+-2046|0;c=(c|0)>1023?1023:c;d=d*89884656743115795.0e291}}else if((b|0)<-1022){d=d*2.2250738585072014e-308;c=b+1022|0;if((c|0)<-1022){c=b+2044|0;c=(c|0)<-1022?-1022:c;d=d*2.2250738585072014e-308}}else c=b;b=ee(c+1023|0,0,52)|0;g=L;k[t>>2]=b;k[t+4>>2]=g;g=a+8|0;e=+Kd(e+d*+p[t>>3],g);p[a>>3]=e;k[g>>2]=(k[g>>2]|0)+f;return}};k[a>>2]=k[c>>2];k[a+4>>2]=k[c+4>>2];k[a+8>>2]=k[c+8>>2];k[a+12>>2]=k[c+12>>2];return}function Zc(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;var e=0.0,f=0.0,g=0,h=0;e=+p[b>>3];if(!(e==0.0)?(h=k[b+8>>2]|0,(h+54|0)>=(d|0)):0){if((h|0)>(d+54|0)|c==0.0){k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];return}if((h|0)<(d|0)){g=d-h|0;if((g|0)>1023){f=c*-89884656743115795.0e291;b=g+-1023|0;if((b|0)>1023){b=g+-2046|0;b=(b|0)>1023?1023:b;f=f*89884656743115795.0e291}}else{f=-c;if((g|0)<-1022){f=c*-2.2250738585072014e-308;b=g+1022|0;if((b|0)<-1022){b=g+2044|0;b=(b|0)<-1022?-1022:b;f=f*2.2250738585072014e-308}}else b=g}g=ee(b+1023|0,0,52)|0;d=L;k[t>>2]=g;k[t+4>>2]=d;d=a+8|0;c=+Kd(e+f*+p[t>>3],d);p[a>>3]=c;k[d>>2]=(k[d>>2]|0)+h;return}else{g=h-d|0;if((g|0)>1023){e=e*89884656743115795.0e291;b=g+-1023|0;if((b|0)>1023){b=g+-2046|0;b=(b|0)>1023?1023:b;e=e*89884656743115795.0e291}}else if((g|0)<-1022){e=e*2.2250738585072014e-308;b=g+1022|0;if((b|0)<-1022){b=g+2044|0;b=(b|0)<-1022?-1022:b;e=e*2.2250738585072014e-308}}else b=g;g=ee(b+1023|0,0,52)|0;h=L;k[t>>2]=g;k[t+4>>2]=h;h=a+8|0;c=+Kd(e*+p[t>>3]-c,h);p[a>>3]=c;k[h>>2]=(k[h>>2]|0)+d;return}}h=a+8|0;c=+Kd(-c,h);p[a>>3]=c;k[h>>2]=(k[h>>2]|0)+d;return}function _c(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0.0,i=0,j=0,l=0,m=0;m=r;r=r+48|0;g=m+32|0;j=m+16|0;i=m;f=k[b+256>>2]|0;e=(f|0)>-1?f:0-f|0;switch(e|0){case 0:{d=0.0;b=0;break}case 1:{d=+((k[b>>2]|0)>>>0);b=0;l=5;break}case 2:{d=+((k[b+4>>2]|0)>>>0)*4294967296.0+ +((k[b>>2]|0)>>>0);b=0;l=5;break}default:{d=+((k[b+(e+-3<<2)>>2]|0)>>>0)+(+((k[b+(e+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[b+(e+-2<<2)>>2]|0)>>>0))*4294967296.0;b=(e<<5)+-96|0;l=5}}if((l|0)==5)d=(f|0)<0?-d:d;e=g+8|0;h=+Kd(d,e);p[g>>3]=h;f=(k[e>>2]|0)+b|0;k[e>>2]=f;e=k[c+256>>2]|0;b=(e|0)>-1?e:0-e|0;switch(b|0){case 0:{d=0.0;b=0;break}case 1:{d=+((k[c>>2]|0)>>>0);b=0;l=10;break}case 2:{d=+((k[c+4>>2]|0)>>>0)*4294967296.0+ +((k[c>>2]|0)>>>0);b=0;l=10;break}default:{d=+((k[c+(b+-3<<2)>>2]|0)>>>0)+(+((k[c+(b+-1<<2)>>2]|0)>>>0)*4294967296.0+ +((k[c+(b+-2<<2)>>2]|0)>>>0))*4294967296.0;b=(b<<5)+-96|0;l=10}}if((l|0)==10)d=(e|0)<0?-d:d;l=j+8|0;d=+Kd(d,l);p[j>>3]=d;l=(k[l>>2]|0)+b|0;c=(l&1|0)==0;j=i+8|0;d=+Kd(+X(+(c?d:d*2.0)),j);p[i>>3]=d;j=(((c^1)<<31>>31)+l>>1)+(k[j>>2]|0)+f|0;l=a+8|0;h=+Kd(h*d,l);p[a>>3]=h;k[l>>2]=j+(k[l>>2]|0);r=m;return}function $c(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if(c>>>0<e>>>0){$c(a,d,e,b,c,1);a=a+256|0;k[a>>2]=0-(k[a>>2]|0);return}do if((c|0)!=(e|0)|f){f=a+256|0;k[f>>2]=c+-1;if(!e){e=0;h=f;f=0}else{j=f;i=12}}else{while(1){f=c+-1|0;e=k[b+(f<<2)>>2]|0;g=k[d+(f<<2)>>2]|0;if(e>>>0<g>>>0){i=5;break}if(e>>>0>g>>>0){i=8;break}if(!f)break;else c=f}if((i|0)==5){$c(a,d,c,b,c,1);a=a+256|0;k[a>>2]=0-(k[a>>2]|0);return}if((i|0)==8?(c|0)!=0:0){j=a+256|0;k[j>>2]=f;e=c;i=12;break}k[a+256>>2]=0;return}while(0);if((i|0)==12){f=0;i=0;do{g=b+(i<<2)|0;h=d+(i<<2)|0;k[a+(i<<2)>>2]=(k[g>>2]|0)+(f<<31>>31)-(k[h>>2]|0);g=k[g>>2]|0;h=k[h>>2]|0;if(g>>>0<h>>>0)f=1;else f=f&(g|0)==(h|0);i=i+1|0}while((i|0)!=(e|0));h=j}if(e>>>0<c>>>0){g=f;while(1){f=b+(e<<2)|0;k[a+(e<<2)>>2]=(k[f>>2]|0)-(g&1);e=e+1|0;if((e|0)==(c|0))break;else g=g&(k[f>>2]|0)==0}}f=k[h>>2]|0;if(!(k[a+(f<<2)>>2]|0))return;k[h>>2]=f+1;return}function ad(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0,h=0,i=0,j=0,l=0,m=0,n=0.0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0;Ka=r;r=r+16688|0;Ja=Ka+16416|0;xa=Ka+15896|0;ya=Ka+15376|0;za=Ka+272|0;Ba=Ka+256|0;ha=Ka+15112|0;ia=Ka+14852|0;pa=Ka+14592|0;qa=Ka+14332|0;ra=Ka+14072|0;sa=Ka+13812|0;ta=Ka+13552|0;ua=Ka+13292|0;va=Ka+13032|0;wa=Ka+12772|0;ja=Ka+12512|0;ka=Ka+12252|0;la=Ka+11992|0;ma=Ka+11732|0;na=Ka+11472|0;Aa=Ka+240|0;oa=Ka+224|0;Ha=Ka+10432|0;Ia=Ka+9392|0;K=Ka+208|0;M=Ka+192|0;e=Ka+176|0;o=Ka+160|0;q=Ka+144|0;u=Ka+9128|0;v=Ka+8868|0;w=Ka+8608|0;x=Ka+8348|0;y=Ka+8088|0;z=Ka+7828|0;A=Ka+7568|0;B=Ka+7308|0;C=Ka+7048|0;D=Ka+6788|0;E=Ka+6528|0;F=Ka+6268|0;G=Ka+6008|0;H=Ka+5748|0;I=Ka+5488|0;L=Ka+128|0;J=Ka+112|0;Fa=Ka+96|0;t=Ka+80|0;j=Ka+64|0;s=Ka+48|0;Ea=Ka+32|0;N=Ka+5228|0;O=Ka+4968|0;P=Ka+4708|0;Q=Ka+4448|0;R=Ka+4188|0;S=Ka+3928|0;T=Ka+3668|0;U=Ka+3408|0;V=Ka+3148|0;W=Ka+2888|0;Y=Ka+2628|0;Z=Ka+2368|0;_=Ka+2108|0;$=Ka+1848|0;ba=Ka+1588|0;ca=Ka+1328|0;da=Ka+1068|0;ea=Ka+808|0;fa=Ka+548|0;ga=Ka+288|0;Ca=Ka+16|0;Da=Ka;aa=c+780|0;if(!(k[c+1036>>2]|0)){Xc(K,c,d);k[Ha>>2]=1;k[Ha+256>>2]=1;g=d+260|0;Sc(Ia,d,g);h=Ha+260|0;i=d+520|0;fe(h|0,i|0,260)|0;j=Ia+260|0;k[j>>2]=1;k[Ia+516>>2]=1;l=c+520|0;m=d+780|0;_c(e,l,m);Xc(q,Ha,Ia);f=+p[q>>3];Fa=k[q+8>>2]|0;Ea=(Fa&1|0)==0;Ga=o+8|0;f=+Kd(+X(+(Ea?f:f*2.0)),Ga);p[o>>3]=f;Fa=(((Ea^1)<<31>>31)+Fa>>1)+(k[Ga>>2]|0)|0;k[Ga>>2]=Fa;Fa=Fa+(k[e+8>>2]|0)|0;Ga=M+8|0;f=+Kd(+p[e>>3]*f,Ga);p[M>>3]=f;e=Fa+(k[Ga>>2]|0)|0;k[Ga>>2]=e;n=+p[K>>3];if(n<0.0|f<0.0?n>0.0|f>0.0:0){Sc(v,c,c);Sc(w,v,d);Ga=c+260|0;Sc(y,Ga,Ga);Sc(x,y,g);Tc(z,w,x);Sc(B,l,l);Sc(C,B,m);Sc(A,C,i);Uc(u,z,A);fe(Ha|0,u|0,260)|0;k[Ia>>2]=1;k[Ia+256>>2]=1;Sc(E,c,Ga);k[Ja>>2]=2;k[Ja+256>>2]=1;Sc(F,E,Ja);Sc(H,l,l);Sc(G,H,m);Uc(D,F,G);fe(h|0,D|0,260)|0;Sc(I,d,g);fe(j|0,I|0,260)|0;Xc(L,Ha,Ia);Zc(J,K,f,e);Ia=(k[L+8>>2]|0)-(k[J+8>>2]|0)|0;Ja=a+8|0;n=+Kd(+p[L>>3]/+p[J>>3],Ja);p[a>>3]=n;k[Ja>>2]=Ia+(k[Ja>>2]|0);r=Ka;return}Yc(a,K,M);r=Ka;return}k[Ha>>2]=1;k[Ha+256>>2]=1;l=d+260|0;Sc(Ia,d,l);m=Ha+260|0;g=d+520|0;fe(m|0,g|0,260)|0;o=Ia+260|0;k[o>>2]=1;k[Ia+516>>2]=1;h=c+520|0;i=d+780|0;_c(t,h,i);Xc(s,Ha,Ia);n=+p[s>>3];e=k[s+8>>2]|0;M=(e&1|0)==0;q=j+8|0;n=+Kd(+X(+(M?n:n*2.0)),q);p[j>>3]=n;e=(((M^1)<<31>>31)+e>>1)+(k[q>>2]|0)|0;k[q>>2]=e;e=e+(k[t+8>>2]|0)|0;q=Fa+8|0;n=+Kd(+p[t>>3]*n,q);p[Fa>>3]=n;k[q>>2]=e+(k[q>>2]|0);fe(Ha|0,c|0,260)|0;fe(Ia|0,d|0,260)|0;e=c+260|0;fe(m|0,e|0,260)|0;fe(o|0,l|0,260)|0;j=Ha+520|0;fe(j|0,aa|0,260)|0;k[Ia+520>>2]=1;k[Ia+776>>2]=1;Vc(Ea,b,Ha,Ia);f=+p[Ea>>3];if(f<0.0|n<0.0?f>0.0|n>0.0:0){Sc(N,aa,c);k[Ja>>2]=2;k[Ja+256>>2]=1;Sc(Ha,N,Ja);Sc(P,aa,e);k[Ja>>2]=2;k[Ja+256>>2]=1;Sc(O,P,Ja);fe(m|0,O|0,260)|0;Sc(R,c,c);Sc(S,R,d);Sc(U,e,e);Sc(T,U,l);Tc(V,S,T);Sc(W,aa,aa);Tc(Y,V,W);Sc(_,h,h);Sc($,_,g);Sc(Z,$,i);Uc(Q,Y,Z);fe(j|0,Q|0,260)|0;g=Ha+780|0;Sc(ca,c,e);k[Ja>>2]=2;k[Ja+256>>2]=1;Sc(da,ca,Ja);Sc(fa,h,h);Sc(ea,fa,i);Uc(ba,da,ea);fe(g|0,ba|0,260)|0;e=Ia+780|0;Sc(ga,d,l);fe(e|0,ga|0,260)|0;Xc(za,Ha,Ia);Xc(Ba,j,Ia+520|0);f=+p[za>>3];if(!(f<0.0)?!(+p[Ba>>3]<0.0):0)Ga=12;else{n=+p[Ba>>3];if(f>0.0|n>0.0){Sc(ia,Ha,Ha);Sc(pa,ia,Ia);Sc(ra,m,m);Sc(qa,ra,o);Tc(sa,pa,qa);Sc(ta,j,j);Uc(ua,sa,ta);Sc(wa,g,g);Sc(ja,wa,Ia);Sc(va,ja,o);Uc(ha,ua,va);fe(xa|0,ha|0,260)|0;k[ya>>2]=1;k[ya+256>>2]=1;Sc(la,Ha,m);Sc(ma,j,g);Uc(na,la,ma);k[Ja>>2]=2;k[Ja+256>>2]=1;Sc(ka,na,Ja);fe(xa+260|0,ka|0,260)|0;fe(ya+260|0,e|0,260)|0;Xc(Aa,xa,ya);Zc(oa,za,n,k[Ba+8>>2]|0);e=(k[Aa+8>>2]|0)-(k[oa+8>>2]|0)|0;Ja=Ca+8|0;f=+Kd(+p[Aa>>3]/+p[oa>>3],Ja);p[Ca>>3]=f;e=e+(k[Ja>>2]|0)|0;k[Ja>>2]=e}else Ga=12}if((Ga|0)==12){Yc(Ca,za,Ba);f=+p[Ca>>3];e=k[Ca+8>>2]|0}Zc(Da,Ea,+p[Fa>>3],k[q>>2]|0);Ia=e-(k[Da+8>>2]|0)|0;Ja=a+8|0;n=+Kd(f/+p[Da>>3],Ja);p[a>>3]=n;k[Ja>>2]=Ia+(k[Ja>>2]|0);r=Ka;return}Yc(a,Ea,Fa);r=Ka;return}function bd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;f=a+4|0;g=k[a>>2]|0;c=g;h=(k[f>>2]|0)-c|0;i=(h|0)/24|0;j=i+1|0;if(j>>>0>178956970)xa(1340,1363,303,1438);l=a+8|0;c=((k[l>>2]|0)-c|0)/24|0;if(c>>>0<89478485){c=c<<1;c=c>>>0<j>>>0?j:c;if(!c){c=0;d=0}else e=5}else{c=178956970;e=5}if((e|0)==5){e=c*24|0;e=(e|0)==0?1:e;d=_d(e)|0;a:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break a}a=ya(4)|0;k[a>>2]=128;La(a|0,8,1)}while(0)}e=d+(i*24|0)|0;k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];k[e+12>>2]=k[b+12>>2];k[e+16>>2]=k[b+16>>2];k[e+20>>2]=k[b+20>>2];b=d+((((h|0)/-24|0)+i|0)*24|0)|0;fe(b|0,g|0,h|0)|0;k[a>>2]=b;k[f>>2]=d+(j*24|0);k[l>>2]=d+(c*24|0);if(!g)return;$d(g);return}function cd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=k[a+16>>2]|0;h=a+28|0;l=k[a+44>>2]|0;m=j>>>0>l>>>0;o=m?a:h;t=k[b+16>>2]|0;i=b+28|0;r=k[b+44>>2]|0;s=t>>>0>r>>>0;p=s?b:i;c=o+8|0;d=k[o>>2]|0;e=k[c>>2]|0;q=(d|0)==(e|0);if(q)if((k[o+4>>2]|0)<(k[o+12>>2]|0))c=o;else g=4;else if((d|0)<(e|0))c=o;else g=4;d=p+8|0;e=k[p>>2]|0;f=k[d>>2]|0;n=(e|0)==(f|0);if(n)if((k[p+4>>2]|0)<(k[p+12>>2]|0))f=p;else g=8;else if((e|0)<(f|0))f=p;else g=8;if((g|0)==8)f=d;d=k[c>>2]|0;e=k[f>>2]|0;if((d|0)<(e|0)){b=hd(a,h,f)|0;return b|0}if((d|0)>(e|0)){b=(hd(b,i,c)|0)^1;return b|0}d=k[o+16>>2]|0;e=k[p+16>>2]|0;if((d|0)==(e|0)){do if((j|0)!=(l|0))if(m){c=a+12|0;f=1;break}else{c=a+32|0;f=-1;break}else{c=a+4|0;f=0}while(0);e=k[c>>2]|0;do if((t|0)!=(r|0))if(s){c=b+12|0;d=1;break}else{c=b+32|0;d=-1;break}else{c=b+4|0;d=0}while(0);c=k[c>>2]|0;if((e|0)<(c|0)){b=1;return b|0}else return (f|0)<(d|0)&(c|0)>=(e|0)|0}c=(j|0)==(l|0);if(d>>>0<e>>>0){do if(!c){if(!m){c=a+32|0;e=-1;break}if((k[a>>2]|0)==(k[a+8>>2]|0)){c=a+4|0;e=1;break}else{c=a+12|0;e=1;break}}else{c=a+4|0;e=0}while(0);d=k[c>>2]|0;do if((t|0)!=(r|0))if(s){c=b+12|0;break}else{c=b+32|0;break}else c=b+4|0;while(0);c=k[c>>2]|0;if((d|0)!=(c|0)){b=(d|0)<(c|0);return b|0}if(q)c=(k[o+4>>2]|0)==(k[o+12>>2]|0);else c=0;b=(e|0)<0&c;return b|0}else{do if(!c)if(m){c=a+12|0;break}else{c=a+32|0;break}else c=a+4|0;while(0);e=k[c>>2]|0;do if((t|0)!=(r|0)){if(!s){c=b+32|0;d=-1;break}if((k[b>>2]|0)==(k[b+8>>2]|0)){c=b+4|0;d=1;break}else{c=b+12|0;d=1;break}}else{c=b+4|0;d=0}while(0);c=k[c>>2]|0;if((e|0)!=(c|0)){b=(e|0)<(c|0);return b|0}if(n)c=(k[p+4>>2]|0)!=(k[p+12>>2]|0);else c=1;b=(d|0)>0|c;return b|0}return 0}function dd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;B=r;r=r+144|0;A=B+128|0;z=B+72|0;p=B;x=B+64|0;u=B+32|0;k[z>>2]=k[b>>2];k[z+4>>2]=k[b+4>>2];k[z+8>>2]=k[b+8>>2];k[z+12>>2]=k[b+12>>2];k[z+16>>2]=k[b+16>>2];k[z+20>>2]=k[b+20>>2];k[z+24>>2]=k[b+24>>2];i=z+28|0;k[i>>2]=k[d>>2];k[i+4>>2]=k[d+4>>2];k[i+8>>2]=k[d+8>>2];k[i+12>>2]=k[d+12>>2];k[i+16>>2]=k[d+16>>2];k[i+20>>2]=k[d+20>>2];k[i+24>>2]=k[d+24>>2];i=d;g=k[i>>2]|0;i=k[i+4>>2]|0;v=d+8|0;h=v;b=k[h>>2]|0;h=k[h+4>>2]|0;s=d+16|0;m=s;l=k[m>>2]|0;m=k[m+4>>2]|0;t=d+24|0;j=k[t>>2]|0;k[p>>2]=k[c>>2];k[p+4>>2]=k[c+4>>2];k[p+8>>2]=k[c+8>>2];k[p+12>>2]=k[c+12>>2];k[p+16>>2]=k[c+16>>2];k[p+20>>2]=k[c+20>>2];k[p+24>>2]=k[c+24>>2];q=d+8|0;if((g|0)==(b|0)?(k[d+4>>2]|0)==(k[d+12>>2]|0):0){n=g;o=i}else{n=b;o=h;b=g;h=i;j=j^32}ed(x,f,c,d);y=a+64|0;i=k[e>>2]|0;f=k[x+4>>2]|0;c=_d(80)|0;a:do if(!c){while(1){g=k[35]|0;k[35]=g+0;if(!g)break;Xa[g&0]();c=_d(80)|0;if(c)break a}B=ya(4)|0;k[B>>2]=128;La(B|0,8,1)}while(0);g=c+16|0;C=g;k[C>>2]=n;k[C+4>>2]=o;o=c+24|0;k[o>>2]=b;k[o+4>>2]=h;b=c+32|0;k[b>>2]=l;k[b+4>>2]=m;k[c+40>>2]=j;b=c+44|0;k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];k[b+24>>2]=k[p+24>>2];k[c+72>>2]=0;k[c+76>>2]=f;g=fd(y,i,A,g)|0;b=k[g>>2]|0;if(b)if((b|0)==(c|0))c=b;else{$d(c);c=b}else{b=k[A>>2]|0;k[c>>2]=0;k[c+4>>2]=0;k[c+8>>2]=b;k[g>>2]=c;b=k[k[y>>2]>>2]|0;if(!b)b=c;else{k[y>>2]=b;b=k[g>>2]|0}Nb(k[a+68>>2]|0,b);C=a+72|0;k[C>>2]=(k[C>>2]|0)+1}k[e>>2]=c;if(!((k[d>>2]|0)==(k[q>>2]|0)?(k[d+4>>2]|0)==(k[d+12>>2]|0):0))w=16;do if((w|0)==16){k[u>>2]=k[d>>2];k[u+4>>2]=k[d+4>>2];k[u+8>>2]=k[d+8>>2];k[u+12>>2]=k[d+12>>2];k[u+16>>2]=k[d+16>>2];k[u+20>>2]=k[d+20>>2];k[u+24>>2]=k[d+24>>2];n=d;m=k[n>>2]|0;n=k[n+4>>2]|0;l=v;f=k[l>>2]|0;l=k[l+4>>2]|0;j=s;i=k[j>>2]|0;j=k[j+4>>2]|0;g=k[t>>2]^32;b=_d(80)|0;b:do if(!b){while(1){b=k[35]|0;k[35]=b+0;if(!b)break;Xa[b&0]();b=_d(80)|0;if(b){h=b;break b}}C=ya(4)|0;k[C>>2]=128;La(C|0,8,1)}else h=b;while(0);b=h+16|0;k[b>>2]=k[u>>2];k[b+4>>2]=k[u+4>>2];k[b+8>>2]=k[u+8>>2];k[b+12>>2]=k[u+12>>2];k[b+16>>2]=k[u+16>>2];k[b+20>>2]=k[u+20>>2];k[b+24>>2]=k[u+24>>2];C=h+44|0;k[C>>2]=f;k[C+4>>2]=l;C=h+52|0;k[C>>2]=m;k[C+4>>2]=n;C=h+60|0;k[C>>2]=i;k[C+4>>2]=j;k[h+68>>2]=g;k[h+72>>2]=0;k[h+76>>2]=0;g=fd(y,c,A,b)|0;b=k[g>>2]|0;if(b)if((b|0)==(h|0))g=b;else{$d(h);g=b}else{b=k[A>>2]|0;k[h>>2]=0;k[h+4>>2]=0;k[h+8>>2]=b;k[g>>2]=h;b=k[k[y>>2]>>2]|0;if(!b)b=h;else{k[y>>2]=b;b=k[g>>2]|0}Nb(k[a+68>>2]|0,b);g=a+72|0;k[g>>2]=(k[g>>2]|0)+1;g=h}k[e>>2]=g;b=a+20|0;n=v;m=k[n>>2]|0;n=k[n+4>>2]|0;q=a+24|0;h=k[q>>2]|0;o=a+28|0;i=k[o>>2]|0;if(h>>>0>=i>>>0){p=k[b>>2]|0;j=p;c=h-j|0;l=(c|0)/12|0;f=l+1|0;if(f>>>0>357913941)xa(1340,1363,303,1438);h=(i-j|0)/12|0;if(h>>>0<178956970){h=h<<1;h=h>>>0<f>>>0?f:h;if(!h){j=0;i=0}else w=32}else{h=357913941;w=32}if((w|0)==32){j=h*12|0;j=(j|0)==0?1:j;i=_d(j)|0;c:do if(!i){while(1){i=k[35]|0;k[35]=i+0;if(!i)break;Xa[i&0]();i=_d(j)|0;if(i)break c}C=ya(4)|0;k[C>>2]=128;La(C|0,8,1)}while(0);j=h}h=i+(l*12|0)|0;k[h>>2]=m;k[h+4>>2]=n;k[i+(l*12|0)+8>>2]=g;h=i+(f*12|0)|0;C=i+((((c|0)/-12|0)+l|0)*12|0)|0;fe(C|0,p|0,c|0)|0;k[b>>2]=C;k[q>>2]=h;k[o>>2]=i+(j*12|0);if(!p)f=h;else{$d(p);f=k[q>>2]|0}}else{f=h;k[f>>2]=m;k[f+4>>2]=n;k[h+8>>2]=g;f=(k[q>>2]|0)+12|0;k[q>>2]=f}o=k[b>>2]|0;C=f-o|0;c=(C|0)/12|0;if((C|0)>12){j=(c+-2|0)/2|0;b=o+(j*12|0)|0;l=f+-12|0;h=k[l>>2]|0;i=k[b>>2]|0;if((h|0)==(i|0)){if((k[f+-8>>2]|0)>=(k[o+(j*12|0)+4>>2]|0)){c=g;break}}else if((h|0)>=(i|0)){c=g;break}n=l;m=k[n>>2]|0;n=k[n+4>>2]|0;C=f+-4|0;f=k[C>>2]|0;u=b;v=k[u+4>>2]|0;w=l;k[w>>2]=k[u>>2];k[w+4>>2]=v;k[C>>2]=k[o+(j*12|0)+8>>2];d:do if((c+-1|0)>>>0>=3)while(1){g=j;j=(j+-1|0)/2|0;h=o+(j*12|0)|0;i=k[h>>2]|0;if((m|0)==(i|0)){if((n|0)>=(k[o+(j*12|0)+4>>2]|0))break d}else if((m|0)>=(i|0))break d;v=h;w=k[v+4>>2]|0;C=b;k[C>>2]=k[v>>2];k[C+4>>2]=w;k[o+(g*12|0)+8>>2]=k[o+(j*12|0)+8>>2];if(g>>>0<3){b=h;break}else b=h}while(0);c=b;k[c>>2]=m;k[c+4>>2]=n;k[b+8>>2]=f;c=k[e>>2]|0}else c=g}while(0);j=k[x>>2]|0;b=_d(80)|0;e:do if(!b){while(1){b=k[35]|0;k[35]=b+0;if(!b)break;Xa[b&0]();b=_d(80)|0;if(b){f=b;break e}}C=ya(4)|0;k[C>>2]=128;La(C|0,8,1)}else f=b;while(0);h=f+16|0;i=h;b=z;g=i+56|0;do{k[i>>2]=k[b>>2];i=i+4|0;b=b+4|0}while((i|0)<(g|0));k[f+72>>2]=0;k[f+76>>2]=j;g=fd(y,c,A,h)|0;b=k[g>>2]|0;if(!b){b=k[A>>2]|0;k[f>>2]=0;k[f+4>>2]=0;k[f+8>>2]=b;k[g>>2]=f;b=k[k[y>>2]>>2]|0;if(!b)b=f;else{k[y>>2]=b;b=k[g>>2]|0}Nb(k[a+68>>2]|0,b);C=a+72|0;k[C>>2]=(k[C>>2]|0)+1;C=f;r=B;return C|0}else{if((b|0)==(f|0)){C=b;r=B;return C|0}$d(f);C=b;r=B;return C|0}return 0}function ed(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0;x=r;r=r+80|0;q=x+48|0;s=x+24|0;t=x+12|0;u=x;v=k[c+16>>2]|0;w=k[d+16>>2]|0;o=k[c>>2]|0;l=k[c+8>>2]|0;i=(o|0)==(l|0);if(i)g=(k[c+4>>2]|0)!=(k[c+12>>2]|0);else g=1;m=k[d>>2]|0;n=k[d+8>>2]|0;j=(m|0)==(n|0);do if(j){f=k[d+4>>2]|0;e=(f|0)!=(k[d+12>>2]|0);if(!(e|g^1)){if((o|0)==(m|0)?(k[c+4>>2]|0)==(f|0):0){h=1;break}if((l|0)==(m|0)?(k[c+12>>2]|0)==(f|0):0)h=1;else p=14}else p=9}else{e=1;p=9}while(0);do if((p|0)==9)if(!(g|e^1)){if((m|0)==(o|0)?(k[d+4>>2]|0)==(k[c+4>>2]|0):0){h=1;break}if((n|0)==(o|0)?(k[d+12>>2]|0)==(k[c+4>>2]|0):0)h=1;else p=14}else p=14;while(0);if((p|0)==14){if(i)e=(k[c+4>>2]|0)!=(k[c+12>>2]|0);else e=1;if(j)f=(k[d+4>>2]|0)!=(k[d+12>>2]|0);else f=1;h=e^f^1}if(i)g=(k[c+4>>2]|0)!=(k[c+12>>2]|0);else g=1;do if(j){f=k[d+4>>2]|0;e=(f|0)!=(k[d+12>>2]|0);if(!(e|g^1)){if((o|0)==(m|0)?(k[c+4>>2]|0)==(f|0):0){e=0;break}if((l|0)==(m|0))e=(k[c+12>>2]|0)!=(f|0);else e=1}else p=27}else{e=1;p=27}while(0);do if((p|0)==27)if(!(g|e^1)){if((m|0)==(o|0)?(k[d+4>>2]|0)==(k[c+4>>2]|0):0){e=0;break}if((n|0)==(o|0))e=(k[d+12>>2]|0)!=(k[c+4>>2]|0);else e=1}else e=1;while(0);i=b+24|0;f=h&1;f=e?f|2:f;k[q>>2]=0;k[q+4>>2]=0;k[q+8>>2]=0;k[q+12>>2]=0;k[q+16>>2]=0;k[q+20>>2]=f;g=b+28|0;e=k[g>>2]|0;h=b+32|0;if(e>>>0<(k[h>>2]|0)>>>0){k[e>>2]=k[q>>2];k[e+4>>2]=k[q+4>>2];k[e+8>>2]=k[q+8>>2];k[e+12>>2]=k[q+12>>2];k[e+16>>2]=k[q+16>>2];k[e+20>>2]=k[q+20>>2];m=(k[g>>2]|0)+24|0;k[g>>2]=m}else{bd(i,q);m=k[g>>2]|0}l=m+-24|0;k[s>>2]=0;k[s+4>>2]=0;k[s+8>>2]=0;k[s+12>>2]=0;k[s+16>>2]=0;k[s+20>>2]=f;if(m>>>0<(k[h>>2]|0)>>>0){k[m>>2]=k[s>>2];k[m+4>>2]=k[s+4>>2];k[m+8>>2]=k[s+8>>2];k[m+12>>2]=k[s+12>>2];k[m+16>>2]=k[s+16>>2];k[m+20>>2]=k[s+20>>2];i=(k[g>>2]|0)+24|0;k[g>>2]=i}else{bd(i,s);i=k[g>>2]|0}h=i+-24|0;g=k[b>>2]|0;j=b+4|0;e=k[j>>2]|0;do if((g|0)==(e|0)){f=k[c+24>>2]&31;k[t>>2]=k[c+20>>2];k[t+4>>2]=0;k[t+8>>2]=f;f=b+8|0;if(g>>>0<(k[f>>2]|0)>>>0){k[g>>2]=k[t>>2];k[g+4>>2]=k[t+4>>2];k[g+8>>2]=k[t+8>>2];e=(k[j>>2]|0)+12|0;k[j>>2]=e;break}else{gd(b,t);e=k[j>>2]|0;break}}else f=b+8|0;while(0);t=k[d+24>>2]&31;k[u>>2]=k[d+20>>2];k[u+4>>2]=0;k[u+8>>2]=t;if(e>>>0<(k[f>>2]|0)>>>0){k[e>>2]=k[u>>2];k[e+4>>2]=k[u+4>>2];k[e+8>>2]=k[u+8>>2];k[j>>2]=(k[j>>2]|0)+12;b=k[b>>2]|0;d=b+(v*12|0)|0;k[l>>2]=d;b=b+(w*12|0)|0;k[h>>2]=b;b=m+-16|0;k[b>>2]=h;b=i+-16|0;k[b>>2]=l;b=l;d=h;k[a>>2]=b;b=a+4|0;k[b>>2]=d;r=x;return}else{gd(b,u);b=k[b>>2]|0;d=b+(v*12|0)|0;k[l>>2]=d;b=b+(w*12|0)|0;k[h>>2]=b;b=m+-16|0;k[b>>2]=h;b=i+-16|0;k[b>>2]=l;b=l;d=h;k[a>>2]=b;b=a+4|0;k[b>>2]=d;r=x;return}}function fd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=a+4|0;e=b;if((h|0)!=(b|0)?(f=b+16|0,!(cd(d,f)|0)):0){if(!(cd(f,d)|0)){k[c>>2]=e;return c|0}a=b+4|0;e=k[a>>2]|0;g=(e|0)==0;if(g){f=b;while(1){e=k[f+8>>2]|0;if((k[e>>2]|0)==(f|0))break;else f=e}}else while(1){f=k[e>>2]|0;if(!f)break;else e=f}if((e|0)!=(h|0)?!(cd(d,e+16|0)|0):0){e=k[h>>2]|0;if(!e){k[c>>2]=h;c=h;return c|0}else a=e;while(1){e=a+16|0;if(cd(d,e)|0){e=k[a>>2]|0;if(!e){h=33;break}}else{if(!(cd(e,d)|0)){h=38;break}f=a+4|0;e=k[f>>2]|0;if(!e){h=37;break}}a=e}if((h|0)==33){k[c>>2]=a;c=a;return c|0}else if((h|0)==37){k[c>>2]=a;c=f;return c|0}else if((h|0)==38){k[c>>2]=a;return c|0}}if(g){k[c>>2]=b;c=a;return c|0}else{k[c>>2]=e;c=e;return c|0}}g=k[b>>2]|0;if((k[a>>2]|0)!=(b|0)){if(!g){f=b;while(1){e=k[f+8>>2]|0;if((k[e>>2]|0)==(f|0))f=e;else break}}else{e=g;while(1){f=k[e+4>>2]|0;if(!f)break;else e=f}}if(!(cd(e+16|0,d)|0)){e=k[h>>2]|0;if(!e){k[c>>2]=h;c=h;return c|0}else a=e;while(1){e=a+16|0;if(cd(d,e)|0){e=k[a>>2]|0;if(!e){h=14;break}}else{if(!(cd(e,d)|0)){h=19;break}f=a+4|0;e=k[f>>2]|0;if(!e){h=18;break}}a=e}if((h|0)==14){k[c>>2]=a;c=a;return c|0}else if((h|0)==18){k[c>>2]=a;c=f;return c|0}else if((h|0)==19){k[c>>2]=a;return c|0}}else{a=b;f=g}}else{a=b;f=g}if(!f){k[c>>2]=b;c=a;return c|0}else{d=e;k[c>>2]=d;c=d+4|0;return c|0}return 0}function gd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;f=a+4|0;g=k[a>>2]|0;c=g;h=(k[f>>2]|0)-c|0;i=(h|0)/12|0;j=i+1|0;if(j>>>0>357913941)xa(1340,1363,303,1438);l=a+8|0;c=((k[l>>2]|0)-c|0)/12|0;if(c>>>0<178956970){c=c<<1;c=c>>>0<j>>>0?j:c;if(!c){c=0;d=0}else e=5}else{c=357913941;e=5}if((e|0)==5){e=c*12|0;e=(e|0)==0?1:e;d=_d(e)|0;a:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break a}a=ya(4)|0;k[a>>2]=128;La(a|0,8,1)}while(0)}e=d+(i*12|0)|0;k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];b=d+((((h|0)/-12|0)+i|0)*12|0)|0;fe(b|0,g|0,h|0)|0;k[a>>2]=b;k[f>>2]=d+(j*12|0);k[l>>2]=d+(c*12|0);if(!g)return;$d(g);return}function hd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0.0,l=0.0,m=0.0,n=0.0;i=k[a>>2]|0;f=k[a+8>>2]|0;if((i|0)==(f|0))d=(k[a+4>>2]|0)!=(k[a+12>>2]|0);else d=1;h=k[b>>2]|0;if((h|0)==(k[b+8>>2]|0))e=(k[b+4>>2]|0)!=(k[b+12>>2]|0);else e=1;if(d)if(e){e=k[c>>2]|0;d=k[c+4>>2]|0;if((k[a+16>>2]|0)==(k[b+16>>2]|0)){i=(Pc(i,k[a+4>>2]|0,f,k[a+12>>2]|0,e,d)|0)==1;return i|0}else{j=+jd(a,e,d);i=j<+jd(b,e,d);return i|0}}else{g=k[b+4>>2]|0;f=k[c>>2]|0;e=k[c+4>>2]|0;d=id(h,g,a,f,e,1)|0;if(!d){j=+(h|0)-+(f|0);l=+(g|0)-+(e|0);i=!((j*j+l*l)/(j*2.0)<+jd(a,f,e));return i|0}else{i=(d|0)==-1;return i|0}}if(e){f=k[a+4>>2]|0;g=k[c>>2]|0;e=k[c+4>>2]|0;d=id(i,f,b,g,e,0)|0;if(!d){l=+(i|0)-+(g|0);j=+(f|0)-+(e|0);i=(l*l+j*j)/(l*2.0)<+jd(b,g,e);return i|0}else{i=(d|0)==-1;return i|0}}do if((i|0)>(h|0)){e=k[c+4>>2]|0;d=k[a+4>>2]|0;if((e|0)>(d|0)){f=e;e=k[b+4>>2]|0;break}else{i=0;return i|0}}else{if((i|0)>=(h|0)){h=k[a+4>>2]|0;b=k[b+4>>2]|0;b=ge(b|0,((b|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;h=L;i=k[c+4>>2]|0;i=ee(i|0,((i|0)<0)<<31>>31|0,1)|0;c=L;i=(h|0)<(c|0)|(h|0)==(c|0)&b>>>0<i>>>0;return i|0}f=k[c+4>>2]|0;e=k[b+4>>2]|0;if((f|0)<(e|0)){d=k[a+4>>2]|0;break}else{i=1;return i|0}}while(0);l=+(k[c>>2]|0);m=+(i|0)-l;j=+(f|0);n=+(d|0)-j;l=+(h|0)-l;j=+(e|0)-j;i=(n*n+m*m)/(m*2.0)<(j*j+l*l)/(l*2.0);return i|0}function id(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0,i=0,j=0,l=0,m=0.0,n=0.0,o=0.0,q=0.0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0;h=k[c>>2]|0;i=k[c+4>>2]|0;j=k[c+8>>2]|0;l=k[c+12>>2]|0;if((Pc(h,i,j,l,d,e)|0)!=-1){c=((k[c+24>>2]|0)>>>4&2)+-1|0;return c|0}q=+(d|0)-+(a|0);m=+(e|0)-+(b|0);n=+(j|0)-+(h|0);o=+(l|0)-+(i|0);if((h|0)==(j|0))if((e|0)>=(b|0)|f)return ((e|0)>(b|0)&f)<<31>>31|0;else{c=1;return c|0}y=be(j|0,((j|0)<0)<<31>>31|0,h|0,((h|0)<0)<<31>>31|0)|0;x=L;u=be(l|0,((l|0)<0)<<31>>31|0,i|0,((i|0)<0)<<31>>31|0)|0;s=L;l=be(d|0,((d|0)<0)<<31>>31|0,a|0,((a|0)<0)<<31>>31|0)|0;j=L;i=be(e|0,((e|0)<0)<<31>>31|0,b|0,((b|0)<0)<<31>>31|0)|0;h=L;e=(x|0)<0;z=be(0,0,y|0,x|0)|0;x=e?L:x;a=(s|0)<0;v=be(0,0,u|0,s|0)|0;s=a?L:s;b=(j|0)<0;r=be(0,0,l|0,j|0)|0;j=b?L:j;d=(h|0)<0;w=be(0,0,i|0,h|0)|0;h=ne((e?z:y)|0,x|0,(d?w:i)|0,(d?L:h)|0)|0;i=L;j=ne((a?v:u)|0,s|0,(b?r:l)|0,j|0)|0;l=L;a=b^a;do if(d^e){if(!a){z=ge(j|0,l|0,h|0,i|0)|0;g=-(+(z>>>0)+4294967296.0*+(L>>>0));break}if(i>>>0>l>>>0|(i|0)==(l|0)&h>>>0>j>>>0){z=be(h|0,i|0,j|0,l|0)|0;g=-(+(z>>>0)+4294967296.0*+(L>>>0));break}else{z=be(j|0,l|0,h|0,i|0)|0;g=+(z>>>0)+4294967296.0*+(L>>>0);break}}else{if(a){z=ge(j|0,l|0,h|0,i|0)|0;g=+(z>>>0)+4294967296.0*+(L>>>0);break}if(i>>>0<l>>>0|(i|0)==(l|0)&h>>>0<j>>>0){z=be(j|0,l|0,h|0,i|0)|0;g=-(+(z>>>0)+4294967296.0*+(L>>>0));break}else{z=be(h|0,i|0,j|0,l|0)|0;g=+(z>>>0)+4294967296.0*+(L>>>0);break}}while(0);if(!(g!=0.0&!(g<0.0))){p[t>>3]=(m-q)*((q+m)*n);u=k[t>>2]|0;r=k[t+4>>2]|0;p[t>>3]=m*(q*(o*2.0));v=k[t>>2]|0;s=k[t+4>>2]|0;x=(r|0)>-1|(r|0)==-1&u>>>0>4294967295;w=be(0,-2147483648,u|0,r|0)|0;u=x?w:u;r=x?L:r;x=(s|0)>-1|(s|0)==-1&v>>>0>4294967295;w=be(0,-2147483648,v|0,s|0)|0;v=x?w:v;s=x?L:s;x=be(u|0,r|0,v|0,s|0)|0;w=L;z=be(v|0,s|0,u|0,r|0)|0;y=L;z=r>>>0>s>>>0|(r|0)==(s|0)&u>>>0>v>>>0?(w>>>0>0|(w|0)==0&x>>>0>4)<<31>>31:(y>>>0>0|(y|0)==0&z>>>0>4)&1;return ((z|0)!=0&((z|0)==1^f)?(f?-1:1):0)|0}if(!(k[c+24>>2]&32)){z=f<<31>>31;return z|0}else{z=f&1^1;return z|0}return 0}function jd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0.0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;e=k[a>>2]|0;f=k[a+8>>2]|0;if((e|0)==(f|0)){g=(+(e|0)-+(b|0))*.5;return +g}t=+(f|0)-+(e|0);l=k[a+12>>2]|0;q=k[a+4>>2]|0;g=+(l|0)-+(q|0);t=t*t;d=+X(+(t+g*g));g=g<0.0?(d-g)/t:1.0/(d+g);n=((e|0)<0)<<31>>31;p=be(f|0,((f|0)<0)<<31>>31|0,e|0,n|0)|0;a=L;r=((q|0)<0)<<31>>31;l=be(l|0,((l|0)<0)<<31>>31|0,q|0,r|0)|0;f=L;n=be(b|0,((b|0)<0)<<31>>31|0,e|0,n|0)|0;m=L;r=be(c|0,((c|0)<0)<<31>>31|0,q|0,r|0)|0;q=L;i=(a|0)<0;e=be(0,0,p|0,a|0)|0;a=i?L:a;j=(f|0)<0;b=be(0,0,l|0,f|0)|0;f=j?L:f;c=(m|0)<0;o=be(0,0,n|0,m|0)|0;m=c?L:m;h=(q|0)<0;s=be(0,0,r|0,q|0)|0;a=ne((h?s:r)|0,(h?L:q)|0,(i?e:p)|0,a|0)|0;e=L;f=ne((c?o:n)|0,m|0,(j?b:l)|0,f|0)|0;b=L;c=j^c;do if(i^h){if(!c){s=ge(a|0,e|0,f|0,b|0)|0;d=-(+(s>>>0)+4294967296.0*+(L>>>0));break}if(e>>>0>b>>>0|(e|0)==(b|0)&a>>>0>f>>>0){s=be(a|0,e|0,f|0,b|0)|0;d=-(+(s>>>0)+4294967296.0*+(L>>>0));break}else{s=be(f|0,b|0,a|0,e|0)|0;d=+(s>>>0)+4294967296.0*+(L>>>0);break}}else{if(c){s=ge(a|0,e|0,f|0,b|0)|0;d=+(s>>>0)+4294967296.0*+(L>>>0);break}if(e>>>0<b>>>0|(e|0)==(b|0)&a>>>0<f>>>0){s=be(f|0,b|0,a|0,e|0)|0;d=-(+(s>>>0)+4294967296.0*+(L>>>0));break}else{s=be(a|0,e|0,f|0,b|0)|0;d=+(s>>>0)+4294967296.0*+(L>>>0);break}}while(0);t=g*d;return +t}function kd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0;N=r;r=r+32|0;M=N;H=b;a:while(1){q=H;G=H+-28|0;s=H+-56|0;v=H+-20|0;D=H+-24|0;F=H+-16|0;K=a;b:while(1){p=K;a=q-p|0;switch((a|0)/28|0|0){case 2:{J=4;break a}case 3:{J=20;break a}case 4:{J=21;break a}case 5:{J=22;break a}case 1:case 0:{J=240;break a}default:{}}if((a|0)<868){J=24;break a}g=(a|0)/56|0;h=K+(g*28|0)|0;if((a|0)>27972){a=(a|0)/112|0;a=nd(K,K+(a*28|0)|0,h,K+((a+g|0)*28|0)|0,G)|0}else a=ld(K,h,G)|0;o=k[K>>2]|0;n=k[h>>2]|0;do if((o|0)==(n|0)){d=k[K+8>>2]|0;b=(o|0)==(d|0);if(b?(t=k[K+4>>2]|0,(t|0)==(k[K+12>>2]|0)):0){if((o|0)!=(k[K+(g*28|0)+8>>2]|0)){c=G;break}b=k[K+(g*28|0)+4>>2]|0;if((b|0)==(k[K+(g*28|0)+12>>2]|0))if((t|0)<(b|0)){c=G;break}else{J=92;break}else if((t|0)>(b|0)){J=92;break}else{c=G;break}}e=k[K+(g*28|0)+8>>2]|0;if((o|0)==(e|0)){if(!b){J=92;break}if((k[K+4>>2]|0)<(k[K+(g*28|0)+4>>2]|0)){c=G;break}else{J=92;break}}if(!b){b=k[K+4>>2]|0;c=k[K+(g*28|0)+4>>2]|0;if((b|0)==(c|0))if((Pc(d,k[K+12>>2]|0,o,b,e,k[K+(g*28|0)+12>>2]|0)|0)==1){c=G;break}else{J=92;break}else if((b|0)<(c|0)){c=G;break}else{J=92;break}}else c=G}else if((o|0)<(n|0))c=G;else J=92;while(0);c:do if((J|0)==92){J=0;d:do if((K|0)!=(s|0)){l=K+(g*28|0)+8|0;m=K+(g*28|0)+4|0;j=K+(g*28|0)+12|0;c=s;i=G;e:while(1){b=k[c>>2]|0;do if((b|0)==(n|0)){e=k[i+-20>>2]|0;b=(n|0)==(e|0);if(b?(z=k[i+-24>>2]|0,(z|0)==(k[i+-16>>2]|0)):0){if((n|0)!=(k[l>>2]|0))break e;b=k[m>>2]|0;if((b|0)==(k[j>>2]|0))if((z|0)<(b|0))break e;else break;else if((z|0)>(b|0))break;else break e}g=k[l>>2]|0;if((n|0)==(g|0)){if(!b)break;if((k[i+-24>>2]|0)<(k[m>>2]|0))break e;else break}if(b)break e;b=k[i+-24>>2]|0;d=k[m>>2]|0;if((b|0)==(d|0))if((Pc(e,k[i+-16>>2]|0,n,k[c+4>>2]|0,g,k[j>>2]|0)|0)==1)break e;else break;else if((b|0)<(d|0))break e;else break}else if((b|0)<(n|0))break e;while(0);b=c+-28|0;if((K|0)==(b|0))break d;else{i=c;c=b}}k[M>>2]=k[K>>2];k[M+4>>2]=k[K+4>>2];k[M+8>>2]=k[K+8>>2];k[M+12>>2]=k[K+12>>2];k[M+16>>2]=k[K+16>>2];k[M+20>>2]=k[K+20>>2];k[M+24>>2]=k[K+24>>2];k[K>>2]=k[c>>2];k[K+4>>2]=k[c+4>>2];k[K+8>>2]=k[c+8>>2];k[K+12>>2]=k[c+12>>2];k[K+16>>2]=k[c+16>>2];k[K+20>>2]=k[c+20>>2];k[K+24>>2]=k[c+24>>2];k[c>>2]=k[M>>2];k[c+4>>2]=k[M+4>>2];k[c+8>>2]=k[M+8>>2];k[c+12>>2]=k[M+12>>2];k[c+16>>2]=k[M+16>>2];k[c+20>>2]=k[M+20>>2];k[c+24>>2]=k[M+24>>2];a=a+1|0;break c}while(0);e=K+28|0;a=k[G>>2]|0;do if((o|0)==(a|0)){c=k[K+8>>2]|0;a=(o|0)==(c|0);if(a?(u=k[K+4>>2]|0,(u|0)==(k[K+12>>2]|0)):0){if((o|0)!=(k[v>>2]|0)){a=e;break}a=k[D>>2]|0;if((a|0)==(k[F>>2]|0))if((u|0)<(a|0)){a=e;break}else{J=109;break}else if((u|0)>(a|0)){J=109;break}else{a=e;break}}d=k[v>>2]|0;if((o|0)==(d|0)){if(!a){J=109;break}if((k[K+4>>2]|0)<(k[D>>2]|0)){a=e;break}else{J=109;break}}if(!a){a=k[K+4>>2]|0;b=k[D>>2]|0;if((a|0)==(b|0))if((Pc(c,k[K+12>>2]|0,o,a,d,k[F>>2]|0)|0)==1){a=e;break}else{J=109;break}else if((a|0)<(b|0)){a=e;break}else{J=109;break}}else a=e}else if((o|0)<(a|0))a=e;else J=109;while(0);if((J|0)==109){J=0;if((e|0)==(G|0)){J=240;break a}h=K+8|0;i=K+4|0;j=K+12|0;g=K;f:while(1){a=k[g+28>>2]|0;do if((o|0)==(a|0)){c=k[h>>2]|0;a=(o|0)==(c|0);if(a?(w=k[i>>2]|0,(w|0)==(k[j>>2]|0)):0){if((o|0)!=(k[g+36>>2]|0))break f;a=k[g+32>>2]|0;if((a|0)==(k[g+40>>2]|0))if((w|0)<(a|0))break f;else break;else if((w|0)>(a|0))break;else break f}d=k[g+36>>2]|0;if((o|0)==(d|0)){if(!a)break;if((k[i>>2]|0)<(k[g+32>>2]|0))break f;else break}if(a)break f;a=k[i>>2]|0;b=k[g+32>>2]|0;if((a|0)==(b|0))if((Pc(c,k[j>>2]|0,o,a,d,k[g+40>>2]|0)|0)==1)break f;else break;else if((a|0)<(b|0))break f;else break}else if((o|0)<(a|0))break f;while(0);a=e+28|0;if((a|0)==(G|0)){J=240;break a}else{g=e;e=a}}k[M>>2]=k[e>>2];k[M+4>>2]=k[e+4>>2];k[M+8>>2]=k[e+8>>2];k[M+12>>2]=k[e+12>>2];k[M+16>>2]=k[e+16>>2];k[M+20>>2]=k[e+20>>2];k[M+24>>2]=k[e+24>>2];k[e>>2]=k[G>>2];k[e+4>>2]=k[G+4>>2];k[e+8>>2]=k[G+8>>2];k[e+12>>2]=k[G+12>>2];k[e+16>>2]=k[G+16>>2];k[e+20>>2]=k[G+20>>2];k[e+24>>2]=k[G+24>>2];k[G>>2]=k[M>>2];k[G+4>>2]=k[M+4>>2];k[G+8>>2]=k[M+8>>2];k[G+12>>2]=k[M+12>>2];k[G+16>>2]=k[M+16>>2];k[G+20>>2]=k[M+20>>2];k[G+24>>2]=k[M+24>>2];a=g+56|0}if((a|0)==(G|0)){J=240;break a}j=K+4|0;l=K+8|0;m=K+12|0;g=G;while(1){i=k[K>>2]|0;g:while(1){b=k[a>>2]|0;do if((i|0)==(b|0)){d=k[l>>2]|0;b=(i|0)==(d|0);if(b?(x=k[j>>2]|0,(x|0)==(k[m>>2]|0)):0){if((i|0)!=(k[a+8>>2]|0)){h=g;break g}b=k[a+4>>2]|0;if((b|0)==(k[a+12>>2]|0))if((x|0)<(b|0)){h=g;break g}else break;else if((x|0)>(b|0))break;else{h=g;break g}}e=k[a+8>>2]|0;if((i|0)==(e|0)){if(!b)break;if((k[j>>2]|0)<(k[a+4>>2]|0)){h=g;break g}else break}if(b){h=g;break g}b=k[j>>2]|0;c=k[a+4>>2]|0;if((b|0)==(c|0))if((Pc(d,k[m>>2]|0,i,b,e,k[a+12>>2]|0)|0)==1){h=g;break g}else break;else if((b|0)<(c|0)){h=g;break g}else break}else if((i|0)<(b|0)){h=g;break g}while(0);a=a+28|0}while(1){g=h+-28|0;b=k[g>>2]|0;if((i|0)!=(b|0))if((i|0)<(b|0)){h=g;continue}else break;d=k[l>>2]|0;b=(i|0)==(d|0);if(b?(y=k[j>>2]|0,(y|0)==(k[m>>2]|0)):0){if((i|0)!=(k[h+-20>>2]|0)){h=g;continue}b=k[h+-24>>2]|0;if((b|0)==(k[h+-16>>2]|0))if((y|0)<(b|0)){h=g;continue}else break;else if((y|0)>(b|0))break;else{h=g;continue}}e=k[h+-20>>2]|0;if((i|0)==(e|0)){if(!b)break;if((k[j>>2]|0)<(k[h+-24>>2]|0)){h=g;continue}else break}if(b){h=g;continue}b=k[j>>2]|0;c=k[h+-24>>2]|0;if((b|0)==(c|0))if((Pc(d,k[m>>2]|0,i,b,e,k[h+-16>>2]|0)|0)==1){h=g;continue}else break;else if((b|0)<(c|0)){h=g;continue}else break}if(a>>>0>=g>>>0){K=a;continue b};k[M>>2]=k[a>>2];k[M+4>>2]=k[a+4>>2];k[M+8>>2]=k[a+8>>2];k[M+12>>2]=k[a+12>>2];k[M+16>>2]=k[a+16>>2];k[M+20>>2]=k[a+20>>2];k[M+24>>2]=k[a+24>>2];k[a>>2]=k[g>>2];k[a+4>>2]=k[g+4>>2];k[a+8>>2]=k[g+8>>2];k[a+12>>2]=k[g+12>>2];k[a+16>>2]=k[g+16>>2];k[a+20>>2]=k[g+20>>2];k[a+24>>2]=k[g+24>>2];k[g>>2]=k[M>>2];k[g+4>>2]=k[M+4>>2];k[g+8>>2]=k[M+8>>2];k[g+12>>2]=k[M+12>>2];k[g+16>>2]=k[M+16>>2];k[g+20>>2]=k[M+20>>2];k[g+24>>2]=k[M+24>>2];a=a+28|0}}while(0);b=K+28|0;h:do if(b>>>0<c>>>0)while(1){j=k[h>>2]|0;l=h+8|0;m=h+4|0;n=h+12|0;o=b;i:while(1){b=k[o>>2]|0;do if((b|0)==(j|0)){e=k[o+8>>2]|0;b=(j|0)==(e|0);if(b?(A=k[o+4>>2]|0,(A|0)==(k[o+12>>2]|0)):0){if((j|0)!=(k[l>>2]|0))break;b=k[m>>2]|0;if((b|0)==(k[n>>2]|0))if((A|0)<(b|0))break;else break i;else if((A|0)>(b|0))break i;else break}g=k[l>>2]|0;if((j|0)==(g|0)){if(!b)break i;if((k[o+4>>2]|0)<(k[m>>2]|0))break;else break i}if(!b){b=k[o+4>>2]|0;d=k[m>>2]|0;if((b|0)==(d|0))if((Pc(e,k[o+12>>2]|0,j,b,g,k[n>>2]|0)|0)==1)break;else break i;else if((b|0)<(d|0))break;else break i}}else if((b|0)>=(j|0))break i;while(0);o=o+28|0}while(1){i=c+-28|0;b=k[i>>2]|0;if((b|0)!=(j|0))if((b|0)<(j|0))break;else{c=i;continue}e=k[c+-20>>2]|0;b=(j|0)==(e|0);if(b?(B=k[c+-24>>2]|0,(B|0)==(k[c+-16>>2]|0)):0){if((j|0)!=(k[l>>2]|0))break;b=k[m>>2]|0;if((b|0)==(k[n>>2]|0))if((B|0)<(b|0))break;else{c=i;continue}else if((B|0)>(b|0)){c=i;continue}else break}g=k[l>>2]|0;if((j|0)==(g|0)){if(!b){c=i;continue}if((k[c+-24>>2]|0)<(k[m>>2]|0))break;else{c=i;continue}}if(b)break;b=k[c+-24>>2]|0;d=k[m>>2]|0;if((b|0)==(d|0))if((Pc(e,k[c+-16>>2]|0,j,b,g,k[n>>2]|0)|0)==1)break;else{c=i;continue}else if((b|0)<(d|0))break;else{c=i;continue}}if(o>>>0>i>>>0){i=o;break h};k[M>>2]=k[o>>2];k[M+4>>2]=k[o+4>>2];k[M+8>>2]=k[o+8>>2];k[M+12>>2]=k[o+12>>2];k[M+16>>2]=k[o+16>>2];k[M+20>>2]=k[o+20>>2];k[M+24>>2]=k[o+24>>2];k[o>>2]=k[i>>2];k[o+4>>2]=k[i+4>>2];k[o+8>>2]=k[i+8>>2];k[o+12>>2]=k[i+12>>2];k[o+16>>2]=k[i+16>>2];k[o+20>>2]=k[i+20>>2];k[o+24>>2]=k[i+24>>2];k[i>>2]=k[M>>2];k[i+4>>2]=k[M+4>>2];k[i+8>>2]=k[M+8>>2];k[i+12>>2]=k[M+12>>2];k[i+16>>2]=k[M+16>>2];k[i+20>>2]=k[M+20>>2];k[i+24>>2]=k[M+24>>2];b=o+28|0;c=i;h=(h|0)==(o|0)?i:h;a=a+1|0}else i=b;while(0);j:do if((i|0)!=(h|0)){g=k[h>>2]|0;b=k[i>>2]|0;do if((g|0)==(b|0)){d=k[h+8>>2]|0;b=(g|0)==(d|0);if(b?(C=k[h+4>>2]|0,(C|0)==(k[h+12>>2]|0)):0){if((g|0)!=(k[i+8>>2]|0))break;b=k[i+4>>2]|0;if((b|0)==(k[i+12>>2]|0))if((C|0)<(b|0))break;else break j;else if((C|0)>(b|0))break j;else break}e=k[i+8>>2]|0;if((g|0)==(e|0)){if(!b)break j;if((k[h+4>>2]|0)<(k[i+4>>2]|0))break;else break j}if(!b){b=k[h+4>>2]|0;c=k[i+4>>2]|0;if((b|0)==(c|0))if((Pc(d,k[h+12>>2]|0,g,b,e,k[i+12>>2]|0)|0)==1)break;else break j;else if((b|0)<(c|0))break;else break j}}else if((g|0)>=(b|0))break j;while(0);k[M>>2]=k[i>>2];k[M+4>>2]=k[i+4>>2];k[M+8>>2]=k[i+8>>2];k[M+12>>2]=k[i+12>>2];k[M+16>>2]=k[i+16>>2];k[M+20>>2]=k[i+20>>2];k[M+24>>2]=k[i+24>>2];k[i>>2]=k[h>>2];k[i+4>>2]=k[h+4>>2];k[i+8>>2]=k[h+8>>2];k[i+12>>2]=k[h+12>>2];k[i+16>>2]=k[h+16>>2];k[i+20>>2]=k[h+20>>2];k[i+24>>2]=k[h+24>>2];k[h>>2]=k[M>>2];k[h+4>>2]=k[M+4>>2];k[h+8>>2]=k[M+8>>2];k[h+12>>2]=k[M+12>>2];k[h+16>>2]=k[M+16>>2];k[h+20>>2]=k[M+20>>2];k[h+24>>2]=k[M+24>>2];a=a+1|0}while(0);if(!a){a=od(K,i)|0;b=i+28|0;if(od(b,H)|0){J=235;break}if(a){K=b;continue}}o=i;if((o-p|0)>=(q-o|0)){J=239;break}kd(K,i);K=i+28|0}if((J|0)==235){J=0;if(a){J=240;break}else{a=K;H=i;continue}}else if((J|0)==239){J=0;kd(i+28|0,H);a=K;H=i;continue}}if((J|0)==4){e=k[G>>2]|0;a=k[K>>2]|0;do if((e|0)==(a|0)){d=k[v>>2]|0;a=(e|0)==(d|0);if(a?(E=k[D>>2]|0,(E|0)==(k[F>>2]|0)):0){if((e|0)!=(k[K+8>>2]|0))break;a=k[K+4>>2]|0;if((a|0)==(k[K+12>>2]|0)){if((E|0)<(a|0))break;r=N;return}else{if((E|0)<=(a|0))break;r=N;return}}c=k[K+8>>2]|0;if((e|0)==(c|0)){if(!a){r=N;return}if((k[D>>2]|0)<(k[K+4>>2]|0))break;r=N;return}if(!a){a=k[D>>2]|0;b=k[K+4>>2]|0;if((a|0)==(b|0)){if((Pc(d,k[F>>2]|0,e,a,c,k[K+12>>2]|0)|0)==1)break;r=N;return}else{if((a|0)<(b|0))break;r=N;return}}}else if((e|0)>=(a|0)){r=N;return}while(0);k[M>>2]=k[K>>2];k[M+4>>2]=k[K+4>>2];k[M+8>>2]=k[K+8>>2];k[M+12>>2]=k[K+12>>2];k[M+16>>2]=k[K+16>>2];k[M+20>>2]=k[K+20>>2];k[M+24>>2]=k[K+24>>2];k[K>>2]=k[G>>2];k[K+4>>2]=k[G+4>>2];k[K+8>>2]=k[G+8>>2];k[K+12>>2]=k[G+12>>2];k[K+16>>2]=k[G+16>>2];k[K+20>>2]=k[G+20>>2];k[K+24>>2]=k[G+24>>2];k[G>>2]=k[M>>2];k[G+4>>2]=k[M+4>>2];k[G+8>>2]=k[M+8>>2];k[G+12>>2]=k[M+12>>2];k[G+16>>2]=k[M+16>>2];k[G+20>>2]=k[M+20>>2];k[G+24>>2]=k[M+24>>2];r=N;return}else if((J|0)==20){ld(K,K+28|0,G)|0;r=N;return}else if((J|0)==21){md(K,K+28|0,K+56|0,G)|0;r=N;return}else if((J|0)==22){nd(K,K+28|0,K+56|0,K+84|0,G)|0;r=N;return}else if((J|0)==24){b=K+56|0;ld(K,K+28|0,b)|0;a=K+84|0;if((a|0)!=(H|0)){x=a;while(1){w=k[x>>2]|0;a=k[b>>2]|0;do if((w|0)==(a|0)){d=k[x+8>>2]|0;a=(w|0)==(d|0);if(a?(I=k[x+4>>2]|0,(I|0)==(k[x+12>>2]|0)):0){if((w|0)!=(k[b+8>>2]|0)){d=w;J=41;break}a=k[b+4>>2]|0;if((a|0)==(k[b+12>>2]|0))if((I|0)<(a|0)){d=w;J=41;break}else break;else if((I|0)>(a|0))break;else{d=w;J=41;break}}e=k[b+8>>2]|0;if((w|0)==(e|0)){if(!a)break;if((k[x+4>>2]|0)<(k[b+4>>2]|0)){d=w;J=41;break}else break}if(!a){a=k[x+4>>2]|0;c=k[b+4>>2]|0;if((a|0)==(c|0))if((Pc(d,k[x+12>>2]|0,w,a,e,k[b+12>>2]|0)|0)==1){J=41;break}else break;else if((a|0)<(c|0)){J=41;break}else break}else{d=w;J=41}}else if((w|0)<(a|0)){d=k[x+8>>2]|0;J=41}while(0);if((J|0)==41){J=0;u=k[x+4>>2]|0;v=k[x+12>>2]|0;G=x+16|0;k[M>>2]=k[G>>2];k[M+4>>2]=k[G+4>>2];k[M+8>>2]=k[G+8>>2];k[x>>2]=k[b>>2];k[x+4>>2]=k[b+4>>2];k[x+8>>2]=k[b+8>>2];k[x+12>>2]=k[b+12>>2];k[x+16>>2]=k[b+16>>2];k[x+20>>2]=k[b+20>>2];k[x+24>>2]=k[b+24>>2];k:do if((b|0)==(K|0))a=K;else{t=(w|0)==(d|0);j=((w|0)<0)<<31>>31;n=be(d|0,((d|0)<0)<<31>>31|0,w|0,j|0)|0;o=L;l=((u|0)<0)<<31>>31;q=be(v|0,((v|0)<0)<<31>>31|0,u|0,l|0)|0;s=L;m=(o|0)<0;p=be(0,0,n|0,o|0)|0;n=m?p:n;o=m?L:o;p=(s|0)<0;G=be(0,0,q|0,s|0)|0;q=p?G:q;s=p?L:s;if(t&(u|0)==(v|0))while(1){a=b;b=b+-28|0;c=k[b>>2]|0;do if((w|0)==(c|0)){if((w|0)==(k[a+-20>>2]|0)){c=k[a+-24>>2]|0;if((c|0)==(k[a+-16>>2]|0))if((u|0)<(c|0))break;else break k;else if((u|0)>(c|0))break k;else break}}else if((w|0)>=(c|0))break k;while(0);k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];if((b|0)==(K|0)){a=K;break k}}while(1){a=b;b=b+-28|0;c=k[b>>2]|0;do if((w|0)==(c|0)){c=k[a+-20>>2]|0;if((w|0)==(c|0)){if(!t)break k;if((u|0)<(k[a+-24>>2]|0))break;else break k}if(!t){e=k[a+-24>>2]|0;if((u|0)!=(e|0))if((u|0)<(e|0))break;else break k;h=be(w|0,j|0,c|0,((c|0)<0)<<31>>31|0)|0;g=L;e=k[a+-16>>2]|0;e=be(u|0,l|0,e|0,((e|0)<0)<<31>>31|0)|0;c=L;i=(g|0)<0;F=be(0,0,h|0,g|0)|0;g=i?L:g;G=(c|0)<0;E=be(0,0,e|0,c|0)|0;c=ne((G?E:e)|0,(G?L:c)|0,n|0,o|0)|0;e=L;g=ne((i?F:h)|0,g|0,q|0,s|0)|0;h=L;i=p^i;do if(m^G){if(!i){G=ge(c|0,e|0,g|0,h|0)|0;f=-(+(G>>>0)+4294967296.0*+(L>>>0));break}if(e>>>0>h>>>0|(e|0)==(h|0)&c>>>0>g>>>0){G=be(c|0,e|0,g|0,h|0)|0;f=-(+(G>>>0)+4294967296.0*+(L>>>0));break}else{G=be(g|0,h|0,c|0,e|0)|0;f=+(G>>>0)+4294967296.0*+(L>>>0);break}}else{if(i){G=ge(c|0,e|0,g|0,h|0)|0;f=+(G>>>0)+4294967296.0*+(L>>>0);break}if(e>>>0<h>>>0|(e|0)==(h|0)&c>>>0<g>>>0){G=be(g|0,h|0,c|0,e|0)|0;f=-(+(G>>>0)+4294967296.0*+(L>>>0));break}else{G=be(c|0,e|0,g|0,h|0)|0;f=+(G>>>0)+4294967296.0*+(L>>>0);break}}while(0);if(!(f!=0.0&!(f<0.0)))break k}}else if((w|0)>=(c|0))break k;while(0);k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];if((b|0)==(K|0)){a=K;break}}}while(0);k[a>>2]=w;k[a+4>>2]=u;k[a+8>>2]=d;k[a+12>>2]=v;G=a+16|0;k[G>>2]=k[M>>2];k[G+4>>2]=k[M+4>>2];k[G+8>>2]=k[M+8>>2]}a=x+28|0;if((a|0)==(H|0))break;else{b=x;x=a}}}r=N;return}else if((J|0)==240){r=N;return}}function ld(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;o=r;r=r+32|0;n=o;j=k[b>>2]|0;d=k[a>>2]|0;do if((j|0)==(d|0)){g=k[b+8>>2]|0;d=(j|0)==(g|0);if(d?(e=k[b+4>>2]|0,(e|0)==(k[b+12>>2]|0)):0){if((j|0)!=(k[a+8>>2]|0)){h=1;break}d=k[a+4>>2]|0;if((d|0)==(k[a+12>>2]|0)){h=(e|0)<(d|0);break}else{h=(e|0)<=(d|0);break}}f=k[a+8>>2]|0;if((j|0)==(f|0)){if(!d){h=0;break}h=(k[b+4>>2]|0)<(k[a+4>>2]|0);break}if(!d){d=k[b+4>>2]|0;e=k[a+4>>2]|0;if((d|0)==(e|0)){h=(Pc(g,k[b+12>>2]|0,j,d,f,k[a+12>>2]|0)|0)==1;break}else{h=(d|0)<(e|0);break}}else h=1}else h=(j|0)<(d|0);while(0);d=k[c>>2]|0;do if((d|0)==(j|0)){g=k[c+8>>2]|0;d=(j|0)==(g|0);if(d?(i=k[c+4>>2]|0,(i|0)==(k[c+12>>2]|0)):0){if((j|0)!=(k[b+8>>2]|0)){d=1;break}d=k[b+4>>2]|0;if((d|0)==(k[b+12>>2]|0)){d=(i|0)<(d|0);break}else{d=(i|0)<=(d|0);break}}f=k[b+8>>2]|0;if((j|0)==(f|0)){if(!d){d=0;break}d=(k[c+4>>2]|0)<(k[b+4>>2]|0);break}if(!d){d=k[c+4>>2]|0;e=k[b+4>>2]|0;if((d|0)==(e|0)){d=(Pc(g,k[c+12>>2]|0,j,d,f,k[b+12>>2]|0)|0)==1;break}else{d=(d|0)<(e|0);break}}else d=1}else d=(d|0)<(j|0);while(0);if(!h){if(!d){b=0;r=o;return b|0};k[n>>2]=k[b>>2];k[n+4>>2]=k[b+4>>2];k[n+8>>2]=k[b+8>>2];k[n+12>>2]=k[b+12>>2];k[n+16>>2]=k[b+16>>2];k[n+20>>2]=k[b+20>>2];k[n+24>>2]=k[b+24>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];k[b+24>>2]=k[c+24>>2];k[c>>2]=k[n>>2];k[c+4>>2]=k[n+4>>2];k[c+8>>2]=k[n+8>>2];k[c+12>>2]=k[n+12>>2];k[c+16>>2]=k[n+16>>2];k[c+20>>2]=k[n+20>>2];k[c+24>>2]=k[n+24>>2];h=k[b>>2]|0;d=k[a>>2]|0;do if((h|0)==(d|0)){g=k[b+8>>2]|0;d=(h|0)==(g|0);if(d?(m=k[b+4>>2]|0,(m|0)==(k[b+12>>2]|0)):0){if((h|0)!=(k[a+8>>2]|0))break;d=k[a+4>>2]|0;if((d|0)==(k[a+12>>2]|0)){if((m|0)<(d|0))break;else d=1;r=o;return d|0}else{if((m|0)>(d|0))d=1;else break;r=o;return d|0}}f=k[a+8>>2]|0;if((h|0)==(f|0)){if(!d){b=1;r=o;return b|0}if((k[b+4>>2]|0)<(k[a+4>>2]|0))break;else d=1;r=o;return d|0}if(!d){d=k[b+4>>2]|0;e=k[a+4>>2]|0;if((d|0)==(e|0)){if((Pc(g,k[b+12>>2]|0,h,d,f,k[a+12>>2]|0)|0)==1)break;else d=1;r=o;return d|0}else{if((d|0)<(e|0))break;else d=1;r=o;return d|0}}}else if((h|0)>=(d|0)){b=1;r=o;return b|0}while(0);k[n>>2]=k[a>>2];k[n+4>>2]=k[a+4>>2];k[n+8>>2]=k[a+8>>2];k[n+12>>2]=k[a+12>>2];k[n+16>>2]=k[a+16>>2];k[n+20>>2]=k[a+20>>2];k[n+24>>2]=k[a+24>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];k[b>>2]=k[n>>2];k[b+4>>2]=k[n+4>>2];k[b+8>>2]=k[n+8>>2];k[b+12>>2]=k[n+12>>2];k[b+16>>2]=k[n+16>>2];k[b+20>>2]=k[n+20>>2];k[b+24>>2]=k[n+24>>2];b=2;r=o;return b|0}if(d){k[n>>2]=k[a>>2];k[n+4>>2]=k[a+4>>2];k[n+8>>2]=k[a+8>>2];k[n+12>>2]=k[a+12>>2];k[n+16>>2]=k[a+16>>2];k[n+20>>2]=k[a+20>>2];k[n+24>>2]=k[a+24>>2];k[a>>2]=k[c>>2];k[a+4>>2]=k[c+4>>2];k[a+8>>2]=k[c+8>>2];k[a+12>>2]=k[c+12>>2];k[a+16>>2]=k[c+16>>2];k[a+20>>2]=k[c+20>>2];k[a+24>>2]=k[c+24>>2];k[c>>2]=k[n>>2];k[c+4>>2]=k[n+4>>2];k[c+8>>2]=k[n+8>>2];k[c+12>>2]=k[n+12>>2];k[c+16>>2]=k[n+16>>2];k[c+20>>2]=k[n+20>>2];k[c+24>>2]=k[n+24>>2];b=1;r=o;return b|0};k[n>>2]=k[a>>2];k[n+4>>2]=k[a+4>>2];k[n+8>>2]=k[a+8>>2];k[n+12>>2]=k[a+12>>2];k[n+16>>2]=k[a+16>>2];k[n+20>>2]=k[a+20>>2];k[n+24>>2]=k[a+24>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];k[b>>2]=k[n>>2];k[b+4>>2]=k[n+4>>2];k[b+8>>2]=k[n+8>>2];k[b+12>>2]=k[n+12>>2];k[b+16>>2]=k[n+16>>2];k[b+20>>2]=k[n+20>>2];k[b+24>>2]=k[n+24>>2];h=k[c>>2]|0;d=k[b>>2]|0;do if((h|0)==(d|0)){g=k[c+8>>2]|0;d=(h|0)==(g|0);if(d?(l=k[c+4>>2]|0,(l|0)==(k[c+12>>2]|0)):0){if((h|0)!=(k[b+8>>2]|0))break;d=k[b+4>>2]|0;if((d|0)==(k[b+12>>2]|0)){if((l|0)<(d|0))break;else d=1;r=o;return d|0}else{if((l|0)>(d|0))d=1;else break;r=o;return d|0}}f=k[b+8>>2]|0;if((h|0)==(f|0)){if(!d){b=1;r=o;return b|0}if((k[c+4>>2]|0)<(k[b+4>>2]|0))break;else d=1;r=o;return d|0}if(!d){d=k[c+4>>2]|0;e=k[b+4>>2]|0;if((d|0)==(e|0)){if((Pc(g,k[c+12>>2]|0,h,d,f,k[b+12>>2]|0)|0)==1)break;else d=1;r=o;return d|0}else{if((d|0)<(e|0))break;else d=1;r=o;return d|0}}}else if((h|0)>=(d|0)){b=1;r=o;return b|0}while(0);k[n>>2]=k[b>>2];k[n+4>>2]=k[b+4>>2];k[n+8>>2]=k[b+8>>2];k[n+12>>2]=k[b+12>>2];k[n+16>>2]=k[b+16>>2];k[n+20>>2]=k[b+20>>2];k[n+24>>2]=k[b+24>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];k[b+24>>2]=k[c+24>>2];k[c>>2]=k[n>>2];k[c+4>>2]=k[n+4>>2];k[c+8>>2]=k[n+8>>2];k[c+12>>2]=k[n+12>>2];k[c+16>>2]=k[n+16>>2];k[c+20>>2]=k[n+20>>2];k[c+24>>2]=k[n+24>>2];b=2;r=o;return b|0}function md(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;o=r;r=r+32|0;n=o;e=ld(a,b,c)|0;j=k[d>>2]|0;f=k[c>>2]|0;do if((j|0)==(f|0)){i=k[d+8>>2]|0;f=(j|0)==(i|0);if(f?(g=k[d+4>>2]|0,(g|0)==(k[d+12>>2]|0)):0){if((j|0)!=(k[c+8>>2]|0))break;f=k[c+4>>2]|0;if((f|0)==(k[c+12>>2]|0)){if((g|0)<(f|0))break;r=o;return e|0}else{if((g|0)<=(f|0))break;r=o;return e|0}}h=k[c+8>>2]|0;if((j|0)==(h|0)){if(!f){b=e;r=o;return b|0}if((k[d+4>>2]|0)<(k[c+4>>2]|0))break;r=o;return e|0}if(!f){f=k[d+4>>2]|0;g=k[c+4>>2]|0;if((f|0)==(g|0)){if((Pc(i,k[d+12>>2]|0,j,f,h,k[c+12>>2]|0)|0)==1)break;r=o;return e|0}else{if((f|0)<(g|0))break;r=o;return e|0}}}else if((j|0)>=(f|0)){b=e;r=o;return b|0}while(0);k[n>>2]=k[c>>2];k[n+4>>2]=k[c+4>>2];k[n+8>>2]=k[c+8>>2];k[n+12>>2]=k[c+12>>2];k[n+16>>2]=k[c+16>>2];k[n+20>>2]=k[c+20>>2];k[n+24>>2]=k[c+24>>2];k[c>>2]=k[d>>2];k[c+4>>2]=k[d+4>>2];k[c+8>>2]=k[d+8>>2];k[c+12>>2]=k[d+12>>2];k[c+16>>2]=k[d+16>>2];k[c+20>>2]=k[d+20>>2];k[c+24>>2]=k[d+24>>2];k[d>>2]=k[n>>2];k[d+4>>2]=k[n+4>>2];k[d+8>>2]=k[n+8>>2];k[d+12>>2]=k[n+12>>2];k[d+16>>2]=k[n+16>>2];k[d+20>>2]=k[n+20>>2];k[d+24>>2]=k[n+24>>2];d=e+1|0;j=k[c>>2]|0;f=k[b>>2]|0;do if((j|0)==(f|0)){i=k[c+8>>2]|0;f=(j|0)==(i|0);if(f?(l=k[c+4>>2]|0,(l|0)==(k[c+12>>2]|0)):0){if((j|0)!=(k[b+8>>2]|0))break;f=k[b+4>>2]|0;if((f|0)==(k[b+12>>2]|0)){if((l|0)<(f|0))break;else e=d;r=o;return e|0}else{if((l|0)>(f|0))e=d;else break;r=o;return e|0}}h=k[b+8>>2]|0;if((j|0)==(h|0)){if(!f){b=d;r=o;return b|0}if((k[c+4>>2]|0)<(k[b+4>>2]|0))break;else e=d;r=o;return e|0}if(!f){f=k[c+4>>2]|0;g=k[b+4>>2]|0;if((f|0)==(g|0)){if((Pc(i,k[c+12>>2]|0,j,f,h,k[b+12>>2]|0)|0)==1)break;else e=d;r=o;return e|0}else{if((f|0)<(g|0))break;else e=d;r=o;return e|0}}}else if((j|0)>=(f|0)){b=d;r=o;return b|0}while(0);k[n>>2]=k[b>>2];k[n+4>>2]=k[b+4>>2];k[n+8>>2]=k[b+8>>2];k[n+12>>2]=k[b+12>>2];k[n+16>>2]=k[b+16>>2];k[n+20>>2]=k[b+20>>2];k[n+24>>2]=k[b+24>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];k[b+24>>2]=k[c+24>>2];k[c>>2]=k[n>>2];k[c+4>>2]=k[n+4>>2];k[c+8>>2]=k[n+8>>2];k[c+12>>2]=k[n+12>>2];k[c+16>>2]=k[n+16>>2];k[c+20>>2]=k[n+20>>2];k[c+24>>2]=k[n+24>>2];d=e+2|0;j=k[b>>2]|0;f=k[a>>2]|0;do if((j|0)==(f|0)){i=k[b+8>>2]|0;f=(j|0)==(i|0);if(f?(m=k[b+4>>2]|0,(m|0)==(k[b+12>>2]|0)):0){if((j|0)!=(k[a+8>>2]|0))break;f=k[a+4>>2]|0;if((f|0)==(k[a+12>>2]|0)){if((m|0)<(f|0))break;else e=d;r=o;return e|0}else{if((m|0)>(f|0))e=d;else break;r=o;return e|0}}h=k[a+8>>2]|0;if((j|0)==(h|0)){if(!f){b=d;r=o;return b|0}if((k[b+4>>2]|0)<(k[a+4>>2]|0))break;else e=d;r=o;return e|0}if(!f){f=k[b+4>>2]|0;g=k[a+4>>2]|0;if((f|0)==(g|0)){if((Pc(i,k[b+12>>2]|0,j,f,h,k[a+12>>2]|0)|0)==1)break;else e=d;r=o;return e|0}else{if((f|0)<(g|0))break;else e=d;r=o;return e|0}}}else if((j|0)>=(f|0)){b=d;r=o;return b|0}while(0);k[n>>2]=k[a>>2];k[n+4>>2]=k[a+4>>2];k[n+8>>2]=k[a+8>>2];k[n+12>>2]=k[a+12>>2];k[n+16>>2]=k[a+16>>2];k[n+20>>2]=k[a+20>>2];k[n+24>>2]=k[a+24>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];k[b>>2]=k[n>>2];k[b+4>>2]=k[n+4>>2];k[b+8>>2]=k[n+8>>2];k[b+12>>2]=k[n+12>>2];k[b+16>>2]=k[n+16>>2];k[b+20>>2]=k[n+20>>2];k[b+24>>2]=k[n+24>>2];b=e+3|0;r=o;return b|0}function nd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+32|0;p=q;f=md(a,b,c,d)|0;l=k[e>>2]|0;g=k[d>>2]|0;do if((l|0)==(g|0)){j=k[e+8>>2]|0;g=(l|0)==(j|0);if(g?(h=k[e+4>>2]|0,(h|0)==(k[e+12>>2]|0)):0){if((l|0)!=(k[d+8>>2]|0))break;g=k[d+4>>2]|0;if((g|0)==(k[d+12>>2]|0)){if((h|0)<(g|0))break;r=q;return f|0}else{if((h|0)<=(g|0))break;r=q;return f|0}}i=k[d+8>>2]|0;if((l|0)==(i|0)){if(!g){b=f;r=q;return b|0}if((k[e+4>>2]|0)<(k[d+4>>2]|0))break;r=q;return f|0}if(!g){g=k[e+4>>2]|0;h=k[d+4>>2]|0;if((g|0)==(h|0)){if((Pc(j,k[e+12>>2]|0,l,g,i,k[d+12>>2]|0)|0)==1)break;r=q;return f|0}else{if((g|0)<(h|0))break;r=q;return f|0}}}else if((l|0)>=(g|0)){b=f;r=q;return b|0}while(0);k[p>>2]=k[d>>2];k[p+4>>2]=k[d+4>>2];k[p+8>>2]=k[d+8>>2];k[p+12>>2]=k[d+12>>2];k[p+16>>2]=k[d+16>>2];k[p+20>>2]=k[d+20>>2];k[p+24>>2]=k[d+24>>2];k[d>>2]=k[e>>2];k[d+4>>2]=k[e+4>>2];k[d+8>>2]=k[e+8>>2];k[d+12>>2]=k[e+12>>2];k[d+16>>2]=k[e+16>>2];k[d+20>>2]=k[e+20>>2];k[d+24>>2]=k[e+24>>2];k[e>>2]=k[p>>2];k[e+4>>2]=k[p+4>>2];k[e+8>>2]=k[p+8>>2];k[e+12>>2]=k[p+12>>2];k[e+16>>2]=k[p+16>>2];k[e+20>>2]=k[p+20>>2];k[e+24>>2]=k[p+24>>2];e=f+1|0;l=k[d>>2]|0;g=k[c>>2]|0;do if((l|0)==(g|0)){j=k[d+8>>2]|0;g=(l|0)==(j|0);if(g?(m=k[d+4>>2]|0,(m|0)==(k[d+12>>2]|0)):0){if((l|0)!=(k[c+8>>2]|0))break;g=k[c+4>>2]|0;if((g|0)==(k[c+12>>2]|0)){if((m|0)<(g|0))break;else f=e;r=q;return f|0}else{if((m|0)>(g|0))f=e;else break;r=q;return f|0}}i=k[c+8>>2]|0;if((l|0)==(i|0)){if(!g){b=e;r=q;return b|0}if((k[d+4>>2]|0)<(k[c+4>>2]|0))break;else f=e;r=q;return f|0}if(!g){g=k[d+4>>2]|0;h=k[c+4>>2]|0;if((g|0)==(h|0)){if((Pc(j,k[d+12>>2]|0,l,g,i,k[c+12>>2]|0)|0)==1)break;else f=e;r=q;return f|0}else{if((g|0)<(h|0))break;else f=e;r=q;return f|0}}}else if((l|0)>=(g|0)){b=e;r=q;return b|0}while(0);k[p>>2]=k[c>>2];k[p+4>>2]=k[c+4>>2];k[p+8>>2]=k[c+8>>2];k[p+12>>2]=k[c+12>>2];k[p+16>>2]=k[c+16>>2];k[p+20>>2]=k[c+20>>2];k[p+24>>2]=k[c+24>>2];k[c>>2]=k[d>>2];k[c+4>>2]=k[d+4>>2];k[c+8>>2]=k[d+8>>2];k[c+12>>2]=k[d+12>>2];k[c+16>>2]=k[d+16>>2];k[c+20>>2]=k[d+20>>2];k[c+24>>2]=k[d+24>>2];k[d>>2]=k[p>>2];k[d+4>>2]=k[p+4>>2];k[d+8>>2]=k[p+8>>2];k[d+12>>2]=k[p+12>>2];k[d+16>>2]=k[p+16>>2];k[d+20>>2]=k[p+20>>2];k[d+24>>2]=k[p+24>>2];e=f+2|0;l=k[c>>2]|0;g=k[b>>2]|0;do if((l|0)==(g|0)){j=k[c+8>>2]|0;g=(l|0)==(j|0);if(g?(n=k[c+4>>2]|0,(n|0)==(k[c+12>>2]|0)):0){if((l|0)!=(k[b+8>>2]|0))break;g=k[b+4>>2]|0;if((g|0)==(k[b+12>>2]|0)){if((n|0)<(g|0))break;else f=e;r=q;return f|0}else{if((n|0)>(g|0))f=e;else break;r=q;return f|0}}i=k[b+8>>2]|0;if((l|0)==(i|0)){if(!g){b=e;r=q;return b|0}if((k[c+4>>2]|0)<(k[b+4>>2]|0))break;else f=e;r=q;return f|0}if(!g){g=k[c+4>>2]|0;h=k[b+4>>2]|0;if((g|0)==(h|0)){if((Pc(j,k[c+12>>2]|0,l,g,i,k[b+12>>2]|0)|0)==1)break;else f=e;r=q;return f|0}else{if((g|0)<(h|0))break;else f=e;r=q;return f|0}}}else if((l|0)>=(g|0)){b=e;r=q;return b|0}while(0);k[p>>2]=k[b>>2];k[p+4>>2]=k[b+4>>2];k[p+8>>2]=k[b+8>>2];k[p+12>>2]=k[b+12>>2];k[p+16>>2]=k[b+16>>2];k[p+20>>2]=k[b+20>>2];k[p+24>>2]=k[b+24>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];k[b+16>>2]=k[c+16>>2];k[b+20>>2]=k[c+20>>2];k[b+24>>2]=k[c+24>>2];k[c>>2]=k[p>>2];k[c+4>>2]=k[p+4>>2];k[c+8>>2]=k[p+8>>2];k[c+12>>2]=k[p+12>>2];k[c+16>>2]=k[p+16>>2];k[c+20>>2]=k[p+20>>2];k[c+24>>2]=k[p+24>>2];e=f+3|0;l=k[b>>2]|0;g=k[a>>2]|0;do if((l|0)==(g|0)){j=k[b+8>>2]|0;g=(l|0)==(j|0);if(g?(o=k[b+4>>2]|0,(o|0)==(k[b+12>>2]|0)):0){if((l|0)!=(k[a+8>>2]|0))break;g=k[a+4>>2]|0;if((g|0)==(k[a+12>>2]|0)){if((o|0)<(g|0))break;else f=e;r=q;return f|0}else{if((o|0)>(g|0))f=e;else break;r=q;return f|0}}i=k[a+8>>2]|0;if((l|0)==(i|0)){if(!g){b=e;r=q;return b|0}if((k[b+4>>2]|0)<(k[a+4>>2]|0))break;else f=e;r=q;return f|0}if(!g){g=k[b+4>>2]|0;h=k[a+4>>2]|0;if((g|0)==(h|0)){if((Pc(j,k[b+12>>2]|0,l,g,i,k[a+12>>2]|0)|0)==1)break;else f=e;r=q;return f|0}else{if((g|0)<(h|0))break;else f=e;r=q;return f|0}}}else if((l|0)>=(g|0)){b=e;r=q;return b|0}while(0);k[p>>2]=k[a>>2];k[p+4>>2]=k[a+4>>2];k[p+8>>2]=k[a+8>>2];k[p+12>>2]=k[a+12>>2];k[p+16>>2]=k[a+16>>2];k[p+20>>2]=k[a+20>>2];k[p+24>>2]=k[a+24>>2];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];k[b>>2]=k[p>>2];k[b+4>>2]=k[p+4>>2];k[b+8>>2]=k[p+8>>2];k[b+12>>2]=k[p+12>>2];k[b+16>>2]=k[p+16>>2];k[b+20>>2]=k[p+20>>2];k[b+24>>2]=k[p+24>>2];b=f+4|0;r=q;return b|0}function od(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0.0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;F=r;r=r+48|0;i=F+12|0;D=F;switch((b-a|0)/28|0|0){case 2:{h=b+-28|0;g=k[h>>2]|0;c=k[a>>2]|0;do if((g|0)==(c|0)){f=k[b+-20>>2]|0;c=(g|0)==(f|0);if(c?(d=k[b+-24>>2]|0,(d|0)==(k[b+-16>>2]|0)):0){if((g|0)!=(k[a+8>>2]|0))break;c=k[a+4>>2]|0;if((c|0)==(k[a+12>>2]|0)){if((d|0)<(c|0))break;else c=1;r=F;return c|0}else{if((d|0)>(c|0))c=1;else break;r=F;return c|0}}e=k[a+8>>2]|0;if((g|0)==(e|0)){if(!c){a=1;r=F;return a|0}if((k[b+-24>>2]|0)<(k[a+4>>2]|0))break;else c=1;r=F;return c|0}if(!c){c=k[b+-24>>2]|0;d=k[a+4>>2]|0;if((c|0)==(d|0)){if((Pc(f,k[b+-16>>2]|0,g,c,e,k[a+12>>2]|0)|0)==1)break;else c=1;r=F;return c|0}else{if((c|0)<(d|0))break;else c=1;r=F;return c|0}}}else if((g|0)>=(c|0)){a=1;r=F;return a|0}while(0);k[i>>2]=k[a>>2];k[i+4>>2]=k[a+4>>2];k[i+8>>2]=k[a+8>>2];k[i+12>>2]=k[a+12>>2];k[i+16>>2]=k[a+16>>2];k[i+20>>2]=k[a+20>>2];k[i+24>>2]=k[a+24>>2];k[a>>2]=k[h>>2];k[a+4>>2]=k[h+4>>2];k[a+8>>2]=k[h+8>>2];k[a+12>>2]=k[h+12>>2];k[a+16>>2]=k[h+16>>2];k[a+20>>2]=k[h+20>>2];k[a+24>>2]=k[h+24>>2];k[h>>2]=k[i>>2];k[h+4>>2]=k[i+4>>2];k[h+8>>2]=k[i+8>>2];k[h+12>>2]=k[i+12>>2];k[h+16>>2]=k[i+16>>2];k[h+20>>2]=k[i+20>>2];k[h+24>>2]=k[i+24>>2];a=1;r=F;return a|0}case 3:{ld(a,a+28|0,b+-28|0)|0;a=1;r=F;return a|0}case 4:{md(a,a+28|0,a+56|0,b+-28|0)|0;a=1;r=F;return a|0}case 5:{nd(a,a+28|0,a+56|0,a+84|0,b+-28|0)|0;a=1;r=F;return a|0}case 1:case 0:{a=1;r=F;return a|0}default:{e=a+56|0;ld(a,a+28|0,e)|0;d=a+84|0;if((d|0)==(b|0)){a=1;r=F;return a|0}c=0;while(1){B=k[d>>2]|0;f=k[e>>2]|0;do if((B|0)==(f|0)){h=k[d+8>>2]|0;f=(B|0)==(h|0);if(f?(C=k[d+4>>2]|0,(C|0)==(k[d+12>>2]|0)):0){if((B|0)!=(k[e+8>>2]|0)){h=B;E=39;break}f=k[e+4>>2]|0;if((f|0)==(k[e+12>>2]|0))if((C|0)<(f|0)){h=B;E=39;break}else break;else if((C|0)>(f|0))break;else{h=B;E=39;break}}i=k[e+8>>2]|0;if((B|0)==(i|0)){if(!f)break;if((k[d+4>>2]|0)<(k[e+4>>2]|0)){h=B;E=39;break}else break}if(!f){f=k[d+4>>2]|0;g=k[e+4>>2]|0;if((f|0)==(g|0))if((Pc(h,k[d+12>>2]|0,B,f,i,k[e+12>>2]|0)|0)==1){E=39;break}else break;else if((f|0)<(g|0)){E=39;break}else break}else{h=B;E=39}}else if((B|0)<(f|0)){h=k[d+8>>2]|0;E=39}while(0);if((E|0)==39){E=0;z=k[d+4>>2]|0;A=k[d+12>>2]|0;y=d+16|0;k[D>>2]=k[y>>2];k[D+4>>2]=k[y+4>>2];k[D+8>>2]=k[y+8>>2];k[d>>2]=k[e>>2];k[d+4>>2]=k[e+4>>2];k[d+8>>2]=k[e+8>>2];k[d+12>>2]=k[e+12>>2];k[d+16>>2]=k[e+16>>2];k[d+20>>2]=k[e+20>>2];k[d+24>>2]=k[e+24>>2];a:do if((e|0)==(a|0))e=a;else{o=(B|0)==(h|0);y=o&(z|0)==(A|0);p=((B|0)<0)<<31>>31;t=be(h|0,((h|0)<0)<<31>>31|0,B|0,p|0)|0;u=L;q=((z|0)<0)<<31>>31;w=be(A|0,((A|0)<0)<<31>>31|0,z|0,q|0)|0;x=L;s=(u|0)<0;v=be(0,0,t|0,u|0)|0;t=s?v:t;u=s?L:u;v=(x|0)<0;n=be(0,0,w|0,x|0)|0;w=v?n:w;x=v?L:x;while(1){n=e;e=e+-28|0;f=k[e>>2]|0;do if((B|0)==(f|0)){g=k[n+-20>>2]|0;f=(B|0)==(g|0);if(y){if(!f)break;f=k[n+-24>>2]|0;if((f|0)==(k[n+-16>>2]|0))if((z|0)<(f|0))break;else{e=n;break a}else if((z|0)>(f|0)){e=n;break a}else break}if(f){if(!o){e=n;break a}if((z|0)<(k[n+-24>>2]|0))break;else{e=n;break a}}if(!o){f=k[n+-24>>2]|0;if((z|0)!=(f|0))if((z|0)<(f|0))break;else{e=n;break a}l=be(B|0,p|0,g|0,((g|0)<0)<<31>>31|0)|0;i=L;g=k[n+-16>>2]|0;g=be(z|0,q|0,g|0,((g|0)<0)<<31>>31|0)|0;f=L;m=(i|0)<0;H=be(0,0,l|0,i|0)|0;i=m?L:i;G=(f|0)<0;I=be(0,0,g|0,f|0)|0;f=ne((G?I:g)|0,(G?L:f)|0,t|0,u|0)|0;g=L;i=ne((m?H:l)|0,i|0,w|0,x|0)|0;l=L;m=v^m;do if(s^G){if(!m){I=ge(f|0,g|0,i|0,l|0)|0;j=-(+(I>>>0)+4294967296.0*+(L>>>0));break}if(g>>>0>l>>>0|(g|0)==(l|0)&f>>>0>i>>>0){I=be(f|0,g|0,i|0,l|0)|0;j=-(+(I>>>0)+4294967296.0*+(L>>>0));break}else{I=be(i|0,l|0,f|0,g|0)|0;j=+(I>>>0)+4294967296.0*+(L>>>0);break}}else{if(m){I=ge(f|0,g|0,i|0,l|0)|0;j=+(I>>>0)+4294967296.0*+(L>>>0);break}if(g>>>0<l>>>0|(g|0)==(l|0)&f>>>0<i>>>0){I=be(i|0,l|0,f|0,g|0)|0;j=-(+(I>>>0)+4294967296.0*+(L>>>0));break}else{I=be(f|0,g|0,i|0,l|0)|0;j=+(I>>>0)+4294967296.0*+(L>>>0);break}}while(0);if(!(j!=0.0&!(j<0.0))){e=n;break a}}}else if((B|0)>=(f|0)){e=n;break a}while(0);k[n>>2]=k[e>>2];k[n+4>>2]=k[e+4>>2];k[n+8>>2]=k[e+8>>2];k[n+12>>2]=k[e+12>>2];k[n+16>>2]=k[e+16>>2];k[n+20>>2]=k[e+20>>2];k[n+24>>2]=k[e+24>>2];if((e|0)==(a|0)){e=a;break}}}while(0);k[e>>2]=B;k[e+4>>2]=z;k[e+8>>2]=h;k[e+12>>2]=A;I=e+16|0;k[I>>2]=k[D>>2];k[I+4>>2]=k[D+4>>2];k[I+8>>2]=k[D+8>>2];c=c+1|0;if((c|0)==8)break}e=d+28|0;if((e|0)==(b|0)){c=1;E=70;break}else{I=d;d=e;e=I}}if((E|0)==70){r=F;return c|0}I=(d+28|0)==(b|0);r=F;return I|0}}return 0}function pd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;f=a+4|0;g=k[a>>2]|0;c=g;h=(k[f>>2]|0)-c|0;i=(h|0)/28|0;j=i+1|0;if(j>>>0>153391689)xa(1340,1363,303,1438);l=a+8|0;c=((k[l>>2]|0)-c|0)/28|0;if(c>>>0<76695844){c=c<<1;c=c>>>0<j>>>0?j:c;if(!c){c=0;d=0}else e=5}else{c=153391689;e=5}if((e|0)==5){e=c*28|0;e=(e|0)==0?1:e;d=_d(e)|0;a:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break a}a=ya(4)|0;k[a>>2]=128;La(a|0,8,1)}while(0)}e=d+(i*28|0)|0;k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];k[e+12>>2]=k[b+12>>2];k[e+16>>2]=k[b+16>>2];k[e+20>>2]=k[b+20>>2];k[e+24>>2]=k[b+24>>2];b=d+((((h|0)/-28|0)+i|0)*28|0)|0;fe(b|0,g|0,h|0)|0;k[a>>2]=b;k[f>>2]=d+(j*28|0);k[l>>2]=d+(c*28|0);if(!g)return;$d(g);return}function qd(a){a=a|0;return}function rd(a){a=a|0;$d(a);return}function sd(a){a=a|0;return 1459}function td(a){a=a|0;return}function ud(a){a=a|0;return}function vd(a){a=a|0;return}function wd(a){a=a|0;$d(a);return}function xd(a){a=a|0;$d(a);return}function yd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;g=r;r=r+64|0;f=g;if((a|0)!=(b|0))if((b|0)!=0?(e=Bd(b,56)|0,(e|0)!=0):0){b=f;d=b+56|0;do{k[b>>2]=0;b=b+4|0}while((b|0)<(d|0));k[f>>2]=e;k[f+8>>2]=a;k[f+12>>2]=-1;k[f+48>>2]=1;_a[k[(k[e>>2]|0)+28>>2]&3](e,f,k[c>>2]|0,1);if((k[f+24>>2]|0)==1){k[c>>2]=k[f+16>>2];b=1}else b=0}else b=0;else b=1;r=g;return b|0}function zd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;do if((a|0)==(k[b+8>>2]|0)){a=b+16|0;e=k[a>>2]|0;if(!e){k[a>>2]=c;k[b+24>>2]=d;k[b+36>>2]=1;break}if((e|0)!=(c|0)){d=b+36|0;k[d>>2]=(k[d>>2]|0)+1;k[b+24>>2]=2;i[b+54>>0]=1;break}a=b+24|0;if((k[a>>2]|0)==2)k[a>>2]=d}while(0);return}function Ad(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;do if((a|0)==(k[b+8>>2]|0)){a=b+16|0;e=k[a>>2]|0;if(!e){k[a>>2]=c;k[b+24>>2]=d;k[b+36>>2]=1;break}if((e|0)!=(c|0)){d=b+36|0;k[d>>2]=(k[d>>2]|0)+1;k[b+24>>2]=2;i[b+54>>0]=1;break}a=b+24|0;if((k[a>>2]|0)==2)k[a>>2]=d}else{e=k[a+8>>2]|0;_a[k[(k[e>>2]|0)+28>>2]&3](e,b,c,d)}while(0);return}function Bd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0;s=r;r=r+64|0;q=s;p=k[a>>2]|0;o=a+(k[p+-8>>2]|0)|0;p=k[p+-4>>2]|0;k[q>>2]=b;k[q+4>>2]=a;k[q+8>>2]=40;l=q+12|0;a=q+16|0;c=q+20|0;d=q+24|0;e=q+28|0;f=q+32|0;g=q+40|0;h=(p|0)==(b|0);m=l;n=m+40|0;do{k[m>>2]=0;m=m+4|0}while((m|0)<(n|0));j[l+40>>1]=0;i[l+42>>0]=0;a:do if(h){k[q+48>>2]=1;Ya[k[(k[b>>2]|0)+20>>2]&3](b,q,o,o,1,0);a=(k[d>>2]|0)==1?o:0}else{Ua[k[(k[p>>2]|0)+24>>2]&3](p,q,o,1,0);switch(k[q+36>>2]|0){case 0:{a=(k[g>>2]|0)==1&(k[e>>2]|0)==1&(k[f>>2]|0)==1?k[c>>2]|0:0;break a}case 1:break;default:{a=0;break a}}if((k[d>>2]|0)!=1?!((k[g>>2]|0)==0&(k[e>>2]|0)==1&(k[f>>2]|0)==1):0){a=0;break}a=k[a>>2]|0}while(0);r=s;return a|0}function Cd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;i[a+53>>0]=1;do if((k[a+4>>2]|0)==(c|0)){i[a+52>>0]=1;c=a+16|0;e=k[c>>2]|0;if(!e){k[c>>2]=b;k[a+24>>2]=d;k[a+36>>2]=1;if(!((d|0)==1?(k[a+48>>2]|0)==1:0))break;i[a+54>>0]=1;break}if((e|0)!=(b|0)){d=a+36|0;k[d>>2]=(k[d>>2]|0)+1;i[a+54>>0]=1;break}e=a+24|0;c=k[e>>2]|0;if((c|0)==2){k[e>>2]=d;c=d}if((c|0)==1?(k[a+48>>2]|0)==1:0)i[a+54>>0]=1}while(0);return}function Dd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;a:do if((a|0)==(k[b+8>>2]|0)){if((k[b+4>>2]|0)==(c|0)?(f=b+28|0,(k[f>>2]|0)!=1):0)k[f>>2]=d}else{if((a|0)!=(k[b>>2]|0)){h=k[a+8>>2]|0;Ua[k[(k[h>>2]|0)+24>>2]&3](h,b,c,d,e);break}if((k[b+16>>2]|0)!=(c|0)?(g=b+20|0,(k[g>>2]|0)!=(c|0)):0){k[b+32>>2]=d;d=b+44|0;if((k[d>>2]|0)==4)break;f=b+52|0;i[f>>0]=0;j=b+53|0;i[j>>0]=0;a=k[a+8>>2]|0;Ya[k[(k[a>>2]|0)+20>>2]&3](a,b,c,c,1,e);if(i[j>>0]|0){if(!(i[f>>0]|0)){f=1;h=13}}else{f=0;h=13}do if((h|0)==13){k[g>>2]=c;j=b+40|0;k[j>>2]=(k[j>>2]|0)+1;if((k[b+36>>2]|0)==1?(k[b+24>>2]|0)==2:0){i[b+54>>0]=1;if(f)break}else h=16;if((h|0)==16?f:0)break;k[d>>2]=4;break a}while(0);k[d>>2]=3;break}if((d|0)==1)k[b+32>>2]=1}while(0);return}function Ed(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;do if((a|0)==(k[b+8>>2]|0)){if((k[b+4>>2]|0)==(c|0)?(g=b+28|0,(k[g>>2]|0)!=1):0)k[g>>2]=d}else if((a|0)==(k[b>>2]|0)){if((k[b+16>>2]|0)!=(c|0)?(f=b+20|0,(k[f>>2]|0)!=(c|0)):0){k[b+32>>2]=d;k[f>>2]=c;e=b+40|0;k[e>>2]=(k[e>>2]|0)+1;if((k[b+36>>2]|0)==1?(k[b+24>>2]|0)==2:0)i[b+54>>0]=1;k[b+44>>2]=4;break}if((d|0)==1)k[b+32>>2]=1}while(0);return}function Fd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if((a|0)==(k[b+8>>2]|0))Cd(b,c,d,e);else{a=k[a+8>>2]|0;Ya[k[(k[a>>2]|0)+20>>2]&3](a,b,c,d,e,f)}return}function Gd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if((a|0)==(k[b+8>>2]|0))Cd(b,c,d,e);return}function Hd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=r;r=r+16|0;d=e;k[d>>2]=k[c>>2];a=Ta[k[(k[a>>2]|0)+16>>2]&7](a,b,d)|0;if(a)k[c>>2]=k[d>>2];r=e;return a&1|0}function Id(a){a=a|0;if(!a)a=0;else a=(Bd(a,88)|0)!=0;return a&1|0}function Jd(a){a=a|0;var b=0,c=0;b=0;while(1){if((l[1474+b>>0]|0)==(a|0)){c=2;break}b=b+1|0;if((b|0)==87){b=87;a=1562;c=5;break}}if((c|0)==2)if(!b)b=1562;else{a=1562;c=5}if((c|0)==5)while(1){do{c=a;a=a+1|0}while((i[c>>0]|0)!=0);b=b+-1|0;if(!b){b=a;break}else c=5}return b|0}function Kd(a,b){a=+a;b=b|0;var c=0,d=0,e=0;p[t>>3]=a;c=k[t>>2]|0;d=k[t+4>>2]|0;e=de(c|0,d|0,52)|0;e=e&2047;switch(e|0){case 0:{if(a!=0.0){a=+Kd(a*18446744073709552.0e3,b);c=(k[b>>2]|0)+-64|0}else c=0;k[b>>2]=c;break}case 2047:break;default:{k[b>>2]=e+-1022;k[t>>2]=c;k[t+4>>2]=d&-2146435073|1071644672;a=+p[t>>3]}}return +a}function Ld(a,b){a=a|0;b=b|0;do if(!a)a=1;else{if(b>>>0<128){i[a>>0]=b;a=1;break}if(b>>>0<2048){i[a>>0]=b>>>6|192;i[a+1>>0]=b&63|128;a=2;break}if(b>>>0<55296|(b&-8192|0)==57344){i[a>>0]=b>>>12|224;i[a+1>>0]=b>>>6&63|128;i[a+2>>0]=b&63|128;a=3;break}if((b+-65536|0)>>>0<1048576){i[a>>0]=b>>>18|240;i[a+1>>0]=b>>>12&63|128;i[a+2>>0]=b>>>6&63|128;i[a+3>>0]=b&63|128;a=4;break}if(!(k[56]|0))a=268;else{a=(Ga()|0)+60|0;a=k[a>>2]|0}k[a>>2]=84;a=-1}while(0);return a|0}function Md(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=c+16|0;e=k[d>>2]|0;if(!e)if(!(Td(c)|0)){e=k[d>>2]|0;f=4}else d=0;else f=4;a:do if((f|0)==4){g=c+20|0;f=k[g>>2]|0;if((e-f|0)>>>0<b>>>0){d=Ta[k[c+36>>2]&7](c,a,b)|0;break}b:do if((i[c+75>>0]|0)>-1){d=b;while(1){if(!d){e=f;d=0;break b}e=d+-1|0;if((i[a+e>>0]|0)==10)break;else d=e}if((Ta[k[c+36>>2]&7](c,a,d)|0)>>>0<d>>>0)break a;b=b-d|0;a=a+d|0;e=k[g>>2]|0}else{e=f;d=0}while(0);fe(e|0,a|0,b|0)|0;k[g>>2]=(k[g>>2]|0)+b;d=d+b|0}while(0);return d|0}function Nd(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;k[d>>2]=b;Od(272,a,d)|0;r=c;return}function Od(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+224|0;m=q+120|0;p=q+80|0;o=q;n=q+136|0;d=p;e=d+40|0;do{k[d>>2]=0;d=d+4|0}while((d|0)<(e|0));k[m>>2]=k[c>>2];if((Vd(0,b,m,o,p)|0)<0)c=-1;else{c=k[a>>2]|0;l=c&32;if((i[a+74>>0]|0)<1)k[a>>2]=c&-33;j=a+48|0;if(!(k[j>>2]|0)){d=a+44|0;e=k[d>>2]|0;k[d>>2]=n;f=a+28|0;k[f>>2]=n;g=a+20|0;k[g>>2]=n;k[j>>2]=80;h=a+16|0;k[h>>2]=n+80;c=Vd(a,b,m,o,p)|0;if(e){Ta[k[a+36>>2]&7](a,0,0)|0;c=(k[g>>2]|0)==0?-1:c;k[d>>2]=e;k[j>>2]=0;k[h>>2]=0;k[f>>2]=0;k[g>>2]=0}}else c=Vd(a,b,m,o,p)|0;p=k[a>>2]|0;k[a>>2]=p|l;c=(p&32|0)==0?c:-1}r=q;return c|0}function Pd(a){a=a|0;var b=0,c=0;c=r;r=r+16|0;b=c;k[b>>2]=k[a+60>>2];a=va(6,b|0)|0;if(a>>>0>4294963200){if(!(k[56]|0))b=268;else{b=(Ga()|0)+60|0;b=k[b>>2]|0}k[b>>2]=0-a;a=-1}r=c;return a|0}function Qd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;f=r;r=r+32|0;g=f;d=f+20|0;k[g>>2]=k[a+60>>2];k[g+4>>2]=0;k[g+8>>2]=b;k[g+12>>2]=d;k[g+16>>2]=c;b=Ha(140,g|0)|0;if(b>>>0<=4294963200)if((b|0)<0)e=7;else a=k[d>>2]|0;else{if(!(k[56]|0))a=268;else{a=(Ga()|0)+60|0;a=k[a>>2]|0}k[a>>2]=0-b;e=7}if((e|0)==7){k[d>>2]=-1;a=-1}r=f;return a|0}function Rd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;p=r;r=r+48|0;m=p+16|0;l=p;i=p+32|0;n=a+28|0;f=k[n>>2]|0;k[i>>2]=f;o=a+20|0;f=(k[o>>2]|0)-f|0;k[i+4>>2]=f;k[i+8>>2]=b;k[i+12>>2]=c;h=a+60|0;j=a+44|0;e=2;f=f+c|0;while(1){if(!(k[56]|0)){k[m>>2]=k[h>>2];k[m+4>>2]=i;k[m+8>>2]=e;b=Qa(146,m|0)|0;if(b>>>0>4294963200){if(!(k[56]|0))d=268;else{d=(Ga()|0)+60|0;d=k[d>>2]|0}k[d>>2]=0-b;b=-1}}else{Na(8,a|0);k[l>>2]=k[h>>2];k[l+4>>2]=i;k[l+8>>2]=e;b=Qa(146,l|0)|0;if(b>>>0>4294963200){if(!(k[56]|0))d=268;else{d=(Ga()|0)+60|0;d=k[d>>2]|0}k[d>>2]=0-b;b=-1}ua(0)}if((f|0)==(b|0)){b=13;break}if((b|0)<0){b=15;break}f=f-b|0;d=k[i+4>>2]|0;if(b>>>0<=d>>>0)if((e|0)==2){k[n>>2]=(k[n>>2]|0)+b;g=d;d=i;e=2}else{g=d;d=i}else{g=k[j>>2]|0;k[n>>2]=g;k[o>>2]=g;g=k[i+12>>2]|0;b=b-d|0;d=i+8|0;e=e+-1|0}k[d>>2]=(k[d>>2]|0)+b;k[d+4>>2]=g-b;i=d}if((b|0)==13){m=k[j>>2]|0;k[a+16>>2]=m+(k[a+48>>2]|0);a=m;k[n>>2]=a;k[o>>2]=a}else if((b|0)==15){k[a+16>>2]=0;k[n>>2]=0;k[o>>2]=0;k[a>>2]=k[a>>2]|32;if((e|0)==2)c=0;else c=c-(k[i+4>>2]|0)|0}r=p;return c|0}function Sd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=r;r=r+80|0;d=e;k[a+36>>2]=4;if((k[a>>2]&64|0)==0?(k[d>>2]=k[a+60>>2],k[d+4>>2]=21505,k[d+8>>2]=e+12,(Ia(54,d|0)|0)!=0):0)i[a+75>>0]=-1;d=Rd(a,b,c)|0;r=e;return d|0}function Td(a){a=a|0;var b=0,c=0;b=a+74|0;c=i[b>>0]|0;i[b>>0]=c+255|c;b=k[a>>2]|0;if(!(b&8)){k[a+8>>2]=0;k[a+4>>2]=0;b=k[a+44>>2]|0;k[a+28>>2]=b;k[a+20>>2]=b;k[a+16>>2]=b+(k[a+48>>2]|0);b=0}else{k[a>>2]=b|32;b=-1}return b|0}function Ud(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;f=b&255;d=(c|0)!=0;a:do if(d&(a&3|0)!=0){e=b&255;while(1){if((i[a>>0]|0)==e<<24>>24)break a;a=a+1|0;c=c+-1|0;d=(c|0)!=0;if(!(d&(a&3|0)!=0)){g=5;break}}}else g=5;while(0);b:do if((g|0)==5)if(d){e=b&255;if((i[a>>0]|0)!=e<<24>>24){d=ha(f,16843009)|0;c:do if(c>>>0>3)while(1){f=k[a>>2]^d;if((f&-2139062144^-2139062144)&f+-16843009)break;a=a+4|0;c=c+-4|0;if(c>>>0<=3){g=11;break c}}else g=11;while(0);if((g|0)==11)if(!c){c=0;break}while(1){if((i[a>>0]|0)==e<<24>>24)break b;a=a+1|0;c=c+-1|0;if(!c){c=0;break}}}}else c=0;while(0);return ((c|0)!=0?a:0)|0}function Vd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,m=0.0,n=0,o=0,q=0,s=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;ga=r;r=r+624|0;ba=ga+24|0;da=ga+16|0;ca=ga+588|0;Y=ga+576|0;aa=ga;V=ga+536|0;fa=ga+8|0;ea=ga+528|0;M=(a|0)!=0;N=V+40|0;U=N;V=V+39|0;W=fa+4|0;X=Y+12|0;Y=Y+11|0;Z=ca;_=X;$=_-Z|0;O=-2-Z|0;P=_+2|0;Q=ba+288|0;R=ca+9|0;S=R;T=ca+8|0;f=0;g=0;q=0;a:while(1){do if((f|0)>-1){if((g|0)<=(2147483647-f|0)){f=g+f|0;break}if(!(k[56]|0))f=268;else{f=(Ga()|0)+60|0;f=k[f>>2]|0}k[f>>2]=75;f=-1}while(0);g=i[b>>0]|0;if(!(g<<24>>24)){K=249;break}else h=b;b:while(1){switch(g<<24>>24){case 37:{g=h;K=11;break b}case 0:{g=h;break b}default:{}}J=h+1|0;g=i[J>>0]|0;h=J}c:do if((K|0)==11)while(1){K=0;if((i[g+1>>0]|0)!=37)break c;h=h+1|0;g=g+2|0;if((i[g>>0]|0)==37)K=11;else break}while(0);y=h-b|0;if(M?(k[a>>2]&32|0)==0:0)Md(b,y,a)|0;if((h|0)!=(b|0)){b=g;g=y;continue}o=g+1|0;h=i[o>>0]|0;n=(h<<24>>24)+-48|0;if(n>>>0<10){J=(i[g+2>>0]|0)==36;o=J?g+3|0:o;h=i[o>>0]|0;u=J?n:-1;q=J?1:q}else u=-1;g=h<<24>>24;d:do if((g&-32|0)==32){n=0;while(1){if(!(1<<g+-32&75913)){s=n;break d}n=1<<(h<<24>>24)+-32|n;o=o+1|0;h=i[o>>0]|0;g=h<<24>>24;if((g&-32|0)!=32){s=n;break}}}else s=0;while(0);do if(h<<24>>24==42){h=o+1|0;g=(i[h>>0]|0)+-48|0;if(g>>>0<10?(i[o+2>>0]|0)==36:0){k[e+(g<<2)>>2]=10;q=1;g=o+3|0;n=k[d+((i[h>>0]|0)+-48<<3)>>2]|0}else{if(q){f=-1;break a}if(!M){w=s;q=0;J=0;break}q=(k[c>>2]|0)+(4-1)&~(4-1);n=k[q>>2]|0;k[c>>2]=q+4;q=0;g=h}if((n|0)<0){w=s|8192;h=g;J=0-n|0}else{w=s;h=g;J=n}}else{g=(h<<24>>24)+-48|0;if(g>>>0<10){h=o;n=0;do{n=(n*10|0)+g|0;h=h+1|0;g=(i[h>>0]|0)+-48|0}while(g>>>0<10);if((n|0)<0){f=-1;break a}else{w=s;J=n}}else{w=s;h=o;J=0}}while(0);e:do if((i[h>>0]|0)==46){n=h+1|0;g=i[n>>0]|0;if(g<<24>>24!=42){o=(g<<24>>24)+-48|0;if(o>>>0<10){g=n;h=0}else{g=n;o=0;break}while(1){h=(h*10|0)+o|0;g=g+1|0;o=(i[g>>0]|0)+-48|0;if(o>>>0>=10){o=h;break e}}}n=h+2|0;g=(i[n>>0]|0)+-48|0;if(g>>>0<10?(i[h+3>>0]|0)==36:0){k[e+(g<<2)>>2]=10;g=h+4|0;o=k[d+((i[n>>0]|0)+-48<<3)>>2]|0;break}if(q){f=-1;break a}if(M){g=(k[c>>2]|0)+(4-1)&~(4-1);o=k[g>>2]|0;k[c>>2]=g+4;g=n}else{g=n;o=0}}else{g=h;o=-1}while(0);v=0;while(1){h=(i[g>>0]|0)+-65|0;if(h>>>0>57){f=-1;break a}I=g+1|0;h=i[4398+(v*58|0)+h>>0]|0;n=h&255;if((n+-1|0)>>>0<8){g=I;v=n}else break}if(!(h<<24>>24)){f=-1;break}s=(u|0)>-1;do if(h<<24>>24==19)if(s){f=-1;break a}else K=54;else{if(s){k[e+(u<<2)>>2]=n;G=d+(u<<3)|0;H=k[G+4>>2]|0;K=aa;k[K>>2]=k[G>>2];k[K+4>>2]=H;K=54;break}if(!M){f=0;break a}Xd(aa,n,c)}while(0);if((K|0)==54?(K=0,!M):0){b=I;g=y;continue}u=i[g>>0]|0;u=(v|0)!=0&(u&15|0)==3?u&-33:u;h=w&-65537;H=(w&8192|0)==0?w:h;f:do switch(u|0){case 110:switch(v|0){case 0:{k[k[aa>>2]>>2]=f;b=I;g=y;continue a}case 1:{k[k[aa>>2]>>2]=f;b=I;g=y;continue a}case 2:{b=k[aa>>2]|0;k[b>>2]=f;k[b+4>>2]=((f|0)<0)<<31>>31;b=I;g=y;continue a}case 3:{j[k[aa>>2]>>1]=f;b=I;g=y;continue a}case 4:{i[k[aa>>2]>>0]=f;b=I;g=y;continue a}case 6:{k[k[aa>>2]>>2]=f;b=I;g=y;continue a}case 7:{b=k[aa>>2]|0;k[b>>2]=f;k[b+4>>2]=((f|0)<0)<<31>>31;b=I;g=y;continue a}default:{b=I;g=y;continue a}}case 112:{s=H|8;o=o>>>0>8?o:8;u=120;K=66;break}case 88:case 120:{s=H;K=66;break}case 111:{h=aa;g=k[h>>2]|0;h=k[h+4>>2]|0;if((g|0)==0&(h|0)==0)b=N;else{b=N;do{b=b+-1|0;i[b>>0]=g&7|48;g=de(g|0,h|0,3)|0;h=L}while(!((g|0)==0&(h|0)==0))}if(!(H&8)){g=H;s=0;n=4878;K=79}else{s=U-b+1|0;g=H;o=(o|0)<(s|0)?s:o;s=0;n=4878;K=79}break}case 105:case 100:{g=aa;b=k[g>>2]|0;g=k[g+4>>2]|0;if((g|0)<0){b=be(0,0,b|0,g|0)|0;g=L;h=aa;k[h>>2]=b;k[h+4>>2]=g;h=1;n=4878;K=78;break f}if(!(H&2048)){n=H&1;h=n;n=(n|0)==0?4878:4880;K=78}else{h=1;n=4879;K=78}break}case 117:{g=aa;b=k[g>>2]|0;g=k[g+4>>2]|0;h=0;n=4878;K=78;break}case 99:{i[V>>0]=k[aa>>2];b=V;u=1;w=0;v=4878;g=N;break}case 109:{if(!(k[56]|0))b=268;else{b=(Ga()|0)+60|0;b=k[b>>2]|0}g=Jd(k[b>>2]|0)|0;K=86;break}case 115:{g=k[aa>>2]|0;g=(g|0)!=0?g:4888;K=86;break}case 67:{k[fa>>2]=k[aa>>2];k[W>>2]=0;k[aa>>2]=fa;h=fa;o=-1;K=91;break}case 83:if(!o){Zd(a,32,J,0,H);g=0;K=102;break f}else{h=k[aa>>2]|0;K=91;break f}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{m=+p[aa>>3];k[da>>2]=0;p[t>>3]=m;if((k[t+4>>2]|0)>=0)if(!(H&2048)){G=H&1;F=G;G=(G|0)==0?4896:4901}else{F=1;G=4898}else{m=-m;F=1;G=4895}p[t>>3]=m;E=k[t+4>>2]&2146435072;do if(E>>>0<2146435072|(E|0)==2146435072&0<0){x=+Kd(m,da)*2.0;g=x!=0.0;if(g)k[da>>2]=(k[da>>2]|0)+-1;C=u|32;if((C|0)==97){v=u&32;y=(v|0)==0?G:G+9|0;w=F|2;b=12-o|0;do if(!(o>>>0>11|(b|0)==0)){m=8.0;do{b=b+-1|0;m=m*16.0}while((b|0)!=0);if((i[y>>0]|0)==45){m=-(m+(-x-m));break}else{m=x+m-m;break}}else m=x;while(0);g=k[da>>2]|0;b=(g|0)<0?0-g|0:g;b=Yd(b,((b|0)<0)<<31>>31,X)|0;if((b|0)==(X|0)){i[Y>>0]=48;b=Y}i[b+-1>>0]=(g>>31&2)+43;s=b+-2|0;i[s>>0]=u+15;n=(o|0)<1;h=(H&8|0)==0;g=ca;while(1){G=~~m;b=g+1|0;i[g>>0]=l[4862+G>>0]|v;m=(m-+(G|0))*16.0;do if((b-Z|0)==1){if(h&(n&m==0.0))break;i[b>>0]=46;b=g+2|0}while(0);if(!(m!=0.0))break;else g=b}h=s;o=(o|0)!=0&(O+b|0)<(o|0)?P+o-h|0:$-h+b|0;n=o+w|0;Zd(a,32,J,n,H);if(!(k[a>>2]&32))Md(y,w,a)|0;Zd(a,48,J,n,H^65536);g=b-Z|0;if(!(k[a>>2]&32))Md(ca,g,a)|0;b=_-h|0;Zd(a,48,o-(g+b)|0,0,0);if(!(k[a>>2]&32))Md(s,b,a)|0;Zd(a,32,J,n,H^8192);g=(n|0)<(J|0)?J:n;break}b=(o|0)<0?6:o;if(g){g=(k[da>>2]|0)+-28|0;k[da>>2]=g;m=x*268435456.0}else{m=x;g=k[da>>2]|0}E=(g|0)<0?ba:Q;D=E;h=E;do{B=~~m>>>0;k[h>>2]=B;h=h+4|0;m=(m-+(B>>>0))*1.0e9}while(m!=0.0);g=k[da>>2]|0;if((g|0)>0){n=E;o=h;while(1){s=(g|0)>29?29:g;g=o+-4|0;do if(g>>>0>=n>>>0){h=0;do{A=ee(k[g>>2]|0,0,s|0)|0;A=ge(A|0,L|0,h|0,0)|0;B=L;z=pe(A|0,B|0,1e9,0)|0;k[g>>2]=z;h=oe(A|0,B|0,1e9,0)|0;g=g+-4|0}while(g>>>0>=n>>>0);if(!h)break;n=n+-4|0;k[n>>2]=h}while(0);h=o;while(1){if(h>>>0<=n>>>0)break;g=h+-4|0;if(!(k[g>>2]|0))h=g;else break}g=(k[da>>2]|0)-s|0;k[da>>2]=g;if((g|0)>0)o=h;else break}}else n=E;if((g|0)<0){y=((b+25|0)/9|0)+1|0;z=(C|0)==102;do{w=0-g|0;w=(w|0)>9?9:w;do if(n>>>0<h>>>0){g=(1<<w)+-1|0;o=1e9>>>w;v=0;s=n;do{B=k[s>>2]|0;k[s>>2]=(B>>>w)+v;v=ha(B&g,o)|0;s=s+4|0}while(s>>>0<h>>>0);g=(k[n>>2]|0)==0?n+4|0:n;if(!v){n=g;g=h;break}k[h>>2]=v;n=g;g=h+4|0}else{n=(k[n>>2]|0)==0?n+4|0:n;g=h}while(0);h=z?E:n;h=(g-h>>2|0)>(y|0)?h+(y<<2)|0:g;g=(k[da>>2]|0)+w|0;k[da>>2]=g}while((g|0)<0);s=n;B=h}else{s=n;B=h}do if(s>>>0<B>>>0){g=(D-s>>2)*9|0;n=k[s>>2]|0;if(n>>>0<10)break;else h=10;do{h=h*10|0;g=g+1|0}while(n>>>0>=h>>>0)}else g=0;while(0);z=(C|0)==103;A=(b|0)!=0;h=b-((C|0)!=102?g:0)+((A&z)<<31>>31)|0;if((h|0)<(((B-D>>2)*9|0)+-9|0)){o=h+9216|0;y=(o|0)/9|0;h=E+(y+-1023<<2)|0;o=((o|0)%9|0)+1|0;if((o|0)<9){n=10;do{n=n*10|0;o=o+1|0}while((o|0)!=9)}else n=10;v=k[h>>2]|0;w=(v>>>0)%(n>>>0)|0;if((w|0)==0?(E+(y+-1022<<2)|0)==(B|0):0)n=s;else K=167;do if((K|0)==167){K=0;x=(((v>>>0)/(n>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;o=(n|0)/2|0;do if(w>>>0<o>>>0)m=.5;else{if((w|0)==(o|0)?(E+(y+-1022<<2)|0)==(B|0):0){m=1.0;break}m=1.5}while(0);do if(F){if((i[G>>0]|0)!=45)break;x=-x;m=-m}while(0);o=v-w|0;k[h>>2]=o;if(!(x+m!=x)){n=s;break}C=o+n|0;k[h>>2]=C;if(C>>>0>999999999){g=s;while(1){n=h+-4|0;k[h>>2]=0;if(n>>>0<g>>>0){g=g+-4|0;k[g>>2]=0}C=(k[n>>2]|0)+1|0;k[n>>2]=C;if(C>>>0>999999999)h=n;else{s=g;h=n;break}}}g=(D-s>>2)*9|0;o=k[s>>2]|0;if(o>>>0<10){n=s;break}else n=10;do{n=n*10|0;g=g+1|0}while(o>>>0>=n>>>0);n=s}while(0);h=h+4|0;C=n;h=B>>>0>h>>>0?h:B}else{C=s;h=B}w=0-g|0;B=h;while(1){if(B>>>0<=C>>>0){y=0;break}h=B+-4|0;if(!(k[h>>2]|0))B=h;else{y=1;break}}do if(z){b=(A&1^1)+b|0;if((b|0)>(g|0)&(g|0)>-5){u=u+-1|0;b=b+-1-g|0}else{u=u+-2|0;b=b+-1|0}h=H&8;if(h)break;do if(y){h=k[B+-4>>2]|0;if(!h){n=9;break}if(!((h>>>0)%10|0)){o=10;n=0}else{n=0;break}do{o=o*10|0;n=n+1|0}while(((h>>>0)%(o>>>0)|0|0)==0)}else n=9;while(0);h=((B-D>>2)*9|0)+-9|0;if((u|32|0)==102){h=h-n|0;h=(h|0)<0?0:h;b=(b|0)<(h|0)?b:h;h=0;break}else{h=h+g-n|0;h=(h|0)<0?0:h;b=(b|0)<(h|0)?b:h;h=0;break}}else h=H&8;while(0);v=b|h;o=(v|0)!=0&1;s=(u|32|0)==102;if(s){g=(g|0)>0?g:0;u=0}else{n=(g|0)<0?w:g;n=Yd(n,((n|0)<0)<<31>>31,X)|0;if((_-n|0)<2)do{n=n+-1|0;i[n>>0]=48}while((_-n|0)<2);i[n+-1>>0]=(g>>31&2)+43;D=n+-2|0;i[D>>0]=u;g=_-D|0;u=D}w=F+1+b+o+g|0;Zd(a,32,J,w,H);if(!(k[a>>2]&32))Md(G,F,a)|0;Zd(a,48,J,w,H^65536);do if(s){n=C>>>0>E>>>0?E:C;h=n;do{g=Yd(k[h>>2]|0,0,R)|0;do if((h|0)==(n|0)){if((g|0)!=(R|0))break;i[T>>0]=48;g=T}else{if(g>>>0<=ca>>>0)break;do{g=g+-1|0;i[g>>0]=48}while(g>>>0>ca>>>0)}while(0);if(!(k[a>>2]&32))Md(g,S-g|0,a)|0;h=h+4|0}while(h>>>0<=E>>>0);do if(v){if(k[a>>2]&32)break;Md(4930,1,a)|0}while(0);if((b|0)>0&h>>>0<B>>>0)while(1){g=Yd(k[h>>2]|0,0,R)|0;if(g>>>0>ca>>>0)do{g=g+-1|0;i[g>>0]=48}while(g>>>0>ca>>>0);if(!(k[a>>2]&32))Md(g,(b|0)>9?9:b,a)|0;h=h+4|0;g=b+-9|0;if(!((b|0)>9&h>>>0<B>>>0)){b=g;break}else b=g}Zd(a,48,b+9|0,9,0)}else{s=y?B:C+4|0;if((b|0)>-1){o=(h|0)==0;n=C;do{g=Yd(k[n>>2]|0,0,R)|0;if((g|0)==(R|0)){i[T>>0]=48;g=T}do if((n|0)==(C|0)){h=g+1|0;if(!(k[a>>2]&32))Md(g,1,a)|0;if(o&(b|0)<1){g=h;break}if(k[a>>2]&32){g=h;break}Md(4930,1,a)|0;g=h}else{if(g>>>0<=ca>>>0)break;do{g=g+-1|0;i[g>>0]=48}while(g>>>0>ca>>>0)}while(0);h=S-g|0;if(!(k[a>>2]&32))Md(g,(b|0)>(h|0)?h:b,a)|0;b=b-h|0;n=n+4|0}while(n>>>0<s>>>0&(b|0)>-1)}Zd(a,48,b+18|0,18,0);if(k[a>>2]&32)break;Md(u,_-u|0,a)|0}while(0);Zd(a,32,J,w,H^8192);g=(w|0)<(J|0)?J:w}else{s=(u&32|0)!=0;o=m!=m|0.0!=0.0;g=o?0:F;n=g+3|0;Zd(a,32,J,n,h);b=k[a>>2]|0;if(!(b&32)){Md(G,g,a)|0;b=k[a>>2]|0}if(!(b&32))Md(o?(s?4922:4926):s?4914:4918,3,a)|0;Zd(a,32,J,n,H^8192);g=(n|0)<(J|0)?J:n}while(0);b=I;continue a}default:{h=H;u=o;w=0;v=4878;g=N}}while(0);g:do if((K|0)==66){h=aa;g=k[h>>2]|0;h=k[h+4>>2]|0;n=u&32;if(!((g|0)==0&(h|0)==0)){b=N;do{b=b+-1|0;i[b>>0]=l[4862+(g&15)>>0]|n;g=de(g|0,h|0,4)|0;h=L}while(!((g|0)==0&(h|0)==0));K=aa;if((s&8|0)==0|(k[K>>2]|0)==0&(k[K+4>>2]|0)==0){g=s;s=0;n=4878;K=79}else{g=s;s=2;n=4878+(u>>4)|0;K=79}}else{b=N;g=s;s=0;n=4878;K=79}}else if((K|0)==78){b=Yd(b,g,N)|0;g=H;s=h;K=79}else if((K|0)==86){K=0;H=Ud(g,0,o)|0;G=(H|0)==0;b=g;u=G?o:H-g|0;w=0;v=4878;g=G?g+o|0:H}else if((K|0)==91){K=0;g=0;b=0;s=h;while(1){n=k[s>>2]|0;if(!n)break;b=Ld(ea,n)|0;if((b|0)<0|b>>>0>(o-g|0)>>>0)break;g=b+g|0;if(o>>>0>g>>>0)s=s+4|0;else break}if((b|0)<0){f=-1;break a}Zd(a,32,J,g,H);if(!g){g=0;K=102}else{n=0;while(1){b=k[h>>2]|0;if(!b){K=102;break g}b=Ld(ea,b)|0;n=b+n|0;if((n|0)>(g|0)){K=102;break g}if(!(k[a>>2]&32))Md(ea,b,a)|0;if(n>>>0>=g>>>0){K=102;break}else h=h+4|0}}}while(0);if((K|0)==102){K=0;Zd(a,32,J,g,H^8192);b=I;g=(J|0)>(g|0)?J:g;continue}if((K|0)==79){K=0;h=(o|0)>-1?g&-65537:g;g=aa;g=(k[g>>2]|0)!=0|(k[g+4>>2]|0)!=0;if((o|0)!=0|g){u=(g&1^1)+(U-b)|0;u=(o|0)>(u|0)?o:u;w=s;v=n;g=N}else{b=N;u=0;w=s;v=n;g=N}}s=g-b|0;n=(u|0)<(s|0)?s:u;o=w+n|0;g=(J|0)<(o|0)?o:J;Zd(a,32,g,o,h);if(!(k[a>>2]&32))Md(v,w,a)|0;Zd(a,48,g,o,h^65536);Zd(a,48,n,s,0);if(!(k[a>>2]&32))Md(b,s,a)|0;Zd(a,32,g,o,h^8192);b=I}h:do if((K|0)==249)if(!a)if(!q)f=0;else{f=1;while(1){b=k[e+(f<<2)>>2]|0;if(!b){b=0;break}Xd(d+(f<<3)|0,b,c);f=f+1|0;if((f|0)>=10){f=1;break h}}while(1){f=f+1|0;if(b){f=-1;break h}if((f|0)>=10){f=1;break h}b=k[e+(f<<2)>>2]|0}}while(0);r=ga;return f|0}function Wd(a){a=a|0;return}function Xd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{d=(k[c>>2]|0)+(4-1)&~(4-1);b=k[d>>2]|0;k[c>>2]=d+4;k[a>>2]=b;break a}case 10:{d=(k[c>>2]|0)+(4-1)&~(4-1);b=k[d>>2]|0;k[c>>2]=d+4;d=a;k[d>>2]=b;k[d+4>>2]=((b|0)<0)<<31>>31;break a}case 11:{d=(k[c>>2]|0)+(4-1)&~(4-1);b=k[d>>2]|0;k[c>>2]=d+4;d=a;k[d>>2]=b;k[d+4>>2]=0;break a}case 12:{d=(k[c>>2]|0)+(8-1)&~(8-1);b=d;e=k[b>>2]|0;b=k[b+4>>2]|0;k[c>>2]=d+8;d=a;k[d>>2]=e;k[d+4>>2]=b;break a}case 13:{e=(k[c>>2]|0)+(4-1)&~(4-1);d=k[e>>2]|0;k[c>>2]=e+4;d=(d&65535)<<16>>16;e=a;k[e>>2]=d;k[e+4>>2]=((d|0)<0)<<31>>31;break a}case 14:{e=(k[c>>2]|0)+(4-1)&~(4-1);d=k[e>>2]|0;k[c>>2]=e+4;e=a;k[e>>2]=d&65535;k[e+4>>2]=0;break a}case 15:{e=(k[c>>2]|0)+(4-1)&~(4-1);d=k[e>>2]|0;k[c>>2]=e+4;d=(d&255)<<24>>24;e=a;k[e>>2]=d;k[e+4>>2]=((d|0)<0)<<31>>31;break a}case 16:{e=(k[c>>2]|0)+(4-1)&~(4-1);d=k[e>>2]|0;k[c>>2]=e+4;e=a;k[e>>2]=d&255;k[e+4>>2]=0;break a}case 17:{e=(k[c>>2]|0)+(8-1)&~(8-1);f=+p[e>>3];k[c>>2]=e+8;p[a>>3]=f;break a}case 18:{e=(k[c>>2]|0)+(8-1)&~(8-1);f=+p[e>>3];k[c>>2]=e+8;p[a>>3]=f;break a}default:break a}while(0);while(0);return}function Yd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(b>>>0>0|(b|0)==0&a>>>0>4294967295)while(1){d=pe(a|0,b|0,10,0)|0;c=c+-1|0;i[c>>0]=d|48;d=a;a=oe(a|0,b|0,10,0)|0;if(!(b>>>0>9|(b|0)==9&d>>>0>4294967295))break;else b=L}if(a)while(1){c=c+-1|0;i[c>>0]=(a>>>0)%10|0|48;if(a>>>0<10)break;else a=(a>>>0)/10|0}return c|0}function Zd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=r;r=r+256|0;f=g;do if((c|0)>(d|0)&(e&73728|0)==0){e=c-d|0;ce(f|0,b|0,(e>>>0>256?256:e)|0)|0;d=k[a>>2]|0;c=(d&32|0)==0;if(e>>>0>255){b=e;do{if(c){Md(f,256,a)|0;d=k[a>>2]|0}b=b+-256|0;c=(d&32|0)==0}while(b>>>0>255);if(c)e=e&255;else break}else if(!c)break;Md(f,e,a)|0}while(0);r=g;return}function _d(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;do if(a>>>0<245){o=a>>>0<11?16:a+11&-8;a=o>>>3;h=k[96]|0;b=h>>>a;if(b&3){b=(b&1^1)+a|0;d=b<<1;c=424+(d<<2)|0;d=424+(d+2<<2)|0;e=k[d>>2]|0;f=e+8|0;g=k[f>>2]|0;do if((c|0)!=(g|0)){if(g>>>0<(k[100]|0)>>>0)Ma();a=g+12|0;if((k[a>>2]|0)==(e|0)){k[a>>2]=c;k[d>>2]=g;break}else Ma()}else k[96]=h&~(1<<b);while(0);L=b<<3;k[e+4>>2]=L|3;L=e+(L|4)|0;k[L>>2]=k[L>>2]|1;L=f;return L|0}g=k[98]|0;if(o>>>0>g>>>0){if(b){d=2<<a;d=b<<a&(d|0-d);d=(d&0-d)+-1|0;i=d>>>12&16;d=d>>>i;e=d>>>5&8;d=d>>>e;f=d>>>2&4;d=d>>>f;c=d>>>1&2;d=d>>>c;b=d>>>1&1;b=(e|i|f|c|b)+(d>>>b)|0;d=b<<1;c=424+(d<<2)|0;d=424+(d+2<<2)|0;f=k[d>>2]|0;i=f+8|0;e=k[i>>2]|0;do if((c|0)!=(e|0)){if(e>>>0<(k[100]|0)>>>0)Ma();a=e+12|0;if((k[a>>2]|0)==(f|0)){k[a>>2]=c;k[d>>2]=e;j=k[98]|0;break}else Ma()}else{k[96]=h&~(1<<b);j=g}while(0);L=b<<3;g=L-o|0;k[f+4>>2]=o|3;h=f+o|0;k[f+(o|4)>>2]=g|1;k[f+L>>2]=g;if(j){e=k[101]|0;c=j>>>3;a=c<<1;d=424+(a<<2)|0;b=k[96]|0;c=1<<c;if(b&c){b=424+(a+2<<2)|0;a=k[b>>2]|0;if(a>>>0<(k[100]|0)>>>0)Ma();else{l=b;m=a}}else{k[96]=b|c;l=424+(a+2<<2)|0;m=d}k[l>>2]=e;k[m+12>>2]=e;k[e+8>>2]=m;k[e+12>>2]=d}k[98]=g;k[101]=h;L=i;return L|0}a=k[97]|0;if(a){h=(a&0-a)+-1|0;K=h>>>12&16;h=h>>>K;J=h>>>5&8;h=h>>>J;L=h>>>2&4;h=h>>>L;b=h>>>1&2;h=h>>>b;i=h>>>1&1;i=k[688+((J|K|L|b|i)+(h>>>i)<<2)>>2]|0;h=(k[i+4>>2]&-8)-o|0;b=i;while(1){a=k[b+16>>2]|0;if(!a){a=k[b+20>>2]|0;if(!a)break}b=(k[a+4>>2]&-8)-o|0;L=b>>>0<h>>>0;h=L?b:h;b=a;i=L?a:i}e=k[100]|0;if(i>>>0<e>>>0)Ma();g=i+o|0;if(i>>>0>=g>>>0)Ma();f=k[i+24>>2]|0;c=k[i+12>>2]|0;do if((c|0)==(i|0)){b=i+20|0;a=k[b>>2]|0;if(!a){b=i+16|0;a=k[b>>2]|0;if(!a){n=0;break}}while(1){c=a+20|0;d=k[c>>2]|0;if(d){a=d;b=c;continue}c=a+16|0;d=k[c>>2]|0;if(!d)break;else{a=d;b=c}}if(b>>>0<e>>>0)Ma();else{k[b>>2]=0;n=a;break}}else{d=k[i+8>>2]|0;if(d>>>0<e>>>0)Ma();a=d+12|0;if((k[a>>2]|0)!=(i|0))Ma();b=c+8|0;if((k[b>>2]|0)==(i|0)){k[a>>2]=c;k[b>>2]=d;n=c;break}else Ma()}while(0);do if(f){a=k[i+28>>2]|0;b=688+(a<<2)|0;if((i|0)==(k[b>>2]|0)){k[b>>2]=n;if(!n){k[97]=k[97]&~(1<<a);break}}else{if(f>>>0<(k[100]|0)>>>0)Ma();a=f+16|0;if((k[a>>2]|0)==(i|0))k[a>>2]=n;else k[f+20>>2]=n;if(!n)break}b=k[100]|0;if(n>>>0<b>>>0)Ma();k[n+24>>2]=f;a=k[i+16>>2]|0;do if(a)if(a>>>0<b>>>0)Ma();else{k[n+16>>2]=a;k[a+24>>2]=n;break}while(0);a=k[i+20>>2]|0;if(a)if(a>>>0<(k[100]|0)>>>0)Ma();else{k[n+20>>2]=a;k[a+24>>2]=n;break}}while(0);if(h>>>0<16){L=h+o|0;k[i+4>>2]=L|3;L=i+(L+4)|0;k[L>>2]=k[L>>2]|1}else{k[i+4>>2]=o|3;k[i+(o|4)>>2]=h|1;k[i+(h+o)>>2]=h;a=k[98]|0;if(a){e=k[101]|0;c=a>>>3;a=c<<1;d=424+(a<<2)|0;b=k[96]|0;c=1<<c;if(b&c){a=424+(a+2<<2)|0;b=k[a>>2]|0;if(b>>>0<(k[100]|0)>>>0)Ma();else{p=a;q=b}}else{k[96]=b|c;p=424+(a+2<<2)|0;q=d}k[p>>2]=e;k[q+12>>2]=e;k[e+8>>2]=q;k[e+12>>2]=d}k[98]=h;k[101]=g}L=i+8|0;return L|0}}}else if(a>>>0<=4294967231){a=a+11|0;o=a&-8;i=k[97]|0;if(i){b=0-o|0;a=a>>>8;if(a)if(o>>>0>16777215)h=31;else{q=(a+1048320|0)>>>16&8;x=a<<q;p=(x+520192|0)>>>16&4;x=x<<p;h=(x+245760|0)>>>16&2;h=14-(p|q|h)+(x<<h>>>15)|0;h=o>>>(h+7|0)&1|h<<1}else h=0;a=k[688+(h<<2)>>2]|0;a:do if(!a){c=0;a=0;x=86}else{e=b;c=0;f=o<<((h|0)==31?0:25-(h>>>1)|0);g=a;a=0;while(1){d=k[g+4>>2]&-8;b=d-o|0;if(b>>>0<e>>>0)if((d|0)==(o|0)){d=g;a=g;x=90;break a}else a=g;else b=e;x=k[g+20>>2]|0;g=k[g+16+(f>>>31<<2)>>2]|0;c=(x|0)==0|(x|0)==(g|0)?c:x;if(!g){x=86;break}else{e=b;f=f<<1}}}while(0);if((x|0)==86){if((c|0)==0&(a|0)==0){a=2<<h;a=i&(a|0-a);if(!a)break;a=(a&0-a)+-1|0;n=a>>>12&16;a=a>>>n;m=a>>>5&8;a=a>>>m;p=a>>>2&4;a=a>>>p;q=a>>>1&2;a=a>>>q;c=a>>>1&1;c=k[688+((m|n|p|q|c)+(a>>>c)<<2)>>2]|0;a=0}if(!c){h=b;i=a}else{d=c;x=90}}if((x|0)==90)while(1){x=0;q=(k[d+4>>2]&-8)-o|0;c=q>>>0<b>>>0;b=c?q:b;a=c?d:a;c=k[d+16>>2]|0;if(c){d=c;x=90;continue}d=k[d+20>>2]|0;if(!d){h=b;i=a;break}else x=90}if((i|0)!=0?h>>>0<((k[98]|0)-o|0)>>>0:0){e=k[100]|0;if(i>>>0<e>>>0)Ma();g=i+o|0;if(i>>>0>=g>>>0)Ma();f=k[i+24>>2]|0;c=k[i+12>>2]|0;do if((c|0)==(i|0)){b=i+20|0;a=k[b>>2]|0;if(!a){b=i+16|0;a=k[b>>2]|0;if(!a){s=0;break}}while(1){c=a+20|0;d=k[c>>2]|0;if(d){a=d;b=c;continue}c=a+16|0;d=k[c>>2]|0;if(!d)break;else{a=d;b=c}}if(b>>>0<e>>>0)Ma();else{k[b>>2]=0;s=a;break}}else{d=k[i+8>>2]|0;if(d>>>0<e>>>0)Ma();a=d+12|0;if((k[a>>2]|0)!=(i|0))Ma();b=c+8|0;if((k[b>>2]|0)==(i|0)){k[a>>2]=c;k[b>>2]=d;s=c;break}else Ma()}while(0);do if(f){a=k[i+28>>2]|0;b=688+(a<<2)|0;if((i|0)==(k[b>>2]|0)){k[b>>2]=s;if(!s){k[97]=k[97]&~(1<<a);break}}else{if(f>>>0<(k[100]|0)>>>0)Ma();a=f+16|0;if((k[a>>2]|0)==(i|0))k[a>>2]=s;else k[f+20>>2]=s;if(!s)break}b=k[100]|0;if(s>>>0<b>>>0)Ma();k[s+24>>2]=f;a=k[i+16>>2]|0;do if(a)if(a>>>0<b>>>0)Ma();else{k[s+16>>2]=a;k[a+24>>2]=s;break}while(0);a=k[i+20>>2]|0;if(a)if(a>>>0<(k[100]|0)>>>0)Ma();else{k[s+20>>2]=a;k[a+24>>2]=s;break}}while(0);b:do if(h>>>0>=16){k[i+4>>2]=o|3;k[i+(o|4)>>2]=h|1;k[i+(h+o)>>2]=h;a=h>>>3;if(h>>>0<256){b=a<<1;d=424+(b<<2)|0;c=k[96]|0;a=1<<a;if(c&a){a=424+(b+2<<2)|0;b=k[a>>2]|0;if(b>>>0<(k[100]|0)>>>0)Ma();else{t=a;u=b}}else{k[96]=c|a;t=424+(b+2<<2)|0;u=d}k[t>>2]=g;k[u+12>>2]=g;k[i+(o+8)>>2]=u;k[i+(o+12)>>2]=d;break}a=h>>>8;if(a)if(h>>>0>16777215)d=31;else{K=(a+1048320|0)>>>16&8;L=a<<K;J=(L+520192|0)>>>16&4;L=L<<J;d=(L+245760|0)>>>16&2;d=14-(J|K|d)+(L<<d>>>15)|0;d=h>>>(d+7|0)&1|d<<1}else d=0;a=688+(d<<2)|0;k[i+(o+28)>>2]=d;k[i+(o+20)>>2]=0;k[i+(o+16)>>2]=0;b=k[97]|0;c=1<<d;if(!(b&c)){k[97]=b|c;k[a>>2]=g;k[i+(o+24)>>2]=a;k[i+(o+12)>>2]=g;k[i+(o+8)>>2]=g;break}a=k[a>>2]|0;c:do if((k[a+4>>2]&-8|0)!=(h|0)){d=h<<((d|0)==31?0:25-(d>>>1)|0);while(1){c=a+16+(d>>>31<<2)|0;b=k[c>>2]|0;if(!b)break;if((k[b+4>>2]&-8|0)==(h|0)){w=b;break c}else{d=d<<1;a=b}}if(c>>>0<(k[100]|0)>>>0)Ma();else{k[c>>2]=g;k[i+(o+24)>>2]=a;k[i+(o+12)>>2]=g;k[i+(o+8)>>2]=g;break b}}else w=a;while(0);a=w+8|0;b=k[a>>2]|0;L=k[100]|0;if(b>>>0>=L>>>0&w>>>0>=L>>>0){k[b+12>>2]=g;k[a>>2]=g;k[i+(o+8)>>2]=b;k[i+(o+12)>>2]=w;k[i+(o+24)>>2]=0;break}else Ma()}else{L=h+o|0;k[i+4>>2]=L|3;L=i+(L+4)|0;k[L>>2]=k[L>>2]|1}while(0);L=i+8|0;return L|0}}}else o=-1;while(0);c=k[98]|0;if(c>>>0>=o>>>0){a=c-o|0;b=k[101]|0;if(a>>>0>15){k[101]=b+o;k[98]=a;k[b+(o+4)>>2]=a|1;k[b+c>>2]=a;k[b+4>>2]=o|3}else{k[98]=0;k[101]=0;k[b+4>>2]=c|3;L=b+(c+4)|0;k[L>>2]=k[L>>2]|1}L=b+8|0;return L|0}a=k[99]|0;if(a>>>0>o>>>0){K=a-o|0;k[99]=K;L=k[102]|0;k[102]=L+o;k[L+(o+4)>>2]=K|1;k[L+4>>2]=o|3;L=L+8|0;return L|0}do if(!(k[214]|0)){a=Fa(30)|0;if(!(a+-1&a)){k[216]=a;k[215]=a;k[217]=-1;k[218]=-1;k[219]=0;k[207]=0;w=(Oa(0)|0)&-16^1431655768;k[214]=w;break}else Ma()}while(0);f=o+48|0;e=k[216]|0;g=o+47|0;d=e+g|0;e=0-e|0;h=d&e;if(h>>>0<=o>>>0){L=0;return L|0}a=k[206]|0;if((a|0)!=0?(u=k[204]|0,w=u+h|0,w>>>0<=u>>>0|w>>>0>a>>>0):0){L=0;return L|0}d:do if(!(k[207]&4)){c=k[102]|0;e:do if(c){a=832;while(1){b=k[a>>2]|0;if(b>>>0<=c>>>0?(r=a+4|0,(b+(k[r>>2]|0)|0)>>>0>c>>>0):0)break;a=k[a+8>>2]|0;if(!a){x=174;break e}}b=d-(k[99]|0)&e;if(b>>>0<2147483647){c=Ba(b|0)|0;w=(c|0)==((k[a>>2]|0)+(k[r>>2]|0)|0);a=w?b:0;if(w){if((c|0)!=(-1|0)){r=c;q=a;x=194;break d}}else x=184}else a=0}else x=174;while(0);do if((x|0)==174){d=Ba(0)|0;if((d|0)!=(-1|0)){a=d;b=k[215]|0;c=b+-1|0;if(!(c&a))b=h;else b=h-a+(c+a&0-b)|0;a=k[204]|0;c=a+b|0;if(b>>>0>o>>>0&b>>>0<2147483647){w=k[206]|0;if((w|0)!=0?c>>>0<=a>>>0|c>>>0>w>>>0:0){a=0;break}c=Ba(b|0)|0;x=(c|0)==(d|0);a=x?b:0;if(x){r=d;q=a;x=194;break d}else x=184}else a=0}else a=0}while(0);f:do if((x|0)==184){d=0-b|0;do if(f>>>0>b>>>0&(b>>>0<2147483647&(c|0)!=(-1|0))?(v=k[216]|0,v=g-b+v&0-v,v>>>0<2147483647):0)if((Ba(v|0)|0)==(-1|0)){Ba(d|0)|0;break f}else{b=v+b|0;break}while(0);if((c|0)!=(-1|0)){r=c;q=b;x=194;break d}}while(0);k[207]=k[207]|4;x=191}else{a=0;x=191}while(0);if((((x|0)==191?h>>>0<2147483647:0)?(y=Ba(h|0)|0,z=Ba(0)|0,y>>>0<z>>>0&((y|0)!=(-1|0)&(z|0)!=(-1|0))):0)?(A=z-y|0,B=A>>>0>(o+40|0)>>>0,B):0){r=y;q=B?A:a;x=194}if((x|0)==194){a=(k[204]|0)+q|0;k[204]=a;if(a>>>0>(k[205]|0)>>>0)k[205]=a;g=k[102]|0;g:do if(g){e=832;while(1){a=k[e>>2]|0;b=e+4|0;c=k[b>>2]|0;if((r|0)==(a+c|0)){x=204;break}d=k[e+8>>2]|0;if(!d)break;else e=d}if(((x|0)==204?(k[e+12>>2]&8|0)==0:0)?g>>>0<r>>>0&g>>>0>=a>>>0:0){k[b>>2]=c+q;L=(k[99]|0)+q|0;K=g+8|0;K=(K&7|0)==0?0:0-K&7;J=L-K|0;k[102]=g+K;k[99]=J;k[g+(K+4)>>2]=J|1;k[g+(L+4)>>2]=40;k[103]=k[218];break}a=k[100]|0;if(r>>>0<a>>>0){k[100]=r;i=r}else i=a;b=r+q|0;a=832;while(1){if((k[a>>2]|0)==(b|0)){x=212;break}a=k[a+8>>2]|0;if(!a){b=832;break}}if((x|0)==212)if(!(k[a+12>>2]&8)){k[a>>2]=r;n=a+4|0;k[n>>2]=(k[n>>2]|0)+q;n=r+8|0;n=(n&7|0)==0?0:0-n&7;j=r+(q+8)|0;j=(j&7|0)==0?0:0-j&7;a=r+(j+q)|0;m=n+o|0;p=r+m|0;l=a-(r+n)-o|0;k[r+(n+4)>>2]=o|3;h:do if((a|0)!=(g|0)){if((a|0)==(k[101]|0)){L=(k[98]|0)+l|0;k[98]=L;k[101]=p;k[r+(m+4)>>2]=L|1;k[r+(L+m)>>2]=L;break}g=q+4|0;b=k[r+(g+j)>>2]|0;if((b&3|0)==1){h=b&-8;e=b>>>3;i:do if(b>>>0>=256){f=k[r+((j|24)+q)>>2]|0;d=k[r+(q+12+j)>>2]|0;do if((d|0)==(a|0)){c=j|16;d=r+(g+c)|0;b=k[d>>2]|0;if(!b){c=r+(c+q)|0;b=k[c>>2]|0;if(!b){I=0;break}}else c=d;while(1){d=b+20|0;e=k[d>>2]|0;if(e){b=e;c=d;continue}d=b+16|0;e=k[d>>2]|0;if(!e)break;else{b=e;c=d}}if(c>>>0<i>>>0)Ma();else{k[c>>2]=0;I=b;break}}else{e=k[r+((j|8)+q)>>2]|0;if(e>>>0<i>>>0)Ma();b=e+12|0;if((k[b>>2]|0)!=(a|0))Ma();c=d+8|0;if((k[c>>2]|0)==(a|0)){k[b>>2]=d;k[c>>2]=e;I=d;break}else Ma()}while(0);if(!f)break;b=k[r+(q+28+j)>>2]|0;c=688+(b<<2)|0;do if((a|0)!=(k[c>>2]|0)){if(f>>>0<(k[100]|0)>>>0)Ma();b=f+16|0;if((k[b>>2]|0)==(a|0))k[b>>2]=I;else k[f+20>>2]=I;if(!I)break i}else{k[c>>2]=I;if(I)break;k[97]=k[97]&~(1<<b);break i}while(0);c=k[100]|0;if(I>>>0<c>>>0)Ma();k[I+24>>2]=f;a=j|16;b=k[r+(a+q)>>2]|0;do if(b)if(b>>>0<c>>>0)Ma();else{k[I+16>>2]=b;k[b+24>>2]=I;break}while(0);a=k[r+(g+a)>>2]|0;if(!a)break;if(a>>>0<(k[100]|0)>>>0)Ma();else{k[I+20>>2]=a;k[a+24>>2]=I;break}}else{c=k[r+((j|8)+q)>>2]|0;d=k[r+(q+12+j)>>2]|0;b=424+(e<<1<<2)|0;do if((c|0)!=(b|0)){if(c>>>0<i>>>0)Ma();if((k[c+12>>2]|0)==(a|0))break;Ma()}while(0);if((d|0)==(c|0)){k[96]=k[96]&~(1<<e);break}do if((d|0)==(b|0))E=d+8|0;else{if(d>>>0<i>>>0)Ma();b=d+8|0;if((k[b>>2]|0)==(a|0)){E=b;break}Ma()}while(0);k[c+12>>2]=d;k[E>>2]=c}while(0);a=r+((h|j)+q)|0;e=h+l|0}else e=l;a=a+4|0;k[a>>2]=k[a>>2]&-2;k[r+(m+4)>>2]=e|1;k[r+(e+m)>>2]=e;a=e>>>3;if(e>>>0<256){b=a<<1;d=424+(b<<2)|0;c=k[96]|0;a=1<<a;do if(!(c&a)){k[96]=c|a;J=424+(b+2<<2)|0;K=d}else{a=424+(b+2<<2)|0;b=k[a>>2]|0;if(b>>>0>=(k[100]|0)>>>0){J=a;K=b;break}Ma()}while(0);k[J>>2]=p;k[K+12>>2]=p;k[r+(m+8)>>2]=K;k[r+(m+12)>>2]=d;break}a=e>>>8;do if(!a)d=0;else{if(e>>>0>16777215){d=31;break}J=(a+1048320|0)>>>16&8;K=a<<J;I=(K+520192|0)>>>16&4;K=K<<I;d=(K+245760|0)>>>16&2;d=14-(I|J|d)+(K<<d>>>15)|0;d=e>>>(d+7|0)&1|d<<1}while(0);a=688+(d<<2)|0;k[r+(m+28)>>2]=d;k[r+(m+20)>>2]=0;k[r+(m+16)>>2]=0;b=k[97]|0;c=1<<d;if(!(b&c)){k[97]=b|c;k[a>>2]=p;k[r+(m+24)>>2]=a;k[r+(m+12)>>2]=p;k[r+(m+8)>>2]=p;break}a=k[a>>2]|0;j:do if((k[a+4>>2]&-8|0)!=(e|0)){d=e<<((d|0)==31?0:25-(d>>>1)|0);while(1){c=a+16+(d>>>31<<2)|0;b=k[c>>2]|0;if(!b)break;if((k[b+4>>2]&-8|0)==(e|0)){L=b;break j}else{d=d<<1;a=b}}if(c>>>0<(k[100]|0)>>>0)Ma();else{k[c>>2]=p;k[r+(m+24)>>2]=a;k[r+(m+12)>>2]=p;k[r+(m+8)>>2]=p;break h}}else L=a;while(0);a=L+8|0;b=k[a>>2]|0;K=k[100]|0;if(b>>>0>=K>>>0&L>>>0>=K>>>0){k[b+12>>2]=p;k[a>>2]=p;k[r+(m+8)>>2]=b;k[r+(m+12)>>2]=L;k[r+(m+24)>>2]=0;break}else Ma()}else{L=(k[99]|0)+l|0;k[99]=L;k[102]=p;k[r+(m+4)>>2]=L|1}while(0);L=r+(n|8)|0;return L|0}else b=832;while(1){a=k[b>>2]|0;if(a>>>0<=g>>>0?(C=k[b+4>>2]|0,D=a+C|0,D>>>0>g>>>0):0)break;b=k[b+8>>2]|0}b=a+(C+-39)|0;b=a+(C+-47+((b&7|0)==0?0:0-b&7))|0;e=g+16|0;b=b>>>0<e>>>0?g:b;a=b+8|0;c=r+8|0;c=(c&7|0)==0?0:0-c&7;L=q+-40-c|0;k[102]=r+c;k[99]=L;k[r+(c+4)>>2]=L|1;k[r+(q+-36)>>2]=40;k[103]=k[218];c=b+4|0;k[c>>2]=27;k[a>>2]=k[208];k[a+4>>2]=k[209];k[a+8>>2]=k[210];k[a+12>>2]=k[211];k[208]=r;k[209]=q;k[211]=0;k[210]=a;a=b+28|0;k[a>>2]=7;if((b+32|0)>>>0<D>>>0)do{L=a;a=a+4|0;k[a>>2]=7}while((L+8|0)>>>0<D>>>0);if((b|0)!=(g|0)){f=b-g|0;k[c>>2]=k[c>>2]&-2;k[g+4>>2]=f|1;k[b>>2]=f;a=f>>>3;if(f>>>0<256){b=a<<1;d=424+(b<<2)|0;c=k[96]|0;a=1<<a;if(c&a){a=424+(b+2<<2)|0;b=k[a>>2]|0;if(b>>>0<(k[100]|0)>>>0)Ma();else{F=a;G=b}}else{k[96]=c|a;F=424+(b+2<<2)|0;G=d}k[F>>2]=g;k[G+12>>2]=g;k[g+8>>2]=G;k[g+12>>2]=d;break}a=f>>>8;if(a)if(f>>>0>16777215)d=31;else{K=(a+1048320|0)>>>16&8;L=a<<K;J=(L+520192|0)>>>16&4;L=L<<J;d=(L+245760|0)>>>16&2;d=14-(J|K|d)+(L<<d>>>15)|0;d=f>>>(d+7|0)&1|d<<1}else d=0;c=688+(d<<2)|0;k[g+28>>2]=d;k[g+20>>2]=0;k[e>>2]=0;a=k[97]|0;b=1<<d;if(!(a&b)){k[97]=a|b;k[c>>2]=g;k[g+24>>2]=c;k[g+12>>2]=g;k[g+8>>2]=g;break}a=k[c>>2]|0;k:do if((k[a+4>>2]&-8|0)!=(f|0)){d=f<<((d|0)==31?0:25-(d>>>1)|0);while(1){c=a+16+(d>>>31<<2)|0;b=k[c>>2]|0;if(!b)break;if((k[b+4>>2]&-8|0)==(f|0)){H=b;break k}else{d=d<<1;a=b}}if(c>>>0<(k[100]|0)>>>0)Ma();else{k[c>>2]=g;k[g+24>>2]=a;k[g+12>>2]=g;k[g+8>>2]=g;break g}}else H=a;while(0);a=H+8|0;b=k[a>>2]|0;L=k[100]|0;if(b>>>0>=L>>>0&H>>>0>=L>>>0){k[b+12>>2]=g;k[a>>2]=g;k[g+8>>2]=b;k[g+12>>2]=H;k[g+24>>2]=0;break}else Ma()}}else{L=k[100]|0;if((L|0)==0|r>>>0<L>>>0)k[100]=r;k[208]=r;k[209]=q;k[211]=0;k[105]=k[214];k[104]=-1;a=0;do{L=a<<1;K=424+(L<<2)|0;k[424+(L+3<<2)>>2]=K;k[424+(L+2<<2)>>2]=K;a=a+1|0}while((a|0)!=32);L=r+8|0;L=(L&7|0)==0?0:0-L&7;K=q+-40-L|0;k[102]=r+L;k[99]=K;k[r+(L+4)>>2]=K|1;k[r+(q+-36)>>2]=40;k[103]=k[218]}while(0);a=k[99]|0;if(a>>>0>o>>>0){K=a-o|0;k[99]=K;L=k[102]|0;k[102]=L+o;k[L+(o+4)>>2]=K|1;k[L+4>>2]=o|3;L=L+8|0;return L|0}}if(!(k[56]|0))a=268;else{a=(Ga()|0)+60|0;a=k[a>>2]|0}k[a>>2]=12;L=0;return L|0}function $d(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if(!a)return;b=a+-8|0;h=k[100]|0;if(b>>>0<h>>>0)Ma();c=k[a+-4>>2]|0;d=c&3;if((d|0)==1)Ma();o=c&-8;q=a+(o+-8)|0;do if(!(c&1)){b=k[b>>2]|0;if(!d)return;i=-8-b|0;l=a+i|0;m=b+o|0;if(l>>>0<h>>>0)Ma();if((l|0)==(k[101]|0)){b=a+(o+-4)|0;c=k[b>>2]|0;if((c&3|0)!=3){u=l;f=m;break}k[98]=m;k[b>>2]=c&-2;k[a+(i+4)>>2]=m|1;k[q>>2]=m;return}e=b>>>3;if(b>>>0<256){d=k[a+(i+8)>>2]|0;c=k[a+(i+12)>>2]|0;b=424+(e<<1<<2)|0;if((d|0)!=(b|0)){if(d>>>0<h>>>0)Ma();if((k[d+12>>2]|0)!=(l|0))Ma()}if((c|0)==(d|0)){k[96]=k[96]&~(1<<e);u=l;f=m;break}if((c|0)!=(b|0)){if(c>>>0<h>>>0)Ma();b=c+8|0;if((k[b>>2]|0)==(l|0))g=b;else Ma()}else g=c+8|0;k[d+12>>2]=c;k[g>>2]=d;u=l;f=m;break}g=k[a+(i+24)>>2]|0;d=k[a+(i+12)>>2]|0;do if((d|0)==(l|0)){c=a+(i+20)|0;b=k[c>>2]|0;if(!b){c=a+(i+16)|0;b=k[c>>2]|0;if(!b){j=0;break}}while(1){d=b+20|0;e=k[d>>2]|0;if(e){b=e;c=d;continue}d=b+16|0;e=k[d>>2]|0;if(!e)break;else{b=e;c=d}}if(c>>>0<h>>>0)Ma();else{k[c>>2]=0;j=b;break}}else{e=k[a+(i+8)>>2]|0;if(e>>>0<h>>>0)Ma();b=e+12|0;if((k[b>>2]|0)!=(l|0))Ma();c=d+8|0;if((k[c>>2]|0)==(l|0)){k[b>>2]=d;k[c>>2]=e;j=d;break}else Ma()}while(0);if(g){b=k[a+(i+28)>>2]|0;c=688+(b<<2)|0;if((l|0)==(k[c>>2]|0)){k[c>>2]=j;if(!j){k[97]=k[97]&~(1<<b);u=l;f=m;break}}else{if(g>>>0<(k[100]|0)>>>0)Ma();b=g+16|0;if((k[b>>2]|0)==(l|0))k[b>>2]=j;else k[g+20>>2]=j;if(!j){u=l;f=m;break}}c=k[100]|0;if(j>>>0<c>>>0)Ma();k[j+24>>2]=g;b=k[a+(i+16)>>2]|0;do if(b)if(b>>>0<c>>>0)Ma();else{k[j+16>>2]=b;k[b+24>>2]=j;break}while(0);b=k[a+(i+20)>>2]|0;if(b)if(b>>>0<(k[100]|0)>>>0)Ma();else{k[j+20>>2]=b;k[b+24>>2]=j;u=l;f=m;break}else{u=l;f=m}}else{u=l;f=m}}else{u=b;f=o}while(0);if(u>>>0>=q>>>0)Ma();b=a+(o+-4)|0;c=k[b>>2]|0;if(!(c&1))Ma();if(!(c&2)){if((q|0)==(k[102]|0)){t=(k[99]|0)+f|0;k[99]=t;k[102]=u;k[u+4>>2]=t|1;if((u|0)!=(k[101]|0))return;k[101]=0;k[98]=0;return}if((q|0)==(k[101]|0)){t=(k[98]|0)+f|0;k[98]=t;k[101]=u;k[u+4>>2]=t|1;k[u+t>>2]=t;return}f=(c&-8)+f|0;e=c>>>3;do if(c>>>0>=256){g=k[a+(o+16)>>2]|0;b=k[a+(o|4)>>2]|0;do if((b|0)==(q|0)){c=a+(o+12)|0;b=k[c>>2]|0;if(!b){c=a+(o+8)|0;b=k[c>>2]|0;if(!b){p=0;break}}while(1){d=b+20|0;e=k[d>>2]|0;if(e){b=e;c=d;continue}d=b+16|0;e=k[d>>2]|0;if(!e)break;else{b=e;c=d}}if(c>>>0<(k[100]|0)>>>0)Ma();else{k[c>>2]=0;p=b;break}}else{c=k[a+o>>2]|0;if(c>>>0<(k[100]|0)>>>0)Ma();d=c+12|0;if((k[d>>2]|0)!=(q|0))Ma();e=b+8|0;if((k[e>>2]|0)==(q|0)){k[d>>2]=b;k[e>>2]=c;p=b;break}else Ma()}while(0);if(g){b=k[a+(o+20)>>2]|0;c=688+(b<<2)|0;if((q|0)==(k[c>>2]|0)){k[c>>2]=p;if(!p){k[97]=k[97]&~(1<<b);break}}else{if(g>>>0<(k[100]|0)>>>0)Ma();b=g+16|0;if((k[b>>2]|0)==(q|0))k[b>>2]=p;else k[g+20>>2]=p;if(!p)break}c=k[100]|0;if(p>>>0<c>>>0)Ma();k[p+24>>2]=g;b=k[a+(o+8)>>2]|0;do if(b)if(b>>>0<c>>>0)Ma();else{k[p+16>>2]=b;k[b+24>>2]=p;break}while(0);b=k[a+(o+12)>>2]|0;if(b)if(b>>>0<(k[100]|0)>>>0)Ma();else{k[p+20>>2]=b;k[b+24>>2]=p;break}}}else{d=k[a+o>>2]|0;c=k[a+(o|4)>>2]|0;b=424+(e<<1<<2)|0;if((d|0)!=(b|0)){if(d>>>0<(k[100]|0)>>>0)Ma();if((k[d+12>>2]|0)!=(q|0))Ma()}if((c|0)==(d|0)){k[96]=k[96]&~(1<<e);break}if((c|0)!=(b|0)){if(c>>>0<(k[100]|0)>>>0)Ma();b=c+8|0;if((k[b>>2]|0)==(q|0))n=b;else Ma()}else n=c+8|0;k[d+12>>2]=c;k[n>>2]=d}while(0);k[u+4>>2]=f|1;k[u+f>>2]=f;if((u|0)==(k[101]|0)){k[98]=f;return}}else{k[b>>2]=c&-2;k[u+4>>2]=f|1;k[u+f>>2]=f}b=f>>>3;if(f>>>0<256){c=b<<1;e=424+(c<<2)|0;d=k[96]|0;b=1<<b;if(d&b){b=424+(c+2<<2)|0;c=k[b>>2]|0;if(c>>>0<(k[100]|0)>>>0)Ma();else{r=b;s=c}}else{k[96]=d|b;r=424+(c+2<<2)|0;s=e}k[r>>2]=u;k[s+12>>2]=u;k[u+8>>2]=s;k[u+12>>2]=e;return}b=f>>>8;if(b)if(f>>>0>16777215)e=31;else{r=(b+1048320|0)>>>16&8;s=b<<r;q=(s+520192|0)>>>16&4;s=s<<q;e=(s+245760|0)>>>16&2;e=14-(q|r|e)+(s<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}else e=0;b=688+(e<<2)|0;k[u+28>>2]=e;k[u+20>>2]=0;k[u+16>>2]=0;c=k[97]|0;d=1<<e;a:do if(c&d){b=k[b>>2]|0;b:do if((k[b+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;c=k[d>>2]|0;if(!c)break;if((k[c+4>>2]&-8|0)==(f|0)){t=c;break b}else{e=e<<1;b=c}}if(d>>>0<(k[100]|0)>>>0)Ma();else{k[d>>2]=u;k[u+24>>2]=b;k[u+12>>2]=u;k[u+8>>2]=u;break a}}else t=b;while(0);b=t+8|0;c=k[b>>2]|0;s=k[100]|0;if(c>>>0>=s>>>0&t>>>0>=s>>>0){k[c+12>>2]=u;k[b>>2]=u;k[u+8>>2]=c;k[u+12>>2]=t;k[u+24>>2]=0;break}else Ma()}else{k[97]=c|d;k[b>>2]=u;k[u+24>>2]=b;k[u+12>>2]=u;k[u+8>>2]=u}while(0);u=(k[104]|0)+-1|0;k[104]=u;if(!u)b=840;else return;while(1){b=k[b>>2]|0;if(!b)break;else b=b+8|0}k[104]=-1;return}function ae(){}function be(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (L=d,a-c>>>0|0)|0}function ce(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=a+c|0;if((c|0)>=20){b=b&255;f=a&3;g=b|b<<8|b<<16|b<<24;e=d&~3;if(f){f=a+4-f|0;while((a|0)<(f|0)){i[a>>0]=b;a=a+1|0}}while((a|0)<(e|0)){k[a>>2]=g;a=a+4|0}}while((a|0)<(d|0)){i[a>>0]=b;a=a+1|0}return a-c|0}function de(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){L=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}L=0;return b>>>c-32|0}function ee(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){L=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}L=a<<c-32;return 0}function fe(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((c|0)>=4096)return Ca(a|0,b|0,c|0)|0;d=a|0;if((a&3)==(b&3)){while(a&3){if(!c)return d|0;i[a>>0]=i[b>>0]|0;a=a+1|0;b=b+1|0;c=c-1|0}while((c|0)>=4){k[a>>2]=k[b>>2];a=a+4|0;b=b+4|0;c=c-4|0}}while((c|0)>0){i[a>>0]=i[b>>0]|0;a=a+1|0;b=b+1|0;c=c-1|0}return d|0}function ge(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return (L=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function he(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((b|0)<(a|0)&(a|0)<(b+c|0)){d=a;b=b+c|0;a=a+c|0;while((c|0)>0){a=a-1|0;b=b-1|0;c=c-1|0;i[a>>0]=i[b>>0]|0}a=d}else fe(a,b,c)|0;return a|0}function ie(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){L=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}L=(b|0)<0?-1:0;return b>>c-32|0}function je(a){a=a|0;var b=0;b=i[v+(a&255)>>0]|0;if((b|0)<8)return b|0;b=i[v+(a>>8&255)>>0]|0;if((b|0)<8)return b+8|0;b=i[v+(a>>16&255)>>0]|0;if((b|0)<8)return b+16|0;return (i[v+(a>>>24)>>0]|0)+24|0}function ke(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=ha(e,f)|0;d=a>>>16;a=(c>>>16)+(ha(e,d)|0)|0;e=b>>>16;b=ha(e,f)|0;return (L=(a>>>16)+(ha(e,d)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|c&65535|0)|0}function le(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=be(j^a,i^b,j,i)|0;g=L;a=f^j;b=e^i;return be((qe(h,g,be(f^c,e^d,f,e)|0,L,0)|0)^a,L^b,a,b)|0}function me(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=r;r=r+16|0;h=e|0;g=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;j=d>>31|((d|0)<0?-1:0)<<1;i=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;a=be(g^a,f^b,g,f)|0;b=L;qe(a,b,be(j^c,i^d,j,i)|0,L,h)|0;d=be(k[h>>2]^g,k[h+4>>2]^f,g,f)|0;c=L;r=e;return (L=c,d)|0}function ne(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=ke(e,f)|0;a=L;return (L=(ha(b,f)|0)+(ha(d,e)|0)+a|a&0,c|0|0)|0}function oe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return qe(a,b,c,d,0)|0}function pe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;f=r;r=r+16|0;e=f|0;qe(a,b,c,d,e)|0;r=f;return (L=k[e+4>>2]|0,k[e>>2]|0)|0}function qe(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;l=a;i=b;j=i;g=c;n=d;h=n;if(!j){f=(e|0)!=0;if(!h){if(f){k[e>>2]=(l>>>0)%(g>>>0);k[e+4>>2]=0}n=0;e=(l>>>0)/(g>>>0)>>>0;return (L=n,e)|0}else{if(!f){n=0;e=0;return (L=n,e)|0}k[e>>2]=a|0;k[e+4>>2]=b&0;n=0;e=0;return (L=n,e)|0}}f=(h|0)==0;do if(g){if(!f){f=(ja(h|0)|0)-(ja(j|0)|0)|0;if(f>>>0<=31){m=f+1|0;h=31-f|0;b=f-31>>31;g=m;a=l>>>(m>>>0)&b|j<<h;b=j>>>(m>>>0)&b;f=0;h=l<<h;break}if(!e){n=0;e=0;return (L=n,e)|0}k[e>>2]=a|0;k[e+4>>2]=i|b&0;n=0;e=0;return (L=n,e)|0}f=g-1|0;if(f&g){h=(ja(g|0)|0)+33-(ja(j|0)|0)|0;p=64-h|0;m=32-h|0;i=m>>31;o=h-32|0;b=o>>31;g=h;a=m-1>>31&j>>>(o>>>0)|(j<<m|l>>>(h>>>0))&b;b=b&j>>>(h>>>0);f=l<<p&i;h=(j<<p|l>>>(o>>>0))&i|l<<m&h-33>>31;break}if(e){k[e>>2]=f&l;k[e+4>>2]=0}if((g|0)==1){o=i|b&0;p=a|0|0;return (L=o,p)|0}else{p=je(g|0)|0;o=j>>>(p>>>0)|0;p=j<<32-p|l>>>(p>>>0)|0;return (L=o,p)|0}}else{if(f){if(e){k[e>>2]=(j>>>0)%(g>>>0);k[e+4>>2]=0}o=0;p=(j>>>0)/(g>>>0)>>>0;return (L=o,p)|0}if(!l){if(e){k[e>>2]=0;k[e+4>>2]=(j>>>0)%(h>>>0)}o=0;p=(j>>>0)/(h>>>0)>>>0;return (L=o,p)|0}f=h-1|0;if(!(f&h)){if(e){k[e>>2]=a|0;k[e+4>>2]=f&j|b&0}o=0;p=j>>>((je(h|0)|0)>>>0);return (L=o,p)|0}f=(ja(h|0)|0)-(ja(j|0)|0)|0;if(f>>>0<=30){b=f+1|0;h=31-f|0;g=b;a=j<<h|l>>>(b>>>0);b=j>>>(b>>>0);f=0;h=l<<h;break}if(!e){o=0;p=0;return (L=o,p)|0}k[e>>2]=a|0;k[e+4>>2]=i|b&0;o=0;p=0;return (L=o,p)|0}while(0);if(!g){j=h;i=0;h=0}else{m=c|0|0;l=n|d&0;j=ge(m|0,l|0,-1,-1)|0;c=L;i=h;h=0;do{d=i;i=f>>>31|i<<1;f=h|f<<1;d=a<<1|d>>>31|0;n=a>>>31|b<<1|0;be(j,c,d,n)|0;p=L;o=p>>31|((p|0)<0?-1:0)<<1;h=o&1;a=be(d,n,o&m,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l)|0;b=L;g=g-1|0}while((g|0)!=0);j=i;i=0}g=0;if(e){k[e>>2]=a;k[e+4>>2]=b}o=(f|0)>>>31|(j|g)<<1|(g<<1|f>>>31)&0|i;p=(f<<1|0>>>31)&-2|h;return (L=o,p)|0}function re(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Ta[a&7](b|0,c|0,d|0)|0}function se(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Ua[a&3](b|0,c|0,d|0,e|0,f|0)}function te(a,b){a=a|0;b=b|0;Va[a&15](b|0)}function ue(a,b){a=a|0;b=b|0;return Wa[a&3](b|0)|0}function ve(a){a=a|0;Xa[a&0]()}function we(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Ya[a&3](b|0,c|0,d|0,e|0,f|0,g|0)}function xe(a,b,c){a=a|0;b=b|0;c=c|0;return Za[a&7](b|0,c|0)|0}function ye(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;_a[a&3](b|0,c|0,d|0,e|0)}function ze(a,b,c){a=a|0;b=b|0;c=c|0;ka(0);return 0}function Ae(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ka(1)}function Be(a){a=a|0;ka(2)}function Ce(a){a=a|0;ka(3);return 0}function De(){ka(4)}function Ee(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ka(5)}function Fe(a,b){a=a|0;b=b|0;ka(6);return 0}function Ge(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ka(7)}\\r\\nfunction Qb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;T=b;a:while(1){u=T;v=T+-20|0;w=T+-40|0;Q=T+-16|0;P=T+-12|0;R=T+-4|0;S=T+-8|0;X=a;b:while(1){s=X;a=u-s|0;switch((a|0)/20|0|0){case 2:{t=4;break a}case 3:{t=23;break a}case 4:{t=24;break a}case 5:{t=25;break a}case 1:case 0:{t=262;break a}default:{}}if((a|0)<140){t=27;break a}h=(a|0)/40|0;j=X+(h*20|0)|0;if((a|0)>19980){a=(a|0)/80|0;a=bc(X,X+(a*20|0)|0,j,X+((a+h|0)*20|0)|0,v)|0}else a=$b(X,j,v)|0;q=k[X>>2]|0;b=k[j>>2]|0;c:do if((q|0)<(b|0))e=v;else{e=(q|0)==(b|0);if(e?(k[X+4>>2]|0)<(k[X+(h*20|0)+4>>2]|0):0){e=v;break}do if((b|0)>=(q|0)){if(e?(x=k[X+(h*20|0)+4>>2]|0,y=k[X+4>>2]|0,(x|0)<(y|0)):0){e=x;f=y;t=82}else{g=k[X+8>>2]|0;f=k[X+(h*20|0)+8>>2]|0;if((g|0)<(f|0)){e=v;break c}if((g|0)==(f|0)?(k[X+12>>2]|0)<(k[X+(h*20|0)+12>>2]|0):0){e=v;break c}if(e){e=k[X+(h*20|0)+4>>2]|0;f=k[X+4>>2]|0;t=82}else{e=g;t=85}}if((t|0)==82){t=0;if((e|0)<(f|0))break;if((f|0)>=(e|0)){f=k[X+(h*20|0)+8>>2]|0;e=k[X+8>>2]|0;t=85}}if((t|0)==85){if((f|0)<(e|0))break;if((f|0)==(e|0)?(k[X+(h*20|0)+12>>2]|0)<(k[X+12>>2]|0):0)break}if((k[X+16>>2]|0)<(k[X+(h*20|0)+16>>2]|0)){e=v;break c}}while(0);d:do if((X|0)!=(w|0)){o=X+(h*20|0)+4|0;n=X+(h*20|0)+8|0;p=X+(h*20|0)+16|0;l=X+(h*20|0)+12|0;e=w;m=v;e:while(1){i=k[e>>2]|0;if((i|0)<(b|0)){b=i;break}f=(i|0)==(b|0);if(f?(k[m+-16>>2]|0)<(k[o>>2]|0):0)break;do if((b|0)>=(i|0)){if(f?(H=k[o>>2]|0,I=k[m+-16>>2]|0,(H|0)<(I|0)):0){f=H;g=I;t=184}else{h=k[m+-12>>2]|0;g=k[n>>2]|0;if((h|0)<(g|0)){b=i;break e}if((h|0)==(g|0)?(k[m+-8>>2]|0)<(k[l>>2]|0):0){b=i;break e}if(f){f=k[o>>2]|0;g=k[m+-16>>2]|0;t=184}else{f=h;t=187}}if((t|0)==184){t=0;if((f|0)<(g|0))break;if((g|0)>=(f|0)){g=k[n>>2]|0;f=k[m+-12>>2]|0;t=187}}if((t|0)==187){if((g|0)<(f|0))break;if((g|0)==(f|0)?(k[l>>2]|0)<(k[m+-8>>2]|0):0)break}if((k[m+-4>>2]|0)<(k[p>>2]|0)){b=i;break e}}while(0);f=e+-20|0;if((X|0)==(f|0))break d;else{m=e;e=f}}t=X+4|0;o=k[t>>2]|0;k[X>>2]=b;p=m+-16|0;k[t>>2]=k[p>>2];k[e>>2]=q;k[p>>2]=o;q=X+8|0;p=k[q>>2]|0;o=X+12|0;t=k[o>>2]|0;r=m+-12|0;k[q>>2]=k[r>>2];q=m+-8|0;k[o>>2]=k[q>>2];k[r>>2]=p;k[q>>2]=t;q=X+16|0;t=m+-4|0;r=k[q>>2]|0;k[q>>2]=k[t>>2];k[t>>2]=r;a=a+1|0;break c}while(0);a=X+20|0;o=k[v>>2]|0;f:do if((q|0)>=(o|0)){b=(q|0)==(o|0);if(b?(k[X+4>>2]|0)<(k[Q>>2]|0):0)break;do if((o|0)>=(q|0)){if(b?(z=k[Q>>2]|0,A=k[X+4>>2]|0,(z|0)<(A|0)):0){b=z;e=A;t=102}else{f=k[X+8>>2]|0;e=k[P>>2]|0;if((f|0)<(e|0))break f;if((f|0)==(e|0)?(k[X+12>>2]|0)<(k[S>>2]|0):0)break f;if(b){b=k[Q>>2]|0;e=k[X+4>>2]|0;t=102}else{b=f;t=105}}if((t|0)==102){t=0;if((b|0)<(e|0))break;if((e|0)>=(b|0)){e=k[P>>2]|0;b=k[X+8>>2]|0;t=105}}if((t|0)==105){if((e|0)<(b|0))break;if((e|0)==(b|0)?(k[S>>2]|0)<(k[X+12>>2]|0):0)break}if((k[X+16>>2]|0)<(k[R>>2]|0))break f}while(0);if((a|0)==(v|0)){t=262;break a}j=X+4|0;i=X+8|0;l=X+16|0;m=X+12|0;n=X;h=a;g:while(1){g=n+20|0;a=k[g>>2]|0;if((q|0)<(a|0))break;f=(q|0)==(a|0);if(f?(k[j>>2]|0)<(k[n+24>>2]|0):0){a=q;break}h:do if((a|0)>=(q|0)){if(f?(B=k[n+24>>2]|0,C=k[j>>2]|0,(B|0)<(C|0)):0){b=B;e=C;t=122}else t=117;do if((t|0)==117){e=k[i>>2]|0;b=k[n+28>>2]|0;if((e|0)<(b|0))break g;if((e|0)==(b|0)?(k[m>>2]|0)<(k[n+32>>2]|0):0)break g;if(!f){t=125;break}b=k[n+24>>2]|0;e=k[j>>2]|0;t=122}while(0);do if((t|0)==122){t=0;if((b|0)<(e|0))break h;if((e|0)<(b|0))break;b=k[n+28>>2]|0;e=k[i>>2]|0;t=125}while(0);do if((t|0)==125){if((b|0)<(e|0))break h;if((b|0)!=(e|0))break;if((k[n+32>>2]|0)<(k[m>>2]|0))break h}while(0);if((k[l>>2]|0)<(k[n+36>>2]|0))break g}while(0);a=h+20|0;if((a|0)==(v|0)){t=262;break a}else{n=h;h=a}}s=n+24|0;r=k[s>>2]|0;k[g>>2]=o;k[s>>2]=k[Q>>2];k[v>>2]=a;k[Q>>2]=r;r=n+28|0;a=k[r>>2]|0;s=n+32|0;t=k[s>>2]|0;k[r>>2]=k[P>>2];k[s>>2]=k[S>>2];k[P>>2]=a;k[S>>2]=t;t=n+36|0;a=k[t>>2]|0;k[t>>2]=k[R>>2];k[R>>2]=a;a=n+40|0}while(0);if((a|0)==(v|0)){t=262;break a}o=X+4|0;p=X+12|0;n=X+8|0;q=X+16|0;h=v;while(1){m=k[X>>2]|0;b=k[a>>2]|0;i:do if((m|0)<(b|0)){l=a;j=a}else while(1){g=(m|0)==(b|0);if(g?(k[o>>2]|0)<(k[a+4>>2]|0):0){l=a;b=m;j=a;break i}j:do if((b|0)>=(m|0)){if(g?(D=k[a+4>>2]|0,E=k[o>>2]|0,(D|0)<(E|0)):0){e=D;f=E;t=145}else t=140;do if((t|0)==140){f=k[n>>2]|0;e=k[a+8>>2]|0;if((f|0)<(e|0)){l=a;j=a;break i}if((f|0)==(e|0)?(k[p>>2]|0)<(k[a+12>>2]|0):0){l=a;j=a;break i}if(!g){t=148;break}e=k[a+4>>2]|0;f=k[o>>2]|0;t=145}while(0);do if((t|0)==145){t=0;if((e|0)<(f|0))break j;if((f|0)<(e|0))break;e=k[a+8>>2]|0;f=k[n>>2]|0;t=148}while(0);do if((t|0)==148){if((e|0)<(f|0))break j;if((e|0)!=(f|0))break;if((k[a+12>>2]|0)<(k[p>>2]|0))break j}while(0);if((k[q>>2]|0)<(k[a+16>>2]|0)){l=a;j=a;break i}}while(0);a=a+20|0;b=k[a>>2]|0;if((m|0)<(b|0)){l=a;j=a;break}}while(0);k:while(1){i=h+-20|0;g=k[i>>2]|0;if((m|0)<(g|0)){h=i;continue}f=(m|0)==(g|0);if(f?(k[o>>2]|0)<(k[h+-16>>2]|0):0){h=i;continue}if((g|0)<(m|0))break;if(f?(F=k[h+-16>>2]|0,G=k[o>>2]|0,(F|0)<(G|0)):0){a=F;e=G;t=164}else t=159;do if((t|0)==159){e=k[n>>2]|0;a=k[h+-12>>2]|0;if((e|0)<(a|0)){h=i;continue k}if((e|0)==(a|0)?(k[p>>2]|0)<(k[h+-8>>2]|0):0){h=i;continue k}if(!f){t=167;break}a=k[h+-16>>2]|0;e=k[o>>2]|0;t=164}while(0);do if((t|0)==164){t=0;if((a|0)<(e|0))break k;if((e|0)<(a|0))break;a=k[h+-12>>2]|0;e=k[n>>2]|0;t=167}while(0);do if((t|0)==167){if((a|0)<(e|0))break k;if((a|0)!=(e|0))break;if((k[h+-8>>2]|0)<(k[p>>2]|0))break k}while(0);if((k[q>>2]|0)<(k[h+-4>>2]|0))h=i;else break}if(j>>>0>=i>>>0){X=j;continue b}m=j+4|0;r=k[m>>2]|0;k[l>>2]=g;t=h+-16|0;k[m>>2]=k[t>>2];k[i>>2]=b;k[t>>2]=r;t=j+8|0;r=k[t>>2]|0;m=j+12|0;a=k[m>>2]|0;s=h+-12|0;k[t>>2]=k[s>>2];t=h+-8|0;k[m>>2]=k[t>>2];k[s>>2]=r;k[t>>2]=a;t=j+16|0;a=h+-4|0;h=k[t>>2]|0;k[t>>2]=k[a>>2];k[a>>2]=h;a=j+20|0;h=i}}while(0);b=X+20|0;l:do if(b>>>0<e>>>0)while(1){m=j+12|0;p=k[j>>2]|0;n=j+4|0;l=j+8|0;o=j+16|0;r=b;m:while(1){q=k[r>>2]|0;do if((q|0)>=(p|0)){b=(q|0)==(p|0);if(b?(k[r+4>>2]|0)<(k[n>>2]|0):0)break;if((p|0)<(q|0))break m;if(b?(J=k[n>>2]|0,K=k[r+4>>2]|0,(J|0)<(K|0)):0){b=J;f=K;t=207}else{g=k[r+8>>2]|0;f=k[l>>2]|0;if((g|0)<(f|0))break;if((g|0)==(f|0)?(k[r+12>>2]|0)<(k[m>>2]|0):0)break;if(b){b=k[n>>2]|0;f=k[r+4>>2]|0;t=207}else{b=g;t=210}}if((t|0)==207){t=0;if((b|0)<(f|0))break m;if((f|0)>=(b|0)){f=k[l>>2]|0;b=k[r+8>>2]|0;t=210}}if((t|0)==210){if((f|0)<(b|0))break m;if((f|0)==(b|0)?(k[m>>2]|0)<(k[r+12>>2]|0):0)break m}if((k[r+16>>2]|0)>=(k[o>>2]|0))break m}while(0);r=r+20|0}f=e+-20|0;b=k[f>>2]|0;n:do if((b|0)<(p|0)){h=f;g=f}else while(1){g=(b|0)==(p|0);if(g?(k[e+-16>>2]|0)<(k[n>>2]|0):0){h=f;g=f;b=p;break n}do if((p|0)>=(b|0)){if(g?(L=k[n>>2]|0,M=k[e+-16>>2]|0,(L|0)<(M|0)):0){g=L;h=M;t=225}else{i=k[e+-12>>2]|0;h=k[l>>2]|0;if((i|0)<(h|0)){h=f;g=f;break n}if((i|0)==(h|0)?(k[e+-8>>2]|0)<(k[m>>2]|0):0){h=f;g=f;break n}if(g){g=k[n>>2]|0;h=k[e+-16>>2]|0;t=225}else{g=i;t=228}}if((t|0)==225){t=0;if((g|0)<(h|0))break;if((h|0)>=(g|0)){h=k[l>>2]|0;g=k[e+-12>>2]|0;t=228}}if((t|0)==228){if((h|0)<(g|0))break;if((h|0)==(g|0)?(k[m>>2]|0)<(k[e+-8>>2]|0):0)break}if((k[e+-4>>2]|0)<(k[o>>2]|0)){h=f;g=f;break n}}while(0);e=f+-20|0;b=k[e>>2]|0;if((b|0)<(p|0)){h=e;g=e;e=f;break}else{t=f;f=e;e=t}}while(0);if(r>>>0>h>>>0){b=r;break l}o=r+4|0;p=k[o>>2]|0;k[r>>2]=b;t=e+-16|0;k[o>>2]=k[t>>2];k[g>>2]=q;k[t>>2]=p;t=r+8|0;p=k[t>>2]|0;o=r+12|0;b=k[o>>2]|0;q=e+-12|0;k[t>>2]=k[q>>2];t=e+-8|0;k[o>>2]=k[t>>2];k[q>>2]=p;k[t>>2]=b;t=r+16|0;b=e+-4|0;e=k[t>>2]|0;k[t>>2]=k[b>>2];k[b>>2]=e;b=r+20|0;e=h;j=(j|0)==(r|0)?h:j;a=a+1|0}while(0);o:do if((b|0)!=(j|0)){h=k[j>>2]|0;i=k[b>>2]|0;do if((h|0)>=(i|0)){e=(h|0)==(i|0);if(e?(k[j+4>>2]|0)<(k[b+4>>2]|0):0)break;if((i|0)<(h|0))break o;if(e?(N=k[b+4>>2]|0,O=k[j+4>>2]|0,(N|0)<(O|0)):0){e=N;f=O;t=247}else{g=k[j+8>>2]|0;f=k[b+8>>2]|0;if((g|0)<(f|0))break;if((g|0)==(f|0)?(k[j+12>>2]|0)<(k[b+12>>2]|0):0)break;if(e){e=k[b+4>>2]|0;f=k[j+4>>2]|0;t=247}else{e=g;t=250}}if((t|0)==247){t=0;if((e|0)<(f|0))break o;if((f|0)>=(e|0)){f=k[b+8>>2]|0;e=k[j+8>>2]|0;t=250}}if((t|0)==250){if((f|0)<(e|0))break o;if((f|0)==(e|0)?(k[b+12>>2]|0)<(k[j+12>>2]|0):0)break o}if((k[j+16>>2]|0)>=(k[b+16>>2]|0))break o}while(0);o=b+4|0;p=k[o>>2]|0;k[b>>2]=h;q=j+4|0;k[o>>2]=k[q>>2];k[j>>2]=i;k[q>>2]=p;q=b+8|0;p=k[q>>2]|0;o=b+12|0;t=k[o>>2]|0;r=j+8|0;k[q>>2]=k[r>>2];q=j+12|0;k[o>>2]=k[q>>2];k[r>>2]=p;k[q>>2]=t;q=b+16|0;t=j+16|0;r=k[q>>2]|0;k[q>>2]=k[t>>2];k[t>>2]=r;a=a+1|0}while(0);if(!a){e=cc(X,b)|0;a=b+20|0;if(cc(a,T)|0){t=257;break}if(e){X=a;continue}}t=b;if((t-s|0)>=(u-t|0)){t=261;break}Qb(X,b);X=b+20|0}if((t|0)==257)if(e){t=262;break}else{a=X;T=b;continue}else if((t|0)==261){Qb(b+20|0,T);a=X;T=b;continue}}if((t|0)==4){f=T+-20|0;b=k[f>>2]|0;e=k[X>>2]|0;do if((b|0)>=(e|0)){a=(b|0)==(e|0);if(a?(k[Q>>2]|0)<(k[X+4>>2]|0):0)break;if((e|0)<(b|0))return;if(a?(d=k[X+4>>2]|0,c=k[Q>>2]|0,(d|0)<(c|0)):0)t=15;else{d=k[P>>2]|0;c=k[X+8>>2]|0;if((d|0)<(c|0))break;if((d|0)==(c|0)?(k[S>>2]|0)<(k[X+12>>2]|0):0)break;if(a){d=k[X+4>>2]|0;c=k[Q>>2]|0;t=15}else t=18}if((t|0)==15){if((d|0)<(c|0))return;if((c|0)>=(d|0)){c=k[X+8>>2]|0;d=k[P>>2]|0;t=18}}if((t|0)==18){if((c|0)<(d|0))return;if((c|0)==(d|0)?(k[X+12>>2]|0)<(k[S>>2]|0):0)return}if((k[R>>2]|0)>=(k[X+16>>2]|0))return}while(0);V=X+4|0;T=k[V>>2]|0;k[X>>2]=b;k[V>>2]=k[Q>>2];k[f>>2]=e;k[Q>>2]=T;T=X+8|0;V=k[T>>2]|0;U=X+12|0;W=k[U>>2]|0;k[T>>2]=k[P>>2];k[U>>2]=k[S>>2];k[P>>2]=V;k[S>>2]=W;W=X+16|0;X=k[W>>2]|0;k[W>>2]=k[R>>2];k[R>>2]=X;return}else if((t|0)==23){$b(X,X+20|0,v)|0;return}else if((t|0)==24){ac(X,X+20|0,X+40|0,v)|0;return}else if((t|0)==25){bc(X,X+20|0,X+40|0,X+60|0,v)|0;return}else if((t|0)==27){d=X+40|0;$b(X,X+20|0,d)|0;c=X+60|0;if((c|0)==(T|0))return;else p=c;while(1){o=k[p>>2]|0;e=k[d>>2]|0;do if((o|0)>=(e|0)){b=(o|0)==(e|0);if(b?(k[p+4>>2]|0)<(k[d+4>>2]|0):0){t=46;break}if((e|0)>=(o|0)){if(b?(V=k[d+4>>2]|0,W=k[p+4>>2]|0,(V|0)<(W|0)):0){c=V;a=W;t=39}else{c=k[p+8>>2]|0;a=k[d+8>>2]|0;if((c|0)<(a|0)){t=46;break}if((c|0)==(a|0)?(k[p+12>>2]|0)<(k[d+12>>2]|0):0){t=46;break}if(b){c=k[d+4>>2]|0;a=k[p+4>>2]|0;t=39}else t=42}if((t|0)==39){t=0;if((c|0)<(a|0))break;if((a|0)>=(c|0)){a=k[d+8>>2]|0;c=k[p+8>>2]|0;t=42}}if((t|0)==42){t=0;if((a|0)<(c|0))break;if((a|0)==(c|0)?(k[d+12>>2]|0)<(k[p+12>>2]|0):0)break}if((k[p+16>>2]|0)<(k[d+16>>2]|0))t=46}}else t=46;while(0);if((t|0)==46){t=0;R=p+4|0;j=k[R>>2]|0;a=p+8|0;l=k[a>>2]|0;c=p+12|0;m=k[c>>2]|0;S=p+16|0;n=k[S>>2]|0;k[p>>2]=e;b=d+4|0;k[R>>2]=k[b>>2];e=d+8|0;k[a>>2]=k[e>>2];a=d+12|0;k[c>>2]=k[a>>2];c=d+16|0;k[S>>2]=k[c>>2];p:do if((d|0)!=(X|0)){i=d;h=e;g=b;while(1){d=i+-20|0;f=k[d>>2]|0;do if((o|0)>=(f|0)){e=(o|0)==(f|0);if(e?(j|0)<(k[i+-16>>2]|0):0)break;if((f|0)<(o|0)){d=i;b=g;e=h;break p}if(e?(U=k[i+-16>>2]|0,(U|0)<(j|0)):0){b=U;t=58}else{b=k[i+-12>>2]|0;if((l|0)<(b|0))break;if((l|0)==(b|0)?(m|0)<(k[i+-8>>2]|0):0)break;if(e){b=k[i+-16>>2]|0;t=58}else t=61}if((t|0)==58){t=0;if((b|0)<(j|0)){d=i;b=g;e=h;break p}if((j|0)>=(b|0)){b=k[i+-12>>2]|0;t=61}}if((t|0)==61){t=0;if((b|0)<(l|0)){d=i;b=g;e=h;break p}if((b|0)==(l|0)?(k[i+-8>>2]|0)<(m|0):0){d=i;b=g;e=h;break p}}if((n|0)>=(k[i+-4>>2]|0)){d=i;b=g;e=h;break p}}while(0);k[i>>2]=f;b=i+-16|0;k[i+4>>2]=k[b>>2];e=i+-12|0;k[i+8>>2]=k[e>>2];a=i+-8|0;k[i+12>>2]=k[a>>2];c=i+-4|0;k[i+16>>2]=k[c>>2];if((d|0)==(X|0))break;else{i=d;h=e;g=b}}}while(0);k[d>>2]=o;k[b>>2]=j;k[e>>2]=l;k[a>>2]=m;k[c>>2]=n}c=p+20|0;if((c|0)==(T|0))break;else{d=p;p=c}}return}else if((t|0)==262)return}function Rb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;m=a+4|0;e=k[m>>2]|0;n=k[a>>2]|0;j=n;l=e-j>>3;i=l+1|0;if(i>>>0>536870911)xa(1340,1363,303,1438);o=a+8|0;c=(k[o>>2]|0)-j|0;if(c>>3>>>0<268435455){c=c>>2;c=c>>>0<i>>>0?i:c;if(!c){f=0;d=0}else g=5}else{c=536870911;g=5}if((g|0)==5){f=c<<3;f=(f|0)==0?1:f;d=_d(f)|0;a:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(f)|0;if(d)break a}a=ya(4)|0;k[a>>2]=128;La(a|0,8,1)}while(0);f=c}c=d+(l<<3)|0;h=d+(f<<3)|0;k[c>>2]=k[b>>2];k[d+(l<<3)+4>>2]=k[b+4>>2];g=d+(i<<3)|0;if((e|0)!=(n|0)){f=e+-8|0;while(1){b=e;e=e+-8|0;k[c+-8>>2]=k[e>>2];k[c+-4>>2]=k[b+-4>>2];if((e|0)==(n|0))break;else c=c+-8|0}c=d+(l+~((f-j|0)>>>3)<<3)|0}k[a>>2]=c;k[m>>2]=g;k[o>>2]=h;if(!n)return;$d(n);return}function Sb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;A=k[a>>2]|0;D=k[a+8>>2]|0;E=k[a+4>>2]|0;F=k[a+12>>2]|0;i=(A|0)>(D|0);e=i?D:A;i=i?A:D;g=(E|0)>(F|0);c=g?F:E;g=g?E:F;z=k[b>>2]|0;B=k[b+8>>2]|0;y=k[b+4>>2]|0;C=k[b+12>>2]|0;j=(z|0)>(B|0);f=j?B:z;j=j?z:B;h=(y|0)>(C|0);d=h?C:y;h=h?y:C;l=(i|0)>(f|0)&(e|0)<(j|0);if(l?(c|0)<(h|0)&(g|0)>(d|0):0){h=(A|0)==(z|0);if(h&(E|0)==(y|0)){if((!((D|0)==(B|0)&(F|0)==(C|0))?(p=((E|0)<0)<<31>>31,a=be(C|0,((C|0)<0)<<31>>31|0,E|0,p|0)|0,C=L,p=be(F|0,((F|0)<0)<<31>>31|0,E|0,p|0)|0,o=L,E=((A|0)<0)<<31>>31,r=be(B|0,((B|0)<0)<<31>>31|0,A|0,E|0)|0,B=L,D=be(D|0,((D|0)<0)<<31>>31|0,A|0,E|0)|0,E=L,m=(B|0)<0,F=be(0,0,r|0,B|0)|0,B=m?L:B,n=(o|0)<0,q=be(0,0,p|0,o|0)|0,o=ne((m?F:r)|0,B|0,(n?q:p)|0,(n?L:o)|0)|0,p=L,q=(E|0)<0,B=be(0,0,D|0,E|0)|0,E=q?L:E,r=(C|0)<0,F=be(0,0,a|0,C|0)|0,F=ne((q?B:D)|0,E|0,(r?F:a)|0,(r?L:C)|0)|0,(o|0)==(F|0)&(p|0)==(L|0)):0)?(F=ha(q?-1:1,r?-1:1)|0,(o|0)==0&(p|0)==0|(ha(m?-1:1,n?-1:1)|0)==(F|0)):0){F=1;return F|0}F=0;return F|0}g=(A|0)==(B|0);f=(D|0)==(z|0);c=f&(F|0)==(y|0);if(g&(E|0)==(C|0)){if((!c?(v=((E|0)<0)<<31>>31,B=be(y|0,((y|0)<0)<<31>>31|0,E|0,v|0)|0,C=L,v=be(F|0,((F|0)<0)<<31>>31|0,E|0,v|0)|0,u=L,E=((A|0)<0)<<31>>31,x=be(z|0,((z|0)<0)<<31>>31|0,A|0,E|0)|0,t=L,D=be(D|0,((D|0)<0)<<31>>31|0,A|0,E|0)|0,E=L,s=(t|0)<0,F=be(0,0,x|0,t|0)|0,A=s?L:t,t=(u|0)<0,w=be(0,0,v|0,u|0)|0,u=ne((s?F:x)|0,A|0,(t?w:v)|0,(t?L:u)|0)|0,v=L,w=(E|0)<0,A=be(0,0,D|0,E|0)|0,E=w?L:E,x=(C|0)<0,F=be(0,0,B|0,C|0)|0,F=ne((w?A:D)|0,E|0,(x?F:B)|0,(x?L:C)|0)|0,(u|0)==(F|0)&(v|0)==(L|0)):0)?(F=ha(w?-1:1,x?-1:1)|0,(u|0)==0&(v|0)==0|(ha(s?-1:1,t?-1:1)|0)==(F|0)):0){F=1;return F|0}F=0;return F|0}if(c){f=((F|0)<0)<<31>>31;a=be(C|0,((C|0)<0)<<31>>31|0,F|0,f|0)|0;C=L;f=be(E|0,((E|0)<0)<<31>>31|0,F|0,f|0)|0;e=L;E=((D|0)<0)<<31>>31;h=be(B|0,((B|0)<0)<<31>>31|0,D|0,E|0)|0;B=L;D=be(A|0,((A|0)<0)<<31>>31|0,D|0,E|0)|0;E=L;c=(B|0)<0;F=be(0,0,h|0,B|0)|0;B=c?L:B;d=(e|0)<0;g=be(0,0,f|0,e|0)|0;e=ne((c?F:h)|0,B|0,(d?g:f)|0,(d?L:e)|0)|0;f=L;g=(E|0)<0;B=be(0,0,D|0,E|0)|0;E=g?L:E;h=(C|0)<0;F=be(0,0,a|0,C|0)|0;F=ne((g?B:D)|0,E|0,(h?F:a)|0,(h?L:C)|0)|0;if((e|0)==(F|0)&(f|0)==(L|0)?(F=ha(g?-1:1,h?-1:1)|0,(e|0)==0&(f|0)==0|(ha(c?-1:1,d?-1:1)|0)==(F|0)):0){F=1;return F|0}F=0;return F|0}e=(D|0)==(B|0);if(e&(F|0)==(C|0)){f=((F|0)<0)<<31>>31;B=be(y|0,((y|0)<0)<<31>>31|0,F|0,f|0)|0;C=L;f=be(E|0,((E|0)<0)<<31>>31|0,F|0,f|0)|0;e=L;E=((D|0)<0)<<31>>31;h=be(z|0,((z|0)<0)<<31>>31|0,D|0,E|0)|0;d=L;D=be(A|0,((A|0)<0)<<31>>31|0,D|0,E|0)|0;E=L;c=(d|0)<0;F=be(0,0,h|0,d|0)|0;A=c?L:d;d=(e|0)<0;g=be(0,0,f|0,e|0)|0;e=ne((c?F:h)|0,A|0,(d?g:f)|0,(d?L:e)|0)|0;f=L;g=(E|0)<0;A=be(0,0,D|0,E|0)|0;E=g?L:E;h=(C|0)<0;F=be(0,0,B|0,C|0)|0;F=ne((g?A:D)|0,E|0,(h?F:B)|0,(h?L:C)|0)|0;if((e|0)==(F|0)&(f|0)==(L|0)?(F=ha(g?-1:1,h?-1:1)|0,(e|0)==0&(f|0)==0|(ha(c?-1:1,d?-1:1)|0)==(F|0)):0){F=1;return F|0}F=0;return F|0}d=_b(A,E,b)|0;do if(!d){if((z|0)>=(B|0)?!((z|0)==(B|0)&(y|0)<(C|0)):0){if(!((A|0)<(z|0)|h&(E|0)<(y|0)))break;if((B|0)<(A|0)|g&(C|0)<(E|0))c=1;else break;return c|0}if((A|0)<(B|0)|g&(E|0)<(C|0)?(z|0)<(A|0)|h&(y|0)<(E|0):0){F=1;return F|0}}while(0);c=_b(D,F,b)|0;do if(!c){if((z|0)>=(B|0)?!((z|0)==(B|0)&(y|0)<(C|0)):0){if(!((D|0)<(z|0)|f&(F|0)<(y|0)))break;if((B|0)<(D|0)|e&(C|0)<(F|0))c=1;else break;return c|0}if((D|0)<(B|0)|e&(F|0)<(C|0)?(z|0)<(D|0)|f&(y|0)<(F|0):0){F=1;return F|0}}while(0);if((d|0)!=0&(d|0)==(c|0)){F=0;return F|0}d=_b(z,y,a)|0;do if(!d){if((A|0)>=(D|0)?!((A|0)==(D|0)&(E|0)<(F|0)):0){if(!((z|0)<(A|0)|h&(y|0)<(E|0)))break;if((D|0)<(z|0)|f&(F|0)<(y|0))c=1;else break;return c|0}if((z|0)<(D|0)|f&(y|0)<(F|0)?(A|0)<(z|0)|h&(E|0)<(y|0):0){F=1;return F|0}}while(0);c=_b(B,C,a)|0;do if(!c){if((A|0)>=(D|0)?!((A|0)==(D|0)&(E|0)<(F|0)):0){if(!((B|0)<(A|0)|g&(C|0)<(E|0)))break;if((D|0)<(B|0)|e&(F|0)<(C|0))c=1;else break;return c|0}if((B|0)<(D|0)|e&(C|0)<(F|0)?(A|0)<(B|0)|g&(E|0)<(C|0):0){F=1;return F|0}}while(0);F=(d|0)!=(c|0);return F|0}if((A|0)==(D|0)&(z|0)==(B|0)&(A|0)==(z|0))if((g|0)>(d|0)&(c|0)<(h|0))return (g|0)!=(h|0)|(c|0)!=(d|0)|0;else{F=0;return F|0}if(!((E|0)==(F|0)&(y|0)==(C|0)&(E|0)==(y|0)&l)){F=0;return F|0}F=(i|0)!=(j|0)|(e|0)!=(f|0);return F|0}function Tb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;t=r;r=r+32|0;q=t+16|0;s=t;p=k[a>>2]|0;m=k[b+8>>2]|0;n=(p|0)==(m|0);if(n?(k[a+4>>2]|0)==(k[b+12>>2]|0):0){s=1;r=t;return s|0}o=k[b>>2]|0;l=(p|0)==(o|0);if(l){a=k[a+4>>2]|0;c=k[b+4>>2]|0;if((a|0)==(c|0)){s=1;r=t;return s|0}else j=a}else{c=k[b+4>>2]|0;j=k[a+4>>2]|0}a=k[b+12>>2]|0;h=(o|0)>(m|0);i=(c|0)>(a|0);if(!(((i?a:c)|0)<=(j|0)&((((h?m:o)|0)>(p|0)|((h?o:m)|0)<(p|0)|((i?c:a)|0)<(j|0))^1))){s=0;r=t;return s|0}if((o|0)==(m|0)|(c|0)==(a|0)){s=1;r=t;return s|0}g=((j|0)<0)<<31>>31;v=be(a|0,((a|0)<0)<<31>>31|0,j|0,g|0)|0;u=L;g=be(c|0,((c|0)<0)<<31>>31|0,j|0,g|0)|0;f=L;y=((p|0)<0)<<31>>31;i=be(m|0,((m|0)<0)<<31>>31|0,p|0,y|0)|0;z=L;y=be(o|0,((o|0)<0)<<31>>31|0,p|0,y|0)|0;x=L;d=(z|0)<0;w=be(0,0,i|0,z|0)|0;z=d?L:z;e=(f|0)<0;h=be(0,0,g|0,f|0)|0;f=ne((d?w:i)|0,z|0,(e?h:g)|0,(e?L:f)|0)|0;g=L;h=(x|0)<0;z=be(0,0,y|0,x|0)|0;x=h?L:x;i=(u|0)<0;w=be(0,0,v|0,u|0)|0;u=ne((h?z:y)|0,x|0,(i?w:v)|0,(i?L:u)|0)|0;do if((f|0)==(u|0)&(g|0)==(L|0)?(z=ha(h?-1:1,i?-1:1)|0,(f|0)==0&(g|0)==0|(ha(d?-1:1,e?-1:1)|0)==(z|0)):0)if((o|0)<(m|0)){if(!((p|0)<(m|0)|n&(j|0)<(a|0)))break;if((o|0)<(p|0)|l&(c|0)<(j|0))c=1;else break;r=t;return c|0}else{if(!((p|0)<(o|0)|l&(j|0)<(c|0)))break;if((m|0)<(p|0)|n&(a|0)<(j|0))c=1;else break;r=t;return c|0}while(0);c=j+1|0;a=p+1|0;k[q>>2]=p;k[q+4>>2]=j;k[q+8>>2]=a;k[q+12>>2]=c;if(Sb(q,b)|0?(_b(a,c,b)|0)!=0:0){z=1;r=t;return z|0}k[s>>2]=p;k[s+4>>2]=c;k[s+8>>2]=a;k[s+12>>2]=j;if((Sb(s,b)|0?(_b(p,c,b)|0)!=0:0)?(_b(a,j,b)|0)!=0:0){z=1;r=t;return z|0}z=0;r=t;return z|0}function Ub(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;m=r;r=r+16|0;j=m;d=b+4|0;e=k[d>>2]|0;do if(e){g=k[c>>2]|0;h=k[c+4>>2]|0;a:while(1){d=k[e+16>>2]|0;do if((g|0)>=(d|0)){f=(g|0)==(d|0);if(f?(h|0)<(k[e+20>>2]|0):0){l=6;break}if((d|0)>=(g|0)){if(!f){l=14;break a}if((k[e+20>>2]|0)>=(h|0)){l=14;break a}}f=e+4|0;d=k[f>>2]|0;if(!d){l=13;break a}}else l=6;while(0);if((l|0)==6){l=0;d=k[e>>2]|0;if(!d){l=7;break}}e=d}if((l|0)==7){k[j>>2]=e;f=e;g=e;break}else if((l|0)==13){k[j>>2]=e;g=e;break}else if((l|0)==14){k[j>>2]=e;f=j;g=e;break}}else{k[j>>2]=d;f=d;g=d}while(0);d=k[f>>2]|0;if(d){c=0;b=d;k[a>>2]=b;b=a+4|0;i[b>>0]=c;r=m;return}d=_d(24)|0;b:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(24)|0;if(d){e=d;break b}}m=ya(4)|0;k[m>>2]=128;La(m|0,8,1)}else e=d;while(0);k[e+16>>2]=k[c>>2];k[e+20>>2]=k[c+4>>2];k[e>>2]=0;k[e+4>>2]=0;k[e+8>>2]=g;k[f>>2]=e;d=k[k[b>>2]>>2]|0;if(!d)d=e;else{k[b>>2]=d;d=k[f>>2]|0}Nb(k[b+4>>2]|0,d);c=b+8|0;k[c>>2]=(k[c>>2]|0)+1;c=1;b=e;k[a>>2]=b;b=a+4|0;i[b>>0]=c;r=m;return}function Vb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;t=b;a:while(1){m=t;n=t+-8|0;o=t+-16|0;s=t+-4|0;y=a;b:while(1){l=y;a=m-l|0;b=a>>3;switch(b|0){case 2:{x=4;break a}case 3:{x=9;break a}case 4:{x=10;break a}case 5:{x=11;break a}case 1:case 0:{x=88;break a}default:{}}if((a|0)<56){x=13;break a}c=(b|0)/2|0;g=y+(c<<3)|0;if((a|0)>7992){a=(b|0)/4|0;a=Yb(y,y+(a<<3)|0,g,y+(a+c<<3)|0,n)|0}else a=Wb(y,g,n)|0;h=k[y>>2]|0;f=k[g>>2]|0;c:do if((h|0)<(f|0))c=n;else{if((h|0)==(f|0)?(k[y+4>>2]|0)<(k[y+(c<<3)+4>>2]|0):0){c=n;break}d:do if((y|0)!=(o|0)){e=y+(c<<3)+4|0;c=o;d=n;while(1){b=k[c>>2]|0;if((b|0)<(f|0)){x=58;break}if((b|0)==(f|0)?(p=d+-4|0,(k[p>>2]|0)<(k[e>>2]|0)):0){d=p;b=f;break}b=c+-8|0;if((y|0)==(b|0))break d;else{d=c;c=b}}if((x|0)==58){x=0;d=d+-4|0}i=y+4|0;j=k[i>>2]|0;k[y>>2]=b;k[i>>2]=k[d>>2];k[c>>2]=h;k[d>>2]=j;a=a+1|0;break c}while(0);a=y+8|0;f=k[n>>2]|0;do if((h|0)>=(f|0)){if((h|0)==(f|0)?(k[y+4>>2]|0)<(k[s>>2]|0):0)break;if((a|0)==(n|0)){x=88;break a}c=y+4|0;e=y;while(1){d=e+8|0;b=k[d>>2]|0;if((h|0)<(b|0)){x=40;break}if((h|0)==(b|0)?(q=e+12|0,r=k[q>>2]|0,(k[c>>2]|0)<(r|0)):0){c=q;a=h;b=r;break}b=a+8|0;if((b|0)==(n|0)){x=88;break a}else{e=a;a=b}}if((x|0)==40){x=0;l=e+12|0;c=l;a=b;b=k[l>>2]|0}k[d>>2]=f;k[c>>2]=k[s>>2];k[n>>2]=a;k[s>>2]=b;a=e+16|0}while(0);if((a|0)==(n|0)){x=88;break a}h=y+4|0;c=n;while(1){g=k[y>>2]|0;b=k[a>>2]|0;e:do if((g|0)<(b|0)){f=a;e=a}else while(1){if((g|0)==(b|0)?(k[h>>2]|0)<(k[a+4>>2]|0):0){f=a;b=g;e=a;break e}a=a+8|0;b=k[a>>2]|0;if((g|0)<(b|0)){f=a;e=a;break}}while(0);while(1){d=c+-8|0;a=k[d>>2]|0;if((g|0)<(a|0)){c=d;continue}if((g|0)!=(a|0))break;if((k[h>>2]|0)<(k[c+-4>>2]|0))c=d;else{a=g;break}}if(e>>>0>=d>>>0){y=e;continue b}j=e+4|0;l=k[j>>2]|0;k[f>>2]=a;a=c+-4|0;k[j>>2]=k[a>>2];k[d>>2]=b;k[a>>2]=l;a=e+8|0;c=d}}while(0);b=y+8|0;f:do if(b>>>0<c>>>0)while(1){i=k[g>>2]|0;f=g+4|0;j=b;while(1){b=k[j>>2]|0;if((b|0)>=(i|0)){if((b|0)!=(i|0))break;if((k[j+4>>2]|0)>=(k[f>>2]|0)){b=i;break}}j=j+8|0}d=c+-8|0;e=k[d>>2]|0;g:do if((e|0)<(i|0)){h=d;f=d}else while(1){if((e|0)==(i|0)?(k[c+-4>>2]|0)<(k[f>>2]|0):0){h=d;f=d;e=i;break g}c=d+-8|0;e=k[c>>2]|0;if((e|0)<(i|0)){h=c;f=c;c=d;break}else{h=d;d=c;c=h}}while(0);if(j>>>0>h>>>0){h=j;break f}d=j+4|0;i=k[d>>2]|0;k[j>>2]=e;c=c+-4|0;k[d>>2]=k[c>>2];k[f>>2]=b;k[c>>2]=i;b=j+8|0;c=h;g=(g|0)==(j|0)?h:g;a=a+1|0}else h=b;while(0);do if((h|0)!=(g|0)){e=k[g>>2]|0;f=k[h>>2]|0;if((e|0)>=(f|0)){if((e|0)!=(f|0))break;b=g+4|0;d=h+4|0;c=k[d>>2]|0;if((k[b>>2]|0)>=(c|0))break}else{c=h+4|0;b=g+4|0;d=c;c=k[c>>2]|0}k[h>>2]=e;k[d>>2]=k[b>>2];k[g>>2]=f;k[b>>2]=c;a=a+1|0}while(0);if(!a){a=Zb(y,h)|0;b=h+8|0;if(Zb(b,t)|0){x=83;break}if(a){y=b;continue}}j=h;if((j-l|0)>=(m-j|0)){x=87;break}Vb(y,h);y=h+8|0}if((x|0)==83){x=0;if(a){x=88;break}else{a=y;t=h;continue}}else if((x|0)==87){x=0;Vb(h+8|0,t);a=y;t=h;continue}}if((x|0)==4){c=t+-8|0;d=k[c>>2]|0;e=k[y>>2]|0;if((d|0)>=(e|0)){if((d|0)!=(e|0))return;a=y+4|0;b=k[a>>2]|0;if((k[s>>2]|0)>=(b|0))return}else{b=y+4|0;a=b;b=k[b>>2]|0}k[y>>2]=d;k[a>>2]=k[s>>2];k[c>>2]=e;k[s>>2]=b;return}else if((x|0)==9){Wb(y,y+8|0,n)|0;return}else if((x|0)==10){Xb(y,y+8|0,y+16|0,n)|0;return}else if((x|0)==11){Yb(y,y+8|0,y+16|0,y+24|0,n)|0;return}else if((x|0)==13){b=y+16|0;Wb(y,y+8|0,b)|0;a=y+24|0;if((a|0)==(t|0))return;while(1){h=k[a>>2]|0;e=k[b>>2]|0;if((h|0)>=(e|0)){if((h|0)==(e|0)?(u=a+4|0,v=k[u>>2]|0,w=b+4|0,(v|0)<(k[w>>2]|0)):0){d=u;c=w;i=v;x=18}}else{i=a+4|0;d=i;c=b+4|0;i=k[i>>2]|0;x=18}if((x|0)==18){x=0;k[a>>2]=e;k[d>>2]=k[c>>2];h:do if((b|0)!=(y|0)){f=b;while(1){b=f+-8|0;g=k[b>>2]|0;if((h|0)>=(g|0)){if((h|0)!=(g|0)){b=f;break h}e=f+-4|0;d=k[e>>2]|0;if((i|0)<(d|0))c=e;else{b=f;break h}}else{d=f+-4|0;c=d;d=k[d>>2]|0}k[f>>2]=g;k[f+4>>2]=d;if((b|0)==(y|0))break;else f=b}}while(0);k[b>>2]=h;k[c>>2]=i}b=a+8|0;if((b|0)==(t|0))break;else{s=a;a=b;b=s}}return}else if((x|0)==88)return}function Wb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;f=k[b>>2]|0;i=k[a>>2]|0;if((f|0)>=(i|0))if((f|0)==(i|0))d=(k[b+4>>2]|0)<(k[a+4>>2]|0);else d=0;else d=1;g=k[c>>2]|0;if((g|0)>=(f|0))if((g|0)==(f|0))e=(k[c+4>>2]|0)<(k[b+4>>2]|0);else e=0;else e=1;if(!d){if(!e){b=0;return b|0}h=b+4|0;i=k[h>>2]|0;k[b>>2]=g;g=c+4|0;k[h>>2]=k[g>>2];k[c>>2]=f;k[g>>2]=i;f=k[b>>2]|0;g=k[a>>2]|0;if((f|0)>=(g|0)){if((f|0)!=(g|0)){b=1;return b|0}d=a+4|0;e=k[d>>2]|0;if((k[h>>2]|0)>=(e|0)){b=1;return b|0}}else{e=a+4|0;d=e;e=k[e>>2]|0}k[a>>2]=f;k[d>>2]=k[h>>2];k[b>>2]=g;k[h>>2]=e;b=2;return b|0}d=a+4|0;h=k[d>>2]|0;if(e){k[a>>2]=g;b=c+4|0;k[d>>2]=k[b>>2];k[c>>2]=i;k[b>>2]=h;b=1;return b|0}k[a>>2]=f;f=b+4|0;k[d>>2]=k[f>>2];k[b>>2]=i;k[f>>2]=h;e=k[c>>2]|0;if((e|0)>=(i|0)){if((e|0)!=(i|0)){b=1;return b|0}d=c+4|0;if((k[d>>2]|0)>=(h|0)){b=1;return b|0}}else d=c+4|0;k[b>>2]=e;k[f>>2]=k[d>>2];k[c>>2]=i;k[d>>2]=h;b=2;return b|0}function Xb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0;l=Wb(a,b,c)|0;h=k[d>>2]|0;i=k[c>>2]|0;if((h|0)>=(i|0)){if((h|0)!=(i|0)){b=l;return b|0}f=d+4|0;g=c+4|0;e=k[g>>2]|0;if((k[f>>2]|0)<(e|0))j=g;else{b=l;return b|0}}else{e=c+4|0;f=d+4|0;j=e;e=k[e>>2]|0}k[c>>2]=h;k[j>>2]=k[f>>2];k[d>>2]=i;k[f>>2]=e;f=l+1|0;h=k[c>>2]|0;i=k[b>>2]|0;if((h|0)>=(i|0)){if((h|0)!=(i|0)){b=f;return b|0}g=b+4|0;e=k[g>>2]|0;if((k[j>>2]|0)<(e|0))d=g;else{b=f;return b|0}}else{e=b+4|0;d=e;e=k[e>>2]|0}k[b>>2]=h;k[d>>2]=k[j>>2];k[c>>2]=i;k[j>>2]=e;g=l+2|0;h=k[b>>2]|0;i=k[a>>2]|0;if((h|0)>=(i|0)){if((h|0)!=(i|0)){b=g;return b|0}f=a+4|0;e=k[f>>2]|0;if((k[d>>2]|0)>=(e|0)){b=g;return b|0}}else{e=a+4|0;f=e;e=k[e>>2]|0}k[a>>2]=h;k[f>>2]=k[d>>2];k[b>>2]=i;k[d>>2]=e;b=l+3|0;return b|0}function Yb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;n=Xb(a,b,c,d)|0;i=k[e>>2]|0;j=k[d>>2]|0;if((i|0)>=(j|0)){if((i|0)!=(j|0)){b=n;return b|0}g=e+4|0;h=d+4|0;f=k[h>>2]|0;if((k[g>>2]|0)<(f|0))m=h;else{b=n;return b|0}}else{f=d+4|0;g=e+4|0;m=f;f=k[f>>2]|0}k[d>>2]=i;k[m>>2]=k[g>>2];k[e>>2]=j;k[g>>2]=f;g=n+1|0;i=k[d>>2]|0;j=k[c>>2]|0;if((i|0)>=(j|0)){if((i|0)!=(j|0)){b=g;return b|0}h=c+4|0;f=k[h>>2]|0;if((k[m>>2]|0)<(f|0))l=h;else{b=g;return b|0}}else{f=c+4|0;l=f;f=k[f>>2]|0}k[c>>2]=i;k[l>>2]=k[m>>2];k[d>>2]=j;k[m>>2]=f;g=n+2|0;i=k[c>>2]|0;j=k[b>>2]|0;if((i|0)>=(j|0)){if((i|0)!=(j|0)){b=g;return b|0}h=b+4|0;f=k[h>>2]|0;if((k[l>>2]|0)<(f|0))e=h;else{b=g;return b|0}}else{f=b+4|0;e=f;f=k[f>>2]|0}k[b>>2]=i;k[e>>2]=k[l>>2];k[c>>2]=j;k[l>>2]=f;h=n+3|0;i=k[b>>2]|0;j=k[a>>2]|0;if((i|0)>=(j|0)){if((i|0)!=(j|0)){b=h;return b|0}g=a+4|0;f=k[g>>2]|0;if((k[e>>2]|0)>=(f|0)){b=h;return b|0}}else{f=a+4|0;g=f;f=k[f>>2]|0}k[a>>2]=i;k[g>>2]=k[e>>2];k[b>>2]=j;k[e>>2]=f;b=n+4|0;return b|0}function Zb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;switch(b-a>>3|0){case 2:{f=b+-8|0;g=k[f>>2]|0;h=k[a>>2]|0;if((g|0)>=(h|0)){if((g|0)!=(h|0)){a=1;return a|0}e=b+-4|0;c=a+4|0;d=k[c>>2]|0;if((k[e>>2]|0)>=(d|0)){a=1;return a|0}}else{d=a+4|0;c=d;e=b+-4|0;d=k[d>>2]|0}k[a>>2]=g;k[c>>2]=k[e>>2];k[f>>2]=h;k[e>>2]=d;a=1;return a|0}case 3:{Wb(a,a+8|0,b+-8|0)|0;a=1;return a|0}case 4:{Xb(a,a+8|0,a+16|0,b+-8|0)|0;a=1;return a|0}case 5:{Yb(a,a+8|0,a+16|0,a+24|0,b+-8|0)|0;a=1;return a|0}case 1:case 0:{a=1;return a|0}default:{e=a+16|0;Wb(a,a+8|0,e)|0;d=a+24|0;if((d|0)==(b|0)){a=1;return a|0}else c=0;while(1){l=k[d>>2]|0;h=k[e>>2]|0;if((l|0)>=(h|0)){if((l|0)==(h|0)?(n=d+4|0,o=k[n>>2]|0,p=e+4|0,(o|0)<(k[p>>2]|0)):0){f=p;g=n;m=o;q=15}}else{m=d+4|0;f=e+4|0;g=m;m=k[m>>2]|0;q=15}if((q|0)==15){q=0;k[d>>2]=h;k[g>>2]=k[f>>2];a:do if((e|0)!=(a|0)){j=e;while(1){e=j+-8|0;i=k[e>>2]|0;if((l|0)>=(i|0)){if((l|0)!=(i|0)){e=j;break a}h=j+-4|0;g=k[h>>2]|0;if((m|0)<(g|0))f=h;else{e=j;break a}}else{g=j+-4|0;f=g;g=k[g>>2]|0}k[j>>2]=i;k[j+4>>2]=g;if((e|0)==(a|0))break;else j=e}}while(0);k[e>>2]=l;k[f>>2]=m;c=c+1|0;if((c|0)==8)break}e=d+8|0;if((e|0)==(b|0)){c=1;q=24;break}else{m=d;d=e;e=m}}if((q|0)==24)return c|0;a=(d+8|0)==(b|0);return a|0}}return 0}function _b(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;y=k[c>>2]|0;z=(y|0)==(a|0);if(z?(k[c+4>>2]|0)==(b|0):0){b=0;return b|0}A=k[c+8>>2]|0;B=(A|0)==(a|0);C=k[c+12>>2]|0;if(B&(C|0)==(b|0)){b=0;return b|0}i=((b|0)<0)<<31>>31;n=be(C|0,((C|0)<0)<<31>>31|0,b|0,i|0)|0;p=L;x=k[c+4>>2]|0;c=be(x|0,((x|0)<0)<<31>>31|0,b|0,i|0)|0;i=L;v=((a|0)<0)<<31>>31;q=be(A|0,((A|0)<0)<<31>>31|0,a|0,v|0)|0;s=L;v=be(y|0,((y|0)<0)<<31>>31|0,a|0,v|0)|0;w=L;u=(s|0)<0;r=be(0,0,q|0,s|0)|0;t=L;d=(i|0)<0;e=be(0,0,c|0,i|0)|0;j=L;f=ne((u?r:q)|0,(u?t:s)|0,(d?e:c)|0,(d?j:i)|0)|0;g=L;l=(w|0)<0;h=be(0,0,v|0,w|0)|0;v=l?h:v;w=l?L:w;h=(p|0)<0;m=be(0,0,n|0,p|0)|0;o=L;D=ne(v|0,w|0,(h?m:n)|0,(h?o:p)|0)|0;if((f|0)==(D|0)&(g|0)==(L|0)?(D=ha(l?-1:1,h?-1:1)|0,(f|0)==0&(g|0)==0|(ha(u?-1:1,d?-1:1)|0)==(D|0)):0){D=0;return D|0}h=l?e:c;g=l?j:i;do if(l|z^1){f=u?m:n;e=u?o:p;d=u?r:q;c=u?t:s;if(!(u|B^1)){c=(y|0)!=(a|0);break}u=(c|0)<0;s=be(0,0,d|0,c|0)|0;t=u?L:c;D=(g|0)<0;c=be(0,0,h|0,g|0)|0;g=ne((u?s:d)|0,t|0,(D?c:h)|0,(D?L:g)|0)|0;h=L;c=(e|0)<0;d=be(0,0,f|0,e|0)|0;e=ne((c?d:f)|0,(c?L:e)|0,v|0,w|0)|0;f=L;d=ha(u?-1:1,D?-1:1)|0;c=ha(c?-1:1,(w|0)<0?-1:1)|0;if((d|0)>=(c|0))if((c|0)>=(d|0))if((d|0)==-1){c=f>>>0<h>>>0|(f|0)==(h|0)&e>>>0<g>>>0;break}else{c=h>>>0<f>>>0|(h|0)==(f|0)&g>>>0<e>>>0;break}else c=0;else c=1}else c=0;while(0);d=c?-1:1;if((A|0)<(y|0))c=1;else c=(A|0)==(y|0)&(C|0)<(x|0);d=c?0-d|0:d;if((y|0)>=(A|0)?!((y|0)==(A|0)&(x|0)<(C|0)):0)if((y|0)>(a|0)|z&(x|0)>(b|0))if((A|0)<(a|0))c=1;else c=B&(C|0)<(b|0);else c=0;else if((A|0)>(a|0)|B&(C|0)>(b|0))if((y|0)<(a|0))c=1;else c=z&(x|0)<(b|0);else c=0;D=c?d:0-d|0;return D|0}function $b(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;n=k[b>>2]|0;o=k[a>>2]|0;do if((n|0)>=(o|0)){h=(n|0)==(o|0);if(h?(k[b+4>>2]|0)<(k[a+4>>2]|0):0){i=1;break}if((o|0)<(n|0))i=0;else{if(h?(f=k[a+4>>2]|0,g=k[b+4>>2]|0,(f|0)<(g|0)):0)r=12;else{g=k[b+8>>2]|0;f=k[a+8>>2]|0;if((g|0)<(f|0)){i=1;break}if((g|0)==(f|0)?(k[b+12>>2]|0)<(k[a+12>>2]|0):0){i=1;break}if(h){f=k[a+4>>2]|0;g=k[b+4>>2]|0;r=12}else r=15}if((r|0)==12){if((f|0)<(g|0)){i=0;break}if((g|0)>=(f|0)){f=k[a+8>>2]|0;g=k[b+8>>2]|0;r=15}}if((r|0)==15){if((f|0)<(g|0)){i=0;break}if((f|0)==(g|0)?(k[a+12>>2]|0)<(k[b+12>>2]|0):0){i=0;break}}i=(k[b+16>>2]|0)<(k[a+16>>2]|0)}}else i=1;while(0);l=k[c>>2]|0;do if((l|0)>=(n|0)){h=(l|0)==(n|0);if(h?(k[c+4>>2]|0)<(k[b+4>>2]|0):0){f=1;break}if((n|0)<(l|0))f=0;else{if(h?(j=k[b+4>>2]|0,m=k[c+4>>2]|0,(j|0)<(m|0)):0){g=j;f=m;r=30}else{g=k[c+8>>2]|0;f=k[b+8>>2]|0;if((g|0)<(f|0)){f=1;break}if((g|0)==(f|0)?(k[c+12>>2]|0)<(k[b+12>>2]|0):0){f=1;break}if(h){g=k[b+4>>2]|0;f=k[c+4>>2]|0;r=30}else r=33}if((r|0)==30){if((g|0)<(f|0)){f=0;break}if((f|0)>=(g|0)){f=k[b+8>>2]|0;g=k[c+8>>2]|0;r=33}}if((r|0)==33){if((f|0)<(g|0)){f=0;break}if((f|0)==(g|0)?(k[b+12>>2]|0)<(k[c+12>>2]|0):0){f=0;break}}f=(k[c+16>>2]|0)<(k[b+16>>2]|0)}}else f=1;while(0);if(!i){if(!f){b=0;return b|0}m=b+4|0;r=k[m>>2]|0;k[b>>2]=l;i=c+4|0;k[m>>2]=k[i>>2];k[c>>2]=n;k[i>>2]=r;i=b+8|0;r=k[i>>2]|0;j=b+12|0;g=k[j>>2]|0;h=c+8|0;k[i>>2]=k[h>>2];l=c+12|0;k[j>>2]=k[l>>2];k[h>>2]=r;k[l>>2]=g;l=b+16|0;g=c+16|0;h=k[l>>2]|0;k[l>>2]=k[g>>2];k[g>>2]=h;g=k[b>>2]|0;h=k[a>>2]|0;do if((g|0)>=(h|0)){f=(g|0)==(h|0);if(f?(k[m>>2]|0)<(k[a+4>>2]|0):0)break;if((h|0)<(g|0)){b=1;return b|0}if(f?(e=k[a+4>>2]|0,d=k[m>>2]|0,(e|0)<(d|0)):0)r=50;else{e=k[i>>2]|0;d=k[a+8>>2]|0;if((e|0)<(d|0))break;if((e|0)==(d|0)?(k[j>>2]|0)<(k[a+12>>2]|0):0)break;if(f){e=k[a+4>>2]|0;d=k[m>>2]|0;r=50}else r=53}if((r|0)==50){if((e|0)<(d|0)){b=1;return b|0}if((d|0)>=(e|0)){d=k[a+8>>2]|0;e=k[i>>2]|0;r=53}}if((r|0)==53){if((d|0)<(e|0)){b=1;return b|0}if((d|0)==(e|0)?(k[a+12>>2]|0)<(k[j>>2]|0):0){b=1;return b|0}}if((k[l>>2]|0)>=(k[a+16>>2]|0)){b=1;return b|0}}while(0);r=a+4|0;q=k[r>>2]|0;k[a>>2]=g;k[r>>2]=k[m>>2];k[b>>2]=h;k[m>>2]=q;q=a+8|0;b=k[q>>2]|0;r=a+12|0;c=k[r>>2]|0;k[q>>2]=k[i>>2];k[r>>2]=k[j>>2];k[i>>2]=b;k[j>>2]=c;c=a+16|0;b=k[c>>2]|0;k[c>>2]=k[l>>2];k[l>>2]=b;b=2;return b|0}d=a+4|0;e=k[d>>2]|0;if(f){k[a>>2]=l;b=c+4|0;k[d>>2]=k[b>>2];k[c>>2]=o;k[b>>2]=e;b=a+8|0;p=k[b>>2]|0;o=a+12|0;r=k[o>>2]|0;q=c+8|0;k[b>>2]=k[q>>2];b=c+12|0;k[o>>2]=k[b>>2];k[q>>2]=p;k[b>>2]=r;a=a+16|0;b=c+16|0;c=k[a>>2]|0;k[a>>2]=k[b>>2];k[b>>2]=c;b=1;return b|0}k[a>>2]=n;n=b+4|0;k[d>>2]=k[n>>2];k[b>>2]=o;k[n>>2]=e;m=a+8|0;g=k[m>>2]|0;h=a+12|0;i=k[h>>2]|0;l=b+8|0;k[m>>2]=k[l>>2];m=b+12|0;k[h>>2]=k[m>>2];k[l>>2]=g;k[m>>2]=i;i=a+16|0;g=b+16|0;h=k[i>>2]|0;k[i>>2]=k[g>>2];k[g>>2]=h;i=k[c>>2]|0;j=k[b>>2]|0;do if((i|0)>=(j|0)){f=(i|0)==(j|0);if(f?(k[c+4>>2]|0)<(k[n>>2]|0):0)break;if((j|0)<(i|0)){b=1;return b|0}if(f?(p=k[n>>2]|0,q=k[c+4>>2]|0,(p|0)<(q|0)):0){e=p;d=q;r=71}else{e=k[c+8>>2]|0;d=k[l>>2]|0;if((e|0)<(d|0))break;if((e|0)==(d|0)?(k[c+12>>2]|0)<(k[m>>2]|0):0)break;if(f){e=k[n>>2]|0;d=k[c+4>>2]|0;r=71}else r=74}if((r|0)==71){if((e|0)<(d|0)){b=1;return b|0}if((d|0)>=(e|0)){d=k[l>>2]|0;e=k[c+8>>2]|0;r=74}}if((r|0)==74){if((d|0)<(e|0)){b=1;return b|0}if((d|0)==(e|0)?(k[m>>2]|0)<(k[c+12>>2]|0):0){b=1;return b|0}}if((k[c+16>>2]|0)>=(h|0)){b=1;return b|0}}while(0);a=k[n>>2]|0;k[b>>2]=i;q=c+4|0;k[n>>2]=k[q>>2];k[c>>2]=j;k[q>>2]=a;q=k[l>>2]|0;a=k[m>>2]|0;r=c+8|0;k[l>>2]=k[r>>2];b=c+12|0;k[m>>2]=k[b>>2];k[r>>2]=q;k[b>>2]=a;b=c+16|0;c=k[g>>2]|0;k[g>>2]=k[b>>2];k[b>>2]=c;b=2;return b|0}function ac(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=$b(a,b,c)|0;i=k[d>>2]|0;j=k[c>>2]|0;do if((i|0)>=(j|0)){h=(i|0)==(j|0);if(h?(k[d+4>>2]|0)<(k[c+4>>2]|0):0)break;if((j|0)<(i|0)){b=t;return b|0}if(h?(f=k[c+4>>2]|0,g=k[d+4>>2]|0,(f|0)<(g|0)):0)r=12;else{g=k[d+8>>2]|0;f=k[c+8>>2]|0;if((g|0)<(f|0))break;if((g|0)==(f|0)?(k[d+12>>2]|0)<(k[c+12>>2]|0):0)break;if(h){f=k[c+4>>2]|0;g=k[d+4>>2]|0;r=12}else r=15}if((r|0)==12){if((f|0)<(g|0)){b=t;return b|0}if((g|0)>=(f|0)){f=k[c+8>>2]|0;g=k[d+8>>2]|0;r=15}}if((r|0)==15){if((f|0)<(g|0)){b=t;return b|0}if((f|0)==(g|0)?(k[c+12>>2]|0)<(k[d+12>>2]|0):0){b=t;return b|0}}if((k[d+16>>2]|0)>=(k[c+16>>2]|0)){b=t;return b|0}}while(0);l=c+4|0;r=k[l>>2]|0;k[c>>2]=i;o=d+4|0;k[l>>2]=k[o>>2];k[d>>2]=j;k[o>>2]=r;o=c+8|0;r=k[o>>2]|0;p=c+12|0;i=k[p>>2]|0;j=d+8|0;k[o>>2]=k[j>>2];q=d+12|0;k[p>>2]=k[q>>2];k[j>>2]=r;k[q>>2]=i;q=c+16|0;i=d+16|0;j=k[q>>2]|0;k[q>>2]=k[i>>2];k[i>>2]=j;i=t+1|0;j=k[c>>2]|0;d=k[b>>2]|0;do if((j|0)>=(d|0)){h=(j|0)==(d|0);if(h?(k[l>>2]|0)<(k[b+4>>2]|0):0)break;if((d|0)<(j|0)){b=i;return b|0}if(h?(m=k[b+4>>2]|0,n=k[l>>2]|0,(m|0)<(n|0)):0){g=m;f=n;r=30}else{g=k[o>>2]|0;f=k[b+8>>2]|0;if((g|0)<(f|0))break;if((g|0)==(f|0)?(k[p>>2]|0)<(k[b+12>>2]|0):0)break;if(h){g=k[b+4>>2]|0;f=k[l>>2]|0;r=30}else r=33}if((r|0)==30){if((g|0)<(f|0)){b=i;return b|0}if((f|0)>=(g|0)){f=k[b+8>>2]|0;g=k[o>>2]|0;r=33}}if((r|0)==33){if((f|0)<(g|0)){b=i;return b|0}if((f|0)==(g|0)?(k[b+12>>2]|0)<(k[p>>2]|0):0){b=i;return b|0}}if((k[q>>2]|0)>=(k[b+16>>2]|0)){b=i;return b|0}}while(0);n=b+4|0;h=k[n>>2]|0;k[b>>2]=j;k[n>>2]=k[l>>2];k[c>>2]=d;k[l>>2]=h;l=b+8|0;h=k[l>>2]|0;m=b+12|0;d=k[m>>2]|0;k[l>>2]=k[o>>2];k[m>>2]=k[p>>2];k[o>>2]=h;k[p>>2]=d;d=b+16|0;h=k[d>>2]|0;k[d>>2]=k[q>>2];k[q>>2]=h;h=t+2|0;i=k[b>>2]|0;j=k[a>>2]|0;do if((i|0)>=(j|0)){g=(i|0)==(j|0);if(g?(k[n>>2]|0)<(k[a+4>>2]|0):0)break;if((j|0)<(i|0)){b=h;return b|0}if(g?(s=k[a+4>>2]|0,e=k[n>>2]|0,(s|0)<(e|0)):0){f=s;r=48}else{f=k[l>>2]|0;e=k[a+8>>2]|0;if((f|0)<(e|0))break;if((f|0)==(e|0)?(k[m>>2]|0)<(k[a+12>>2]|0):0)break;if(g){f=k[a+4>>2]|0;e=k[n>>2]|0;r=48}else r=51}if((r|0)==48){if((f|0)<(e|0)){b=h;return b|0}if((e|0)>=(f|0)){e=k[a+8>>2]|0;f=k[l>>2]|0;r=51}}if((r|0)==51){if((e|0)<(f|0)){b=h;return b|0}if((e|0)==(f|0)?(k[a+12>>2]|0)<(k[m>>2]|0):0){b=h;return b|0}}if((k[d>>2]|0)>=(k[a+16>>2]|0)){b=h;return b|0}}while(0);s=a+4|0;c=k[s>>2]|0;k[a>>2]=i;k[s>>2]=k[n>>2];k[b>>2]=j;k[n>>2]=c;c=a+8|0;s=k[c>>2]|0;r=a+12|0;b=k[r>>2]|0;k[c>>2]=k[l>>2];k[r>>2]=k[m>>2];k[l>>2]=s;k[m>>2]=b;a=a+16|0;b=k[a>>2]|0;k[a>>2]=k[d>>2];k[d>>2]=b;b=t+3|0;return b|0}function bc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;x=ac(a,b,c,d)|0;m=k[e>>2]|0;n=k[d>>2]|0;do if((m|0)>=(n|0)){l=(m|0)==(n|0);if(l?(k[e+4>>2]|0)<(k[d+4>>2]|0):0)break;if((n|0)<(m|0)){b=x;return b|0}if(l?(i=k[d+4>>2]|0,j=k[e+4>>2]|0,(i|0)<(j|0)):0)w=12;else{j=k[e+8>>2]|0;i=k[d+8>>2]|0;if((j|0)<(i|0))break;if((j|0)==(i|0)?(k[e+12>>2]|0)<(k[d+12>>2]|0):0)break;if(l){i=k[d+4>>2]|0;j=k[e+4>>2]|0;w=12}else w=15}if((w|0)==12){if((i|0)<(j|0)){b=x;return b|0}if((j|0)>=(i|0)){i=k[d+8>>2]|0;j=k[e+8>>2]|0;w=15}}if((w|0)==15){if((i|0)<(j|0)){b=x;return b|0}if((i|0)==(j|0)?(k[d+12>>2]|0)<(k[e+12>>2]|0):0){b=x;return b|0}}if((k[e+16>>2]|0)>=(k[d+16>>2]|0)){b=x;return b|0}}while(0);o=d+4|0;w=k[o>>2]|0;k[d>>2]=m;p=e+4|0;k[o>>2]=k[p>>2];k[e>>2]=n;k[p>>2]=w;p=d+8|0;w=k[p>>2]|0;s=d+12|0;m=k[s>>2]|0;n=e+8|0;k[p>>2]=k[n>>2];u=e+12|0;k[s>>2]=k[u>>2];k[n>>2]=w;k[u>>2]=m;u=d+16|0;m=e+16|0;n=k[u>>2]|0;k[u>>2]=k[m>>2];k[m>>2]=n;m=x+1|0;n=k[d>>2]|0;e=k[c>>2]|0;do if((n|0)>=(e|0)){l=(n|0)==(e|0);if(l?(k[o>>2]|0)<(k[c+4>>2]|0):0)break;if((e|0)<(n|0)){b=m;return b|0}if(l?(q=k[c+4>>2]|0,r=k[o>>2]|0,(q|0)<(r|0)):0){j=q;i=r;w=30}else{j=k[p>>2]|0;i=k[c+8>>2]|0;if((j|0)<(i|0))break;if((j|0)==(i|0)?(k[s>>2]|0)<(k[c+12>>2]|0):0)break;if(l){j=k[c+4>>2]|0;i=k[o>>2]|0;w=30}else w=33}if((w|0)==30){if((j|0)<(i|0)){b=m;return b|0}if((i|0)>=(j|0)){i=k[c+8>>2]|0;j=k[p>>2]|0;w=33}}if((w|0)==33){if((i|0)<(j|0)){b=m;return b|0}if((i|0)==(j|0)?(k[c+12>>2]|0)<(k[s>>2]|0):0){b=m;return b|0}}if((k[u>>2]|0)>=(k[c+16>>2]|0)){b=m;return b|0}}while(0);t=c+4|0;q=k[t>>2]|0;k[c>>2]=n;k[t>>2]=k[o>>2];k[d>>2]=e;k[o>>2]=q;q=c+8|0;m=k[q>>2]|0;r=c+12|0;l=k[r>>2]|0;k[q>>2]=k[p>>2];k[r>>2]=k[s>>2];k[p>>2]=m;k[s>>2]=l;p=c+16|0;l=k[p>>2]|0;k[p>>2]=k[u>>2];k[u>>2]=l;l=x+2|0;m=k[c>>2]|0;n=k[b>>2]|0;do if((m|0)>=(n|0)){j=(m|0)==(n|0);if(j?(k[t>>2]|0)<(k[b+4>>2]|0):0)break;if((n|0)<(m|0)){b=l;return b|0}if(j?(v=k[b+4>>2]|0,h=k[t>>2]|0,(v|0)<(h|0)):0){i=v;w=48}else{i=k[q>>2]|0;h=k[b+8>>2]|0;if((i|0)<(h|0))break;if((i|0)==(h|0)?(k[r>>2]|0)<(k[b+12>>2]|0):0)break;if(j){i=k[b+4>>2]|0;h=k[t>>2]|0;w=48}else w=51}if((w|0)==48){if((i|0)<(h|0)){b=l;return b|0}if((h|0)>=(i|0)){h=k[b+8>>2]|0;i=k[q>>2]|0;w=51}}if((w|0)==51){if((h|0)<(i|0)){b=l;return b|0}if((h|0)==(i|0)?(k[b+12>>2]|0)<(k[r>>2]|0):0){b=l;return b|0}}if((k[p>>2]|0)>=(k[b+16>>2]|0)){b=l;return b|0}}while(0);o=b+4|0;i=k[o>>2]|0;k[b>>2]=m;k[o>>2]=k[t>>2];k[c>>2]=n;k[t>>2]=i;n=b+8|0;i=k[n>>2]|0;e=b+12|0;m=k[e>>2]|0;k[n>>2]=k[q>>2];k[e>>2]=k[r>>2];k[q>>2]=i;k[r>>2]=m;m=b+16|0;i=k[m>>2]|0;k[m>>2]=k[p>>2];k[p>>2]=i;i=x+3|0;j=k[b>>2]|0;l=k[a>>2]|0;do if((j|0)>=(l|0)){h=(j|0)==(l|0);if(h?(k[o>>2]|0)<(k[a+4>>2]|0):0)break;if((l|0)<(j|0)){b=i;return b|0}if(h?(g=k[a+4>>2]|0,f=k[o>>2]|0,(g|0)<(f|0)):0)w=66;else{g=k[n>>2]|0;f=k[a+8>>2]|0;if((g|0)<(f|0))break;if((g|0)==(f|0)?(k[e>>2]|0)<(k[a+12>>2]|0):0)break;if(h){g=k[a+4>>2]|0;f=k[o>>2]|0;w=66}else w=69}if((w|0)==66){if((g|0)<(f|0)){b=i;return b|0}if((f|0)>=(g|0)){f=k[a+8>>2]|0;g=k[n>>2]|0;w=69}}if((w|0)==69){if((f|0)<(g|0)){b=i;return b|0}if((f|0)==(g|0)?(k[a+12>>2]|0)<(k[e>>2]|0):0){b=i;return b|0}}if((k[m>>2]|0)>=(k[a+16>>2]|0)){b=i;return b|0}}while(0);c=a+4|0;v=k[c>>2]|0;k[a>>2]=j;k[c>>2]=k[o>>2];k[b>>2]=l;k[o>>2]=v;v=a+8|0;c=k[v>>2]|0;w=a+12|0;b=k[w>>2]|0;k[v>>2]=k[n>>2];k[w>>2]=k[e>>2];k[n>>2]=c;k[e>>2]=b;a=a+16|0;b=k[a>>2]|0;k[a>>2]=k[m>>2];k[m>>2]=b;b=x+4|0;return b|0}function cc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;switch((b-a|0)/20|0|0){case 2:{f=b+-20|0;g=k[f>>2]|0;h=k[a>>2]|0;do if((g|0)>=(h|0)){e=(g|0)==(h|0);if(e?(k[b+-16>>2]|0)<(k[a+4>>2]|0):0)break;if((h|0)<(g|0)){b=1;return b|0}if(e?(d=k[a+4>>2]|0,c=k[b+-16>>2]|0,(d|0)<(c|0)):0)w=13;else{d=k[b+-12>>2]|0;c=k[a+8>>2]|0;if((d|0)<(c|0))break;if((d|0)==(c|0)?(k[b+-8>>2]|0)<(k[a+12>>2]|0):0)break;if(e){d=k[a+4>>2]|0;c=k[b+-16>>2]|0;w=13}else w=16}if((w|0)==13){if((d|0)<(c|0)){b=1;return b|0}if((c|0)>=(d|0)){c=k[a+8>>2]|0;d=k[b+-12>>2]|0;w=16}}if((w|0)==16){if((c|0)<(d|0)){b=1;return b|0}if((c|0)==(d|0)?(k[a+12>>2]|0)<(k[b+-8>>2]|0):0){b=1;return b|0}}if((k[b+-4>>2]|0)>=(k[a+16>>2]|0)){b=1;return b|0}}while(0);s=a+4|0;t=k[s>>2]|0;k[a>>2]=g;w=b+-16|0;k[s>>2]=k[w>>2];k[f>>2]=h;k[w>>2]=t;w=a+8|0;t=k[w>>2]|0;s=a+12|0;v=k[s>>2]|0;u=b+-12|0;k[w>>2]=k[u>>2];w=b+-8|0;k[s>>2]=k[w>>2];k[u>>2]=t;k[w>>2]=v;w=a+16|0;b=b+-4|0;a=k[w>>2]|0;k[w>>2]=k[b>>2];k[b>>2]=a;b=1;return b|0}case 3:{$b(a,a+20|0,b+-20|0)|0;b=1;return b|0}case 4:{ac(a,a+20|0,a+40|0,b+-20|0)|0;b=1;return b|0}case 5:{bc(a,a+20|0,a+40|0,a+60|0,b+-20|0)|0;b=1;return b|0}case 1:case 0:{b=1;return b|0}default:{e=a+40|0;$b(a,a+20|0,e)|0;d=a+60|0;if((d|0)==(b|0)){b=1;return b|0}else c=0;while(1){s=k[d>>2]|0;i=k[e>>2]|0;do if((s|0)>=(i|0)){h=(s|0)==(i|0);if(h?(k[d+4>>2]|0)<(k[e+4>>2]|0):0){w=43;break}if((i|0)>=(s|0)){if(h?(u=k[e+4>>2]|0,v=k[d+4>>2]|0,(u|0)<(v|0)):0){f=u;g=v;w=36}else{f=k[d+8>>2]|0;g=k[e+8>>2]|0;if((f|0)<(g|0)){w=43;break}if((f|0)==(g|0)?(k[d+12>>2]|0)<(k[e+12>>2]|0):0){w=43;break}if(h){f=k[e+4>>2]|0;g=k[d+4>>2]|0;w=36}else w=39}if((w|0)==36){w=0;if((f|0)<(g|0))break;if((g|0)>=(f|0)){g=k[e+8>>2]|0;f=k[d+8>>2]|0;w=39}}if((w|0)==39){w=0;if((g|0)<(f|0))break;if((g|0)==(f|0)?(k[e+12>>2]|0)<(k[d+12>>2]|0):0)break}if((k[d+16>>2]|0)<(k[e+16>>2]|0))w=43}}else w=43;while(0);if((w|0)==43){w=0;m=d+4|0;o=k[m>>2]|0;g=d+8|0;p=k[g>>2]|0;f=d+12|0;q=k[f>>2]|0;n=d+16|0;r=k[n>>2]|0;k[d>>2]=i;h=e+4|0;k[m>>2]=k[h>>2];i=e+8|0;k[g>>2]=k[i>>2];g=e+12|0;k[f>>2]=k[g>>2];f=e+16|0;k[n>>2]=k[f>>2];a:do if((e|0)!=(a|0)){n=e;m=i;l=h;while(1){e=n+-20|0;j=k[e>>2]|0;do if((s|0)>=(j|0)){i=(s|0)==(j|0);if(i?(o|0)<(k[n+-16>>2]|0):0)break;if((j|0)<(s|0)){e=n;h=l;i=m;break a}if(i?(t=k[n+-16>>2]|0,(t|0)<(o|0)):0){h=t;w=55}else{h=k[n+-12>>2]|0;if((p|0)<(h|0))break;if((p|0)==(h|0)?(q|0)<(k[n+-8>>2]|0):0)break;if(i){h=k[n+-16>>2]|0;w=55}else w=58}if((w|0)==55){w=0;if((h|0)<(o|0)){e=n;h=l;i=m;break a}if((o|0)>=(h|0)){h=k[n+-12>>2]|0;w=58}}if((w|0)==58){w=0;if((h|0)<(p|0)){e=n;h=l;i=m;break a}if((h|0)==(p|0)?(k[n+-8>>2]|0)<(q|0):0){e=n;h=l;i=m;break a}}if((r|0)>=(k[n+-4>>2]|0)){e=n;h=l;i=m;break a}}while(0);k[n>>2]=j;h=n+-16|0;k[n+4>>2]=k[h>>2];i=n+-12|0;k[n+8>>2]=k[i>>2];g=n+-8|0;k[n+12>>2]=k[g>>2];f=n+-4|0;k[n+16>>2]=k[f>>2];if((e|0)==(a|0))break;else{n=e;m=i;l=h}}}while(0);k[e>>2]=s;k[h>>2]=o;k[i>>2]=p;k[g>>2]=q;k[f>>2]=r;c=c+1|0;if((c|0)==8)break}e=d+20|0;if((e|0)==(b|0)){c=1;w=66;break}else{s=d;d=e;e=s}}if((w|0)==66)return c|0;b=(d+20|0)==(b|0);return b|0}}return 0}function dc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;f=a+4|0;g=k[a>>2]|0;c=g;h=(k[f>>2]|0)-c|0;i=h>>3;j=i+1|0;if(j>>>0>536870911)xa(1340,1363,303,1438);l=a+8|0;c=(k[l>>2]|0)-c|0;if(c>>3>>>0<268435455){c=c>>2;c=c>>>0<j>>>0?j:c;if(!c){c=0;d=0}else e=5}else{c=536870911;e=5}if((e|0)==5){e=c<<3;e=(e|0)==0?1:e;d=_d(e)|0;a:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break a}a=ya(4)|0;k[a>>2]=128;La(a|0,8,1)}while(0)}m=b;e=k[m+4>>2]|0;b=d+(i<<3)|0;k[b>>2]=k[m>>2];k[b+4>>2]=e;fe(d|0,g|0,h|0)|0;k[a>>2]=d;k[f>>2]=d+(j<<3);k[l>>2]=d+(c<<3);if(!g)return;$d(g);return}function ec(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;s=b;a:while(1){m=s;n=s+-8|0;o=s+-16|0;r=s+-4|0;w=a;b:while(1){l=w;a=m-l|0;b=a>>3;switch(b|0){case 2:{v=4;break a}case 3:{v=9;break a}case 4:{v=10;break a}case 5:{v=11;break a}case 1:case 0:{v=88;break a}default:{}}if((a|0)<56){v=13;break a}c=(b|0)/2|0;h=w+(c<<3)|0;if((a|0)>7992){a=(b|0)/4|0;a=ic(w,w+(a<<3)|0,h,w+(a+c<<3)|0,n)|0}else a=gc(w,h,n)|0;g=k[w>>2]|0;f=k[h>>2]|0;c:do if((g|0)<(f|0))c=n;else{if((f|0)>=(g|0)?(k[w+4>>2]|0)<(k[w+(c<<3)+4>>2]|0):0){c=n;break}d:do if((w|0)!=(o|0)){e=w+(c<<3)+4|0;c=o;b=n;while(1){d=k[c>>2]|0;if((d|0)<(f|0)){v=58;break}if((f|0)>=(d|0)?(p=b+-4|0,(k[p>>2]|0)<(k[e>>2]|0)):0){b=p;break}b=c+-8|0;if((w|0)==(b|0))break d;else{j=c;c=b;b=j}}if((v|0)==58){v=0;b=b+-4|0}k[w>>2]=d;k[c>>2]=g;i=w+4|0;j=k[i>>2]|0;k[i>>2]=k[b>>2];k[b>>2]=j;a=a+1|0;break c}while(0);a=w+8|0;f=k[n>>2]|0;do if((g|0)>=(f|0)){if((f|0)>=(g|0)?(k[w+4>>2]|0)<(k[r>>2]|0):0)break;if((a|0)==(n|0)){v=88;break a}d=w+4|0;e=w;while(1){b=e+8|0;c=k[b>>2]|0;if((g|0)<(c|0)){v=40;break}if((c|0)>=(g|0)?(q=e+12|0,(k[d>>2]|0)<(k[q>>2]|0)):0){a=q;break}b=a+8|0;if((b|0)==(n|0)){v=88;break a}else{e=a;a=b}}if((v|0)==40){v=0;a=e+12|0}k[b>>2]=f;k[n>>2]=c;l=k[a>>2]|0;k[a>>2]=k[r>>2];k[r>>2]=l;a=e+16|0}while(0);if((a|0)==(n|0)){v=88;break a}h=w+4|0;c=n;while(1){g=k[w>>2]|0;b=k[a>>2]|0;e:do if((g|0)<(b|0)){f=a;e=a}else while(1){if((b|0)>=(g|0)?(k[h>>2]|0)<(k[a+4>>2]|0):0){f=a;e=a;break e}a=a+8|0;b=k[a>>2]|0;if((g|0)<(b|0)){f=a;e=a;break}}while(0);while(1){d=c+-8|0;a=k[d>>2]|0;if((g|0)<(a|0)){c=d;continue}if((a|0)<(g|0))break;if((k[h>>2]|0)<(k[c+-4>>2]|0))c=d;else break}if(e>>>0>=d>>>0){w=e;continue b}k[f>>2]=a;k[d>>2]=b;l=e+4|0;a=c+-4|0;c=k[l>>2]|0;k[l>>2]=k[a>>2];k[a>>2]=c;a=e+8|0;c=d}}while(0);b=w+8|0;f:do if(b>>>0<c>>>0){f=h;while(1){g=k[f>>2]|0;h=f+4|0;j=b;while(1){i=k[j>>2]|0;if((i|0)>=(g|0)){if((g|0)<(i|0))break;if((k[j+4>>2]|0)>=(k[h>>2]|0))break}j=j+8|0}d=c+-8|0;b=k[d>>2]|0;g:do if((b|0)<(g|0))g=d;else{e=c;while(1){e=e+-8|0;if((g|0)>=(b|0)?(k[c+-4>>2]|0)<(k[h>>2]|0):0){g=e;d=e;break g}c=d+-8|0;b=k[c>>2]|0;if((b|0)<(g|0)){g=c;d=c;c=e;break}else{x=d;d=c;c=e;e=x}}}while(0);if(j>>>0>g>>>0){g=j;break f}k[j>>2]=b;k[d>>2]=i;x=j+4|0;b=c+-4|0;c=k[x>>2]|0;k[x>>2]=k[b>>2];k[b>>2]=c;b=j+8|0;c=g;f=(f|0)==(j|0)?g:f;a=a+1|0}}else{g=b;f=h}while(0);do if((g|0)!=(f|0)){d=k[f>>2]|0;e=k[g>>2]|0;if((d|0)>=(e|0)){if((e|0)<(d|0))break;b=f+4|0;c=g+4|0;if((k[b>>2]|0)>=(k[c>>2]|0))break}else{c=g+4|0;b=f+4|0}k[g>>2]=d;k[f>>2]=e;x=k[c>>2]|0;k[c>>2]=k[b>>2];k[b>>2]=x;a=a+1|0}while(0);if(!a){a=jc(w,g)|0;b=g+8|0;if(jc(b,s)|0){v=83;break}if(a){w=b;continue}}x=g;if((x-l|0)>=(m-x|0)){v=87;break}ec(w,g);w=g+8|0}if((v|0)==83){v=0;if(a){v=88;break}else{a=w;s=g;continue}}else if((v|0)==87){v=0;ec(g+8|0,s);a=w;s=g;continue}}if((v|0)==4){b=s+-8|0;c=k[b>>2]|0;d=k[w>>2]|0;if((c|0)>=(d|0)){if((d|0)<(c|0))return;a=w+4|0;if((k[r>>2]|0)>=(k[a>>2]|0))return}else a=w+4|0;k[w>>2]=c;k[b>>2]=d;x=k[a>>2]|0;k[a>>2]=k[r>>2];k[r>>2]=x;return}else if((v|0)==9){gc(w,w+8|0,n)|0;return}else if((v|0)==10){hc(w,w+8|0,w+16|0,n)|0;return}else if((v|0)==11){ic(w,w+8|0,w+16|0,w+24|0,n)|0;return}else if((v|0)==13){b=w+16|0;gc(w,w+8|0,b)|0;a=w+24|0;if((a|0)==(s|0))return;while(1){c=k[a>>2]|0;e=k[b>>2]|0;if((c|0)>=(e|0)){if((e|0)>=(c|0)?(t=a+4|0,u=b+4|0,(k[t>>2]|0)<(k[u>>2]|0)):0){c=u;d=t;v=18}}else{c=b+4|0;d=a+4|0;v=18}if((v|0)==18){v=0;i=a;h=k[i>>2]|0;i=k[i+4>>2]|0;k[a>>2]=e;k[d>>2]=k[c>>2];h:do if((b|0)!=(w|0)){f=b;while(1){b=f+-8|0;g=k[b>>2]|0;if((h|0)>=(g|0)){if((g|0)<(h|0)){b=f;break h}e=f+-4|0;d=k[e>>2]|0;if((i|0)<(d|0))c=e;else{b=f;break h}}else{d=f+-4|0;c=d;d=k[d>>2]|0}k[f>>2]=g;k[f+4>>2]=d;if((b|0)==(w|0))break;else f=b}}while(0);k[b>>2]=h;k[c>>2]=i}b=a+8|0;if((b|0)==(s|0))break;else{x=a;a=b;b=x}}return}else if((v|0)==88)return}function fc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;f=a+4|0;g=k[a>>2]|0;c=g;h=(k[f>>2]|0)-c|0;i=(h|0)/12|0;j=i+1|0;if(j>>>0>357913941)xa(1340,1363,303,1438);l=a+8|0;c=((k[l>>2]|0)-c|0)/12|0;if(c>>>0<178956970){c=c<<1;c=c>>>0<j>>>0?j:c;if(!c){c=0;d=0}else e=5}else{c=357913941;e=5}if((e|0)==5){e=c*12|0;e=(e|0)==0?1:e;d=_d(e)|0;a:do if(!d){while(1){d=k[35]|0;k[35]=d+0;if(!d)break;Xa[d&0]();d=_d(e)|0;if(d)break a}a=ya(4)|0;k[a>>2]=128;La(a|0,8,1)}while(0)}e=d+(i*12|0)|0;k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];b=d+((((h|0)/-12|0)+i|0)*12|0)|0;fe(b|0,g|0,h|0)|0;k[a>>2]=b;k[f>>2]=d+(j*12|0);k[l>>2]=d+(c*12|0);if(!g)return;$d(g);return}function gc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=k[b>>2]|0;e=k[a>>2]|0;if((d|0)>=(e|0))if((e|0)<(d|0))f=0;else f=(k[b+4>>2]|0)<(k[a+4>>2]|0);else f=1;h=k[c>>2]|0;if((h|0)>=(d|0))if((d|0)<(h|0))g=0;else g=(k[c+4>>2]|0)<(k[b+4>>2]|0);else g=1;if(!f){if(!g){b=0;return b|0}k[b>>2]=h;k[c>>2]=d;g=b+4|0;e=c+4|0;f=k[g>>2]|0;k[g>>2]=k[e>>2];k[e>>2]=f;e=k[b>>2]|0;f=k[a>>2]|0;if((e|0)>=(f|0)){if((f|0)<(e|0)){b=1;return b|0}d=a+4|0;if((k[g>>2]|0)>=(k[d>>2]|0)){b=1;return b|0}}else d=a+4|0;k[a>>2]=e;k[b>>2]=f;b=k[d>>2]|0;k[d>>2]=k[g>>2];k[g>>2]=b;b=2;return b|0}if(g){k[a>>2]=h;k[c>>2]=e;a=a+4|0;b=c+4|0;c=k[a>>2]|0;k[a>>2]=k[b>>2];k[b>>2]=c;b=1;return b|0}k[a>>2]=d;k[b>>2]=e;g=a+4|0;f=b+4|0;e=k[g>>2]|0;k[g>>2]=k[f>>2];k[f>>2]=e;g=k[c>>2]|0;h=k[b>>2]|0;if((g|0)>=(h|0)){if((h|0)<(g|0)){b=1;return b|0}d=c+4|0;if((k[d>>2]|0)>=(e|0)){b=1;return b|0}}else d=c+4|0;k[b>>2]=g;k[c>>2]=h;b=k[f>>2]|0;k[f>>2]=k[d>>2];k[d>>2]=b;b=2;return b|0}function hc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=gc(a,b,c)|0;g=k[d>>2]|0;h=k[c>>2]|0;if((g|0)>=(h|0)){if((h|0)<(g|0)){b=j;return b|0}e=d+4|0;f=c+4|0;if((k[e>>2]|0)<(k[f>>2]|0))i=f;else{b=j;return b|0}}else{e=d+4|0;i=c+4|0}k[c>>2]=g;k[d>>2]=h;g=k[i>>2]|0;k[i>>2]=k[e>>2];k[e>>2]=g;e=j+1|0;g=k[c>>2]|0;h=k[b>>2]|0;if((g|0)>=(h|0)){if((h|0)<(g|0)){b=e;return b|0}f=b+4|0;if((k[i>>2]|0)<(k[f>>2]|0))d=f;else{b=e;return b|0}}else d=b+4|0;k[b>>2]=g;k[c>>2]=h;f=k[d>>2]|0;k[d>>2]=k[i>>2];k[i>>2]=f;f=j+2|0;g=k[b>>2]|0;h=k[a>>2]|0;if((g|0)>=(h|0)){if((h|0)<(g|0)){b=f;return b|0}e=a+4|0;if((k[d>>2]|0)>=(k[e>>2]|0)){b=f;return b|0}}else e=a+4|0;k[a>>2]=g;k[b>>2]=h;b=k[e>>2]|0;k[e>>2]=k[d>>2];k[d>>2]=b;b=j+3|0;return b|0}function ic(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0;m=hc(a,b,c,d)|0;h=k[e>>2]|0;i=k[d>>2]|0;if((h|0)>=(i|0)){if((i|0)<(h|0)){b=m;return b|0}f=e+4|0;g=d+4|0;if((k[f>>2]|0)<(k[g>>2]|0))l=g;else{b=m;return b|0}}else{f=e+4|0;l=d+4|0}k[d>>2]=h;k[e>>2]=i;h=k[l>>2]|0;k[l>>2]=k[f>>2];k[f>>2]=h;f=m+1|0;h=k[d>>2]|0;i=k[c>>2]|0;if((h|0)>=(i|0)){if((i|0)<(h|0)){b=f;return b|0}g=c+4|0;if((k[l>>2]|0)<(k[g>>2]|0))j=g;else{b=f;return b|0}}else j=c+4|0;k[c>>2]=h;k[d>>2]=i;f=k[j>>2]|0;k[j>>2]=k[l>>2];k[l>>2]=f;f=m+2|0;h=k[c>>2]|0;i=k[b>>2]|0;if((h|0)>=(i|0)){if((i|0)<(h|0)){b=f;return b|0}g=b+4|0;if((k[j>>2]|0)<(k[g>>2]|0))e=g;else{b=f;return b|0}}else e=b+4|0;k[b>>2]=h;k[c>>2]=i;g=k[e>>2]|0;k[e>>2]=k[j>>2];k[j>>2]=g;g=m+3|0;h=k[b>>2]|0;i=k[a>>2]|0;if((h|0)>=(i|0)){if((i|0)<(h|0)){b=g;return b|0}f=a+4|0;if((k[e>>2]|0)>=(k[f>>2]|0)){b=g;return b|0}}else f=a+4|0;k[a>>2]=h;k[b>>2]=i;b=k[f>>2]|0;k[f>>2]=k[e>>2];k[e>>2]=b;b=m+4|0;return b|0}function jc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;switch(b-a>>3|0){case 2:{e=b+-8|0;f=k[e>>2]|0;g=k[a>>2]|0;if((f|0)>=(g|0)){if((g|0)<(f|0)){a=1;return a|0}c=b+-4|0;d=a+4|0;if((k[c>>2]|0)>=(k[d>>2]|0)){a=1;return a|0}}else{d=a+4|0;c=b+-4|0}k[a>>2]=f;k[e>>2]=g;a=k[d>>2]|0;k[d>>2]=k[c>>2];k[c>>2]=a;a=1;return a|0}case 3:{gc(a,a+8|0,b+-8|0)|0;a=1;return a|0}case 4:{hc(a,a+8|0,a+16|0,b+-8|0)|0;a=1;return a|0}case 5:{ic(a,a+8|0,a+16|0,a+24|0,b+-8|0)|0;a=1;return a|0}case 1:case 0:{a=1;return a|0}default:{e=a+16|0;gc(a,a+8|0,e)|0;d=a+24|0;if((d|0)==(b|0)){a=1;return a|0}else c=0;while(1){f=k[d>>2]|0;h=k[e>>2]|0;if((f|0)>=(h|0)){if((h|0)>=(f|0)?(n=d+4|0,o=e+4|0,(k[n>>2]|0)<(k[o>>2]|0)):0){f=o;g=n;p=15}}else{f=e+4|0;g=d+4|0;p=15}if((p|0)==15){p=0;m=d;l=k[m>>2]|0;m=k[m+4>>2]|0;k[d>>2]=h;k[g>>2]=k[f>>2];a:do if((e|0)!=(a|0)){j=e;while(1){e=j+-8|0;i=k[e>>2]|0;if((l|0)>=(i|0)){if((i|0)<(l|0)){e=j;break a}h=j+-4|0;g=k[h>>2]|0;if((m|0)<(g|0))f=h;else{e=j;break a}}else{g=j+-4|0;f=g;g=k[g>>2]|0}k[j>>2]=i;k[j+4>>2]=g;if((e|0)==(a|0))break;else j=e}}while(0);k[e>>2]=l;k[f>>2]=m;c=c+1|0;if((c|0)==8)break}e=d+8|0;if((e|0)==(b|0)){c=1;p=24;break}else{m=d;d=e;e=m}}if((p|0)==24)return c|0;a=(d+8|0)==(b|0);return a|0}}return 0}function kc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;m=a+4|0;e=k[m>>2]|0;l=k[a>>2]|0;c=l;i=e-c>>5;j=i+1|0;if(j>>>0>134217727)xa(1340,1363,303,1438);n=a+8|0;d=(k[n>>2]|0)-c|0;if(d>>5>>>0<67108863){d=d>>4;d=d>>>0<j>>>0?j:d;if(!d){g=0;f=0}else h=5}else{d=134217727;h=5}if((h|0)==5){g=d<<5;g=(g|0)==0?1:g;f=_d(g)|0;a:do if(!f){while(1){f=k[35]|0;k[35]=f+0;if(!f)break;Xa[f&0]();f=_d(g)|0;if(f)break a}n=ya(4)|0;k[n>>2]=128;La(n|0,8,1)}while(0);g=d}h=f+(i<<5)|0;d=h;g=f+(g<<5)|0;k[h>>2]=k[b>>2];q=b+4|0;p=k[q+4>>2]|0;o=f+(i<<5)+4|0;k[o>>2]=k[q>>2];k[o+4>>2]=p;k[f+(i<<5)+12>>2]=k[b+12>>2];k[f+(i<<5)+16>>2]=k[b+16>>2];k[f+(i<<5)+20>>2]=k[b+20>>2];k[f+(i<<5)+24>>2]=k[b+24>>2];k[f+(i<<5)+28>>2]=k[b+28>>2];f=f+(j<<5)|0;if((e|0)==(l|0))e=a;else{c=h;do{q=e;e=e+-32|0;k[c+-32>>2]=k[e>>2];b=q+-28|0;o=k[b+4>>2]|0;p=c+-28|0;k[p>>2]=k[b>>2];k[p+4>>2]=o;k[c+-20>>2]=k[q+-20>>2];k[c+-16>>2]=k[q+-16>>2];k[c+-12>>2]=k[q+-12>>2];k[c+-8>>2]=k[q+-8>>2];k[c+-4>>2]=k[q+-4>>2];c=d+-32|0;d=c}while((e|0)!=(l|0));e=a;c=k[a>>2]|0}k[e>>2]=d;k[m>>2]=f;k[n>>2]=g;if(!c)return;$d(c);return}function lc(a,b,c,d,e,f,g,h,l,m){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=h|0;l=l|0;m=m|0;var n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;_=r;r=r+256|0;R=_+72|0;S=_+56|0;y=_+32|0;t=_+232|0;E=_+220|0;u=_+245|0;v=_+216|0;w=_+244|0;x=_+212|0;O=_+200|0;P=_+184|0;J=_+168|0;M=_+152|0;N=_+124|0;L=_+120|0;K=_+24|0;Q=_+92|0;H=_+80|0;I=_;Z=_+188|0;Y=_+172|0;a=_+156|0;X=_+140|0;V=_+128|0;p[y>>3]=f;p[y+8>>3]=g;p[y+16>>3]=0.0;Nd(911,y);kb(Z,c,d,e);mc(Y,Z,f*3.141592653589793/180.0);W=Y+4|0;if((k[Y>>2]|0)!=(k[W>>2]|0)){k[X>>2]=0;U=X+4|0;k[U>>2]=0;k[X+8>>2]=0;k[V>>2]=0;T=V+4|0;k[T>>2]=0;k[V+8>>2]=0;p[I>>3]=g;p[I+8>>3]=0.0;k[I+16>>2]=X;k[I+20>>2]=V;e=(k[87]|0)>-1;a:do if(!2){a=954;G=6}else{b=954;a=954;while(1){if(!(i[b>>0]|0))break a;b=b+1|0;a=b;if(!(a&3)){a=b;G=6;break}}}while(0);if((G|0)==6){while(1){b=k[a>>2]|0;if(!((b&-2139062144^-2139062144)&b+-16843009))a=a+4|0;else break}if((b&255)<<24>>24)do a=a+1|0;while((i[a>>0]|0)!=0)}d=a-954|0;a=k[72]|0;b=(a|0)==0;b:do if(e){do if(b){a=i[346]|0;i[346]=a+255|a;a=k[68]|0;if(!(a&8)){k[70]=0;k[69]=0;b=k[79]|0;k[75]=b;k[73]=b;a=b+(k[80]|0)|0;k[72]=a;break}else{k[68]=a|32;a=0;G=28;break b}}else b=k[73]|0;while(0);if((a-b|0)>>>0<d>>>0){a=Ta[k[308>>2]&7](272,954,d)|0;G=28;break}else{fe(b|0,954,d|0)|0;k[73]=(k[73]|0)+d;G=30;break}}else{do if(b){a=i[346]|0;i[346]=a+255|a;a=k[68]|0;if(!(a&8)){k[70]=0;k[69]=0;b=k[79]|0;k[75]=b;k[73]=b;a=b+(k[80]|0)|0;k[72]=a;break}else{k[68]=a|32;a=0;G=28;break b}}else b=k[73]|0;while(0);if((a-b|0)>>>0<d>>>0){a=Ta[k[308>>2]&7](272,954,d)|0;G=28;break}else{fe(b|0,954,d|0)|0;k[73]=(k[73]|0)+d;G=30;break}}while(0);if((G|0)==28)if(!((a|0)!=(d|0)?((a>>>0)/(d>>>0)|0|0)<1:0))G=30;do if((G|0)==30){b=i[347]|0;if(b<<24>>24!=10){d=k[73]|0;a=k[72]|0;if(d>>>0<a>>>0){k[73]=d+1;i[d>>0]=10;break}}else a=k[72]|0;i[y>>0]=10;do if(!a){b=j[173]|0;a=(b&65535)<<24>>24;i[346]=a+255|a;a=k[68]|0;if(!(a&8)){k[70]=0;k[69]=0;d=k[79]|0;k[75]=d;k[73]=d;a=d+(k[80]|0)|0;k[72]=a;b=(b&65535)>>>8&255;G=39;break}else{k[68]=a|32;break}}else{d=k[73]|0;G=39}while(0);do if((G|0)==39)if(d>>>0>=a>>>0|b<<24>>24==10){Ta[k[308>>2]&7](272,y,1)|0;break}else{k[73]=d+1;i[d>>0]=10;break}while(0)}while(0);k[E>>2]=0;F=E+4|0;k[F>>2]=0;k[E+8>>2]=0;q=k[W>>2]|0;a=k[Y>>2]|0;b=(q-a|0)/44|0;e=b<<1;s=E+8|0;if((q|0)!=(a|0)){d=b<<6;d=(d|0)==0?1:d;b=_d(d)|0;c:do if(!b){while(1){b=k[35]|0;k[35]=b+0;if(!b)break;Xa[b&0]();b=_d(d)|0;if(b)break c}_=ya(4)|0;k[_>>2]=128;La(_|0,8,1)}while(0);d=b;n=b+(e<<5)|0;k[E>>2]=d;k[F>>2]=d;k[s>>2]=n;d=b;while(1){e=a+16|0;c=a+28|0;i[u>>0]=0;k[v>>2]=a;o=a;if(d>>>0<n>>>0){k[y>>2]=k[e>>2];k[y+4>>2]=k[e+4>>2];k[y+8>>2]=k[e+8>>2];k[t>>2]=k[c>>2];k[t+4>>2]=k[c+4>>2];k[t+8>>2]=k[c+8>>2];k[d>>2]=k[y>>2];k[d+4>>2]=k[y+4>>2];k[d+8>>2]=k[y+8>>2];D=d+12|0;k[D>>2]=k[t>>2];k[D+4>>2]=k[t+4>>2];k[D+8>>2]=k[t+8>>2];k[d+24>>2]=o;i[d+28>>0]=0;i[d+29>>0]=0;d=b+32|0;k[F>>2]=d;b=n}else{nc(E,e,c,u,v);d=k[F>>2]|0;b=k[s>>2]|0}i[w>>0]=1;k[x>>2]=a;if(d>>>0<b>>>0){k[y>>2]=k[c>>2];k[y+4>>2]=k[c+4>>2];k[y+8>>2]=k[c+8>>2];k[t>>2]=k[e>>2];k[t+4>>2]=k[e+4>>2];k[t+8>>2]=k[e+8>>2];k[d>>2]=k[y>>2];k[d+4>>2]=k[y+4>>2];k[d+8>>2]=k[y+8>>2];D=d+12|0;k[D>>2]=k[t>>2];k[D+4>>2]=k[t+4>>2];k[D+8>>2]=k[t+8>>2];k[d+24>>2]=o;i[d+28>>0]=1;i[d+29>>0]=0;k[F>>2]=(k[F>>2]|0)+32}else nc(E,c,e,w,x);a=a+44|0;if((a|0)==(q|0))break;b=k[F>>2]|0;d=b;n=k[s>>2]|0}c=k[E>>2]|0;b=k[F>>2]|0;oc(c,b);a=(c|0)==(b|0);if(!a){d=c;do{e=k[d+24>>2]|0;if(!(i[d+28>>0]|0))k[e+4>>2]=d;else k[e+8>>2]=d;d=d+32|0}while((d|0)!=(b|0))}}else{oc(0,0);b=0;c=0;a=1}k[S>>2]=b-c>>5;Nd(956,S);d:do if(a){d=b;a=b}else{a=c;while(1){if(!(k[a+8>>2]|0)){d=b;break d}a=a+32|0;if((a|0)==(b|0)){d=b;a=b;break}}}while(0);D=(a|0)==(d|0)?c:a;b=D+24|0;a=k[b>>2]|0;i[a+2>>0]=1;i[(k[a+4>>2]|0)+29>>0]=1;i[(k[a+8>>2]|0)+29>>0]=1;if(i[D+28>>0]|0){D=a+28|0;a=a+16|0;k[S>>2]=k[a>>2];k[S+4>>2]=k[a+4>>2];k[S+8>>2]=k[a+8>>2];k[a>>2]=k[D>>2];k[a+4>>2]=k[D+4>>2];k[a+8>>2]=k[D+8>>2];k[D>>2]=k[S>>2];k[D+4>>2]=k[S+4>>2];k[D+8>>2]=k[S+8>>2];a=k[b>>2]|0}pc(O,I,a,((k[W>>2]|0)-(k[Y>>2]|0)|0)==44);k[P>>2]=O;e=(k[87]|0)>-1;e:do if(!0){a=976;G=71}else{b=976;a=976;while(1){if(!(i[b>>0]|0))break e;b=b+1|0;a=b;if(!(a&3)){a=b;G=71;break}}}while(0);if((G|0)==71){while(1){b=k[a>>2]|0;if(!((b&-2139062144^-2139062144)&b+-16843009))a=a+4|0;else break}if((b&255)<<24>>24)do a=a+1|0;while((i[a>>0]|0)!=0)}d=a-976|0;a=k[72]|0;b=(a|0)==0;f:do if(e){do if(b){a=i[346]|0;i[346]=a+255|a;a=k[68]|0;if(!(a&8)){k[70]=0;k[69]=0;b=k[79]|0;k[75]=b;k[73]=b;a=b+(k[80]|0)|0;k[72]=a;break}else{k[68]=a|32;a=0;G=93;break f}}else b=k[73]|0;while(0);if((a-b|0)>>>0<d>>>0){a=Ta[k[308>>2]&7](272,976,d)|0;G=93;break}else{fe(b|0,976,d|0)|0;k[73]=(k[73]|0)+d;G=95;break}}else{do if(b){a=i[346]|0;i[346]=a+255|a;a=k[68]|0;if(!(a&8)){k[70]=0;k[69]=0;b=k[79]|0;k[75]=b;k[73]=b;a=b+(k[80]|0)|0;k[72]=a;break}else{k[68]=a|32;a=0;G=93;break f}}else b=k[73]|0;while(0);if((a-b|0)>>>0<d>>>0){a=Ta[k[308>>2]&7](272,976,d)|0;G=93;break}else{fe(b|0,976,d|0)|0;k[73]=(k[73]|0)+d;G=95;break}}while(0);if((G|0)==93)if(!((a|0)!=(d|0)?((a>>>0)/(d>>>0)|0|0)<1:0))G=95;do if((G|0)==95){d=i[347]|0;if(d<<24>>24!=10){a=k[73]|0;b=k[72]|0;if(a>>>0<b>>>0){k[73]=a+1;i[a>>0]=10;break}}else b=k[72]|0;i[S>>0]=10;do if(!b){d=j[173]|0;a=(d&65535)<<24>>24;i[346]=a+255|a;a=k[68]|0;if(!(a&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;b=e+(k[80]|0)|0;k[72]=b;a=(d&65535)>>>8&255;G=104;break}else{k[68]=a|32;break}}else{e=k[73]|0;a=d;G=104}while(0);do if((G|0)==104)if(e>>>0>=b>>>0|a<<24>>24==10){Ta[k[308>>2]&7](272,S,1)|0;break}else{k[73]=e+1;i[e>>0]=10;break}while(0)}while(0);b=((k[W>>2]|0)-(k[Y>>2]|0)|0)/44|0;if(b>>>0>1){w=O+4|0;x=O+8|0;y=Q+4|0;z=Q+8|0;A=Q+12|0;B=Q+16|0;C=Q+20|0;D=Q+24|0;a=k[E>>2]|0;v=k[F>>2]|0;u=1;do{k[R>>2]=u;k[R+4>>2]=b;Nd(978,R);t=a;q=k[O>>2]|0;s=k[w>>2]|0;d=v-t>>5;if(!d)b=a;else{e=t;b=a;do{o=(d|0)/2|0;c=e;n=k[c+(o<<5)>>2]|0;if((n|0)>=(q|0))if((n|0)==(q|0)?(k[c+(o<<5)+4>>2]|0)<(s|0):0)G=115;else d=o;else G=115;if((G|0)==115){G=0;e=c+(o+1<<5)|0;b=e;d=d+-1-o|0}}while((d|0)!=0)}k[J>>2]=t;k[M>>2]=0;k[N>>2]=2147483647;k[L>>2]=2147483647;p[K>>3]=17976931348623157.0e292;k[Q>>2]=P;k[y>>2]=O;k[z>>2]=M;k[A>>2]=K;k[B>>2]=N;k[C>>2]=L;k[D>>2]=J;g:do if((b|0)!=(v|0)){d=b;do{if(!(qc(Q,d)|0))break g;d=d+32|0}while((d|0)!=(v|0))}while(0);if((b|0)!=(a|0))do b=b+-32|0;while(!((b|0)==(a|0)|(qc(Q,b)|0)^1));if(!(k[x>>2]|0)){if(k[(k[J>>2]|0)+8>>2]|0){c=(k[87]|0)>-1;h:do if(!3){b=999;G=127}else{d=999;b=999;while(1){if(!(i[d>>0]|0))break h;d=d+1|0;b=d;if(!(b&3)){b=d;G=127;break}}}while(0);if((G|0)==127){while(1){d=k[b>>2]|0;if(!((d&-2139062144^-2139062144)&d+-16843009))b=b+4|0;else break}if((d&255)<<24>>24)do b=b+1|0;while((i[b>>0]|0)!=0)}e=b-999|0;b=k[72]|0;d=(b|0)==0;i:do if(c){do if(d){b=i[346]|0;i[346]=b+255|b;b=k[68]|0;if(!(b&8)){k[70]=0;k[69]=0;d=k[79]|0;k[75]=d;k[73]=d;b=d+(k[80]|0)|0;k[72]=b;break}else{k[68]=b|32;b=0;G=149;break i}}else d=k[73]|0;while(0);if((b-d|0)>>>0<e>>>0){b=Ta[k[308>>2]&7](272,999,e)|0;G=149;break}else{fe(d|0,999,e|0)|0;k[73]=(k[73]|0)+e;G=151;break}}else{do if(d){b=i[346]|0;i[346]=b+255|b;b=k[68]|0;if(!(b&8)){k[70]=0;k[69]=0;d=k[79]|0;k[75]=d;k[73]=d;b=d+(k[80]|0)|0;k[72]=b;break}else{k[68]=b|32;b=0;G=149;break i}}else d=k[73]|0;while(0);if((b-d|0)>>>0<e>>>0){b=Ta[k[308>>2]&7](272,999,e)|0;G=149;break}else{fe(d|0,999,e|0)|0;k[73]=(k[73]|0)+e;G=151;break}}while(0);do if((G|0)==149){G=0;if((b|0)==(e|0)){G=151;break}if(((b>>>0)/(e>>>0)|0|0)>=1)G=151}while(0);j:do if((G|0)==151){G=0;e=i[347]|0;do if(e<<24>>24==10)d=k[72]|0;else{b=k[73]|0;d=k[72]|0;if(b>>>0>=d>>>0)break;k[73]=b+1;i[b>>0]=10;break j}while(0);i[S>>0]=10;do if(!d){e=j[173]|0;b=(e&65535)<<24>>24;i[346]=b+255|b;b=k[68]|0;if(!(b&8)){k[70]=0;k[69]=0;c=k[79]|0;k[75]=c;k[73]=c;d=c+(k[80]|0)|0;k[72]=d;b=(e&65535)>>>8&255;G=160;break}else{k[68]=b|32;break}}else{c=k[73]|0;b=e;G=160}while(0);do if((G|0)==160){G=0;if(c>>>0>=d>>>0|b<<24>>24==10){Ta[k[308>>2]&7](272,S,1)|0;break}else{k[73]=c+1;i[c>>0]=10;break}}while(0)}while(0);if(k[x>>2]|0)G=165}}else G=165;k:do if((G|0)==165?(G=0,(k[(k[J>>2]|0)+8>>2]|0)==0):0){c=(k[87]|0)>-1;l:do if(!0){b=1004;G=169}else{b=1004;d=1004;while(1){if(!(i[b>>0]|0)){b=d;break l}b=b+1|0;d=b;if(!(d&3)){G=169;break}}}while(0);if((G|0)==169){G=0;while(1){d=k[b>>2]|0;if(!((d&-2139062144^-2139062144)&d+-16843009))b=b+4|0;else break}if((d&255)<<24>>24)do b=b+1|0;while((i[b>>0]|0)!=0)}e=b-1004|0;b=k[72]|0;d=(b|0)==0;m:do if(c){do if(d){b=i[346]|0;i[346]=b+255|b;b=k[68]|0;if(!(b&8)){k[70]=0;k[69]=0;d=k[79]|0;k[75]=d;k[73]=d;b=d+(k[80]|0)|0;k[72]=b;break}else{k[68]=b|32;b=0;G=191;break m}}else d=k[73]|0;while(0);if((b-d|0)>>>0<e>>>0){b=Ta[k[308>>2]&7](272,1004,e)|0;G=191;break}else{fe(d|0,1004,e|0)|0;k[73]=(k[73]|0)+e;break}}else{do if(d){b=i[346]|0;i[346]=b+255|b;b=k[68]|0;if(!(b&8)){k[70]=0;k[69]=0;d=k[79]|0;k[75]=d;k[73]=d;b=d+(k[80]|0)|0;k[72]=b;break}else{k[68]=b|32;b=0;G=191;break m}}else d=k[73]|0;while(0);if((b-d|0)>>>0<e>>>0){b=Ta[k[308>>2]&7](272,1004,e)|0;G=191;break}else{fe(d|0,1004,e|0)|0;k[73]=(k[73]|0)+e;break}}while(0);do if((G|0)==191){G=0;if((b|0)==(e|0))break;if(((b>>>0)/(e>>>0)|0|0)<1)break k}while(0);e=i[347]|0;do if(e<<24>>24==10)d=k[72]|0;else{b=k[73]|0;d=k[72]|0;if(b>>>0>=d>>>0)break;k[73]=b+1;i[b>>0]=10;break k}while(0);i[S>>0]=10;do if(!d){e=j[173]|0;b=(e&65535)<<24>>24;i[346]=b+255|b;b=k[68]|0;if(!(b&8)){k[70]=0;k[69]=0;c=k[79]|0;k[75]=c;k[73]=c;d=c+(k[80]|0)|0;k[72]=d;b=(e&65535)>>>8&255;G=202;break}else{k[68]=b|32;break}}else{c=k[73]|0;b=e;G=202}while(0);do if((G|0)==202){G=0;if(c>>>0>=d>>>0|b<<24>>24==10){Ta[k[308>>2]&7](272,S,1)|0;break}else{k[73]=c+1;i[c>>0]=10;break}}while(0)}while(0);E=k[J>>2]|0;b=E+24|0;d=k[b>>2]|0;i[d+2>>0]=1;i[(k[d+4>>2]|0)+29>>0]=1;i[(k[d+8>>2]|0)+29>>0]=1;if(i[E+28>>0]|0){E=d+28|0;d=d+16|0;k[S>>2]=k[d>>2];k[S+4>>2]=k[d+4>>2];k[S+8>>2]=k[d+8>>2];k[d>>2]=k[E>>2];k[d+4>>2]=k[E+4>>2];k[d+8>>2]=k[E+8>>2];k[E>>2]=k[S>>2];k[E+4>>2]=k[S+4>>2];k[E+8>>2]=k[S+8>>2];d=k[b>>2]|0}b=((k[W>>2]|0)-(k[Y>>2]|0)|0)/44|0;u=u+1|0;pc(H,I,d,(b|0)==(u|0));k[O>>2]=k[H>>2];k[O+4>>2]=k[H+4>>2];k[O+8>>2]=k[H+8>>2]}while(u>>>0<b>>>0)}else a=k[E>>2]|0;b=a;if(a){d=k[F>>2]|0;if((d|0)!=(a|0))k[F>>2]=d+(~((d+-32-b|0)>>>5)<<5);$d(a)}e=(k[87]|0)>-1;n:do if(!0){a=1012;G=216}else{b=1012;a=1012;while(1){if(!(i[b>>0]|0))break n;b=b+1|0;a=b;if(!(a&3)){a=b;G=216;break}}}while(0);if((G|0)==216){while(1){b=k[a>>2]|0;if(!((b&-2139062144^-2139062144)&b+-16843009))a=a+4|0;else break}if((b&255)<<24>>24)do a=a+1|0;while((i[a>>0]|0)!=0)}d=a-1012|0;a=k[72]|0;b=(a|0)==0;o:do if(e){do if(b){a=i[346]|0;i[346]=a+255|a;a=k[68]|0;if(!(a&8)){k[70]=0;k[69]=0;b=k[79]|0;k[75]=b;k[73]=b;a=b+(k[80]|0)|0;k[72]=a;break}else{k[68]=a|32;a=0;G=238;break o}}else b=k[73]|0;while(0);if((a-b|0)>>>0<d>>>0){a=Ta[k[308>>2]&7](272,1012,d)|0;G=238;break}else{fe(b|0,1012,d|0)|0;k[73]=(k[73]|0)+d;G=240;break}}else{do if(b){a=i[346]|0;i[346]=a+255|a;a=k[68]|0;if(!(a&8)){k[70]=0;k[69]=0;b=k[79]|0;k[75]=b;k[73]=b;a=b+(k[80]|0)|0;k[72]=a;break}else{k[68]=a|32;a=0;G=238;break o}}else b=k[73]|0;while(0);if((a-b|0)>>>0<d>>>0){a=Ta[k[308>>2]&7](272,1012,d)|0;G=238;break}else{fe(b|0,1012,d|0)|0;k[73]=(k[73]|0)+d;G=240;break}}while(0);if((G|0)==238)if(!((a|0)!=(d|0)?((a>>>0)/(d>>>0)|0|0)<1:0))G=240;do if((G|0)==240){d=i[347]|0;if(d<<24>>24!=10){a=k[73]|0;b=k[72]|0;if(a>>>0<b>>>0){k[73]=a+1;i[a>>0]=10;break}}else b=k[72]|0;i[S>>0]=10;do if(!b){d=j[173]|0;a=(d&65535)<<24>>24;i[346]=a+255|a;a=k[68]|0;if(!(a&8)){k[70]=0;k[69]=0;e=k[79]|0;k[75]=e;k[73]=e;b=e+(k[80]|0)|0;k[72]=b;a=(d&65535)>>>8&255;G=249;break}else{k[68]=a|32;break}}else{e=k[73]|0;a=d;G=249}while(0);do if((G|0)==249)if(e>>>0>=b>>>0|a<<24>>24==10){Ta[k[308>>2]&7](272,S,1)|0;break}else{k[73]=e+1;i[e>>0]=10;break}while(0)}while(0);jb(h,l,m,V);a=k[V>>2]|0;if(a){b=k[T>>2]|0;if((b|0)!=(a|0)){do{d=b+-12|0;k[T>>2]=d;e=k[d>>2]|0;c=e;if(!e)b=d;else{b=b+-8|0;d=k[b>>2]|0;if((d|0)!=(e|0))k[b>>2]=d+(~(((d+-12-c|0)>>>0)/12|0)*12|0);$d(e);b=k[T>>2]|0}}while((b|0)!=(a|0));a=k[V>>2]|0}$d(a)}a=k[X>>2]|0;if(a){b=k[U>>2]|0;if((b|0)!=(a|0))k[U>>2]=b+(~(((b+-44-a|0)>>>0)/44|0)*44|0);$d(a)}}else{k[a>>2]=0;k[a+4>>2]=0;k[a+8>>2]=0;jb(h,l,m,a)}a=k[Y>>2]|0;if(a){b=k[W>>2]|0;if((b|0)!=(a|0))k[W>>2]=b+(~(((b+-44-a|0)>>>0)/44|0)*44|0);$d(a)}o=k[Z>>2]|0;if(!o){r=_;return}n=Z+4|0;a=k[n>>2]|0;if((a|0)!=(o|0)){do{b=a;a=a+-12|0;e=k[a>>2]|0;c=e;if(e){b=b+-8|0;d=k[b>>2]|0;if((d|0)!=(e|0))k[b>>2]=d+(~((d+-8-c|0)>>>3)<<3);$d(e)}}while((a|0)!=(o|0));k[n>>2]=o}$d(o);r=_;return}\\r\\n\\r\\n// EMSCRIPTEN_END_FUNCS\\r\\nvar Ta=[ze,yd,Sd,Qd,Rd,ze,ze,ze];var Ua=[Ae,Ed,Dd,Ae];var Va=[Be,qd,rd,td,wd,ud,vd,xd,Wd,Be,Be,Be,Be,Be,Be,Be];var Wa=[Ce,sd,Pd,Ce];var Xa=[De];var Ya=[Ee,Gd,Fd,Ee];var Za=[Fe,nb,pb,zc,Dc,Fe,Fe,Fe];var _a=[Ge,zd,Ad,Ge];return{___cxa_can_catch:Hd,_free:$d,___cxa_is_pointer_type:Id,_i64Add:ge,_memmove:he,_vCarve:lc,_i64Subtract:be,_memset:ce,_malloc:_d,_separateTabs:lb,_memcpy:fe,_bitshift64Lshr:de,_bitshift64Shl:ee,runPostSets:ae,_emscripten_replace_memory:Sa,stackAlloc:$a,stackSave:ab,stackRestore:bb,establishStackSpace:cb,setThrew:db,setTempRet0:gb,getTempRet0:hb,dynCall_iiii:re,dynCall_viiiii:se,dynCall_vi:te,dynCall_ii:ue,dynCall_v:ve,dynCall_viiiiii:we,dynCall_iii:xe,dynCall_viiii:ye}})\\r\\n\\r\\n\\r\\n// EMSCRIPTEN_END_ASM\\r\\n(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var ___cxa_can_catch=Module[\\\"___cxa_can_catch\\\"]=asm[\\\"___cxa_can_catch\\\"];var _free=Module[\\\"_free\\\"]=asm[\\\"_free\\\"];var runPostSets=Module[\\\"runPostSets\\\"]=asm[\\\"runPostSets\\\"];var ___cxa_is_pointer_type=Module[\\\"___cxa_is_pointer_type\\\"]=asm[\\\"___cxa_is_pointer_type\\\"];var _i64Add=Module[\\\"_i64Add\\\"]=asm[\\\"_i64Add\\\"];var _memmove=Module[\\\"_memmove\\\"]=asm[\\\"_memmove\\\"];var _vCarve=Module[\\\"_vCarve\\\"]=asm[\\\"_vCarve\\\"];var _i64Subtract=Module[\\\"_i64Subtract\\\"]=asm[\\\"_i64Subtract\\\"];var _memset=Module[\\\"_memset\\\"]=asm[\\\"_memset\\\"];var _malloc=Module[\\\"_malloc\\\"]=asm[\\\"_malloc\\\"];var _separateTabs=Module[\\\"_separateTabs\\\"]=asm[\\\"_separateTabs\\\"];var _memcpy=Module[\\\"_memcpy\\\"]=asm[\\\"_memcpy\\\"];var _emscripten_replace_memory=Module[\\\"_emscripten_replace_memory\\\"]=asm[\\\"_emscripten_replace_memory\\\"];var _bitshift64Lshr=Module[\\\"_bitshift64Lshr\\\"]=asm[\\\"_bitshift64Lshr\\\"];var _bitshift64Shl=Module[\\\"_bitshift64Shl\\\"]=asm[\\\"_bitshift64Shl\\\"];var dynCall_iiii=Module[\\\"dynCall_iiii\\\"]=asm[\\\"dynCall_iiii\\\"];var dynCall_viiiii=Module[\\\"dynCall_viiiii\\\"]=asm[\\\"dynCall_viiiii\\\"];var dynCall_vi=Module[\\\"dynCall_vi\\\"]=asm[\\\"dynCall_vi\\\"];var dynCall_ii=Module[\\\"dynCall_ii\\\"]=asm[\\\"dynCall_ii\\\"];var dynCall_v=Module[\\\"dynCall_v\\\"]=asm[\\\"dynCall_v\\\"];var dynCall_viiiiii=Module[\\\"dynCall_viiiiii\\\"]=asm[\\\"dynCall_viiiiii\\\"];var dynCall_iii=Module[\\\"dynCall_iii\\\"]=asm[\\\"dynCall_iii\\\"];var dynCall_viiii=Module[\\\"dynCall_viiii\\\"]=asm[\\\"dynCall_viiii\\\"];Runtime.stackAlloc=asm[\\\"stackAlloc\\\"];Runtime.stackSave=asm[\\\"stackSave\\\"];Runtime.stackRestore=asm[\\\"stackRestore\\\"];Runtime.establishStackSpace=asm[\\\"establishStackSpace\\\"];Runtime.setTempRet0=asm[\\\"setTempRet0\\\"];Runtime.getTempRet0=asm[\\\"getTempRet0\\\"];function ExitStatus(status){this.name=\\\"ExitStatus\\\";this.message=\\\"Program terminated with exit(\\\"+status+\\\")\\\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module[\\\"calledRun\\\"])run();if(!Module[\\\"calledRun\\\"])dependenciesFulfilled=runCaller};Module[\\\"callMain\\\"]=Module.callMain=function callMain(args){assert(runDependencies==0,\\\"cannot call main when async dependencies remain! (listen on __ATMAIN__)\\\");assert(__ATPRERUN__.length==0,\\\"cannot call main when preRun functions remain to be called\\\");args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module[\\\"thisProgram\\\"]),\\\"i8\\\",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),\\\"i8\\\",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,\\\"i32\\\",ALLOC_NORMAL);try{var ret=Module[\\\"_main\\\"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e==\\\"SimulateInfiniteLoop\\\"){Module[\\\"noExitRuntime\\\"]=true;return}else{if(e&&typeof e===\\\"object\\\"&&e.stack)Module.printErr(\\\"exception thrown: \\\"+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module[\\\"arguments\\\"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\\\"calledRun\\\"])return;function doRun(){if(Module[\\\"calledRun\\\"])return;Module[\\\"calledRun\\\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\\\"onRuntimeInitialized\\\"])Module[\\\"onRuntimeInitialized\\\"]();if(Module[\\\"_main\\\"]&&shouldRunNow)Module[\\\"callMain\\\"](args);postRun()}if(Module[\\\"setStatus\\\"]){Module[\\\"setStatus\\\"](\\\"Running...\\\");setTimeout((function(){setTimeout((function(){Module[\\\"setStatus\\\"](\\\"\\\")}),1);doRun()}),1)}else{doRun()}}Module[\\\"run\\\"]=Module.run=run;function exit(status,implicit){if(implicit&&Module[\\\"noExitRuntime\\\"]){return}if(Module[\\\"noExitRuntime\\\"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module[\\\"onExit\\\"])Module[\\\"onExit\\\"](status)}if(ENVIRONMENT_IS_NODE){process[\\\"stdout\\\"][\\\"once\\\"](\\\"drain\\\",(function(){process[\\\"exit\\\"](status)}));console.log(\\\" \\\");setTimeout((function(){process[\\\"exit\\\"](status)}),500)}else if(ENVIRONMENT_IS_SHELL&&typeof quit===\\\"function\\\"){quit(status)}throw new ExitStatus(status)}Module[\\\"exit\\\"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=\\\"\\\"}ABORT=true;EXITSTATUS=1;var extra=\\\"\\\\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.\\\";var output=\\\"abort(\\\"+what+\\\") at \\\"+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw output}Module[\\\"abort\\\"]=Module.abort=abort;if(Module[\\\"preInit\\\"]){if(typeof Module[\\\"preInit\\\"]==\\\"function\\\")Module[\\\"preInit\\\"]=[Module[\\\"preInit\\\"]];while(Module[\\\"preInit\\\"].length>0){Module[\\\"preInit\\\"].pop()()}}var shouldRunNow=true;if(Module[\\\"noInitialRun\\\"]){shouldRunNow=false}Module[\\\"noExitRuntime\\\"]=true;run()\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/script-loader/~/raw-loader!../~/web-cam-cpp/web-cam-cpp.js\n// module id = 28\n// module chunks = 0"],"sourceRoot":""}